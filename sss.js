Array.prototype._B3 = 0;
var _C3 = {
    _D3: [],
    _E3: [{
        _F3: "so_ball_ground",
        _G3: 0,
        _H3: "",
        _I3: "so_ball_ground",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_ball_wall",
        _G3: 0,
        _H3: "",
        _I3: "so_ball_wall",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_ball_crossbar",
        _G3: 0,
        _H3: "",
        _I3: "so_ball_crossbar",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_ball_player",
        _G3: 0,
        _H3: "",
        _I3: "so_ball_player",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_menu_can", _G3: 0, _H3: "", _I3: "so_menu_can", _J3: 0, volume: 1, _K3: 0, preload: !0,
        _L3: 0
    }, {
        _F3: "so_menu_move",
        _G3: 0,
        _H3: "",
        _I3: "so_menu_move",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_menu_cant",
        _G3: 0,
        _H3: "",
        _I3: "so_menu_cant",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "mu_menu",
        _G3: 0,
        _H3: "",
        _I3: "mu_menu",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "mu_crowd",
        _G3: 0,
        _H3: "",
        _I3: "mu_crowd",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "so_NOTMADEYET", _G3: 0, _H3: "", _I3: "so_NOTMADEYET", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "so_1", _G3: 0, _H3: "", _I3: "so_1", _J3: 0, volume: 1, _K3: 0,
        preload: !1, _L3: 0
    }, {
        _F3: "so_notbought",
        _G3: 0,
        _H3: "",
        _I3: "so_notbought",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_bought",
        _G3: 0,
        _H3: "",
        _I3: "so_bought",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {_F3: "so_2", _G3: 0, _H3: "", _I3: "so_2", _J3: 0, volume: 1, _K3: 0, preload: !1, _L3: 0}, {
        _F3: "so_3",
        _G3: 0,
        _H3: "",
        _I3: "so_3",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_telekinesis",
        _G3: 0,
        _H3: "",
        _I3: "so_telekinesis",
        _J3: 0,
        volume: 0.93,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_6", _G3: 0, _H3: "", _I3: "so_6", _J3: 0, volume: 0.8, _K3: 0,
        preload: !1, _L3: 0
    }, {
        _F3: "so_teleport",
        _G3: 0,
        _H3: "",
        _I3: "so_teleport",
        _J3: 0,
        volume: 0.8,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_explosion",
        _G3: 0,
        _H3: "",
        _I3: "so_explosion",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_discomove",
        _G3: 0,
        _H3: "",
        _I3: "so_discomove",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_bow",
        _G3: 0,
        _H3: "",
        _I3: "so_bow",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {_F3: "so_magnet", _G3: 0, _H3: "", _I3: "so_magnet", _J3: 0, volume: 1, _K3: 0, preload: !1, _L3: 0}, {
        _F3: "so_frostbeam1", _G3: 0, _H3: "", _I3: "so_frostbeam1",
        _J3: 0, volume: 0.76, _K3: 0, preload: !1, _L3: 0
    }, {
        _F3: "so_frostbeam2",
        _G3: 0,
        _H3: "",
        _I3: "so_frostbeam2",
        _J3: 0,
        volume: 0.76,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_geyser1",
        _G3: 0,
        _H3: "",
        _I3: "so_geyser1",
        _J3: 0,
        volume: 0.76,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_geyser2",
        _G3: 0,
        _H3: "",
        _I3: "so_geyser2",
        _J3: 0,
        volume: 0.82,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_sprint1",
        _G3: 0,
        _H3: "",
        _I3: "so_sprint1",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {_F3: "so_sprint2", _G3: 0, _H3: "", _I3: "so_sprint2", _J3: 0, volume: 1, _K3: 0, preload: !1, _L3: 0}, {
        _F3: "so_shrink",
        _G3: 0, _H3: "", _I3: "so_shrink", _J3: 0, volume: 1, _K3: 0, preload: !1, _L3: 0
    }, {
        _F3: "so_attaction",
        _G3: 0,
        _H3: "",
        _I3: "so_attaction",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_stopflute",
        _G3: 0,
        _H3: "",
        _I3: "so_stopflute",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_crazy",
        _G3: 0,
        _H3: "",
        _I3: "so_crazy",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {_F3: "so_crazylaugh", _G3: 0, _H3: "", _I3: "so_crazylaugh", _J3: 0, volume: 1, _K3: 0, preload: !1, _L3: 0}, {
        _F3: "so_fishinghook1", _G3: 0, _H3: "", _I3: "so_fishinghook1", _J3: 0, volume: 1, _K3: 0,
        preload: !1, _L3: 0
    }, {
        _F3: "so_fishinghook2",
        _G3: 0,
        _H3: "",
        _I3: "so_fishinghook2",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_ghost",
        _G3: 0,
        _H3: "",
        _I3: "so_ghost",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_raindance",
        _G3: 0,
        _H3: "",
        _I3: "so_raindance",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {
        _F3: "so_time",
        _G3: 0,
        _H3: "",
        _I3: "so_time",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !1,
        _L3: 0
    }, {_F3: "so_blackhole", _G3: 0, _H3: "", _I3: "so_blackhole", _J3: 0, volume: 1, _K3: 0, preload: !1, _L3: 0}, {
        _F3: "so_fire1", _G3: 0, _H3: "", _I3: "so_fire1",
        _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "so_super1",
        _G3: 0,
        _H3: "",
        _I3: "so_super1",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_super2",
        _G3: 0,
        _H3: "",
        _I3: "so_super2",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_fire2",
        _G3: 0,
        _H3: "",
        _I3: "so_fire2",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_remote",
        _G3: 0,
        _H3: "",
        _I3: "so_remote",
        _J3: 0,
        volume: 0.87,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "so_boxingkick", _G3: 0, _H3: "", _I3: "so_boxingkick", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "so_boxinghit", _G3: 0, _H3: "",
        _I3: "so_boxinghit", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "so_revolver",
        _G3: 0,
        _H3: "",
        _I3: "so_revolver",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_harpoonshoot",
        _G3: 0,
        _H3: "",
        _I3: "so_harpoonshoot",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_grow",
        _G3: 0,
        _H3: "",
        _I3: "so_grow",
        _J3: 0,
        volume: 0.93,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "so_basket",
        _G3: 0,
        _H3: "",
        _I3: "so_basket",
        _J3: 0,
        volume: 0.95,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "so_tree", _G3: 0, _H3: "", _I3: "so_tree", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "so_twin",
        _G3: 0, _H3: "", _I3: "so_twin", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "an_choose_your_slime",
        _G3: 0,
        _H3: "",
        _I3: "an_choose_your_slime",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_congratulations",
        _G3: 0,
        _H3: "",
        _I3: "an_congratulations",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_followthrough_goal",
        _G3: 0,
        _H3: "",
        _I3: "an_followthrough_goal",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "an_hattrick", _G3: 0, _H3: "", _I3: "an_hattrick", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "an_humiliation", _G3: 0,
        _H3: "", _I3: "an_humiliation", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "an_matchball1",
        _G3: 0,
        _H3: "",
        _I3: "an_matchball1",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_matchball2",
        _G3: 0,
        _H3: "",
        _I3: "an_matchball2",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_matchball3",
        _G3: 0,
        _H3: "",
        _I3: "an_matchball3",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "an_owngoal1", _G3: 0, _H3: "", _I3: "an_owngoal1", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "an_owngoal2", _G3: 0, _H3: "", _I3: "an_owngoal2", _J3: 0, volume: 1,
        _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "an_powergoal",
        _G3: 0,
        _H3: "",
        _I3: "an_powergoal",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_speed_goal",
        _G3: 0,
        _H3: "",
        _I3: "an_speed_goal",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_goal1",
        _G3: 0,
        _H3: "",
        _I3: "an_goal1",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_goal2",
        _G3: 0,
        _H3: "",
        _I3: "an_goal2",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "an_goal3", _G3: 0, _H3: "", _I3: "an_goal3", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "an_goal4", _G3: 0, _H3: "", _I3: "an_goal4",
        _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "an_goal5",
        _G3: 0,
        _H3: "",
        _I3: "an_goal5",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_goal_long6",
        _G3: 0,
        _H3: "",
        _I3: "an_goal_long6",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_camper_goal",
        _G3: 0,
        _H3: "",
        _I3: "an_camper_goal",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_goal_long7",
        _G3: 0,
        _H3: "",
        _I3: "an_goal_long7",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "an_goal_long8", _G3: 0, _H3: "", _I3: "an_goal_long8", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}, {
        _F3: "an_finally_goal",
        _G3: 0, _H3: "", _I3: "an_finally_goal", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "an_ready_set_go",
        _G3: 0,
        _H3: "",
        _I3: "an_ready_set_go",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_slime_unlocked",
        _G3: 0,
        _H3: "",
        _I3: "an_slime_unlocked",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_semifinals",
        _G3: 0,
        _H3: "",
        _I3: "an_semifinals",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_qualification_match",
        _G3: 0,
        _H3: "",
        _I3: "an_qualification_match",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {
        _F3: "an_final_match", _G3: 0,
        _H3: "", _I3: "an_final_match", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0
    }, {
        _F3: "an_final_ball",
        _G3: 0,
        _H3: "",
        _I3: "an_final_ball",
        _J3: 0,
        volume: 1,
        _K3: 0,
        preload: !0,
        _L3: 0
    }, {_F3: "an_bounceback", _G3: 0, _H3: "", _I3: "an_bounceback", _J3: 0, volume: 1, _K3: 0, preload: !0, _L3: 0}],
    _M3: [{name: "audiogroup_default"}],
    _N3: [{
        _F3: "msk_slime",
        width: 52,
        height: 24,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 26,
        _S3: 19,
        _T3: 51,
        _U3: 23,
        _V3: 1,
        _W3: 1,
        _X3: [732],
        _Y3: [[0x04, 0x00, 0x00, 0x3F, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x00, 0x0F,
            0x82, 0xFF, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0xC0, 0x3F, 0x84, 0xFF, 0x01, 0xC0, 0x7F, 0x84, 0xFF, 0x01, 0xE0, 0x7F, 0x84, 0xFF, 0x01, 0xE0, 0x7F, 0x84, 0xFF, 0x01, 0xE0, 0x7F, 0x84, 0xFF, 0x00, 0xE0, 0x85, 0xFF, 0x00, 0xF0, 0x85, 0xFF, 0x00, 0xF0, 0x85, 0xFF, 0x00, 0xF0, 0x85, 0xFF, 0x00, 0xF0, 0x85, 0xFF,
            0x01, 0xF0, 0x7F, 0x84, 0xFF, 0x01, 0xE0, 0x03, 0x83, 0xFF, 0x00, 0xFC, 0x00, 0x00]]
    }, {
        _F3: "msk_wall",
        width: 20,
        height: 400,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _T3: 19,
        _U3: 399,
        _V3: 1,
        _W3: 1,
        _X3: [838]
    }, {
        _F3: "msk_ceiling",
        width: 540,
        height: 20,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _T3: 539,
        _U3: 19,
        _V3: 1,
        _W3: 1,
        _X3: [843]
    }, {
        _F3: "msk_crossbar",
        width: 80,
        height: 7,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 40,
        _S3: 3,
        _T3: 79,
        _U3: 6,
        _V3: 1,
        _W3: 1,
        _X3: [686],
        _Y3: [[0xC5, 0xFF]]
    }, {
        _F3: "msk_ball",
        width: 17,
        height: 17,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 8,
        _S3: 8,
        _T3: 16,
        _U3: 16,
        _V3: 1,
        _W3: 1,
        _X3: [325],
        _Y3: [[0x31, 0x03, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x03, 0xE0, 0x00, 0x00]]
    }, {
        _F3: "msk_basketgoal",
        width: 15,
        height: 15,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 7,
        _S3: 7,
        _T3: 14,
        _U3: 14,
        _V3: 1,
        _W3: 1,
        _X3: [218],
        _Y3: [[0x1C, 0x07, 0xC0, 0x1F, 0xF0, 0x3F, 0xF8, 0x7F, 0xFC, 0x7F, 0xFC, 0xFF, 0xFE, 0xFF, 0xFE, 0xFF,
            0xFE, 0xFF, 0xFE, 0xFF, 0xFE, 0x7F, 0xFC, 0x7F, 0xFC, 0x3F, 0xF8, 0x1F, 0xF0, 0x07, 0x00, 0xC0]]
    }, {
        _F3: "msk_choose",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 28,
        _S3: 14,
        _Z3: 25,
        _T3: 28,
        __3: 12,
        _U3: 15,
        _V3: 1,
        _W3: 1,
        _X3: [5],
        _Y3: [[0xD6, 0x00, 0x00, 0x30, 0x85, 0x00, 0x00, 0x78, 0x85, 0x00, 0x00, 0x78, 0x85, 0x00, 0x00, 0x30, 0xD6, 0x00]]
    }, {
        _F3: "msk_non",
        width: 32,
        height: 32,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _V3: 1,
        _W3: 1,
        _X3: [722],
        _Y3: [[0xFF, 0x00]]
    }, {
        _F3: "msk_dot", width: 1, height: 1, _O3: !1, _P3: !1, preload: !1, _Q3: !0, _V3: 1, _W3: 1, _X3: [0],
        _Y3: [[0x00, 0x80]]
    }, {
        _F3: "spr_slime_shop_info",
        width: 9,
        height: 21,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 4,
        _S3: 20,
        _Z3: 1,
        _T3: 7,
        __3: 1,
        _U3: 19,
        _V3: 1,
        _W3: 1,
        _X3: [109],
        _Y3: [[0x0A, 0x00, 0x00, 0x1C, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x3E, 0x84, 0x00, 0x16, 0x04, 0x00, 0x7C, 0x00, 0x3C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x7F, 0x82, 0x00]]
    }, {
        _F3: "spr_slime_classic",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 28,
        _S3: 24,
        _T3: 55,
        _U3: 27,
        _V3: 1,
        _W3: 1,
        _X3: [755],
        _Y3: [[0x82,
            0x00, 0x00, 0xFF, 0x84, 0x00, 0x02, 0x1F, 0xFF, 0xF8, 0x83, 0x00, 0x82, 0xFF, 0x82, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x02, 0xFE, 0x00, 0x00, 0x84, 0xFF, 0x01, 0x00, 0x01, 0x84, 0xFF, 0x01, 0x80, 0x03, 0x84, 0xFF, 0x01, 0xC0, 0x07, 0x84, 0xFF, 0x01, 0xE0, 0x0F, 0x84, 0xFF, 0x01, 0xF0, 0x1F, 0x84, 0xFF, 0x01, 0xF8, 0x1F, 0x84, 0xFF, 0x01, 0xF8, 0x3F, 0x84, 0xFF, 0x01, 0xFC, 0x3F, 0x84, 0xFF, 0x01, 0xFC, 0x7F, 0x84, 0xFF, 0x01, 0xFE, 0x7F, 0x84, 0xFF, 0x01, 0xFE, 0x7F, 0x84,
            0xFF, 0x01, 0xFE, 0x7F, 0x84, 0xFF, 0x00, 0xFE, 0xA2, 0xFF, 0x00, 0x7F, 0x84, 0xFF, 0x01, 0xFE, 0x3F, 0x84, 0xFF, 0x01, 0xF8, 0x00, 0x83, 0xFF, 0x00, 0xFE, 0x00, 0x00]]
    }, {
        _F3: "sprite49",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 28,
        _S3: 22,
        _T3: 55,
        _U3: 27,
        _V3: 1,
        _W3: 1,
        _X3: [740],
        _Y3: [[0x00, 0x18, 0x84, 0x00, 0x01, 0x18, 0x3E, 0x84, 0x00, 0x02, 0x7C, 0x7F, 0x80, 0x82, 0x00, 0x03, 0x01, 0xFE, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0x3F, 0xFF, 0x82, 0x00, 0x26, 0xFF, 0xFC, 0x0F, 0xFF, 0xC0, 0x00, 0x03, 0xFF, 0xF0, 0x03,
            0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x1F, 0xFF, 0x81, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xE7, 0xFF, 0xE0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x00, 0x80, 0x82, 0x00, 0x02, 0x7F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xFE, 0x82, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x26, 0xC0, 0x00, 0x00, 0x07, 0xFF, 0xE7, 0xFF, 0xF0, 0x00, 0x00, 0x1F, 0xFF, 0x81, 0xFF, 0xFC, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x00, 0x03, 0xFF,
            0xF8, 0x3F, 0xFF, 0x82, 0x00, 0x03, 0xFF, 0xFE, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0x7F, 0xE0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0x7F, 0x80, 0x82, 0x00, 0x02, 0x01, 0xFE, 0x3E, 0x84, 0x00, 0x01, 0x7C, 0x38, 0x84, 0x00, 0x00, 0x18]]
    }, {
        _F3: "spr_slime_archer",
        width: 57,
        height: 34,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 29,
        _Z3: 1,
        _T3: 56,
        _U3: 33,
        _V3: 1,
        _W3: 1,
        _X3: [770]
    }, {
        _F3: "spr_slime_disco",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 22,
        _T3: 55,
        _U3: 27,
        _V3: 1,
        _W3: 1,
        _X3: [752]
    }, {
        _F3: "spr_slime_female", width: 56, height: 28, _O3: !1, _P3: !1, preload: !1,
        _R3: 28, _S3: 22, _T3: 55, _U3: 27, _V3: 1, _W3: 1, _X3: [751]
    }, {
        _F3: "spr_slime_ice",
        width: 56,
        height: 32,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 24,
        _T3: 55,
        _U3: 30,
        _V3: 1,
        _W3: 1,
        _X3: [766]
    }, {
        _F3: "spr_slime_robot",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 22,
        _T3: 55,
        __3: 1,
        _U3: 27,
        _V3: 1,
        _W3: 1,
        _X3: [736]
    }, {
        _F3: "spr_slime_runner",
        width: 56,
        height: 29,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 22,
        _T3: 55,
        _U3: 28,
        _V3: 1,
        _W3: 1,
        _X3: [760]
    }, {
        _F3: "spr_slime_scientist", width: 56, height: 28, _O3: !1, _P3: !1, preload: !1, _R3: 28, _S3: 22, _T3: 55,
        _U3: 27, _V3: 1, _W3: 1, _X3: [745]
    }, {
        _F3: "spr_slime_random",
        width: 55,
        height: 54,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 27,
        _S3: 34,
        _T3: 54,
        __3: 8,
        _U3: 41,
        _V3: 1,
        _W3: 1,
        _X3: [769]
    }, {
        _F3: "spr_backarrow",
        width: 63,
        height: 33,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 31,
        _S3: 27,
        _Z3: 1,
        _T3: 62,
        _U3: 32,
        _V3: 1,
        _W3: 1,
        _X3: [775]
    }, {
        _F3: "spr_slime_",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _Q3: !0,
        _R3: 28,
        _S3: 22,
        _V3: 1,
        _W3: 1,
        _X3: [757],
        _Y3: [[0xFF, 0x00, 0xC3, 0x00]]
    }, {
        _F3: "spr_slime_alien",
        width: 56,
        height: 37,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 31,
        _T3: 55,
        _U3: 36,
        _V3: 1,
        _W3: 1,
        _X3: [777]
    }, {
        _F3: "spr_slime_australian",
        width: 57,
        height: 46,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 40,
        _T3: 56,
        _U3: 45,
        _V3: 1,
        _W3: 1,
        _X3: [784]
    }, {
        _F3: "spr_slime_basket",
        width: 56,
        height: 29,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 24,
        _T3: 55,
        _U3: 28,
        _V3: 1,
        _W3: 1,
        _X3: [761]
    }, {
        _F3: "spr_slime_bomb",
        width: 52,
        height: 39,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 26,
        _S3: 33,
        _T3: 51,
        _U3: 38,
        _V3: 1,
        _W3: 1,
        _X3: [774]
    }, {
        _F3: "spr_slime_boxer",
        width: 56,
        height: 28,
        _O3: !1,
        _P3: !1,
        preload: !1,
        _R3: 28,
        _S3: 22,
        _T3: 55,
        _U3: 27,
        _V3: 1,
        _W3: 1,
        _X3: [756]
    },
        {
            _F3: "spr_slime_builder",
            width: 70,
            height: 35,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 29,
            _S3: 25,
            _T3: 69,
            _U3: 33,
            _V3: 1,
            _W3: 1,
            _X3: [781]
        }, {
            _F3: "spr_slime_clock",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [754]
        }, {
            _F3: "spr_slime_cowboy",
            width: 66,
            height: 51,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 34,
            _S3: 44,
            _T3: 64,
            _U3: 50,
            _V3: 1,
            _W3: 1,
            _X3: [811]
        }, {
            _F3: "spr_slime_cosmos",
            width: 56,
            height: 29,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [753]
        }, {
            _F3: "spr_slime_diver", width: 60,
            height: 32, _O3: !1, _P3: !1, preload: !1, _R3: 30, _S3: 26, _T3: 59, _U3: 31, _V3: 1, _W3: 1, _X3: [771]
        }, {
            _F3: "spr_slime_fire",
            width: 58,
            height: 30,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 29,
            _S3: 22,
            _T3: 57,
            _U3: 29,
            _V3: 1,
            _W3: 1,
            _X3: [767]
        }, {
            _F3: "spr_slime_fisher",
            width: 57,
            height: 34,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 28,
            _T3: 56,
            _U3: 33,
            _V3: 1,
            _W3: 1,
            _X3: [772]
        }, {
            _F3: "spr_slime_ghost",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 23,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [750]
        }, {
            _F3: "spr_slime_indian", width: 56, height: 43, _O3: !1, _P3: !1, preload: !1,
            _R3: 28, _S3: 37, _T3: 55, _U3: 42, _V3: 1, _W3: 1, _X3: [783]
        }, {
            _F3: "spr_slime_maniac",
            width: 74,
            height: 49,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 33,
            _S3: 32,
            _Z3: 3,
            _T3: 70,
            __3: 3,
            _U3: 45,
            _V3: 1,
            _W3: 1,
            _X3: [785]
        }, {
            _F3: "spr_slime_monk",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [749]
        }, {
            _F3: "spr_slime_mud",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [748]
        }, {
            _F3: "spr_slime_murder", width: 56, height: 28, _O3: !1, _P3: !1, preload: !1, _R3: 28, _S3: 22, _T3: 55,
            _U3: 27, _V3: 1, _W3: 1, _X3: [747]
        }, {
            _F3: "spr_slime_music",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [746]
        }, {
            _F3: "spr_slime_nature",
            width: 60,
            height: 31,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 30,
            _S3: 26,
            _T3: 59,
            _U3: 30,
            _V3: 1,
            _W3: 1,
            _X3: [768]
        }, {
            _F3: "spr_slime_retro",
            width: 56,
            height: 31,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 25,
            _T3: 55,
            _U3: 30,
            _V3: 1,
            _W3: 1,
            _X3: [765]
        }, {
            _F3: "spr_slime_sponge",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [744]
        }
        , {
            _F3: "spr_slime_super",
            width: 68,
            height: 29,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 39,
            _S3: 23,
            _T3: 67,
            _U3: 28,
            _V3: 1,
            _W3: 1,
            _X3: [773]
        }, {
            _F3: "spr_slime_traffic",
            width: 62,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 61,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [764]
        }, {
            _F3: "spr_slime_tv",
            width: 108,
            height: 96,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 54,
            _S3: 56,
            _Z3: 26,
            _T3: 81,
            __3: 24,
            _U3: 61,
            _V3: 1,
            _W3: 1,
            _X3: [778]
        }, {
            _F3: "spr_slime_twin",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [743]
        }, {
            _F3: "spr_slime_water",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 23,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [742]
        }, {
            _F3: "spr_ball",
            width: 19,
            height: 19,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 9,
            _S3: 9,
            _T3: 18,
            _U3: 18,
            _V3: 1,
            _W3: 1,
            _X3: [411]
        }, {
            _F3: "spr_goal",
            width: 70,
            height: 115,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 35,
            _S3: 57,
            _T3: 69,
            _U3: 114,
            _V3: 1,
            _W3: 1,
            _X3: [839]
        }, {
            _F3: "spr_goal_front",
            width: 69,
            height: 114,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 34,
            _S3: 57,
            _T3: 48,
            __3: 20,
            _U3: 113,
            _V3: 1,
            _W3: 1,
            _X3: [824]
        }, {
            _F3: "spr_font1",
            width: 24,
            height: 36,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 22,
            _U3: 35,
            _V3: 1,
            _W3: 1,
            _X3: [173, 156, 717, 666, 698, 637, 68, 365, 388, 172, 408, 81, 69, 22, 696, 557, 360, 673, 697, 685, 676, 640, 690, 636, 608, 67, 126, 274, 189, 296, 595, 691, 657, 609, 668, 617, 638, 635, 661, 681, 430, 675, 684, 660, 665, 682, 667, 662, 702, 664, 658, 701, 643, 615, 616, 680, 683, 674, 359, 639, 295, 117, 137, 86, 421, 663, 418, 623, 464, 596, 693, 644, 130, 490, 580, 170, 420, 419, 443, 659, 700, 444, 445, 574, 442, 407, 446, 410, 624, 409, 716, 387, 195, 392],
            _Y3: [[0x52, 0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F,
                0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x98, 0x00], [0x82, 0x00, 0x26, 0x03, 0xF7, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF,
                0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xF7, 0xE0, 0xC1, 0x00], [0xEB, 0x00], [0x83, 0x00, 0x4F, 0x7F, 0x00, 0x03, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFE, 0xFC, 0x3F, 0xFE, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0x7F, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xC0,
                0x97, 0x00], [0x82, 0x00, 0x53, 0x0F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x3F, 0x83, 0xF8, 0x7F, 0x87, 0xF8, 0x7F, 0x87, 0xF8, 0x7F, 0x8F, 0xF8, 0x7F, 0x9F, 0xF8, 0x7F, 0x9F, 0xF0, 0x7F, 0xBF, 0xE0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xEF, 0xFC, 0x7F, 0xCF, 0xFC, 0x7F, 0xCF, 0xFC, 0x7F, 0x8F, 0xFC, 0x7F, 0x0F, 0xFC, 0x7E, 0x0F, 0xFC, 0x7E, 0x0F, 0xFC, 0x00, 0x00, 0x78, 0x94, 0x00], [0x85, 0x00, 0x4D, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00,
                0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0x1F, 0xC0, 0x3F, 0x9F, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFD, 0xFC, 0x07, 0xF8, 0xF8, 0x97, 0x00], [0x2B, 0x00, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00,
                0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0xBF, 0x00], [0x86, 0x00, 0x4C, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x03,
                0xF0, 0x97, 0x00], [0x83, 0x00, 0x4E, 0x78, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xF8, 0x98, 0x00], [0x82, 0x00, 0x26, 0x03, 0xF3, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07,
                0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xF3, 0xF0, 0xC1, 0x00], [0x98, 0x00, 0x36, 0x0E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x9B, 0x00], [0xBC, 0x00, 0x21, 0x7C, 0x00, 0x00, 0x7F, 0x00, 0x00,
                0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x8C, 0x00], [0xAC, 0x00, 0x11, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0xAC, 0x00], [0xBF, 0x00, 0x12, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x98, 0x00], [0x84, 0x00, 0x4F, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFC,
                0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x0E, 0x96, 0x00], [0x83, 0x00, 0x4E, 0x3C, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xF7, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xE7, 0xF8, 0x0F, 0xE3,
                0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xE3, 0xF8, 0x0F, 0xE7, 0xF8, 0x0F, 0xE7, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x98, 0x00], [0x83, 0x00, 0x51, 0x3C, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00,
                0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x95, 0x00], [0x85, 0x00, 0x4D, 0x07, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xC7, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x07, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xFC,
                0x7F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x97, 0x00], [0x83, 0x00, 0x51, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x87, 0xFE, 0x1F, 0x3F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFC, 0x1F, 0x3F, 0xFC, 0x3F, 0x87, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xE3, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0,
                0x00, 0x7E, 0x95, 0x00], [0x83, 0x00, 0x52, 0x1F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x94, 0x00], [0x85, 0x00, 0x4D, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF,
                0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x3E, 0x01, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0xEF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x97, 0x00], [0x86, 0x00, 0x4C, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF,
                0xF8, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xF3, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0x80, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x97, 0x00], [0x85, 0x00, 0x4E, 0x1F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xC0, 0x00,
                0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x07, 0x96, 0x00], [0x85, 0x00, 0x4D, 0x03, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3,
                0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xF8, 0x00, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x07,
                0xFF, 0x00, 0x07, 0xFC, 0x98, 0x00], [0xA7, 0x00, 0x2A, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x98, 0x00], [0xA4, 0x00, 0x33, 0x38, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF,
                0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x92, 0x00], [0x97, 0x00, 0x3A, 0x01, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xC0, 0x98, 0x00], [0x9D, 0x00, 0x20, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F,
                0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0xAC, 0x00], [0x98, 0x00, 0x3A, 0x0F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x97, 0x00], [0x83, 0x00, 0x36, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8,
                0x1F, 0xE7, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0x87, 0xF8, 0x1F, 0x8F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x7E, 0x84, 0x00, 0x12, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x98, 0x00], [0x83, 0x00, 0x4F, 0x7E, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC,
                0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xC0, 0x97, 0x00], [0x83, 0x00, 0x4F, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xF3, 0xF8,
                0x0F, 0xF3, 0xFC, 0x0F, 0xE3, 0xFC, 0x0F, 0xE1, 0xFC, 0x1F, 0xE1, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0x80, 0xFE, 0x0F, 0x80, 0x7C, 0x97, 0x00], [0x85, 0x00, 0x4D, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF,
                0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x97, 0x00], [0x83, 0x00, 0x4F, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xF3, 0xFC, 0x1F, 0xE1, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0x7C, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xC1, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0xFF, 0x80, 0x97, 0x00], [0x82, 0x00, 0x52,
                0x07, 0xC0, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xDF, 0xF8, 0x0F, 0xC7, 0xFC, 0x0F, 0xC3, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC0, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC3, 0xFC, 0x0F, 0xC7, 0xFC, 0x0F, 0xDF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x00, 0x07, 0x80, 0x95, 0x00], [0x85, 0x00, 0x4D, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC,
                0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x0F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0,
                0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0x80, 0x98, 0x00], [0x83, 0x00, 0x4F, 0x3F, 0x00, 0x01, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE,
                0x1F, 0xFF, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x97, 0x00], [0x82, 0x00, 0x53, 0x1F, 0x00, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81,
                0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x0F, 0x00, 0xF8, 0x94, 0x00], [0x85, 0x00, 0x4D, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07,
                0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x0F, 0xC0, 0xFE, 0x0F, 0xC0, 0xFE, 0x0F, 0xE1, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x01, 0xFF, 0xF0, 0x00, 0x3F, 0x98, 0x00], [0x82, 0x00, 0x53, 0x0F, 0x80, 0x7C, 0x1F, 0x80, 0xFE, 0x1F, 0xC3,
                0xFE, 0x1F, 0xC7, 0xFE, 0x1F, 0xCF, 0xFE, 0x1F, 0xDF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xDF, 0xFE, 0x1F, 0xCF, 0xFE, 0x1F, 0xC3, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0x80, 0xFE, 0x00, 0x00, 0x38, 0x94, 0x00], [0x82, 0x00, 0x50, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F,
                0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x97, 0x00], [0x85, 0x00, 0x50, 0x0F, 0x80, 0x7C, 0x1F, 0xC0, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xF1, 0xFE, 0x1F, 0xFB, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE,
                0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x0F, 0x80, 0xFE, 0x00, 0x00, 0x38, 0x94, 0x00], [0x84, 0x00, 0x4F, 0x7C, 0x00, 0x00, 0xFC, 0x1F, 0x80, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xE0, 0xFE, 0x1F, 0xF0, 0xFE, 0x1F, 0xF8, 0xFE, 0x1F, 0xF8, 0xFE, 0x1F, 0xFC, 0xFE, 0x1F, 0xFE, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F,
                0xBF, 0xFE, 0x1F, 0x9F, 0xFE, 0x1F, 0x9F, 0xFE, 0x1F, 0x8F, 0xFE, 0x1F, 0x87, 0xFE, 0x1F, 0x83, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0x7C, 0x1F, 0x80, 0x00, 0x0F, 0x96, 0x00], [0x83, 0x00, 0x4F, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xE7, 0xFC,
                0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x97, 0x00], [0x85, 0x00, 0x4E, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0x87, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x83, 0xFE, 0x1F, 0x8F, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x1F, 0xFC, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80,
                0x00, 0x0F, 0x96, 0x00], [0x83, 0x00, 0x55, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0x9F, 0xFC, 0x3F, 0x9F, 0xFC, 0x3F, 0xDF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x38, 0x91, 0x00], [0x85, 0x00, 0x50, 0x1F, 0xFC,
                0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xBF, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0x87, 0xFC, 0x3F, 0x01, 0xFC, 0x1E, 0x00, 0xF8, 0x94, 0x00], [0x83, 0x00, 0x4F, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF,
                0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xF0, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x3F, 0x87, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x97, 0x00], [0x85, 0x00, 0x4F, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00,
                0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x95, 0x00], [0x53, 0x1E, 0x00, 0xF0, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8,
                0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0xE7, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x97, 0x00], [0x82, 0x00, 0x49, 0x1F, 0x00, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x1F, 0xC3, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xE7, 0xF8, 0x0F, 0xF7, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF,
                0x80, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x9E, 0x00], [0x82, 0x00, 0x4A, 0x3F, 0x00, 0xF8, 0x3F, 0x01, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0xC7, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x07, 0xEF, 0xC0, 0x9D, 0x00], [0x82, 0x00, 0x53,
                0x3F, 0x00, 0x7C, 0x3F, 0x00, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xF7, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xF7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x00, 0xFC, 0x00, 0x00, 0x78, 0x94, 0x00], [0x82, 0x00, 0x52, 0x1E, 0x00, 0x00, 0x3F, 0x01, 0xF8, 0x3F, 0x81, 0xFC, 0x3F, 0xC3,
                0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xEF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x38, 0x95, 0x00], [0x85, 0x00, 0x4D, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F,
                0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x97, 0x00], [0x83, 0x00, 0x51, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0,
                0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x00, 0xFE, 0x95, 0x00], [0x85, 0x00, 0x4D, 0x1F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0xE0, 0x00, 0x1F,
                0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0x97, 0x00], [0x83, 0x00, 0x51, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF,
                0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0x7F, 0x95, 0x00], [0x85, 0x00, 0x1C, 0x07, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0x7C, 0xFC, 0xC8, 0x00], [0xBE, 0x00, 0x14, 0x1F, 0xFF, 0xF8, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x97, 0x00], [0x82, 0x00, 0x1C, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00,
                0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0xCB, 0x00], [0x98, 0x00, 0x3A, 0x3F, 0xC0, 0x00, 0xFF, 0xF0, 0x03, 0xFF, 0xF8, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFE, 0x00, 0xFF, 0xFC, 0x97, 0x00], [0x82, 0x00, 0x50, 0x0F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xFF, 0x00,
                0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xC3, 0xFC, 0x1F, 0xC1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC7, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x97, 0x00], [0x98, 0x00, 0x3A, 0x3F, 0xC0, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xF9, 0xFE, 0x0F, 0xE0, 0xFE, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xF0, 0xFE,
                0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xE0, 0x97, 0x00], [0x84, 0x00, 0x4E, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x7F, 0xFC, 0x01, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xE1, 0xFC, 0x1F, 0xF1, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x03,
                0xFF, 0xFC, 0x00, 0xFF, 0xF8, 0x97, 0x00], [0x97, 0x00, 0x3B, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xF3, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x1F, 0xFB, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xE0, 0x97, 0x00], [0x86, 0x00, 0x4E, 0x03, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0xFF,
                0x00, 0x00, 0xFF, 0x00, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7C, 0x95, 0x00], [0x96, 0x00, 0x53, 0x3C, 0x01, 0xFF, 0xFE, 0x03, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xF3, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0x80, 0x7E, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F,
                0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xF3, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0x00, 0xE0], [0x82, 0x00, 0x53, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xF0, 0xFE, 0x0F, 0xE0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F,
                0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x07, 0xC0, 0x7E, 0x94, 0x00], [0x8C, 0x00, 0x48, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00,
                0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0x95, 0x00], [0x8C, 0x00, 0x5A, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF,
                0x80, 0x07, 0xFF, 0x00, 0x01, 0xF8, 0x83, 0x00], [0x82, 0x00, 0x52, 0x01, 0xC0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0xFC, 0x07, 0xF1, 0xFC, 0x07, 0xF3, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xF7, 0xFC, 0x07, 0xF3, 0xFC, 0x07, 0xF0, 0xFC, 0x03, 0xF0, 0x78, 0x03, 0xE0, 0x95, 0x00], [0x83, 0x00, 0x4E, 0x3E,
                0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0x98, 0x00], [0x97, 0x00, 0x3B, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF,
                0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xBE, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x0F, 0x80, 0xFC, 0x97, 0x00], [0x97, 0x00, 0x3B, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F,
                0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0x80, 0xFC, 0x97, 0x00], [0x97, 0x00, 0x3A, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xF7, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xE3, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x98, 0x00], [0x97, 0x00, 0x4F, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xDF, 0xFE, 0x1F, 0xC1,
                0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC3, 0xFE, 0x1F, 0xDF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0x80, 0x83, 0x00], [0x97, 0x00, 0x50, 0x01, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFB, 0xF8, 0x7F, 0xC3, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x83, 0xF8, 0x7F, 0xC3, 0xF8, 0x7F, 0xFB, 0xF8, 0x3F, 0xFF,
                0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF0, 0x82, 0x00], [0x97, 0x00, 0x3A, 0x0F, 0x87, 0x80, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xF8, 0xFE, 0x1F, 0xE0, 0x3C, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F,
                0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x80, 0x98, 0x00], [0x98, 0x00, 0x3A, 0xFF, 0xC0, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xCF, 0xFE, 0x1F, 0xE3, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x97, 0x00], [0x85, 0x00, 0x4D, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x1F, 0xFF, 0x00,
                0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0xF0, 0x01, 0xF9, 0xF8, 0x01, 0xF9, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0xC0, 0x97, 0x00], [0x97, 0x00, 0x3B, 0x0F, 0x80, 0x7C, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xFF,
                0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFE, 0x00, 0x7F, 0xFC, 0x97, 0x00], [0x97, 0x00, 0x37, 0x7C, 0x03, 0xE0, 0x7E, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0xDF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xF8, 0x9B, 0x00], [0x97, 0x00, 0x3B, 0x3F, 0x00, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x81, 0xFC,
                0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xF7, 0xC0, 0x97, 0x00], [0x9A, 0x00, 0x38, 0x1F, 0x80, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xE3,
                0xFC, 0x1F, 0xC1, 0xFC, 0x0F, 0x00, 0x78, 0x97, 0x00], [0x97, 0x00, 0x4F, 0x3F, 0x01, 0xF0, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0xC7, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x00, 0xFE, 0x83, 0x00], [0x9A, 0x00, 0x38, 0x1F, 0xFF, 0xF8,
                0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x97, 0x00], [0xEB, 0x00], [0x82, 0x00, 0x4F, 0x01, 0xFC, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00,
                0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x98, 0x00], [0x58, 0x00, 0x7E, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE,
                0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x92, 0x00], [0x83, 0x00, 0x51, 0x7E, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x03, 0xFF, 0x80,
                0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x00, 0x7E, 0x95, 0x00]]
        }, {
            _F3: "spr_font2c",
            width: 22,
            height: 32,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 21,
            _U3: 31,
            _V3: 1,
            _W3: 1,
            _X3: [129, 108, 705, 541, 539, 548, 46, 276, 275, 135, 349, 56, 50, 15, 585, 424, 201, 536, 581, 481, 586, 546, 587, 529, 482, 51, 91, 182, 144, 233, 452, 582, 533, 478, 547, 451, 530, 526, 528, 531, 390, 532, 535, 543, 545, 550, 549, 538, 612, 537, 540, 583, 508, 462, 431, 544, 534, 588, 246, 479, 200, 92, 115, 54, 350, 542, 376, 477, 403, 425, 600,
                480, 93, 412, 423, 124, 377, 379, 397, 527, 584, 394, 395, 453, 378, 319, 396, 352, 483, 351, 704, 277, 142, 278],
            _Y3: [[0x49, 0x00, 0xF8, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x95, 0x00], [0x82, 0x00, 0x20,
                0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0xBB, 0x00], [0xDF, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFB, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0,
                0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0x80, 0x03, 0xFF, 0x95, 0x00], [0x82, 0x00, 0x47, 0x1E, 0x03, 0xE0, 0x3F, 0x07, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x3F, 0xE0, 0x7F, 0x3F, 0xE0, 0x7F, 0x7F, 0xC0, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0x9F, 0xF0, 0x7F, 0x9F, 0xF0, 0x7F, 0x1F, 0xF0, 0x7E, 0x1F, 0xF0, 0x7C, 0x1F, 0xF0, 0x7C, 0x1F, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x47, 0x07, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x1F,
                0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xF3, 0xE0, 0x07, 0xE1, 0xC0, 0x94, 0x00], [0x25, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C,
                0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0xB9, 0x00], [0x83, 0x00, 0x46, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xC0, 0x94, 0x00], [0x82, 0x00, 0x46, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x01,
                0xFF, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xE0, 0x95, 0x00], [0x82, 0x00, 0x20, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x07, 0xEF, 0xC0, 0xBB, 0x00], [0x95, 0x00,
                0x30, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x98, 0x00], [0xB3, 0x00, 0x1E, 0xF0, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x8C, 0x00], [0xA6, 0x00, 0x0E, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0,
                0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0xA9, 0x00], [0xB6, 0x00, 0x12, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x95, 0x00], [0x83, 0x00, 0x44, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00,
                0x7E, 0x00, 0x00, 0x3E, 0x96, 0x00], [0x82, 0x00, 0x46, 0x01, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x1F, 0xCF, 0xC0, 0x1F, 0xCF, 0xC0, 0x1F, 0xCF, 0xE0, 0x1F, 0x8F, 0xE0, 0x1F, 0x8F, 0xE0, 0x1F, 0x8F, 0xE0, 0x1F, 0x8F, 0xE0, 0x1F, 0xCF, 0xE0, 0x1F, 0xCF, 0xC0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFC, 0x95, 0x00], [0x82, 0x00, 0x46, 0x01, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00,
                0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x95, 0x00], [0x82, 0x00, 0x47, 0x07, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xC0,
                0x0F, 0xFF, 0x80, 0x3F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x94, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x0F, 0xF8, 0x3E, 0x7F, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xE0, 0x00, 0xFF, 0xF0, 0x3E, 0x7F, 0xF0, 0x7F, 0x0F, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x87, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF,
                0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0x95, 0x00], [0x83, 0x00, 0x45, 0x7E, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xC0, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x95, 0x00], [0x82, 0x00, 0x46, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF,
                0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF0, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x7E, 0x07, 0xF0, 0x7F, 0x9F, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x03, 0xFE, 0x95, 0x00], [0x82, 0x00, 0x46, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF,
                0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xC7, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x95, 0x00], [0x82, 0x00, 0x45, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0,
                0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0x96, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x00, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x03, 0xFE, 0x95, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x0F, 0xFF,
                0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xCF, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0xC7, 0xF0, 0x3F, 0xEF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF0, 0x95, 0x00], [0xA1, 0x00, 0x27, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00,
                0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x95, 0x00], [0xA0, 0x00, 0x2B, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x92, 0x00], [0x94, 0x00, 0x31, 0x03, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x0F, 0xFE,
                0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x07, 0xC0, 0x98, 0x00], [0x9A, 0x00, 0x1A, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0xA9, 0x00], [0x95, 0x00, 0x33, 0x3E, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0x00, 0x00,
                0x1E, 0x95, 0x00], [0x82, 0x00, 0x2E, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0x8F, 0xE0, 0x3F, 0x0F, 0xE0, 0x3F, 0x0F, 0xE0, 0x3F, 0x1F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x84, 0x00, 0x12, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x95, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF,
                0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x95, 0x00], [0x83, 0x00, 0x46, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0,
                0x0F, 0xEF, 0xE0, 0x1F, 0xCF, 0xF0, 0x1F, 0xC7, 0xF0, 0x1F, 0xC7, 0xF8, 0x3F, 0x87, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x1F, 0x01, 0xF0, 0x0E, 0x00, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x47, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x07, 0xF0, 0x3F, 0x07, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x07, 0xF0, 0x3F, 0x07, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF,
                0xC0, 0x0F, 0xFF, 0x80, 0x94, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xC7, 0xF0, 0x3F, 0x87, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x01, 0xF0, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x03, 0xF0, 0x7F, 0x87, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x01, 0xFE, 0x95, 0x00], [0x82, 0x00, 0x46, 0x0F, 0xFC, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0,
                0x1F, 0xFF, 0xE0, 0x1F, 0xBF, 0xE0, 0x1F, 0x8F, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x83, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x87, 0xF0, 0x1F, 0x8F, 0xF0, 0x1F, 0xBF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x0F, 0xFC, 0x95, 0x00], [0x82, 0x00, 0x47, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00,
                0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x94, 0x00], [0x82, 0x00, 0x45, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80,
                0x00, 0x3F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x0E, 0x96, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x87, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x95, 0x00], [0x82, 0x00, 0x47, 0x3E, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07,
                0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x3E, 0x03, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x47, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00,
                0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x03, 0xFF, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x94, 0x00], [0x82, 0x00, 0x46, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8,
                0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0x7C, 0x95, 0x00], [0x82, 0x00, 0x47, 0x1F, 0x01, 0xF0, 0x3F, 0x07, 0xF8, 0x3F, 0x8F, 0xF8, 0x3F, 0x9F, 0xF8, 0x3F, 0xBF, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xF0, 0x3F, 0xBF, 0xF8, 0x3F, 0x9F, 0xF8, 0x3F, 0x87, 0xF8, 0x3F, 0x03, 0xF8, 0x1E, 0x01, 0xF0, 0x94, 0x00], [0x82, 0x00, 0x47, 0x3F, 0x00, 0x00, 0x3F,
                0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x47, 0x07, 0x00, 0x70, 0x0F, 0x80, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xF3, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC,
                0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC1, 0xFC, 0x0F, 0x81, 0xFC, 0x07, 0x00, 0xFC, 0x94, 0x00], [0x83, 0x00, 0x44, 0x01, 0xF0, 0x1E, 0x03, 0xF0, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0xC3, 0xF8, 0x3F, 0xE3, 0xF8, 0x3F, 0xF3, 0xF8, 0x3F, 0xF3, 0xF8, 0x3F, 0xFB, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0x7F, 0xF8, 0x3F, 0x3F, 0xF8, 0x3F, 0x3F, 0xF8,
                0x3F, 0x1F, 0xF8, 0x3F, 0x0F, 0xF8, 0x3F, 0x07, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x01, 0xF0, 0x3F, 0x00, 0xE0, 0x1E, 0x96, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x7F, 0x8F, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7E, 0x07, 0xF0, 0x7E, 0x07, 0xF0, 0x7E, 0x07, 0xF0, 0x7E, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x8F, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x03, 0xFF, 0x95, 0x00], [0x82, 0x00, 0x45,
                0x1F, 0xF8, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x0F, 0xF8, 0x3F, 0x07, 0xF8, 0x3F, 0x07, 0xF8, 0x3F, 0x1F, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80, 0x3F, 0xF8, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0x96, 0x00], [0x82, 0x00, 0x4A, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F,
                0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x3F, 0xF0, 0x7F, 0x3F, 0xF0, 0x7F, 0x3F, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0xE0, 0x91, 0x00], [0x82, 0x00, 0x47, 0x1F, 0xF0, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0x1F, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x1F, 0xF0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0,
                0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0x7F, 0xF0, 0x7F, 0x1F, 0xF0, 0x7E, 0x0F, 0xF0, 0x3E, 0x03, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0xC3, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x7F, 0x0F, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF,
                0x80, 0x03, 0xFF, 0x95, 0x00], [0x82, 0x00, 0x46, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x95, 0x00], [0x49, 0x3C, 0x03, 0xC0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0,
                0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7F, 0x8F, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x03, 0xFE, 0x95, 0x00], [0x82, 0x00, 0x40, 0x3E, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x8F, 0xF0, 0x3F, 0x8F, 0xF0, 0x3F, 0x8F, 0xE0, 0x3F, 0xCF, 0xE0, 0x1F, 0xCF, 0xC0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x00,
                0x07, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x70, 0x9B, 0x00], [0x82, 0x00, 0x40, 0x7C, 0x07, 0xC0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7F, 0x0F, 0xC0, 0x7F, 0x0F, 0xC0, 0x7F, 0x1F, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xBE, 0x9B, 0x00], [0x82, 0x00,
                0x47, 0x7E, 0x01, 0xF0, 0x7E, 0x03, 0xF0, 0x7F, 0x87, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0xCF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x7F, 0xCF, 0xF0, 0x7F, 0x87, 0xF0, 0x7F, 0x87, 0xF0, 0x7E, 0x03, 0xF0, 0x3E, 0x01, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x46, 0x3E, 0x03, 0xC0, 0x7E, 0x07, 0xE0, 0x7F, 0x87, 0xF0, 0x7F, 0xCF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x0F,
                0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x95, 0x00], [0x82, 0x00, 0x47, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x0F,
                0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00,
                0x03, 0xFE, 0x95, 0x00], [0x82, 0x00, 0x47, 0x1E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01,
                0xFE, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x95, 0x00], [0x82, 0x00, 0x19, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x7F, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFD, 0xF0, 0xC2, 0x00], [0xB5, 0x00, 0x14, 0x1F, 0xFF, 0xC0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8,
                0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x94, 0x00], [0x82, 0x00, 0x16, 0x03, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0xC5, 0x00], [0x94, 0x00, 0x35, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x94,
                0x00], [0x82, 0x00, 0x46, 0x1F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x87, 0xF8, 0x3F, 0x8F, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x95, 0x00], [0x95, 0x00, 0x34, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xE3, 0xF8,
                0x1F, 0xC1, 0xF8, 0x1F, 0xC1, 0xF8, 0x1F, 0xC1, 0xF8, 0x1F, 0xC1, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x94, 0x00], [0x83, 0x00, 0x46, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0xE3, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8,
                0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0xE0, 0x94, 0x00], [0x94, 0x00, 0x35, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xF7, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x94, 0x00], [0x83, 0x00, 0x45, 0x07, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0x80, 0x01, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x07,
                0xFF, 0x00, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x95, 0x00], [0x93, 0x00, 0x4A, 0xF0, 0x03, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xEF, 0xF8, 0x3F, 0xC3, 0xF8, 0x3F, 0x81, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8,
                0x3F, 0xFF, 0xF8, 0x3F, 0xC7, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x00, 0x80], [0x82, 0x00, 0x47, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xC7, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x1F, 0x03, 0xF0,
                0x94, 0x00], [0x89, 0x00, 0x3F, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x95, 0x00], [0x89, 0x00, 0x51, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00,
                0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x03, 0xE0, 0x83, 0x00], [0x82, 0x00, 0x46, 0x03, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE3, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0,
                0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xEF, 0xF0, 0x0F, 0xE7, 0xF0, 0x07, 0xE1, 0xE0, 0x07, 0xC0, 0x95, 0x00], [0x83, 0x00, 0x45, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00,
                0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x78, 0x95, 0x00], [0x94, 0x00, 0x35, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x7B, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x1F, 0x03, 0xF0, 0x0E, 0x01, 0xE0, 0x94, 0x00], [0x94, 0x00, 0x35, 0x1F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x83,
                0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x83, 0xF0, 0x3F, 0x03, 0xF0, 0x1E, 0x01, 0xE0, 0x94, 0x00], [0x94, 0x00, 0x34, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x7F, 0xEF, 0xF0, 0x7F, 0x87, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x87, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x03, 0xFF, 0x00, 0x01, 0xFC, 0x95, 0x00], [0x94, 0x00, 0x45, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0,
                0x3F, 0xFF, 0xF8, 0x3F, 0xBF, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x87, 0xF8, 0x3F, 0x8F, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x84, 0x00], [0x94, 0x00, 0x47, 0x03, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0x8F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x8F, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x3F,
                0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xC0, 0x82, 0x00], [0x94, 0x00, 0x33, 0x1F, 0x1F, 0x00, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xE1, 0xF8, 0x3F, 0xC0, 0xF0, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x0E, 0x96, 0x00], [0x94, 0x00, 0x34, 0x03, 0xFF, 0x00,
                0x1F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x7F, 0xFF, 0xF0, 0x7F, 0x7F, 0xF0, 0x7F, 0x1F, 0xF0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0x80, 0x03, 0xFF, 0x95, 0x00], [0x82, 0x00, 0x46, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00,
                0x03, 0xF3, 0xC0, 0x03, 0xF7, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x00, 0x7F, 0x95, 0x00], [0x94, 0x00, 0x35, 0x7C, 0x07, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x94, 0x00], [0x94, 0x00, 0x31, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0x7E, 0x0F, 0xC0, 0x7E,
                0x1F, 0xC0, 0x7F, 0x1F, 0xC0, 0x7F, 0xBF, 0x80, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xE0, 0x98, 0x00], [0x94, 0x00, 0x34, 0x7E, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x03, 0xCF, 0x95, 0x00],
                [0x97, 0x00, 0x30, 0x3F, 0x03, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0xCF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xCF, 0xF0, 0x3F, 0xC7, 0xF0, 0x1F, 0x03, 0xE0, 0x0E, 0x96, 0x00], [0x94, 0x00, 0x46, 0x7E, 0x07, 0xC0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7E, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x3F,
                    0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x01, 0xF8, 0x83, 0x00], [0x97, 0x00, 0x32, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x94, 0x00], [0xDF, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC,
                    0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xF8, 0x95, 0x00], [0x4C, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01,
                    0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x46, 0x03, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x03,
                    0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFC, 0x95, 0x00]]
        }, {
            _F3: "spr_font3",
            width: 18,
            height: 26,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 17,
            _U3: 25,
            _V3: 1,
            _W3: 1,
            _X3: [83, 61, 565, 308, 312, 303, 19, 159, 161, 63, 191, 29, 23, 9, 336, 253, 132, 301, 331, 284, 327, 340, 333, 311, 300, 24, 57, 128, 89, 145, 287, 335, 339, 314, 304, 285, 305, 328, 338, 307, 187, 337, 332, 343, 334, 342, 313, 330, 367, 310, 302, 344, 292, 269, 243, 298, 309, 329, 131, 299, 111, 49, 77, 20, 213, 341, 211, 297, 270, 288, 389, 306, 53, 268,
                252, 74, 216, 214, 215, 368, 366, 245, 212, 286, 193, 166, 217, 192, 293, 190, 566, 160, 90, 162],
            _Y3: [[0x3A, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x92, 0x00], [0x82, 0x00, 0x16, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00,
                0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0xB3, 0x00], [0xCD, 0x00], [0x82, 0x00, 0x37, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x37, 0x3C, 0x1E, 0x00, 0x7C, 0x3E, 0x00, 0x7C, 0x7E, 0x00, 0x7C, 0xFE, 0x00, 0x7D, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x0F, 0xF0,
                0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0xFF, 0x00, 0x7E, 0x7F, 0x00, 0x7C, 0x7F, 0x00, 0x78, 0x7F, 0x00, 0x78, 0x7E, 0x92, 0x00], [0x82, 0x00, 0x37, 0x1F, 0xE0, 0x00, 0x3F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7C, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xDF, 0x00, 0x0F, 0x8E, 0x92, 0x00], [0x1C, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00,
                0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0xB0, 0x00], [0x83, 0x00, 0x36, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF8, 0x00,
                0x01, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0x80, 0x92, 0x00], [0x82, 0x00, 0x16, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0xB3, 0x00], [0x8F, 0x00, 0x27, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80,
                0x3F, 0xFF, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x95, 0x00], [0xA9, 0x00, 0x16, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x8C, 0x00], [0x9D, 0x00, 0x0A, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0xA4, 0x00], [0xA9, 0x00, 0x10, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x92, 0x00], [0x83, 0x00, 0x35, 0x0F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00,
                0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x78, 0x93, 0x00], [0x82, 0x00, 0x37, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0x7C, 0x00, 0x3F, 0x3E, 0x00, 0x3E, 0x3E, 0x00, 0x3E, 0x3E, 0x00, 0x3E, 0x3E, 0x00, 0x3E, 0x3E, 0x00, 0x3F, 0x3E, 0x00, 0x3F, 0x7C, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F,
                0xF0, 0x00, 0x07, 0xE0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x1F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7E, 0x7E, 0x00, 0x7C, 0x3E, 0x00, 0x78, 0x7E, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00,
                0x1F, 0xF8, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x1F, 0x80, 0x7C, 0x1F, 0x80, 0x7C, 0x7F, 0x80, 0x39, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x7D, 0xFF, 0x00, 0x7C, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x37, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0,
                0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x7E, 0x7F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF,
                0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0x1F, 0x80, 0x7C, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x36, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01,
                0xF8, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x93, 0x00], [0x82, 0x00, 0x37, 0x1F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x7F, 0x00, 0x7C, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0xF8, 0x00, 0x1F,
                0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0x7F, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x1F, 0x00, 0x7E, 0x1F, 0x00, 0x7F, 0x3F, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xC0, 0x92, 0x00], [0x9A, 0x00, 0x1F, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x92, 0x00], [0x97, 0x00, 0x25, 0x01, 0x80, 0x00, 0x07, 0xC0, 0x00,
                0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x8F, 0x00], [0x8E, 0x00, 0x2A, 0x06, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x0C, 0x93, 0x00], [0x94, 0x00, 0x13, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00,
                0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0xA4, 0x00], [0x8F, 0x00, 0x2A, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7E, 0x7E, 0x00, 0x7C, 0x3E, 0x00, 0x7C, 0x7E, 0x00, 0x3C, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xC0, 0x00,
                0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x03, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x37, 0x01, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xFC,
                0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0x3F, 0x00, 0x3F, 0x3F, 0x00, 0x3F, 0x3F, 0x80, 0x7E, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0x3E, 0x0F, 0x00, 0x1C, 0x06, 0x92, 0x00], [0x82, 0x00, 0x37, 0x3F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x92, 0x00], [0x82,
                0x00, 0x37, 0x07, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7E, 0x1F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x7F, 0x00, 0x3E, 0x3F, 0x00, 0x3E, 0x3F, 0x00, 0x3E, 0x1F, 0x00, 0x3E, 0x1F, 0x00, 0x3E, 0x3F, 0x00, 0x3E, 0x3F, 0x00, 0x3E,
                0x3F, 0x00, 0x3E, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x1F, 0xE0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0x00, 0x00, 0x78, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x78, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x36, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7E, 0x00, 0x00,
                0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1C, 0x93, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7E, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7E, 0x1F, 0x80, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x07,
                0xF8, 0x92, 0x00], [0x82, 0x00, 0x37, 0x7C, 0x1F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x1E, 0x92, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00,
                0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xFC, 0x92, 0x00], [0x82, 0x00, 0x37, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x3E, 0x1F, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x01, 0xE0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x3C, 0x1F, 0x00, 0x7E, 0x3F, 0x80, 0x7E, 0xFF, 0x80, 0x7F, 0xFF,
                0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0xFF, 0x80, 0x7E, 0x7F, 0x80, 0x7E, 0x1F, 0x80, 0x3C, 0x0F, 0x92, 0x00], [0x82, 0x00, 0x37, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF,
                0x80, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x38, 0x1E, 0x07, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0xDF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xC0, 0x1E, 0x0F, 0xC0, 0x0C, 0x07, 0xC0, 0x91, 0x00], [0x82, 0x00, 0x36, 0x18, 0x0F, 0x00, 0x3E, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0x7F, 0x1F, 0x80, 0x7F, 0x9F, 0x80, 0x7F, 0xDF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80,
                0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7D, 0xFF, 0x80, 0x7C, 0xFF, 0x80, 0x7C, 0xFF, 0x80, 0x7C, 0x7F, 0x80, 0x7C, 0x1F, 0x80, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x3C, 0x93, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7E, 0x7F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x78, 0x3F, 0x00, 0x78, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x36, 0x3F, 0xF0, 0x00, 0x7F, 0xFC, 0x00,
                0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0x7F, 0x80, 0x7C, 0x3F, 0x80, 0x7C, 0x3F, 0x80, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x93, 0x00], [0x82, 0x00, 0x3A, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0xFF, 0x00, 0x7C, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x3F,
                0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x00, 0x06, 0x8F, 0x00], [0x82, 0x00, 0x37, 0x3F, 0xF0, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0xFF, 0x00, 0x7C, 0x3F, 0x00, 0x7C, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7D, 0xFF, 0x00, 0x7C, 0x7F, 0x00, 0x78, 0x1E, 0x92, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7E, 0x1F, 0x00, 0x7F, 0x1F, 0x00,
                0x7F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x37, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x03, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x92, 0x00], [0x3A, 0x78,
                0x1E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x7E, 0x3E, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x31, 0x7C, 0x1F, 0x00, 0x7C, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7E, 0x3E, 0x00, 0x3F, 0x3E, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x07,
                0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xC0, 0x98, 0x00], [0x82, 0x00, 0x31, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x7C, 0x3C, 0x00, 0x7C, 0x7C, 0x00, 0x7E, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x98, 0x00], [0x82, 0x00, 0x37, 0x78, 0x0F, 0x00, 0x7E, 0x1F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0x7F, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xF0, 0x00,
                0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0x3F, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x1F, 0x00, 0x78, 0x0E, 0x92, 0x00], [0x82, 0x00, 0x37, 0x78, 0x1E, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0x7F, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xC0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x7F, 0xFF, 0x00, 0x7F, 0xFF,
                0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xE0,
                0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x38, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0E, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00,
                0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x13, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xF3, 0x80, 0xB6, 0x00], [0xA9, 0x00, 0x10, 0x1F, 0xFC, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x10, 0x0F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x07,
                0xE0, 0x00, 0x03, 0xE0, 0xB9, 0x00], [0x8E, 0x00, 0x2B, 0x03, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x37, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7E, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0x7E, 0x3F, 0x00,
                0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xF8, 0x92, 0x00], [0x8E, 0x00, 0x2B, 0x01, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x0F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x3F, 0x9F, 0x80, 0x3F, 0x0F, 0x80, 0x3F, 0x0F, 0x80, 0x3F, 0x0F, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x03, 0xFC, 0x92, 0x00], [0x83, 0x00, 0x36, 0x0F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x3F, 0x1F, 0x80, 0x3F, 0x1F, 0x80,
                0x3E, 0x1F, 0x80, 0x3E, 0x1F, 0x80, 0x3F, 0x1F, 0x80, 0x3F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x03, 0xFE, 0x92, 0x00], [0x8E, 0x00, 0x2B, 0x03, 0xF8, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0, 0x7F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x03, 0xFE, 0x92, 0x00], [0x83, 0x00, 0x36, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x1F, 0xF8, 0x00,
                0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x92, 0x00], [0x8E, 0x00, 0x3D, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x7F, 0x1F, 0x80, 0x7E, 0x0F, 0x80, 0x7E, 0x0F, 0x80, 0x7E, 0x1F, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0xFF, 0x80, 0x7F, 0x3F, 0x80, 0x7F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xFC, 0x00,
                0x00], [0x82, 0x00, 0x37, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0x3F, 0x00, 0x7E, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x3C, 0x1F, 0x92, 0x00], [0x86, 0x00, 0x33, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00,
                0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x92, 0x00], [0x86, 0x00, 0x41, 0x70, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x07, 0x84, 0x00], [0x82, 0x00, 0x37, 0x0F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F,
                0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x8F, 0x00, 0x1F, 0x9F, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xBF, 0x00, 0x1F, 0x8F, 0x00, 0x0F, 0x06, 0x92, 0x00], [0x82, 0x00, 0x37, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03,
                0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xE0, 0x92, 0x00], [0x8E, 0x00, 0x2B, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7D, 0xDF, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x3C, 0x1F, 0x00, 0x1C, 0x0E, 0x92, 0x00], [0x8E, 0x00, 0x2B, 0x1C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x1F, 0x00, 0x7E, 0x1F, 0x00, 0x7E, 0x1F, 0x00, 0x7E, 0x1F, 0x00, 0x7E, 0x1F, 0x00,
                0x7E, 0x1F, 0x00, 0x7E, 0x1F, 0x00, 0x3C, 0x0E, 0x92, 0x00], [0x8E, 0x00, 0x2B, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xE0, 0x92, 0x00], [0x8E, 0x00, 0x39, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x80, 0x7E, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0x7E, 0x3F, 0x80, 0x7E, 0x7F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF0,
                0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1C, 0x84, 0x00], [0x8E, 0x00, 0x3A, 0x07, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7E, 0x7E, 0x00, 0x7C, 0x3E, 0x00, 0x7E, 0x3E, 0x00, 0x7E, 0x7E, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1C, 0x83, 0x00], [0x8E, 0x00, 0x2A, 0x1C, 0x70, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF,
                0x80, 0x7F, 0xFF, 0x80, 0x7F, 0x8F, 0x80, 0x7F, 0x07, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1C, 0x93, 0x00], [0x8E, 0x00, 0x2B, 0x07, 0xF0, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7C, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x92, 0x00], [0x82, 0x00, 0x37, 0x07, 0x80, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0,
                0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xDE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x01, 0xF8, 0x92, 0x00], [0x8E, 0x00, 0x2B, 0x70, 0x1C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x92, 0x00], [0x8E, 0x00, 0x28, 0x70, 0x38, 0x00, 0x78,
                0x3C, 0x00, 0x78, 0x7C, 0x00, 0x7C, 0x7C, 0x00, 0x7E, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0x80, 0x95, 0x00], [0x8E, 0x00, 0x2B, 0x78, 0x0F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x1F, 0x00, 0x7C, 0x3F, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0x78, 0x92, 0x00], [0x91, 0x00, 0x28, 0x3C, 0x1F, 0x00, 0x7E, 0x3F, 0x00, 0x7F, 0x7F, 0x00,
                0x7F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0x3F, 0x00, 0x3E, 0x1F, 0x00, 0x1C, 0x06, 0x92, 0x00], [0x8E, 0x00, 0x3A, 0x78, 0x1C, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x78, 0x3E, 0x00, 0x7C, 0x3E, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x03, 0xC0, 0x83, 0x00], [0x91, 0x00,
                0x28, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x92, 0x00], [0xCD, 0x00], [0x82, 0x00, 0x37, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00,
                0x1F, 0xE0, 0x00, 0x0F, 0xE0, 0x92, 0x00], [0x3D, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xC0, 0x8F, 0x00], [0x82, 0x00, 0x37, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x01,
                0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xE0, 0x92, 0x00]]
        }, {
            _F3: "sprite7",
            width: 24,
            height: 36,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 22,
            _U3: 34,
            _V3: 1,
            _W3: 1,
            _X3: [105, 101, 711, 502, 598, 476, 32, 244, 255, 118, 317, 39, 31, 7, 597, 413, 223, 524, 599, 560, 522, 474, 575, 471, 449, 30, 75, 174, 133, 196, 433, 576, 499, 450, 503, 460, 472, 475, 505, 564, 361, 521, 561, 500, 507, 563, 501, 497, 618, 506, 496, 610, 492, 456, 457, 559, 562,
                523, 224, 473, 183, 76, 82, 42, 348, 498, 346, 465, 393, 432, 591, 491, 72, 400, 427, 103, 345, 347, 372, 504, 611, 369, 371, 422, 373, 318, 370, 315, 466, 316, 710, 254, 114, 271],
            _Y3: [[0x83, 0x00, 0x4B, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E,
                0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x9B, 0x00], [0x85, 0x00, 0x20, 0x01, 0xE3, 0x80, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE3, 0xC0, 0xC4, 0x00], [0xEB, 0x00], [0x86, 0x00, 0x49, 0x3E, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xBD, 0xF8, 0x1F, 0x3C, 0xF8, 0x1F, 0x3C, 0x78, 0x1F, 0x3C, 0x78, 0x1F, 0xBC, 0x38, 0x0F, 0xFC, 0x00, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00,
                0x3F, 0xF8, 0x1E, 0x3C, 0xF8, 0x1E, 0x3C, 0x78, 0x1F, 0x3C, 0x78, 0x1F, 0x3C, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x9A, 0x00], [0x85, 0x00, 0x4D, 0x06, 0x00, 0x70, 0x0F, 0x00, 0xF0, 0x1F, 0x01, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x07, 0xE0, 0x3F, 0x0F, 0xC0, 0x0F, 0x0F, 0x80, 0x0F, 0x1F, 0x80, 0x0F, 0x3F, 0x00, 0x06, 0x3E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF3, 0xE0, 0x07, 0xE7, 0xF0, 0x07, 0xE7, 0xF8, 0x0F, 0xC7, 0xF8, 0x1F, 0x87, 0xF8, 0x1F, 0x81, 0xF0, 0x3F, 0x03, 0xF8,
                0x3E, 0x07, 0xF8, 0x3C, 0x07, 0xF8, 0x3C, 0x07, 0xF8, 0x00, 0x00, 0x30, 0x97, 0x00], [0x88, 0x00, 0x47, 0x03, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0x9F, 0x80, 0x1E, 0x0F, 0x80, 0x1E, 0x07, 0x80, 0x1E, 0x0F, 0x80, 0x1F, 0x0F, 0x80, 0x1F, 0xBF, 0x80, 0x1F, 0xFF, 0x20, 0x0F, 0xFE, 0x78, 0x0F, 0xFE, 0xF8, 0x1F, 0xFD, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0x7F, 0xE0, 0x1E, 0x3F, 0xE0, 0x1E, 0x1F, 0xC0, 0x1F, 0x1F, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFD, 0xF8, 0x07, 0xF8, 0xF8, 0x03, 0xF0, 0x70, 0x9A, 0x00], [0x83, 0x00, 0x24, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00,
                0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0C, 0xC2, 0x00], [0x89, 0x00, 0x46, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x07,
                0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xE0, 0x9A, 0x00], [0x86, 0x00, 0x48, 0x30, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x70, 0x9B, 0x00], [0x85, 0x00, 0x20, 0x01, 0xE1, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01,
                0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xE1, 0xE0, 0xC4, 0x00], [0x9B, 0x00, 0x30, 0x04, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x9E, 0x00], [0xBF, 0x00, 0x1B, 0x38, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00,
                0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0E, 0x8F, 0x00], [0xAF, 0x00, 0x0B, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0xAF, 0x00], [0xC2, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x9B, 0x00], [0x87, 0x00, 0x49, 0x38, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00,
                0x03, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x04, 0x99, 0x00], [0x86, 0x00, 0x48, 0x18, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x03, 0xE7, 0xC0, 0x03, 0xE3, 0xE0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x07, 0xC1, 0xE0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0xC1, 0xE0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x03, 0xE7, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF,
                0x00, 0x00, 0x7E, 0x9B, 0x00], [0x86, 0x00, 0x4B, 0x18, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x98, 0x00], [0x88, 0x00, 0x47, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF,
                0xE0, 0x1F, 0x83, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x9A, 0x00], [0x86, 0x00, 0x4B, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0E, 0x00, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x1F,
                0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x03, 0xF8, 0x0E, 0x00, 0xF8, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x00, 0x3C, 0x98, 0x00], [0x86, 0x00, 0x4B, 0x0E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xDF, 0x00, 0x1F, 0x9F, 0x00, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x00, 0x1F, 0x00,
                0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0x98, 0x00], [0x88, 0x00, 0x46, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x1C, 0x00, 0xF8, 0x1F, 0x01, 0xF8, 0x1F, 0xC7, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x9B,
                0x00], [0x89, 0x00, 0x46, 0x7F, 0x80, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xF3, 0xF8, 0x0F, 0xC0, 0xF0, 0x0F, 0x80, 0x00, 0x0F, 0x1C, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xE1, 0xF8, 0x0F, 0x80, 0xFC, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0xF8, 0x0F, 0xF3, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xC0, 0x00, 0x7F, 0x80, 0x9A, 0x00], [0x88, 0x00, 0x48, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03,
                0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x02, 0x99, 0x00], [0x88, 0x00, 0x46, 0x01, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xC3, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x1F, 0xEF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0,
                0x1F, 0xC3, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x1F, 0xEF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x9B, 0x00], [0x89, 0x00, 0x45, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xE3, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x80, 0xF8, 0x0F, 0xC1, 0xF8, 0x07, 0xE3, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x01, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x7F, 0xC0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x03,
                0xFE, 0x00, 0x03, 0xF8, 0x9B, 0x00], [0xAA, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x87, 0x00, 0x0F, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x9B, 0x00], [0xA7, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x87, 0x00, 0x15, 0x10, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x95, 0x00], [0x9B, 0x00, 0x33, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xF0,
                0x00, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0x80, 0x9B, 0x00], [0xA0, 0x00, 0x1A, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0xAF, 0x00], [0x9B, 0x00, 0x33, 0x06, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03,
                0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x07, 0x9B, 0x00], [0x86, 0x00, 0x30, 0x7E, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3C, 0x8A, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00,
                0x3C, 0x00, 0x00, 0x3C, 0x9B, 0x00], [0x86, 0x00, 0x49, 0x3C, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x0F, 0xC3, 0xF0, 0x0F, 0xBD, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xE3, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFE, 0x38, 0x0F, 0xE0, 0x7C, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0x80, 0x9A, 0x00], [0x86, 0x00, 0x49, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00,
                0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x03, 0xE1, 0xF0, 0x03, 0xE1, 0xF0, 0x03, 0xC1, 0xF0, 0x07, 0xC0, 0xF8, 0x07, 0xC0, 0xF8, 0x07, 0x80, 0xF8, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x00, 0x7C, 0x07, 0x00, 0x38, 0x9A, 0x00], [0x88, 0x00, 0x47, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0,
                0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x9A, 0x00], [0x86, 0x00, 0x48, 0x3E, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xE1, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x00, 0x78, 0x1F, 0x00, 0x38, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x78, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0xF8,
                0x0F, 0xC1, 0xF8, 0x07, 0xF7, 0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0x7F, 0x9B, 0x00], [0x85, 0x00, 0x4B, 0x03, 0x80, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0x8F, 0xF0, 0x07, 0x83, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0x78, 0x07, 0x80, 0x78, 0x07, 0x80, 0x78, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x81, 0xF0, 0x07, 0x83, 0xF0, 0x07, 0x8F, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x07, 0xFE, 0x00, 0x03, 0x99, 0x00],
                [0x88, 0x00, 0x47, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x9A, 0x00], [0x88, 0x00, 0x45, 0x07, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80,
                    0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x9C, 0x00], [0x86, 0x00, 0x49, 0x1E, 0x00, 0x00, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x3F, 0xFC, 0x0F, 0x3F, 0xFC, 0x0F, 0x3F, 0xFC, 0x0F, 0x3F, 0xFC, 0x0F,
                    0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0xF8, 0x0F, 0xC0, 0xF8, 0x07, 0xF3, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xC0, 0x00, 0x7F, 0x80, 0x9A, 0x00], [0x85, 0x00, 0x4D, 0x0E, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8,
                    0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x06, 0x00, 0x70, 0x97, 0x00], [0x88, 0x00, 0x47, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x9A, 0x00], [0x88, 0x00, 0x46, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC,
                    0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0xC0, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0xE0, 0x00, 0x1E, 0x9B, 0x00], [0x85, 0x00, 0x4D, 0x07, 0x00, 0x38, 0x0F, 0x00, 0x7C, 0x0F, 0x81, 0xFC, 0x0F, 0x83, 0xFC, 0x0F, 0x87, 0xF8, 0x0F, 0x8F, 0xE0, 0x0F, 0xBF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x0F, 0xFC, 0x00,
                    0x0F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xBF, 0x80, 0x0F, 0x9F, 0xE0, 0x0F, 0x8F, 0xF0, 0x0F, 0x87, 0xF8, 0x0F, 0x81, 0xFC, 0x0F, 0x80, 0xFC, 0x0F, 0x00, 0x7C, 0x00, 0x00, 0x10, 0x97, 0x00], [0x85, 0x00, 0x4A, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00,
                    0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x9A, 0x00], [0x88, 0x00, 0x4A, 0x03, 0x80, 0x1C, 0x07, 0xC0, 0x3E, 0x07, 0xE0, 0x7E, 0x07, 0xF0, 0x7E, 0x07, 0xF8, 0xFE, 0x07, 0xF9, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xDF, 0xBE, 0x07, 0xCF, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07,
                    0xC0, 0x3E, 0x03, 0x80, 0x3E, 0x00, 0x00, 0x08, 0x97, 0x00], [0x87, 0x00, 0x49, 0x38, 0x00, 0x00, 0x78, 0x0F, 0x00, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0x7C, 0x0F, 0xE0, 0x7C, 0x0F, 0xF0, 0x7C, 0x0F, 0xF0, 0x7C, 0x0F, 0xF8, 0x7C, 0x0F, 0xFC, 0x7C, 0x0F, 0x7E, 0x7C, 0x0F, 0x7E, 0x7C, 0x0F, 0x3F, 0x7C, 0x0F, 0x1F, 0xFC, 0x0F, 0x0F, 0xFC, 0x0F, 0x0F, 0xFC, 0x0F, 0x07, 0xFC, 0x0F, 0x03, 0xFC, 0x0F, 0x01, 0xFC, 0x0F, 0x00, 0xFC, 0x0F, 0x00, 0xFC, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x38, 0x0F, 0x00, 0x00, 0x06, 0x99, 0x00], [0x86, 0x00, 0x49, 0x3C, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0,
                    0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x0F, 0x81, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x9A, 0x00], [0x88, 0x00, 0x48, 0x0F, 0xFC, 0x00, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0x3F, 0xF8, 0x0F, 0x03, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00,
                    0xFC, 0x0F, 0x01, 0xF8, 0x0F, 0x07, 0xF8, 0x0F, 0x7F, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x06, 0x99, 0x00], [0x86, 0x00, 0x4F, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1E, 0x00, 0x78, 0x1E, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x06, 0xF8, 0x1F,
                    0x0F, 0xF8, 0x1F, 0x0F, 0xF8, 0x0F, 0x8F, 0xF0, 0x0F, 0xEF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x10, 0x94, 0x00], [0x88, 0x00, 0x4A, 0x0F, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0x3F, 0xF0, 0x1F, 0x07, 0xF0, 0x1F, 0x01, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x01, 0xF0, 0x1F, 0x07, 0xF0, 0x1F, 0x7F, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0x3F, 0xC0, 0x1F, 0x1F, 0xF0, 0x1F, 0x07, 0xF8,
                    0x1F, 0x03, 0xF8, 0x1E, 0x00, 0xF8, 0x0C, 0x00, 0x70, 0x97, 0x00], [0x86, 0x00, 0x49, 0x3C, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x80, 0x70, 0x0F, 0xE0, 0x00, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0xE0, 0x00, 0x7F, 0xF0, 0x00, 0x03, 0xF8, 0x0E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x9A, 0x00], [0x88, 0x00, 0x49, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F,
                    0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x98, 0x00], [0x82, 0x00, 0x4C, 0x0C, 0x00, 0x60, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E,
                    0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1F, 0x01, 0xF0, 0x1F, 0xC3, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x9B, 0x00], [0x85, 0x00, 0x43, 0x0E, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x03, 0xE3, 0xE0, 0x03, 0xE7, 0xC0, 0x03, 0xE7, 0xC0, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00,
                    0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0xA1, 0x00], [0x85, 0x00, 0x43, 0x3C, 0x00, 0xE0, 0x3C, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xE0, 0x3E, 0x01, 0xE0, 0x3E, 0x03, 0xE0, 0x1E, 0x03, 0xE0, 0x1E, 0x03, 0xE0, 0x1F, 0x03, 0xE0, 0x1F, 0x03, 0xC0, 0x1F, 0x03, 0xC0, 0x1F, 0x07, 0xC0, 0x0F, 0x7F, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xDF, 0x00, 0x07, 0xCF, 0x00, 0x07, 0x8F, 0xA1, 0x00], [0x85, 0x00, 0x4D,
                    0x1E, 0x00, 0x38, 0x1E, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x80, 0xF8, 0x1F, 0x81, 0xF8, 0x0F, 0xC3, 0xF0, 0x07, 0xE3, 0xE0, 0x03, 0xE7, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x03, 0xE7, 0xE0, 0x07, 0xE3, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0x81, 0xF8, 0x1F, 0x80, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0x78, 0x00, 0x00, 0x30, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0xF0, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x0F, 0xC3, 0xF0, 0x0F, 0xC7,
                    0xE0, 0x07, 0xE7, 0xE0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x10, 0x98, 0x00], [0x88, 0x00, 0x47, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x7E,
                    0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x9A, 0x00], [0x86, 0x00, 0x4B, 0x7E, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0,
                    0x00, 0x01, 0xE0, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x7C, 0x98, 0x00], [0x88, 0x00, 0x47, 0x0E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x78, 0x9A, 0x00], [0x86, 0x00, 0x4B,
                    0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x3E, 0x98, 0x00], [0x88, 0x00, 0x16, 0x03, 0x80, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7C,
                    0xF8, 0x00, 0x38, 0x78, 0xCB, 0x00], [0xC1, 0x00, 0x0E, 0x0F, 0xFF, 0xF0, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x9A, 0x00], [0x86, 0x00, 0x15, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1E, 0xCE, 0x00], [0x9B, 0x00, 0x34, 0x3F, 0x00, 0x00, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0x80, 0x78, 0x07, 0x80, 0x78, 0x07, 0xFF, 0xF8, 0x07, 0xFF,
                    0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x9A, 0x00], [0x85, 0x00, 0x4A, 0x07, 0x00, 0x00, 0x07, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0x81, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x83, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x9A, 0x00], [0x9B, 0x00, 0x34, 0x1F, 0x80, 0x00, 0x7F, 0xE0,
                    0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xF0, 0xFC, 0x07, 0xC0, 0x7C, 0x07, 0xC0, 0x3C, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0xC0, 0x3C, 0x07, 0xC0, 0x3C, 0x07, 0xE0, 0x7C, 0x03, 0xF9, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0xC0, 0x9A, 0x00], [0x87, 0x00, 0x48, 0x38, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x1F, 0xFC, 0x00, 0x7F, 0xFC, 0x01, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x07, 0xE0, 0x7C, 0x07, 0xC0, 0x7C, 0x07, 0xC0, 0x7C, 0x07, 0x80, 0x7C, 0x07,
                    0x80, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0xC0, 0x7C, 0x07, 0xE0, 0x7C, 0x03, 0xF0, 0x7C, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xF8, 0x9A, 0x00], [0x9B, 0x00, 0x34, 0x7F, 0xC0, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xF0, 0xFC, 0x07, 0xC0, 0x7E, 0x07, 0xC0, 0x3E, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x07, 0xC0, 0x18, 0x07, 0xE0, 0x3C, 0x07, 0xF8, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xFC, 0x00, 0xFF, 0xF8, 0x00, 0x3F, 0xE0, 0x9A, 0x00], [0x89, 0x00, 0x48, 0x01, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF8,
                    0x00, 0x1F, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x38, 0x98, 0x00], [0x99, 0x00, 0x4E, 0x18, 0x00, 0xFF, 0xBC, 0x01, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xE1, 0xFC, 0x0F, 0xC0, 0xFC, 0x0F, 0x80, 0x7C, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x0F, 0x80,
                    0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0xFC, 0x07, 0xF3, 0xFC, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xFC, 0x0F, 0x7F, 0xBC, 0x0F, 0x00, 0x3C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xE1, 0xFC, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0x7F, 0xC0, 0x82, 0x00], [0x85, 0x00, 0x4D, 0x07, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x7F, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F,
                    0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x07, 0x00, 0x78, 0x97, 0x00], [0x8F, 0x00, 0x0F, 0x0E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0E, 0x87, 0x00, 0x2A, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0C, 0x98, 0x00], [0x8F, 0x00,
                    0x0F, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x84, 0x00, 0x3F, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x00, 0xF0, 0x86, 0x00], [0x86, 0x00, 0x4B, 0x80, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00,
                    0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x78, 0x03, 0xE0, 0xF8, 0x03, 0xE1, 0xF8, 0x03, 0xE7, 0xF8, 0x03, 0xEF, 0xF0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xE7, 0xF8, 0x03, 0xE3, 0xF8, 0x03, 0xE1, 0xF8, 0x03, 0xE0, 0x78, 0x01, 0xE0, 0x30, 0x01, 0xC0, 0x98, 0x00], [0x86, 0x00, 0x48, 0x1C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00,
                    0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1C, 0x9B, 0x00], [0x9A, 0x00, 0x35, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFE, 0xF8, 0x0F, 0x3E, 0x78, 0x0F, 0x1C, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x07,
                    0x00, 0x78, 0x9A, 0x00], [0x9A, 0x00, 0x35, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x00, 0x78, 0x9A, 0x00], [0x9B, 0x00, 0x33, 0xFF, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xE3, 0xF0, 0x0F, 0x81, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x80,
                    0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x00, 0x7E, 0x9B, 0x00], [0x9A, 0x00, 0x48, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0x8F, 0xF8, 0x0F, 0x80, 0xFC, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0xFC, 0x0F, 0x81, 0xF8, 0x0F, 0x8F, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0x80, 0x0F, 0xFE, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x87, 0x00], [0x9B, 0x00,
                    0x49, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xF1, 0xF0, 0x3F, 0x81, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3F, 0x01, 0xF0, 0x1F, 0x81, 0xF0, 0x1F, 0xF1, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0xE0, 0x85, 0x00], [0x9A, 0x00, 0x33, 0x07, 0x03, 0x00, 0x07, 0xBF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xF0, 0x7C, 0x0F, 0xC0,
                    0x18, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x9C, 0x00], [0x9B, 0x00, 0x34, 0xFF, 0x00, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xC0, 0xF8, 0x1F, 0xFE, 0xF0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xF0, 0x1E, 0x0F, 0xF8, 0x1E, 0x01, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x9A, 0x00], [0x89, 0x00, 0x46, 0xF0, 0x00, 0x00, 0xF0, 0x00,
                    0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x60, 0x00, 0xF0, 0xF0, 0x00, 0xF0, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0x1F, 0x80, 0x9A, 0x00], [0x9A, 0x00, 0x35, 0x1C, 0x00, 0xE0, 0x3E, 0x01, 0xE0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01,
                    0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3F, 0x03, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x00, 0xFD, 0xE0, 0x9A, 0x00], [0x9A, 0x00, 0x31, 0x38, 0x01, 0xC0, 0x3C, 0x01, 0xE0, 0x3E, 0x03, 0xE0, 0x3E, 0x03, 0xE0, 0x3F, 0x07, 0xC0, 0x1F, 0x07, 0xC0, 0x1F, 0x8F, 0x80, 0x0F, 0x9F, 0x80, 0x0F, 0xDF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x70, 0x9E, 0x00], [0x9A, 0x00, 0x35, 0x1E, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8,
                    0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x3C, 0xF8, 0x0F, 0xBC, 0xF0, 0x0F, 0xBE, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xF7, 0xC0, 0x01, 0xE3, 0x80, 0x9A, 0x00], [0x9D, 0x00, 0x32, 0x0F, 0x00, 0x78, 0x0F, 0x80, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0xE3, 0xF8, 0x07, 0xF7, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xF7, 0xF0, 0x0F, 0xE3, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x06, 0x00, 0x30, 0x9A, 0x00], [0x9A, 0x00, 0x49,
                    0x1E, 0x00, 0xE0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1F, 0x83, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x1E, 0x7D, 0xF0, 0x1E, 0x01, 0xF0, 0x1F, 0x03, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x00, 0x7C, 0x86, 0x00], [0x9D, 0x00, 0x32, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80,
                    0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x9A, 0x00], [0xEB, 0x00], [0x86, 0x00, 0x48, 0xF8, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xEC, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE8, 0x00, 0x01, 0xFE, 0x00, 0x01,
                    0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFC, 0x9B, 0x00], [0x83, 0x00, 0x51, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x95, 0x00], [0x86,
                    0x00, 0x4B, 0x3C, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x01, 0xDF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x3C, 0x98, 0x00]]
        }, {
            _F3: "spr_font2",
            width: 24,
            height: 36,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 23,
            _U3: 35,
            _V3: 1,
            _W3: 1,
            _X3: [168, 155, 714, 649, 687, 626, 58, 363, 364, 171, 386, 80, 66, 21, 688, 495, 291, 670, 694, 678, 631, 627, 671, 625, 604, 65, 100, 236, 188, 222, 593, 689, 632, 607, 650, 594, 634, 630, 653, 679, 429, 629, 648, 645, 628, 655, 651, 633, 695, 652, 656, 692, 622, 589, 579, 646, 605, 672, 358, 606, 294, 107, 136, 85, 404, 654, 415, 621, 463, 556, 677, 642, 125, 448, 555, 169, 417, 416, 438, 647, 699, 441, 439, 573, 440, 405, 437, 399, 620, 406, 715, 385, 194, 391],
            _Y3: [[0x83, 0x00, 0x4E, 0x3E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00,
                0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0x98, 0x00], [0x82, 0x00, 0x26, 0x01, 0xE7, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0,
                0x01, 0xE7, 0xC0, 0xC1, 0x00], [0xEB, 0x00], [0x83, 0x00, 0x4F, 0x7F, 0x00, 0x03, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFE, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x97, 0x00], [0x84, 0x00, 0x4E, 0xF0, 0x1F, 0x01, 0xF8,
                0x3F, 0x83, 0xF8, 0x7F, 0x87, 0xF8, 0x7F, 0x87, 0xF8, 0x7F, 0x8F, 0xF8, 0x7F, 0x9F, 0xF8, 0x7F, 0x9F, 0xF0, 0x3F, 0xBF, 0xE0, 0x3F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xEF, 0xFC, 0x7F, 0xC7, 0xFC, 0x7F, 0xCF, 0xFC, 0x7F, 0x8F, 0xFC, 0x7F, 0x0F, 0xFC, 0x7E, 0x0F, 0xFC, 0x3C, 0x07, 0xF8, 0x97, 0x00], [0x85, 0x00, 0x4D, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF,
                0xC0, 0x3F, 0x9F, 0xC0, 0x3F, 0xBF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFD, 0xF8, 0x07, 0xF8, 0xF0, 0x97, 0x00], [0x83, 0x00, 0x24, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E,
                0xC2, 0x00], [0x86, 0x00, 0x4C, 0x03, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xE0, 0x97, 0x00], [0x86, 0x00, 0x4B, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0xFF,
                0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x78, 0x98, 0x00], [0x82, 0x00, 0x26, 0x01, 0xF3, 0xE0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x03, 0xFF,
                0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xF3, 0xE0, 0xC1, 0x00], [0x9B, 0x00, 0x33, 0x1F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0xC0, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x9B, 0x00], [0xBC, 0x00, 0x21, 0x3C, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F,
                0x80, 0x00, 0x1F, 0x8C, 0x00], [0xAC, 0x00, 0x11, 0x01, 0xFF, 0xF0, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x01, 0xFF, 0xF0, 0xAC, 0x00], [0xBF, 0x00, 0x12, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0x98, 0x00], [0x84, 0x00, 0x4C, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x01,
                0xFF, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x99, 0x00], [0x86, 0x00, 0x4B, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xF7, 0xF0, 0x0F, 0xE7, 0xF0, 0x0F, 0xE7, 0xF8, 0x0F, 0xE3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xE3, 0xF8, 0x0F, 0xE7, 0xF8, 0x0F, 0xE7, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0,
                0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x98, 0x00], [0x86, 0x00, 0x4E, 0xFC, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x95, 0x00],
                [0x85, 0x00, 0x4D, 0x07, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xC7, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0x03, 0xF8, 0x1E, 0x07, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x97, 0x00], [0x83, 0x00, 0x51, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC,
                    0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x87, 0xFE, 0x0F, 0x1F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x1F, 0x1F, 0xFC, 0x3F, 0x87, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xE3, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0x7E, 0x95, 0x00], [0x83, 0x00, 0x51, 0x1F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x0F,
                    0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x7F, 0xFF, 0xF0, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x95, 0x00], [0x85, 0x00, 0x4D, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x1F,
                    0xFF, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x1E, 0x01, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0xEF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x97, 0x00], [0x86, 0x00, 0x4C, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xF3, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0x80, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F,
                    0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00,
                    0x0F, 0x80, 0x98, 0x00], [0x85, 0x00, 0x4D, 0x03, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F,
                    0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xF8, 0x00, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0x00, 0x03, 0xFC, 0x98, 0x00], [0xA7, 0x00, 0x12, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x84, 0x00, 0x12, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00,
                    0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x98, 0x00], [0xA7, 0x00, 0x12, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x84, 0x00, 0x18, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x92, 0x00], [0x9A, 0x00, 0x34, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0xC0,
                    0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x03, 0xF0, 0x9B, 0x00], [0x9D, 0x00, 0x20, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0xAC, 0x00], [0x9B, 0x00, 0x36, 0x3F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFF,
                    0x00, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x98, 0x00], [0x83, 0x00, 0x36, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xC3, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0x87, 0xF8, 0x0F, 0x0F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x3E, 0x84, 0x00, 0x12, 0x3C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E,
                    0x00, 0x00, 0x3C, 0x98, 0x00], [0x83, 0x00, 0x4F, 0x7E, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xC0, 0x97, 0x00], [0x86, 0x00, 0x4C, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F,
                    0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x0F, 0xF3, 0xFC, 0x0F, 0xE3, 0xFC, 0x0F, 0xE1, 0xFC, 0x1F, 0xE1, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0x80, 0xFE, 0x0F, 0x00, 0x7C, 0x97, 0x00], [0x85, 0x00, 0x4D, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xC3, 0xFC, 0x1F, 0x81, 0xFC, 0x1F,
                    0xC3, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xC3, 0xFC, 0x1F, 0x81, 0xFC, 0x1F, 0xC3, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x97, 0x00], [0x83, 0x00, 0x4F, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xF3, 0xFC, 0x1F, 0xE1, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0x78, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F,
                    0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0xF8, 0x3F, 0xC1, 0xFC, 0x3F, 0xC1, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0xFF, 0x80, 0x97, 0x00], [0x82, 0x00, 0x4F, 0x07, 0xC0, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xC7, 0xFC, 0x0F, 0xC3, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC0, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC1, 0xFC, 0x0F, 0xC3, 0xFC,
                    0x0F, 0xC7, 0xFC, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x98, 0x00], [0x85, 0x00, 0x4D, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC,
                    0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0x80, 0x98, 0x00], [0x83, 0x00, 0x4F, 0x3F, 0x00, 0x01, 0xFF, 0xE0, 0x07, 0xFF,
                    0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0x80, 0x78, 0x1F, 0xBF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xBF, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xE3, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0xFF, 0xC0, 0x97, 0x00], [0x82, 0x00, 0x53, 0x1F, 0x00, 0xF8, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F,
                    0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x1F, 0x01, 0xFC, 0x00, 0x00, 0xF8, 0x94, 0x00], [0x85, 0x00, 0x4D, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00,
                    0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x07, 0x80,
                    0xFE, 0x0F, 0xC0, 0xFE, 0x0F, 0xE1, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x01, 0xFF, 0xF0, 0x00, 0x3F, 0x98, 0x00], [0x82, 0x00, 0x50, 0x0F, 0x00, 0x7C, 0x1F, 0x80, 0xFE, 0x1F, 0xC3, 0xFE, 0x1F, 0xC7, 0xFE, 0x1F, 0xCF, 0xFE, 0x1F, 0xDF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x1F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xDF,
                    0xFE, 0x1F, 0xCF, 0xFE, 0x1F, 0xC3, 0xFE, 0x1F, 0xC1, 0xFE, 0x0F, 0x80, 0xFC, 0x97, 0x00], [0x82, 0x00, 0x50, 0x0F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x97,
                    0x00], [0x85, 0x00, 0x4D, 0x07, 0xC0, 0x3E, 0x0F, 0xE0, 0x7F, 0x0F, 0xF0, 0xFF, 0x0F, 0xF8, 0xFF, 0x0F, 0xFD, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x0F, 0xE0, 0x7F, 0x07, 0xC0, 0x3E, 0x97, 0x00], [0x84, 0x00, 0x4C, 0x78, 0x00, 0x00, 0xFC, 0x0F, 0x80, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE,
                    0x1F, 0xE0, 0xFE, 0x1F, 0xF0, 0xFE, 0x1F, 0xF8, 0xFE, 0x1F, 0xF8, 0xFE, 0x1F, 0xFC, 0xFE, 0x1F, 0xFE, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xBF, 0xFE, 0x1F, 0x9F, 0xFE, 0x1F, 0x9F, 0xFE, 0x1F, 0x8F, 0xFE, 0x1F, 0x87, 0xFE, 0x1F, 0x83, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0x78, 0x0F, 0x99, 0x00], [0x83, 0x00, 0x4F, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xE7, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81,
                    0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x01, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xE7, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x97, 0x00], [0x85, 0x00, 0x4B, 0x0F, 0xFE, 0x00, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0x87, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x81, 0xFE, 0x1F, 0x83, 0xFE, 0x1F, 0x8F, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F,
                    0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x1F, 0xFC, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x99, 0x00], [0x83, 0x00, 0x52, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0x9F, 0xFC, 0x3F, 0xDF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8,
                    0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0xFC, 0x94, 0x00], [0x85, 0x00, 0x50, 0x1F, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0x80, 0x3F, 0xFF, 0xC0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xBF, 0xFC, 0x3F, 0x8F, 0xFC, 0x3F, 0x87, 0xFC, 0x1F, 0x01,
                    0xFC, 0x00, 0x00, 0xF8, 0x94, 0x00], [0x83, 0x00, 0x4F, 0x7E, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xF0, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x3F, 0x87, 0xFC, 0x3F, 0x83, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x3F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFE,
                    0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x98, 0x00], [0x82, 0x00, 0x50, 0x1E, 0x00, 0xF0, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8,
                    0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x01, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0xE7, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x97, 0x00], [0x82, 0x00, 0x46, 0x1F, 0x00, 0xF8, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC3, 0xFC, 0x1F, 0xC3, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xE7, 0xF8, 0x0F, 0xF7, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF,
                    0xE0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0xA1, 0x00], [0x82, 0x00, 0x49, 0x3C, 0x01, 0xE0, 0x7E, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x87, 0xF0, 0x3F, 0x8F, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x0F, 0xFF,
                    0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x07, 0xCF, 0x9E, 0x00], [0x82, 0x00, 0x50, 0x1E, 0x00, 0x78, 0x3F, 0x00, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xF7, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xF7, 0xFC, 0x3F, 0xE7, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0x81, 0xFC, 0x1F, 0x00, 0xF8, 0x97, 0x00],
                [0x85, 0x00, 0x4C, 0x1F, 0x00, 0xF0, 0x3F, 0x81, 0xF8, 0x3F, 0xC3, 0xF8, 0x3F, 0xE7, 0xF8, 0x3F, 0xEF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x98, 0x00], [0x85, 0x00, 0x4D, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC,
                    0x1F, 0xFF, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x97, 0x00], [0x83, 0x00, 0x51, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00,
                    0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x00, 0xFE, 0x95, 0x00], [0x85, 0x00, 0x4D, 0x0F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0xC0,
                    0x00, 0x7F, 0xC0, 0x00, 0x3F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xF8, 0x97, 0x00], [0x83, 0x00, 0x51, 0xFF, 0x00, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80,
                    0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x95, 0x00], [0x85, 0x00, 0x1C, 0x07, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x3C, 0xF8, 0xC8, 0x00], [0xBE, 0x00, 0x14, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xFC, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x7F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFC, 0x97, 0x00], [0x82, 0x00, 0x1C, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF,
                    0x00, 0x03, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0xCB, 0x00], [0x98, 0x00, 0x3A, 0x7F, 0x80, 0x01, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x97, 0x00], [0x82, 0x00, 0x50, 0x07, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F,
                    0xC0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xC1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC3, 0xFE, 0x1F, 0xE7, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x97, 0x00], [0x98, 0x00, 0x3A, 0x3F, 0xC0, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xF9, 0xFE, 0x0F, 0xF0, 0xFE, 0x0F, 0xE0, 0x7C, 0x0F,
                    0xE0, 0x3C, 0x0F, 0xE0, 0x7E, 0x0F, 0xF0, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xE0, 0x97, 0x00], [0x84, 0x00, 0x4E, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0xFF, 0xFE, 0x03, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xF1, 0xFE, 0x0F, 0xE0, 0xFE, 0x0F, 0xE0, 0xFE, 0x0F, 0xC0, 0xFE, 0x0F, 0xE0, 0xFE, 0x0F, 0xF0, 0xFE, 0x0F, 0xF9, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF,
                    0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFE, 0x01, 0xFF, 0xFE, 0x00, 0x7F, 0xFC, 0x97, 0x00], [0x98, 0x00, 0x3A, 0xFF, 0xE0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFF, 0x0F, 0xF9, 0xFF, 0x1F, 0xFF, 0xFF, 0x1F, 0xFF, 0xFF, 0x1F, 0xFF, 0xFF, 0x1F, 0xFF, 0xFF, 0x1F, 0xFF, 0xFF, 0x1F, 0xFF, 0xFE, 0x0F, 0xFD, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x03, 0xFF, 0xFE, 0x01, 0xFF, 0xFC, 0x00, 0x7F, 0xF0, 0x97, 0x00], [0x86, 0x00, 0x4E, 0x03, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x7F, 0xF8, 0x00,
                    0x7F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFE, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x78, 0x95, 0x00], [0x97, 0x00, 0x52, 0x01, 0xFF, 0xFC, 0x03, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xF3, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0x80, 0x7E, 0x1F, 0xC0, 0xFE, 0x1F,
                    0xC0, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xE1, 0xFE, 0x1F, 0xF3, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0x00, 0xE0], [0x82, 0x00, 0x53, 0x0F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F,
                    0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x0F, 0x00, 0x78, 0x94, 0x00], [0x8C, 0x00, 0x45, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00,
                    0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1E, 0x98, 0x00], [0x8C, 0x00, 0x5A, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0xC0, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x07, 0xFF,
                    0x80, 0x07, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x01, 0xF8, 0x83, 0x00], [0x85, 0x00, 0x4F, 0x03, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0xF8, 0x07, 0xF1, 0xFC, 0x07, 0xF3, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xF7, 0xFC, 0x07, 0xF3, 0xFC, 0x07, 0xF0, 0xF8, 0x03, 0xF0, 0x00, 0x01, 0xE0, 0x95, 0x00], [0x83, 0x00, 0x4E, 0x3E,
                    0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3E, 0x98, 0x00], [0x97, 0x00, 0x3B, 0x0F, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF,
                    0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xBE, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x1F, 0x80, 0xFC, 0x0F, 0x00, 0x78, 0x97, 0x00], [0x97, 0x00, 0x3B, 0x0F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xE1, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x1F,
                    0xC0, 0xFC, 0x1F, 0xC0, 0xFC, 0x0F, 0x80, 0x78, 0x97, 0x00], [0x97, 0x00, 0x3A, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xF7, 0xFC, 0x3F, 0xC3, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x81, 0xFC, 0x3F, 0xC1, 0xFC, 0x3F, 0xE3, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x98, 0x00], [0x97, 0x00, 0x4F, 0x0F, 0xFF, 0x80, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xC1,
                    0xFE, 0x1F, 0xC0, 0xFE, 0x1F, 0xC1, 0xFE, 0x1F, 0xC3, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0x80, 0x83, 0x00], [0x97, 0x00, 0x50, 0x01, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF8, 0x7F, 0xC3, 0xF8, 0x7F, 0x83, 0xF8, 0x7F, 0x83, 0xF8, 0x7F, 0xC3, 0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF,
                    0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF0, 0x82, 0x00], [0x97, 0x00, 0x3A, 0x07, 0x80, 0x00, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xFF, 0xFE, 0x1F, 0xF8, 0xFC, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x1F,
                    0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0x80, 0x98, 0x00], [0x97, 0x00, 0x3B, 0x01, 0xFF, 0x80, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0x9F, 0xFC, 0x3F, 0xC7, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x97, 0x00], [0x86, 0x00, 0x4C, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xFC, 0x00, 0x0F, 0xFE, 0x00,
                    0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0xF0, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x01, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0xC0, 0x97, 0x00], [0x97, 0x00, 0x3B, 0x3E, 0x01, 0xE0, 0x7F, 0x03, 0xF0, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x03, 0xF8, 0x7F, 0x87, 0xF8, 0x7F, 0xFF,
                    0xF8, 0x7F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x01, 0xFF, 0xF0, 0x97, 0x00], [0x97, 0x00, 0x37, 0x3C, 0x01, 0xE0, 0x7E, 0x03, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0x8F, 0xF0, 0x7F, 0xDF, 0xE0, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xF8, 0x9B, 0x00], [0x97, 0x00, 0x3B, 0x1F, 0x00, 0x78, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x80, 0xFC, 0x3F, 0x81, 0xFC,
                    0x3F, 0x81, 0xFC, 0x3F, 0x81, 0xFC, 0x1F, 0xBD, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xF7, 0xC0, 0x97, 0x00], [0x9A, 0x00, 0x35, 0x0F, 0x80, 0xF8, 0x1F, 0xC1, 0xFC, 0x1F, 0xE3, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xF7, 0xFC, 0x1F, 0xE3,
                    0xFC, 0x0F, 0xC1, 0xF8, 0x9A, 0x00], [0x97, 0x00, 0x4F, 0x1E, 0x01, 0xF0, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x03, 0xF8, 0x3F, 0x83, 0xF8, 0x3F, 0xC7, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x00, 0xFE, 0x83, 0x00], [0x9A, 0x00, 0x38, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8,
                    0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x97, 0x00], [0xEB, 0x00], [0x82, 0x00, 0x4F, 0x01, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00,
                    0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x01, 0xFE, 0x98, 0x00], [0x58, 0x00, 0x7C, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE,
                    0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7C, 0x92, 0x00], [0x83, 0x00, 0x51, 0x7E, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0x80,
                    0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x00, 0x7E, 0x95, 0x00]]
        }, {
            _F3: "spr_font2b",
            width: 24,
            height: 36,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 22,
            _U3: 34,
            _V3: 1,
            _W3: 1,
            _X3: [106, 102, 713, 518, 601, 489, 33, 247, 256, 119, 322, 41, 34, 8, 602, 414, 234, 552, 603, 567, 554, 485, 578, 487, 454, 35, 78, 180, 134, 202, 436, 577, 512, 455, 511, 461, 488, 486, 514, 569, 362, 551, 571, 519, 516, 570, 510, 513, 619, 520, 515, 613, 494, 458, 459, 568, 572, 553, 235, 484, 184, 79, 84, 44, 354, 509, 356, 469, 398, 435, 592, 493, 73, 401, 428,
                104, 355, 353, 382, 517, 614, 384, 381, 426, 383, 323, 380, 321, 470, 320, 712, 257, 116, 273],
            _Y3: [[0x83, 0x00, 0x4B, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x9B, 0x00], [0x85, 0x00,
                0x20, 0x01, 0xE3, 0x80, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE7, 0xC0, 0x01, 0xE3, 0xC0, 0xC4, 0x00], [0xEB, 0x00], [0x86, 0x00, 0x49, 0x3E, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xBD, 0xF8, 0x1F, 0x3C, 0xF8, 0x1F, 0x3C, 0x78, 0x1F, 0x3C, 0x78, 0x1F, 0xBC, 0x38, 0x0F, 0xFC, 0x00, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0xF8, 0x1E, 0x3C, 0xF8, 0x1E, 0x3C, 0x78, 0x1F, 0x3C, 0x78, 0x1F, 0x3C, 0xF8,
                0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x9A, 0x00], [0x85, 0x00, 0x4D, 0x06, 0x00, 0x70, 0x0F, 0x00, 0xF0, 0x1F, 0x01, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x03, 0xF0, 0x3F, 0x07, 0xE0, 0x3F, 0x0F, 0xC0, 0x0F, 0x0F, 0x80, 0x0F, 0x1F, 0x80, 0x0F, 0x3F, 0x00, 0x06, 0x3E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF3, 0xE0, 0x07, 0xE7, 0xF0, 0x07, 0xE7, 0xF8, 0x0F, 0xC7, 0xF8, 0x1F, 0x87, 0xF8, 0x1F, 0x81, 0xF0, 0x3F, 0x03, 0xF8, 0x3E, 0x07, 0xF8, 0x3C, 0x07, 0xF8, 0x3C, 0x07, 0xF8, 0x00, 0x00, 0x30, 0x97, 0x00],
                [0x88, 0x00, 0x47, 0x03, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0x9F, 0x80, 0x1E, 0x0F, 0x80, 0x1E, 0x07, 0x80, 0x1E, 0x0F, 0x80, 0x1F, 0x0F, 0x80, 0x1F, 0xBF, 0x80, 0x1F, 0xFF, 0x20, 0x0F, 0xFE, 0x78, 0x0F, 0xFE, 0xF8, 0x1F, 0xFD, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0x7F, 0xE0, 0x1E, 0x3F, 0xE0, 0x1E, 0x1F, 0xC0, 0x1F, 0x1F, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFD, 0xF8, 0x07, 0xF8, 0xF8, 0x03, 0xF0, 0x70, 0x9A, 0x00], [0x83, 0x00, 0x24, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00,
                    0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0C, 0xC2, 0x00], [0x89, 0x00, 0x46, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xE0, 0x9A, 0x00], [0x86, 0x00, 0x48, 0x30, 0x00,
                    0x00, 0x7C, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x70, 0x9B, 0x00], [0x85, 0x00, 0x20, 0x01, 0xE1, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xE0,
                    0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xE1, 0xE0, 0xC4, 0x00], [0x9B, 0x00, 0x30, 0x04, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x9E, 0x00], [0xBF, 0x00, 0x1B, 0x38, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0E, 0x8F, 0x00], [0xAF,
                    0x00, 0x0B, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0xAF, 0x00], [0xC2, 0x00, 0x0C, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x9B, 0x00], [0x87, 0x00, 0x49, 0x38, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x80,
                    0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x04, 0x99, 0x00], [0x86, 0x00, 0x48, 0x18, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x03, 0xE7, 0xC0, 0x03, 0xE3, 0xE0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x07, 0xC1, 0xE0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0xC1, 0xE0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x03, 0xE7, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x9B, 0x00], [0x86, 0x00, 0x4B, 0x18, 0x00, 0x00, 0x7C, 0x00, 0x00,
                    0xFC, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x98, 0x00], [0x88, 0x00, 0x47, 0x03, 0xFF, 0x80, 0x0F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0x83, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x00,
                    0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x9A, 0x00], [0x86, 0x00, 0x4B, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0E, 0x00, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x03, 0xF8, 0x0E,
                    0x00, 0xF8, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0x80, 0x00, 0x3C, 0x98, 0x00], [0x86, 0x00, 0x4B, 0x0E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xDF, 0x00, 0x1F, 0x9F, 0x00, 0x3F, 0xFF, 0xE0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x3F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F,
                    0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0x98, 0x00], [0x88, 0x00, 0x46, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x1C, 0x00, 0xF8, 0x1F, 0x01, 0xF8, 0x1F, 0xC7, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x9B, 0x00], [0x89, 0x00, 0x46, 0x7F, 0x80, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x07, 0xFF,
                    0xF8, 0x0F, 0xF3, 0xF8, 0x0F, 0xC0, 0xF0, 0x0F, 0x80, 0x00, 0x0F, 0x1C, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xE1, 0xF8, 0x0F, 0x80, 0xFC, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0xF8, 0x0F, 0xF3, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xC0, 0x00, 0x7F, 0x80, 0x9A, 0x00], [0x88, 0x00, 0x48, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00,
                    0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x02, 0x99, 0x00], [0x88, 0x00, 0x46, 0x01, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xC3, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x1F, 0xEF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xC3, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x81,
                    0xF8, 0x1F, 0xEF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x9B, 0x00], [0x89, 0x00, 0x45, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xE3, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x80, 0xF8, 0x0F, 0xC1, 0xF8, 0x07, 0xE3, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x01, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x7F, 0xC0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x03, 0xFE, 0x00, 0x03, 0xF8, 0x9B, 0x00], [0xAA, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x3C, 0x00,
                    0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x87, 0x00, 0x0F, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x9B, 0x00], [0xA7, 0x00, 0x0F, 0x10, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x87, 0x00, 0x15, 0x10, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x95, 0x00], [0x9B, 0x00, 0x33, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F,
                    0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0x80, 0x9B, 0x00], [0xA0, 0x00, 0x1A, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0xAF, 0x00], [0x9B, 0x00, 0x33, 0x06, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x01,
                    0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x07, 0x9B, 0x00], [0x86, 0x00, 0x30, 0x7E, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x3C, 0x8A, 0x00, 0x0C, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x9B, 0x00], [0x86, 0x00, 0x49, 0x3C, 0x00, 0x00, 0xFF, 0x80, 0x01,
                    0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x0F, 0xC3, 0xF0, 0x0F, 0xBD, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xE3, 0xF8, 0x1F, 0xE7, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFE, 0x38, 0x0F, 0xE0, 0x7C, 0x07, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0x80, 0x9A, 0x00], [0x86, 0x00, 0x49, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0x7F, 0x80, 0x00,
                    0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x00, 0xFF, 0xC0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x01, 0xFF, 0xE0, 0x03, 0xE1, 0xF0, 0x03, 0xE1, 0xF0, 0x03, 0xC1, 0xF0, 0x07, 0xC0, 0xF8, 0x07, 0xC0, 0xF8, 0x07, 0x80, 0xF8, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x00, 0x7C, 0x07, 0x00, 0x38, 0x9A, 0x00], [0x88, 0x00, 0x47, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8,
                    0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x9A, 0x00], [0x86, 0x00, 0x48, 0x3E, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xE1, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x00, 0x78, 0x1F, 0x00, 0x38, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x78, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0xC1, 0xF8, 0x07, 0xF7, 0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0xFF, 0xC0,
                    0x00, 0x7F, 0x9B, 0x00], [0x85, 0x00, 0x4B, 0x03, 0x80, 0x00, 0x07, 0xFE, 0x00, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0x8F, 0xF0, 0x07, 0x83, 0xF0, 0x07, 0x81, 0xF0, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0x78, 0x07, 0x80, 0x78, 0x07, 0x80, 0x78, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x80, 0xF8, 0x07, 0x81, 0xF0, 0x07, 0x83, 0xF0, 0x07, 0x8F, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x07, 0xFE, 0x00, 0x03, 0x99, 0x00], [0x88, 0x00, 0x47, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8,
                    0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x9A, 0x00], [0x88, 0x00, 0x45, 0x07, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFF,
                    0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x9C, 0x00], [0x86, 0x00, 0x49, 0x1E, 0x00, 0x00, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x3F, 0xFC, 0x0F, 0x3F, 0xFC, 0x0F, 0x3F, 0xFC, 0x0F, 0x3F, 0xFC, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0xF8, 0x0F, 0xC0, 0xF8, 0x07,
                    0xF3, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xC0, 0x00, 0x7F, 0x80, 0x9A, 0x00], [0x85, 0x00, 0x4D, 0x0E, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x06, 0x00, 0x70, 0x97, 0x00], [0x88,
                    0x00, 0x47, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x9A, 0x00], [0x88, 0x00, 0x46, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C,
                    0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0xC0, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0xFF, 0xE0, 0x00, 0x1E, 0x9B, 0x00], [0x85, 0x00, 0x4D, 0x07, 0x00, 0x38, 0x0F, 0x00, 0x7C, 0x0F, 0x81, 0xFC, 0x0F, 0x83, 0xFC, 0x0F, 0x87, 0xF8, 0x0F, 0x8F, 0xE0, 0x0F, 0xBF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF0, 0x00,
                    0x0F, 0xFC, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xBF, 0x80, 0x0F, 0x9F, 0xE0, 0x0F, 0x8F, 0xF0, 0x0F, 0x87, 0xF8, 0x0F, 0x81, 0xFC, 0x0F, 0x80, 0xFC, 0x0F, 0x00, 0x7C, 0x00, 0x00, 0x10, 0x97, 0x00], [0x85, 0x00, 0x4A, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xFF,
                    0xF0, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x9A, 0x00], [0x88, 0x00, 0x4A, 0x03, 0x80, 0x1C, 0x07, 0xC0, 0x3E, 0x07, 0xE0, 0x7E, 0x07, 0xF0, 0x7E, 0x07, 0xF8, 0xFE, 0x07, 0xF9, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xFF, 0xFE, 0x07, 0xDF, 0xBE, 0x07, 0xCF, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x07, 0xC0, 0x3E, 0x03, 0x80, 0x3E, 0x00, 0x00, 0x08, 0x97, 0x00], [0x87, 0x00, 0x49, 0x38, 0x00,
                    0x00, 0x78, 0x0F, 0x00, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0x7C, 0x0F, 0xE0, 0x7C, 0x0F, 0xF0, 0x7C, 0x0F, 0xF0, 0x7C, 0x0F, 0xF8, 0x7C, 0x0F, 0xFC, 0x7C, 0x0F, 0x7E, 0x7C, 0x0F, 0x7E, 0x7C, 0x0F, 0x3F, 0x7C, 0x0F, 0x1F, 0xFC, 0x0F, 0x0F, 0xFC, 0x0F, 0x0F, 0xFC, 0x0F, 0x07, 0xFC, 0x0F, 0x03, 0xFC, 0x0F, 0x01, 0xFC, 0x0F, 0x00, 0xFC, 0x0F, 0x00, 0xFC, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x38, 0x0F, 0x00, 0x00, 0x06, 0x99, 0x00], [0x86, 0x00, 0x49, 0x3C, 0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x1F, 0x00, 0xF8,
                    0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x0F, 0x81, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x9A, 0x00], [0x88, 0x00, 0x48, 0x0F, 0xFC, 0x00, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0x3F, 0xF8, 0x0F, 0x03, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0x7C, 0x0F, 0x00, 0xFC, 0x0F, 0x01, 0xF8, 0x0F, 0x07, 0xF8, 0x0F, 0x7F, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF,
                    0xC0, 0x0F, 0xFF, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x06, 0x99, 0x00], [0x86, 0x00, 0x4F, 0x7F, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1E, 0x00, 0x78, 0x1E, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x06, 0xF8, 0x1F, 0x0F, 0xF8, 0x1F, 0x0F, 0xF8, 0x0F, 0x8F, 0xF0, 0x0F, 0xEF, 0xF0, 0x07, 0xFF, 0xF0, 0x07,
                    0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x10, 0x94, 0x00], [0x88, 0x00, 0x4A, 0x0F, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0xC0, 0x1F, 0xFF, 0xE0, 0x1F, 0x3F, 0xF0, 0x1F, 0x07, 0xF0, 0x1F, 0x01, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x01, 0xF0, 0x1F, 0x07, 0xF0, 0x1F, 0x7F, 0xE0, 0x1F, 0xFF, 0xE0, 0x1F, 0xFF, 0x80, 0x1F, 0xFF, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x80, 0x1F, 0x3F, 0xC0, 0x1F, 0x1F, 0xF0, 0x1F, 0x07, 0xF8, 0x1F, 0x03, 0xF8, 0x1E, 0x00, 0xF8, 0x0C, 0x00, 0x70, 0x97, 0x00], [0x86, 0x00, 0x49, 0x3C,
                    0x00, 0x01, 0xFF, 0x80, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x80, 0x70, 0x0F, 0xE0, 0x00, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0xE0, 0x00, 0x7F, 0xF0, 0x00, 0x03, 0xF8, 0x0E, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x0F, 0xC3, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x9A, 0x00], [0x88, 0x00, 0x49, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00,
                    0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x98, 0x00], [0x82, 0x00, 0x4C, 0x0C, 0x00, 0x60, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E,
                    0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1E, 0x00, 0xF0, 0x1F, 0x01, 0xF0, 0x1F, 0xC3, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x9B, 0x00], [0x85, 0x00, 0x43, 0x0E, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0xF8, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x0F, 0x81, 0xF0, 0x07, 0xC3, 0xE0, 0x07, 0xC3, 0xE0, 0x03, 0xE3, 0xE0, 0x03, 0xE7, 0xC0, 0x03, 0xE7, 0xC0, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00,
                    0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0xA1, 0x00], [0x85, 0x00, 0x43, 0x3C, 0x00, 0xE0, 0x3C, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xE0, 0x3E, 0x01, 0xE0, 0x3E, 0x03, 0xE0, 0x1E, 0x03, 0xE0, 0x1E, 0x03, 0xE0, 0x1F, 0x03, 0xE0, 0x1F, 0x03, 0xC0, 0x1F, 0x03, 0xC0, 0x1F, 0x07, 0xC0, 0x0F, 0x7F, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x0F, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x07, 0xDF, 0x00, 0x07, 0xCF, 0x00, 0x07, 0x8F, 0xA1, 0x00], [0x85, 0x00, 0x4D, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x80, 0xF8, 0x1F, 0x81, 0xF8,
                    0x0F, 0xC3, 0xF0, 0x07, 0xE3, 0xE0, 0x03, 0xE7, 0xE0, 0x03, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x00, 0xFF, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x03, 0xE7, 0xE0, 0x07, 0xE3, 0xF0, 0x0F, 0xC3, 0xF0, 0x0F, 0x81, 0xF8, 0x1F, 0x80, 0xF8, 0x1F, 0x00, 0xF8, 0x1E, 0x00, 0x78, 0x00, 0x00, 0x30, 0x97, 0x00], [0x85, 0x00, 0x4C, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0xF0, 0x1F, 0x00, 0xF8, 0x1F, 0x81, 0xF8, 0x0F, 0xC3, 0xF0, 0x0F, 0xC7, 0xE0, 0x07, 0xE7, 0xE0, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0x80, 0x01, 0xFF, 0x00, 0x00, 0xFF,
                    0x00, 0x00, 0x7E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x10, 0x98, 0x00], [0x88, 0x00, 0x47, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03, 0xF0,
                    0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xF8, 0x9A, 0x00], [0x86, 0x00, 0x4B, 0x7E, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF,
                    0x00, 0x00, 0x7C, 0x98, 0x00], [0x88, 0x00, 0x47, 0x0E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x78, 0x9A, 0x00], [0x86, 0x00, 0x4B, 0x7E, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x7F, 0x00, 0x00,
                    0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x3E, 0x98, 0x00], [0x88, 0x00, 0x16, 0x03, 0x80, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xF8, 0x00, 0x7C, 0xF8, 0x00, 0x38, 0x78, 0xCB, 0x00], [0xC1, 0x00, 0x0E, 0x0F, 0xFF, 0xF0, 0x3F, 0xFF, 0xFC,
                    0x3F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF8, 0x9A, 0x00], [0x86, 0x00, 0x15, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1E, 0xCE, 0x00], [0x9B, 0x00, 0x34, 0x3F, 0x00, 0x00, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0x80, 0x78, 0x07, 0x80, 0x78, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x9A, 0x00], [0x85, 0x00, 0x4A,
                    0x07, 0x00, 0x00, 0x07, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0x81, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0xF8, 0x0F, 0x80, 0xF8, 0x0F, 0x83, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x9A, 0x00], [0x9B, 0x00, 0x34, 0x1F, 0x80, 0x00, 0x7F, 0xE0, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xF0, 0xFC, 0x07, 0xC0, 0x7C,
                    0x07, 0xC0, 0x38, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0xC0, 0x38, 0x07, 0xC0, 0x3C, 0x07, 0xE0, 0x7C, 0x03, 0xF9, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x00, 0xFF, 0xF0, 0x00, 0x3F, 0xC0, 0x9A, 0x00], [0x87, 0x00, 0x48, 0x38, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x1F, 0xFC, 0x00, 0x7F, 0xFC, 0x01, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x07, 0xE0, 0x7C, 0x07, 0xC0, 0x7C, 0x07, 0xC0, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0x80, 0x7C, 0x07, 0xC0, 0x7C, 0x07, 0xE0, 0x7C, 0x03, 0xF0, 0x7C, 0x03,
                    0xFF, 0xFC, 0x01, 0xFF, 0xFC, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xF8, 0x9A, 0x00], [0x9B, 0x00, 0x34, 0x7F, 0xC0, 0x00, 0xFF, 0xF0, 0x01, 0xFF, 0xF8, 0x03, 0xFF, 0xFC, 0x07, 0xF0, 0xFC, 0x07, 0xC0, 0x7E, 0x07, 0xC0, 0x3E, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFE, 0x0F, 0xFF, 0xFC, 0x07, 0xC0, 0x18, 0x07, 0xE0, 0x3C, 0x07, 0xF8, 0xFC, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xFC, 0x00, 0xFF, 0xF8, 0x00, 0x3F, 0xE0, 0x9A, 0x00], [0x89, 0x00, 0x48, 0x01, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7C, 0x00,
                    0x00, 0x7C, 0x00, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x07, 0xFF, 0xC0, 0x03, 0xFF, 0xC0, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x38, 0x98, 0x00], [0x99, 0x00, 0x4E, 0x18, 0x00, 0xFF, 0xBC, 0x01, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xE1, 0xFC, 0x0F, 0xC0, 0xFC, 0x0F, 0x80, 0x7C, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xC0, 0xFC, 0x07, 0xF3, 0xFC, 0x07, 0xFF, 0xFC, 0x03, 0xFF,
                    0xFC, 0x01, 0xFF, 0xFC, 0x0F, 0x7F, 0xBC, 0x0F, 0x00, 0x3C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0xE1, 0xFC, 0x07, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0x7F, 0xC0, 0x82, 0x00], [0x85, 0x00, 0x4D, 0x07, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x7F, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F,
                    0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x07, 0x00, 0x78, 0x97, 0x00], [0x8F, 0x00, 0x0F, 0x0E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0E, 0x87, 0x00, 0x2A, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0C, 0x98, 0x00], [0x8F, 0x00, 0x0F, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80,
                    0x00, 0x07, 0x84, 0x00, 0x3F, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x00, 0xF0, 0x86, 0x00], [0x86, 0x00, 0x4B, 0x80, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x78, 0x03, 0xE0, 0xF8,
                    0x03, 0xE1, 0xF8, 0x03, 0xE7, 0xF8, 0x03, 0xEF, 0xF0, 0x03, 0xFF, 0xE0, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFF, 0x80, 0x03, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x03, 0xE7, 0xF8, 0x03, 0xE3, 0xF8, 0x03, 0xE1, 0xF8, 0x03, 0xE0, 0x78, 0x01, 0xE0, 0x30, 0x01, 0xC0, 0x98, 0x00], [0x86, 0x00, 0x48, 0x1C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00,
                    0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1C, 0x9B, 0x00], [0x9A, 0x00, 0x35, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x0F, 0xFE, 0xF8, 0x0F, 0x3E, 0x78, 0x0F, 0x1C, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x0F, 0x00, 0x78, 0x07, 0x00, 0x78, 0x9A, 0x00], [0x9A, 0x00, 0x35, 0x07, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xFF,
                    0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xC0, 0xF8, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x80, 0x78, 0x0F, 0x00, 0x78, 0x9A, 0x00], [0x9B, 0x00, 0x33, 0xFF, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x0F, 0xE3, 0xF0, 0x0F, 0x81, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x1F, 0x80, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF,
                    0x80, 0x00, 0x7E, 0x9B, 0x00], [0x9A, 0x00, 0x48, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0x8F, 0xF8, 0x0F, 0x80, 0xFC, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0x7C, 0x0F, 0x80, 0xFC, 0x0F, 0x81, 0xF8, 0x0F, 0x8F, 0xF8, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0x80, 0x0F, 0xFE, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x87, 0x00], [0x9B, 0x00, 0x49, 0xFF, 0xE0, 0x03, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xF1, 0xF0,
                    0x3F, 0x81, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3F, 0x01, 0xF0, 0x1F, 0x81, 0xF0, 0x1F, 0xF1, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0xE0, 0x85, 0x00], [0x9A, 0x00, 0x33, 0x07, 0x03, 0x00, 0x07, 0xBF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x0F, 0xF0, 0x7C, 0x0F, 0xC0, 0x18, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80,
                    0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x9C, 0x00], [0x9B, 0x00, 0x34, 0xFF, 0x00, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x1F, 0xC0, 0xF8, 0x1F, 0xFE, 0xF0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x01, 0xFF, 0xF0, 0x1E, 0x0F, 0xF8, 0x1E, 0x01, 0xF8, 0x1F, 0x00, 0xF8, 0x1F, 0x83, 0xF8, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xC0, 0x01, 0xFF, 0x80, 0x9A, 0x00], [0x89, 0x00, 0x46, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00,
                    0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x60, 0x00, 0xF0, 0xF0, 0x00, 0xF0, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0xFF, 0xF0, 0x00, 0x7F, 0xE0, 0x00, 0x1F, 0x80, 0x9A, 0x00], [0x9A, 0x00, 0x35, 0x1C, 0x00, 0xE0, 0x3E, 0x01, 0xE0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3E, 0x01, 0xF0, 0x3F, 0x03, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF,
                    0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x00, 0xFD, 0xE0, 0x9A, 0x00], [0x9A, 0x00, 0x31, 0x38, 0x01, 0xC0, 0x3C, 0x01, 0xE0, 0x3E, 0x03, 0xE0, 0x3E, 0x03, 0xE0, 0x3F, 0x07, 0xC0, 0x1F, 0x07, 0xC0, 0x1F, 0x8F, 0x80, 0x0F, 0x9F, 0x80, 0x0F, 0xDF, 0x00, 0x07, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x70, 0x9E, 0x00], [0x9A, 0x00, 0x35, 0x1E, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0x78, 0x1F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x00, 0xF8, 0x0F, 0x3C, 0xF8, 0x0F, 0xBC, 0xF0, 0x0F, 0xBE, 0xF0,
                    0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x07, 0xFF, 0xE0, 0x03, 0xFF, 0xE0, 0x03, 0xF7, 0xC0, 0x01, 0xE3, 0x80, 0x9A, 0x00], [0x9D, 0x00, 0x32, 0x0F, 0x00, 0x78, 0x0F, 0x80, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0xE3, 0xF8, 0x07, 0xF7, 0xF0, 0x03, 0xFF, 0xE0, 0x01, 0xFF, 0xC0, 0x00, 0xFF, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0xC0, 0x03, 0xFF, 0xE0, 0x07, 0xF7, 0xF0, 0x0F, 0xE3, 0xF8, 0x0F, 0xC1, 0xF8, 0x0F, 0x80, 0xF8, 0x06, 0x00, 0x30, 0x9A, 0x00], [0x9A, 0x00, 0x49, 0x1E, 0x00, 0xE0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0,
                    0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1E, 0x01, 0xF0, 0x1F, 0x83, 0xF0, 0x1F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xF0, 0x1E, 0x7D, 0xF0, 0x1E, 0x01, 0xF0, 0x1F, 0x03, 0xF0, 0x1F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x0F, 0xFF, 0xC0, 0x07, 0xFF, 0x80, 0x00, 0x7C, 0x86, 0x00], [0x9D, 0x00, 0x32, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x01, 0xF8, 0x00,
                    0x03, 0xFF, 0xF0, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x9A, 0x00], [0xEB, 0x00], [0x86, 0x00, 0x48, 0xF8, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xEC, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE8, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xFE, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFC, 0x9B, 0x00], [0x83, 0x00,
                    0x51, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x38, 0x95, 0x00], [0x86, 0x00, 0x4B, 0x3C, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01,
                    0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x01, 0xDF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x01, 0xFF, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x3C, 0x98, 0x00]]
        }, {
            _F3: "spr_font3b",
            width: 17,
            height: 25,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 12,
            _S3: 18,
            _T3: 15,
            _U3: 23,
            _V3: 1,
            _W3: 1,
            _X3: [55, 43, 468, 226, 282, 210, 18, 113, 122, 59, 140, 13, 11, 3, 263, 178,
                95, 239, 283, 250, 240, 241, 258, 208, 205, 12, 38, 88, 71, 98, 199, 267, 264, 207, 228, 220, 209, 237, 260, 249, 158, 238, 259, 262, 232, 281, 231, 261, 280, 230, 227, 289, 221, 203, 204, 248, 225, 242, 96, 206, 97, 37, 40, 16, 147, 266, 153, 229, 165, 198, 279, 251, 47, 167, 179, 52, 150, 154, 152, 265, 290, 164, 148, 181, 151, 139, 149, 138, 197, 141, 467, 123, 60, 110],
            _Y3: [[0x37, 0x00, 0x80, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0,
                0x00, 0x01, 0xE0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xC0, 0x92, 0x00], [0x82, 0x00, 0x16, 0x06, 0x30, 0x00, 0x07, 0x78, 0x00, 0x07, 0x78, 0x00, 0x07, 0x78, 0x00, 0x07, 0x78, 0x00, 0x07, 0x78, 0x00, 0x07, 0x78, 0x00, 0x07, 0x38, 0xB0, 0x00], [0xCA, 0x00], [0x82, 0x00, 0x34, 0x01, 0xC0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3D, 0xDE, 0x00, 0x3D, 0xCE, 0x00, 0x3D, 0xCE, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x03, 0xFE, 0x00, 0x39, 0xFE, 0x00, 0x39, 0xCE, 0x00, 0x3D, 0xDE, 0x00, 0x3F, 0xFE, 0x00, 0x1F,
                0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x03, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x08, 0x0C, 0x00, 0x3C, 0x1C, 0x00, 0x3C, 0x3C, 0x00, 0x7C, 0x3C, 0x00, 0x7C, 0x78, 0x00, 0x3C, 0xF0, 0x00, 0x3D, 0xF0, 0x00, 0x19, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xB8, 0x00, 0x0F, 0x7C, 0x00, 0x1F, 0x7E, 0x00, 0x3E, 0x7E, 0x00, 0x3E, 0x3C, 0x00, 0x78, 0x7E, 0x00, 0x78, 0x7E, 0x00, 0x30, 0x7E, 0x00, 0x00, 0x04, 0x8F, 0x00], [0x85, 0x00, 0x31, 0x0F, 0xC0, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x3C, 0xF0, 0x00, 0x38, 0x70, 0x00, 0x38, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xEE, 0x00, 0x3F, 0xFE, 0x00,
                0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x39, 0xFC, 0x00, 0x39, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xDE, 0x00, 0x0F, 0x0C, 0x92, 0x00], [0x1C, 0x00, 0x40, 0x00, 0x00, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x40, 0xAD, 0x00], [0x86, 0x00, 0x30, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF8,
                0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x18, 0x92, 0x00], [0x82, 0x00, 0x33, 0x01, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x38, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0x93, 0x00], [0x82, 0x00, 0x16, 0x06, 0x18, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0x3C, 0xB0, 0x00], [0x92, 0x00, 0x21,
                0x40, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFE, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x95, 0x00], [0xA9, 0x00, 0x16, 0x01, 0x80, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x40, 0x89, 0x00], [0xA0, 0x00, 0x07, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0xA1, 0x00], [0xAC, 0x00, 0x0A, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xC0, 0x92, 0x00], [0x83, 0x00, 0x32, 0x06, 0x00, 0x00,
                0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x38, 0x93, 0x00], [0x83, 0x00, 0x33, 0x80, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0x78, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x0E, 0x7C, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xF0, 0x00,
                0x07, 0xF0, 0x00, 0x01, 0xC0, 0x92, 0x00], [0x83, 0x00, 0x36, 0x80, 0x00, 0x03, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0x80, 0x8F, 0x00], [0x85, 0x00, 0x31, 0x1F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3C, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0xFC, 0x00, 0x01, 0xF8, 0x00, 0x0F, 0xE0, 0x00,
                0x1F, 0xC0, 0x00, 0x3F, 0x80, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x92, 0x00], [0x82, 0x00, 0x37, 0x01, 0xE0, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x1E, 0x00, 0x3C, 0x0F, 0x00, 0x38, 0x1F, 0x00, 0x00, 0x3E, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x00, 0xFE, 0x00, 0x18, 0x3E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x1E, 0x00, 0x3E, 0x3E, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF0, 0x00, 0x01, 0xC0, 0x8F, 0x00], [0x83, 0x00, 0x36, 0x40, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00,
                0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x60, 0x8F, 0x00], [0x85, 0x00, 0x31, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0E, 0x00, 0x38, 0x1E, 0x00, 0x3E, 0x7E, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xE0, 0x92, 0x00], [0x85, 0x00,
                0x31, 0x07, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3C, 0x1F, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x3E, 0x1E, 0x00, 0x3F, 0xBE, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x01, 0xF0, 0x92, 0x00], [0x85, 0x00, 0x33, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x07, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x1E, 0x00,
                0x00, 0x3E, 0x00, 0x00, 0x18, 0x00, 0x00, 0x08, 0x90, 0x00], [0x85, 0x00, 0x31, 0x0F, 0xF0, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3E, 0x3E, 0x00, 0x38, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x3E, 0x00, 0x38, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x03, 0xE0, 0x92, 0x00], [0x85, 0x00, 0x31, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x1E, 0x3E, 0x00, 0x3E, 0x1E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3E, 0x1E, 0x00, 0x1E, 0x3E, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE,
                0x00, 0x03, 0xFC, 0x00, 0x00, 0x7C, 0x00, 0x03, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0x80, 0x92, 0x00], [0x9A, 0x00, 0x0A, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x84, 0x00, 0x0C, 0x80, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x92, 0x00], [0x9A, 0x00, 0x0A, 0x01, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xC0, 0x86, 0x00, 0x0D, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xC0, 0x8F, 0x00], [0x91, 0x00, 0x24, 0x06, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x80, 0x00, 0x07, 0xC0,
                0x00, 0x03, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x04, 0x93, 0x00], [0x94, 0x00, 0x13, 0x0F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0xA1, 0x00], [0x92, 0x00, 0x24, 0x60, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x60, 0x92, 0x00], [0x82, 0x00, 0x22, 0x01,
                0xC0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3E, 0x3C, 0x00, 0x3C, 0x1C, 0x00, 0x3C, 0x1C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x7C, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xE0, 0x86, 0x00, 0x0A, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x92, 0x00], [0x82, 0x00, 0x34, 0x01, 0xC0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0x7E, 0x00, 0x3F, 0x7E, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xCE, 0x00, 0x1F, 0xFF, 0x00, 0x0F, 0xFE,
                0x00, 0x07, 0xFE, 0x00, 0x01, 0xF0, 0x92, 0x00], [0x83, 0x00, 0x33, 0x40, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0x3C, 0x00, 0x0E, 0x3C, 0x00, 0x1E, 0x1E, 0x00, 0x1E, 0x1E, 0x00, 0x3E, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x08, 0x06, 0x92, 0x00], [0x85, 0x00, 0x31, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3C, 0x1E,
                0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x0F, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x34, 0x01, 0xC0, 0x00, 0x07, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1E, 0x1E, 0x00, 0x3E, 0x1E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x0E, 0x00, 0x3E, 0x1E, 0x00, 0x3E, 0x1E, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x01, 0xE0, 0x92, 0x00], [0x82, 0x00, 0x36, 0x0C, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xFC, 0x00, 0x1E, 0x7C, 0x00, 0x1E, 0x3C, 0x00, 0x1E,
                0x1E, 0x00, 0x1E, 0x1E, 0x00, 0x1E, 0x0E, 0x00, 0x1E, 0x0E, 0x00, 0x1E, 0x1E, 0x00, 0x1E, 0x1E, 0x00, 0x1E, 0x1E, 0x00, 0x1E, 0x3C, 0x00, 0x1E, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xC0, 0x00, 0x08, 0x90, 0x00], [0x85, 0x00, 0x31, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x38, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x92, 0x00], [0x85, 0x00, 0x30, 0x1F, 0xFF, 0x00, 0x3F,
                0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x08, 0x93, 0x00], [0x83, 0x00, 0x33, 0xC0, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x3E, 0x1E, 0x00, 0x3E, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x00, 0x00, 0x3D, 0xFF, 0x00, 0x3D, 0xFF, 0x00, 0x3D, 0xFF, 0x00, 0x3C, 0x0F, 0x00, 0x3E, 0x0F, 0x00, 0x3E, 0x1E, 0x00, 0x1F, 0xBE, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00,
                0x01, 0xF0, 0x92, 0x00], [0x82, 0x00, 0x37, 0x18, 0x0E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x08, 0x0C, 0x8F, 0x00], [0x85, 0x00, 0x31, 0x0F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0,
                0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF0, 0x92, 0x00], [0x85, 0x00, 0x31, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x1F, 0x00, 0x1F, 0xFF, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0xC0, 0x92, 0x00], [0x82, 0x00, 0x34, 0x08, 0x06, 0x00, 0x3C, 0x1F, 0x00, 0x3E, 0x3F, 0x00, 0x3E, 0x7E, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xE0, 0x00, 0x3F,
                0x80, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xF8, 0x00, 0x3E, 0xFC, 0x00, 0x3E, 0x7E, 0x00, 0x3E, 0x1F, 0x00, 0x18, 0x0E, 0x92, 0x00], [0x82, 0x00, 0x34, 0x18, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x92, 0x00], [0x85, 0x00, 0x34, 0x0E, 0x07, 0x00, 0x1E, 0x0F, 0x00,
                0x1F, 0x8F, 0x00, 0x1F, 0x9F, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1E, 0xFF, 0x00, 0x1E, 0x6F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x0C, 0x07, 0x00, 0x00, 0x02, 0x8F, 0x00], [0x83, 0x00, 0x35, 0x06, 0x00, 0x18, 0x0E, 0x00, 0x3C, 0x0F, 0x00, 0x3E, 0x0F, 0x00, 0x3E, 0x0F, 0x00, 0x3F, 0x8F, 0x00, 0x3F, 0x8F, 0x00, 0x3F, 0xCF, 0x00, 0x3F, 0xEF, 0x00, 0x3D, 0xEF, 0x00, 0x3C, 0xFF, 0x00, 0x3C, 0xFF, 0x00, 0x3C, 0x7F, 0x00, 0x3C, 0x3F, 0x00, 0x3C, 0x1F, 0x00, 0x3C, 0x1E, 0x00, 0x3C,
                0x0E, 0x00, 0x18, 0x00, 0x00, 0x08, 0x90, 0x00], [0x82, 0x00, 0x34, 0x01, 0xC0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3E, 0x3C, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x38, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3E, 0x3C, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xF0, 0x92, 0x00], [0x85, 0x00, 0x33, 0x3F, 0xF0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3D, 0xFE, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x1F, 0x00, 0x3C, 0x7E, 0x00, 0x3D, 0xFE, 0x00, 0x3F, 0xF8, 0x00, 0x3F,
                0xF0, 0x00, 0x3F, 0x80, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x00, 0x00, 0x08, 0x90, 0x00], [0x82, 0x00, 0x37, 0x01, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x0E, 0x00, 0x38, 0x0E, 0x00, 0x38, 0x0E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x5E, 0x00, 0x3C, 0xFE, 0x00, 0x3C, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x0E, 0x8F, 0x00], [0x85, 0x00, 0x34, 0x3F, 0xE0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xFC, 0x00, 0x3D, 0xFC, 0x00, 0x3C,
                0x3E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x7C, 0x00, 0x3D, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xF0, 0x00, 0x3D, 0xF8, 0x00, 0x3C, 0xFE, 0x00, 0x3C, 0x7E, 0x00, 0x38, 0x1E, 0x00, 0x10, 0x0C, 0x8F, 0x00], [0x82, 0x00, 0x34, 0x01, 0xC0, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3E, 0x1E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3F, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x01, 0xFE, 0x00, 0x18, 0x3E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3E, 0x3E, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x03, 0xF0, 0x92, 0x00],
                [0x85, 0x00, 0x34, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x80, 0x8F, 0x00], [0x37, 0x10, 0x08, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C, 0x00, 0x38, 0x1C,
                    0x00, 0x38, 0x1C, 0x00, 0x3E, 0x3C, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xE0, 0x92, 0x00], [0x82, 0x00, 0x31, 0x18, 0x0E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3E, 0x3C, 0x00, 0x3E, 0x3C, 0x00, 0x1E, 0x3C, 0x00, 0x0E, 0x3C, 0x00, 0x0F, 0x78, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x80, 0x95, 0x00], [0x82, 0x00, 0x31, 0x30, 0x18, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x3C, 0x38, 0x00, 0x3C, 0x38, 0x00, 0x3D,
                    0xF8, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x1E, 0xE0, 0x00, 0x0C, 0x60, 0x95, 0x00], [0x82, 0x00, 0x37, 0x38, 0x06, 0x00, 0x38, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3E, 0x3E, 0x00, 0x1E, 0x3C, 0x00, 0x0F, 0x7C, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0x7C, 0x00, 0x3E, 0x3C, 0x00, 0x3E, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x38, 0x0E, 0x00, 0x00, 0x04, 0x8F, 0x00], [0x82, 0x00, 0x34, 0x10, 0x00, 0x00, 0x38, 0x1E, 0x00, 0x3C, 0x1E, 0x00,
                    0x3E, 0x3C, 0x00, 0x1E, 0x7C, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xC0, 0x92, 0x00], [0x85, 0x00, 0x31, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0x80, 0x00, 0x0F, 0x80, 0x00, 0x1E, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1F, 0xFE, 0x92,
                    0x00], [0x82, 0x00, 0x37, 0x01, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x01, 0xC0, 0x8F, 0x00], [0x85, 0x00, 0x31, 0x38, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x07, 0x80, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF8,
                    0x00, 0x00, 0x7C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x0E, 0x92, 0x00], [0x82, 0x00, 0x37, 0x01, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xC0, 0x8F, 0x00], [0x85, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x7F, 0x80, 0x00, 0xF7, 0x80, 0x00, 0x21, 0x80, 0xB3, 0x00],
                [0xAC, 0x00, 0x0A, 0x3F, 0xFC, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x92, 0x00], [0x82, 0x00, 0x10, 0x02, 0x00, 0x00, 0x07, 0x80, 0x00, 0x07, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0xB6, 0x00], [0x91, 0x00, 0x25, 0x01, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x3E, 0x1E, 0x00, 0x0F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x1E, 0x0E, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x03, 0xFC, 0x92, 0x00], [0x82, 0x00, 0x34, 0x08, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00,
                    0x3F, 0xE0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x1E, 0x00, 0x3E, 0x0E, 0x00, 0x3E, 0x0F, 0x00, 0x3E, 0x0F, 0x00, 0x3E, 0x1E, 0x00, 0x3E, 0x3E, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x0F, 0xF0, 0x92, 0x00], [0x91, 0x00, 0x25, 0x01, 0xF0, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0x1F, 0x00, 0x1E, 0x06, 0x00, 0x1E, 0x00, 0x00, 0x1E, 0x0E, 0x00, 0x1E, 0x0F, 0x00, 0x0F, 0xBF, 0x00, 0x0F, 0xFE, 0x00, 0x07, 0xFE, 0x00, 0x01, 0xF0, 0x92, 0x00], [0x83, 0x00, 0x33, 0x06, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00,
                    0x01, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x1E, 0x0F, 0x00, 0x0F, 0x8F, 0x00, 0x0F, 0xFF, 0x00, 0x07, 0xFF, 0x00, 0x01, 0xFE, 0x92, 0x00], [0x91, 0x00, 0x25, 0x03, 0xF8, 0x00, 0x07, 0xFE, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0x1F, 0x00, 0x1E, 0x0F, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x1E, 0x06, 0x00, 0x1F, 0x9F, 0x00, 0x0F, 0xFF, 0x00, 0x07, 0xFE, 0x00, 0x01, 0xF8, 0x92, 0x00], [0x86, 0x00, 0x33, 0x7E, 0x00, 0x00, 0x7E, 0x00, 0x01, 0xFE, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xE0, 0x00,
                    0x01, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x03, 0x80, 0x00, 0x03, 0x80, 0x00, 0x03, 0x80, 0x00, 0x03, 0x80, 0x00, 0x03, 0x80, 0x00, 0x03, 0x80, 0x00, 0x01, 0x80, 0x00, 0x01, 0x80, 0x8F, 0x00], [0x8F, 0x00, 0x36, 0x02, 0x00, 0x07, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x1F, 0xFF, 0x00, 0x1E, 0x1F, 0x00, 0x3E, 0x1F, 0x00, 0x3C, 0x0F, 0x00, 0x3C, 0x0F, 0x00, 0x3E, 0x0F, 0x00, 0x3E, 0x1F, 0x00, 0x1F, 0xBF, 0x00, 0x0F, 0xFF, 0x00, 0x0F, 0xFF, 0x00, 0x3D, 0xFF, 0x00, 0x3C, 0x0F, 0x00, 0x3E, 0x1F, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF8, 0x83, 0x00],
                [0x82, 0x00, 0x37, 0x08, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3D, 0xE0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x1E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x1C, 0x0E, 0x00, 0x08, 0x0E, 0x8F, 0x00], [0x89, 0x00, 0x0C, 0x40, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x40, 0x83, 0x00, 0x1F, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0,
                    0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x40, 0x8F, 0x00], [0x89, 0x00, 0x3B, 0x60, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0x84, 0x00], [0x85, 0x00, 0x33, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x0E, 0x00, 0x0F, 0x1E, 0x00,
                    0x0F, 0x7E, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x0F, 0x7E, 0x00, 0x0F, 0x3E, 0x00, 0x0F, 0x1E, 0x00, 0x06, 0x04, 0x00, 0x06, 0x90, 0x00], [0x83, 0x00, 0x33, 0xC0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xC0, 0x92, 0x00], [0x91, 0x00, 0x25, 0x3C, 0x00, 0x00, 0x3F,
                    0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x3D, 0xCE, 0x00, 0x3C, 0xCE, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x08, 0x0E, 0x92, 0x00], [0x91, 0x00, 0x25, 0x1C, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xF8, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x1E, 0x00, 0x3E, 0x0E, 0x00, 0x3E, 0x0E, 0x00, 0x3E, 0x0E, 0x00, 0x3E, 0x0E, 0x00, 0x3E, 0x0E, 0x00, 0x3E, 0x0E, 0x00, 0x18, 0x0E, 0x92, 0x00], [0x91, 0x00, 0x25, 0x07, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3E, 0x3E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x0E, 0x00,
                    0x3C, 0x0E, 0x00, 0x3C, 0x1E, 0x00, 0x3E, 0x1E, 0x00, 0x3F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x01, 0xC0, 0x92, 0x00], [0x91, 0x00, 0x33, 0x1F, 0xE0, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3E, 0x7E, 0x00, 0x3E, 0x1F, 0x00, 0x3E, 0x0F, 0x00, 0x3E, 0x1F, 0x00, 0x3E, 0x3E, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xF0, 0x00, 0x3F, 0xC0, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x08, 0x84, 0x00], [0x91, 0x00, 0x34, 0x07, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0x3C, 0x00, 0x7C, 0x3C, 0x00, 0x78, 0x3C, 0x00,
                    0x78, 0x3C, 0x00, 0x3E, 0x3C, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x18, 0x83, 0x00], [0x91, 0x00, 0x24, 0x1C, 0x20, 0x00, 0x1F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0xFF, 0x00, 0x3F, 0x0E, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x08, 0x93, 0x00], [0x91, 0x00, 0x25, 0x07, 0xE0, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xDE, 0x00, 0x1F, 0xF8, 0x00,
                    0x0F, 0xFC, 0x00, 0x38, 0xFE, 0x00, 0x38, 0x1E, 0x00, 0x3E, 0x3E, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x07, 0xF0, 0x92, 0x00], [0x85, 0x00, 0x31, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x8C, 0x00, 0x07, 0x9C, 0x00, 0x07, 0xFC, 0x00, 0x07, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00, 0xF0, 0x92, 0x00], [0x91, 0x00, 0x25, 0x30, 0x1C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C,
                    0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x03, 0xD8, 0x92, 0x00], [0x91, 0x00, 0x22, 0x70, 0x38, 0x00, 0x78, 0x3C, 0x00, 0x78, 0x3C, 0x00, 0x3C, 0x78, 0x00, 0x3C, 0x70, 0x00, 0x3F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x07, 0xC0, 0x00, 0x07, 0x80, 0x00, 0x03, 0x80, 0x95, 0x00], [0x91, 0x00, 0x25, 0x38, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x0E, 0x00, 0x3C, 0x1E, 0x00, 0x3C, 0x1E, 0x00, 0x3D, 0xDE, 0x00, 0x3F, 0xDC, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x06,
                    0x30, 0x92, 0x00], [0x94, 0x00, 0x22, 0x3C, 0x1E, 0x00, 0x3E, 0x3E, 0x00, 0x1F, 0x7E, 0x00, 0x0F, 0xFC, 0x00, 0x07, 0xF0, 0x00, 0x03, 0xF0, 0x00, 0x07, 0xF0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3E, 0x3E, 0x00, 0x3E, 0x1E, 0x00, 0x08, 0x04, 0x92, 0x00], [0x91, 0x00, 0x34, 0x38, 0x1C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x38, 0x3C, 0x00, 0x3C, 0x3C, 0x00, 0x3F, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xFC, 0x00, 0x39, 0xFC, 0x00, 0x38, 0x3C, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xF8, 0x00, 0x1F, 0xF0, 0x00, 0x01, 0xC0, 0x83,
                    0x00], [0x94, 0x00, 0x22, 0x3F, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x78, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x1F, 0xFE, 0x00, 0x0F, 0xFE, 0x92, 0x00], [0xCA, 0x00], [0x82, 0x00, 0x34, 0x03, 0x80, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x07, 0x40, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x07, 0xC0,
                    0x92, 0x00], [0x3A, 0x01, 0xC0, 0x00, 0x01, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xC0, 0x8F, 0x00], [0x82, 0x00, 0x37, 0x01, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00, 0x01, 0xF0, 0x00,
                    0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xC0, 0x8F, 0x00]]
        }, {
            _F3: "spr_number",
            width: 145,
            height: 95,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 72,
            _S3: 47,
            _Z3: 12,
            _T3: 129,
            __3: 10,
            _U3: 80,
            _V3: 1,
            _W3: 1,
            _X3: [738, 797, 812, 840],
            _Y3: [[0xFF, 0x00, 0xEB, 0x00, 0x01, 0x03, 0xFE, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x0F, 0xFF, 0x90, 0x00, 0x01, 0x1F, 0xFF, 0x90, 0x00, 0x01, 0x3F, 0xFF, 0x90, 0x00, 0x01, 0x7F, 0xFF, 0x90, 0x00, 0x01, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x8F,
                0x00, 0x02, 0x03, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x07, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x0F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x1F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x1F, 0xF7, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00,
                0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00,
                0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00,
                0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFF, 0x90, 0x00, 0x01, 0x07, 0xFE, 0x90, 0x00, 0x01, 0x03, 0xFC, 0xFF, 0x00, 0xFF, 0x00, 0x92, 0x00], [0xFF, 0x00, 0xFE, 0x00, 0x02, 0xFF, 0xFF, 0xC0, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x82, 0xFF, 0x00, 0xFE, 0x8D, 0x00, 0x00, 0x03, 0x83, 0xFF, 0x00, 0x80, 0x8C, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x00, 0xC0, 0x8C, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x00, 0xE0, 0x8C, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xE0, 0x8C, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x00, 0xF0, 0x8C, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xF0, 0x8C, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00,
                0xF8, 0x8C, 0x00, 0x84, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x84, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x05, 0xFF, 0xFF, 0xE0, 0x03, 0xFF, 0xF8, 0x8C, 0x00, 0x05, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x8C, 0x00, 0x05, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xF8, 0x8C, 0x00, 0x05, 0xFF, 0xF8, 0x00, 0x00, 0x7F, 0xFC, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x7F, 0xFC, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xFC, 0x8C, 0x00, 0x05, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0xFC, 0x8C, 0x00, 0x05, 0x7F, 0xE0, 0x00,
                0x00, 0x3F, 0xFC, 0x8C, 0x00, 0x05, 0x3F, 0x80, 0x00, 0x00, 0x3F, 0xFC, 0x90, 0x00, 0x01, 0x7F, 0xF8, 0x90, 0x00, 0x01, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0x01, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0x1F, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0x7F, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0xFF, 0xFF, 0xF0, 0x8E, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF0, 0x8E, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xE0, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x8E, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0x80, 0x8E, 0x00, 0x82, 0xFF, 0x8E, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xFE, 0x8E, 0x00, 0x03,
                0x07, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x8E, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x8E, 0x00, 0x82, 0xFF, 0x00, 0x80, 0x8D, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x8E, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFC, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xE0, 0x8E, 0x00, 0x82, 0xFF, 0x00, 0x80, 0x8E, 0x00, 0x82, 0xFF, 0x8F, 0x00, 0x02, 0xFF, 0xFF, 0xFC, 0x8F, 0x00, 0x02, 0xFF, 0xFF, 0xF8, 0x8F, 0x00, 0x02, 0xFF, 0xFF, 0xE0, 0x8F, 0x00, 0x02, 0xFF, 0xFF, 0x80, 0x8F, 0x00, 0x01, 0xFF, 0xFF, 0x90, 0x00, 0x01, 0xFF, 0xFC, 0x90, 0x00, 0x84, 0xFF, 0x00,
                0xFC, 0x8C, 0x00, 0x85, 0xFF, 0x8C, 0x00, 0x85, 0xFF, 0x8C, 0x00, 0x85, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x85, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x85, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x85, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x85, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x85, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x85, 0xFF, 0x8C, 0x00, 0x85, 0xFF, 0x8C, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xFE, 0xFF, 0x00, 0xFF, 0x00, 0xC9, 0x00], [0xFF, 0x00, 0xFE, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x8E, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFE, 0x8E, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x00, 0x80, 0x8D, 0x00, 0x83,
                0xFF, 0x00, 0xC0, 0x8C, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x00, 0xE0, 0x8C, 0x00, 0x00, 0x03, 0x83, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x00, 0xFC, 0x8C, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xFE, 0x8C, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xFE, 0x8C, 0x00, 0x00, 0x3F, 0x84, 0xFF, 0x8C, 0x00, 0x05, 0x3F, 0xFF, 0xF8, 0x07, 0xFF, 0xFF, 0x8C, 0x00, 0x06, 0x7F, 0xFF, 0xE0, 0x01, 0xFF, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xFF, 0x80, 0x00, 0x7F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xFF, 0x00, 0x00, 0x3F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F,
                0xFE, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xFC, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xF8, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x7F, 0xF0, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x3F, 0xF0, 0x00, 0x00, 0x3F, 0xFF, 0x80, 0x8B, 0x00, 0x06, 0x1F, 0xC0, 0x00, 0x00, 0x7F, 0xFF, 0x80, 0x8E, 0x00, 0x02, 0x01,
                0xFF, 0xFF, 0x8F, 0x00, 0x02, 0x0F, 0xFF, 0xFF, 0x8E, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x8E, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFE, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFE, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFC, 0x8E, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFE, 0x8E, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xFE, 0x8F, 0x00, 0x02, 0x0F, 0xFF, 0xFE, 0x8F, 0x00, 0x02,
                0x03, 0xFF, 0xFF, 0x8C, 0x00, 0x05, 0x3F, 0xC0, 0x00, 0x00, 0xFF, 0xFF, 0x8C, 0x00, 0x05, 0x7F, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x1F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xFC, 0x00, 0x00, 0x3F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xFE, 0x00, 0x00,
                0x7F, 0xFF, 0x8C, 0x00, 0x05, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0x8C, 0x00, 0x05, 0x7F, 0xFF, 0xC0, 0x03, 0xFF, 0xFF, 0x8C, 0x00, 0x05, 0x7F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFE, 0x8C, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xFE, 0x8C, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x00, 0xFC, 0x8C, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xFC, 0x8C, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x00, 0xF0, 0x8C, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x00, 0xE0, 0x8C, 0x00, 0x00, 0x03, 0x83, 0xFF, 0x00, 0xC0, 0x8C, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x00, 0x80, 0x8D, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE,
                0x8E, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x8E, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xE0, 0x8F, 0x00, 0x01, 0x3F, 0xFE, 0xFF, 0x00, 0xFF, 0x00, 0x92, 0x00], [0xFF, 0x00, 0xCC, 0x00, 0x00, 0x7F, 0x8C, 0x00, 0x06, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x84, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x82, 0x00, 0x07, 0x07, 0xFF, 0xFF, 0xF0, 0x00, 0x01, 0xFF, 0xC0, 0x84, 0x00, 0x0D, 0x7F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x03, 0x00, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x02,
                0xF0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0x80, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x83, 0xFF, 0x03, 0xC0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x83, 0xFF, 0x03, 0xE0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x01, 0x00, 0x07, 0x83, 0xFF, 0x03, 0xE0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x01, 0x00, 0x0F, 0x83, 0xFF, 0x03, 0xF0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x84, 0xFF, 0x01, 0x80, 0x0F, 0x83, 0xFF, 0x03, 0xF8, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x84, 0xFF, 0x01, 0xC0, 0x1F, 0x83, 0xFF, 0x03,
                0xF8, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x00, 0x01, 0x84, 0xFF, 0x01, 0xC0, 0x1F, 0x83, 0xFF, 0x03, 0xF8, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x00, 0x01, 0x84, 0xFF, 0x09, 0xE0, 0x3F, 0xFF, 0xF0, 0x0F, 0xFF, 0xFC, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x03, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xE0, 0x3F, 0xFF, 0xC0, 0x03, 0xFF, 0xFC, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFC, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x03, 0xFF, 0xF8, 0x00, 0x07, 0xFF, 0xE0, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xF0,
                0x00, 0x03, 0xFF, 0xE0, 0x7F, 0xFE, 0x00, 0x00, 0x7F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xE0, 0x7F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xE0, 0x7F, 0xFC, 0x00, 0x00, 0x3F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xE0, 0x7F, 0xFC, 0x00, 0x00, 0x1F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xE0, 0x7F, 0xF8, 0x00, 0x00, 0x1F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xE0, 0x7F,
                0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x7F, 0xE0, 0xFF, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x3F, 0x80, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFF, 0x84, 0x00, 0x08, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFF, 0x84, 0x00, 0x08, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFF, 0x84, 0x00, 0x08, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01,
                0x0F, 0xFF, 0x84, 0x00, 0x08, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x03, 0x82, 0xFF, 0x09, 0xE0, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x07, 0x82, 0xFF, 0x09, 0xF0, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFE, 0x0F, 0x82, 0xFF, 0x09, 0xF8,
                0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFE, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFE, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x0F, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F,
                0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x07, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0x01, 0x82, 0xFF, 0x09, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFF, 0x82, 0x00, 0x0A, 0x7F, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFF, 0x82, 0x00, 0x0A, 0x7F, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x7F, 0xF8, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82,
                0x00, 0x0F, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xF8, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xF8, 0xFF, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xF8, 0x7F, 0xF8, 0x00, 0x00, 0x1F, 0xFF, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xF0, 0x7F, 0xF8, 0x00, 0x00, 0x1F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xF0, 0x7F, 0xFC, 0x00, 0x00, 0x1F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xE0,
                0x00, 0x01, 0xFF, 0xF0, 0x7F, 0xFC, 0x00, 0x00, 0x3F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x07, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xF0, 0x7F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x03, 0xFF, 0xF0, 0x00, 0x07, 0xFF, 0xF0, 0x7F, 0xFE, 0x00, 0x00, 0x7F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x03, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xE0, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x0F, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xE0, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFC, 0x00, 0xFF, 0x80, 0x82, 0x00, 0x0E, 0x01, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xE0, 0x3F,
                0xFF, 0xC0, 0x03, 0xFF, 0xFC, 0x00, 0x7F, 0x83, 0x00, 0x0F, 0x01, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xF0, 0x0F, 0xFF, 0xFC, 0x00, 0xFF, 0x80, 0x82, 0x00, 0x00, 0x01, 0x84, 0xFF, 0x01, 0xC0, 0x1F, 0x83, 0xFF, 0x03, 0xF8, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x83, 0xFF, 0x03, 0xF8, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x01, 0x80, 0x0F, 0x83, 0xFF, 0x03, 0xF8, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x01, 0x00, 0x0F, 0x83, 0xFF, 0x03, 0xF0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x83, 0xFF,
                0x03, 0xE0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x83, 0xFF, 0x03, 0xE0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x83, 0xFF, 0x03, 0xC0, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0x80, 0x01, 0xFF, 0xC0, 0x83, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x03, 0x00, 0x01, 0xFF, 0xC0, 0x84, 0x00, 0x82, 0xFF, 0x0A, 0x80, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xC0, 0x84, 0x00, 0x02, 0x3F, 0xFF, 0xFE, 0x82, 0x00, 0x07, 0x07,
                0xFF, 0xFF, 0xF0, 0x00, 0x01, 0xFF, 0xC0, 0x84, 0x00, 0x02, 0x01, 0xFF, 0xE0, 0x83, 0x00, 0x06, 0x7F, 0xFF, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x90, 0x00, 0x01, 0xFF, 0x80, 0xFF, 0x00, 0xFF, 0x00, 0xB1, 0x00]]
        }, {
            _F3: "spr_font_goals",
            width: 50,
            height: 75,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _Z3: 1,
            _T3: 48,
            __3: 3,
            _U3: 73,
            _V3: 1,
            _W3: 1,
            _X3: [793, 763, 791, 799, 808, 801, 795, 804, 790, 787],
            _Y3: [[0x9D, 0x00, 0x01, 0x07, 0xE0, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03,
                0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x7E, 0xC0, 0x00, 0x07, 0xFF, 0xFE, 0x7F, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0xF8, 0x1F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xE0,
                0x0F, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x7E, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01,
                0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0,
                0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x00, 0x15, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0xFE, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x00, 0x83, 0xFF, 0x82, 0x00, 0x83, 0xFF, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x0F,
                0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0x80, 0x83, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x1F, 0xF0, 0x90, 0x00], [0x96, 0x00, 0x01, 0x07, 0xE0, 0x84, 0x00, 0x01, 0x1F, 0xF0, 0x84, 0x00, 0x01, 0x3F, 0xF8, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x84, 0x00, 0x01, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x3F, 0xFF,
                0xFE, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00,
                0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00,
                0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x84, 0x00, 0x01, 0x3F, 0xFC, 0x84, 0x00, 0x01, 0x3F, 0xF8, 0x84, 0x00, 0x01, 0x1F, 0xF8, 0x84, 0x00,
                0x01, 0x0F, 0xE0, 0x89, 0x00], [0x96, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x4D, 0xF8, 0x00, 0x1F, 0xFF, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0x1F,
                0xFF, 0xC0, 0x01, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x80, 0x01, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00,
                0x02, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x82, 0xFF, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x82, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03,
                0x0F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x02, 0x3F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00,
                0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x83, 0xFF, 0x00, 0xF0, 0xA3, 0x00], [0x96, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x7F, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00,
                0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x62, 0xF8, 0x00, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x07, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xC0, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00,
                0x3F, 0xFE, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x07, 0xF0, 0x00, 0x3F, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03,
                0x3F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x6E, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x03, 0x80, 0x07, 0xFF, 0xFF, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x3F, 0xFF, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xFF, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xFF, 0x00, 0x03,
                0xFF, 0xF8, 0x00, 0x7F, 0xFF, 0x80, 0x07, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0xFC, 0xFF, 0xFF, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x82, 0x00, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x03,
                0xFF, 0xFF, 0x84, 0x00, 0x01, 0x3F, 0xF8, 0x89, 0x00], [0x97, 0x00, 0x01, 0x0F, 0x80, 0x84, 0x00, 0x01, 0x3F, 0xE0, 0x84, 0x00, 0x01, 0x7F, 0xF0, 0x84, 0x00, 0x01, 0xFF, 0xF0, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xF8,
                0x83, 0x00, 0x02, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x18, 0xF8, 0x00, 0x00, 0x03, 0xFF,
                0xFE, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF,
                0x00, 0xF0, 0x83, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01,
                0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF0, 0x84, 0x00, 0x01, 0x7F, 0xF0, 0x84, 0x00, 0x01, 0x3F, 0xE0, 0x84, 0x00, 0x01, 0x0F, 0x80, 0x88, 0x00], [0xA3, 0x00, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02,
                0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x03, 0xF0, 0x00, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xFC, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x1F, 0x83,
                0xFF, 0x02, 0xC0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x84, 0x00, 0x01, 0xFF, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x3F, 0xFE, 0x84, 0x00, 0x3B, 0x3F, 0xFE, 0x00, 0x01, 0x80, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x7F,
                0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xC0, 0x1F, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xFD, 0xFF, 0xFF, 0xFC, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x07, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x82,
                0xFF, 0x00, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0x84, 0x00, 0x01, 0x7F, 0xF0, 0x90, 0x00], [0xA4, 0x00, 0x01, 0x03, 0xF8, 0x84, 0x00, 0x02, 0x3F, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x02, 0xC0, 0x00, 0x00, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02,
                0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x27, 0xF8, 0x00, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x00, 0xFF, 0xE0, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xFF, 0x80, 0x83, 0x00, 0x03, 0x1F, 0xFF, 0x3F, 0xFE, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xFC, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xFE,
                0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x7E, 0xFC, 0x00, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xF0, 0x07, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x01, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF,
                0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x1F, 0xFF, 0xE0, 0x01, 0xFF, 0xFE, 0x00, 0x1F, 0xFF, 0xF0, 0x03, 0xFF, 0xFC, 0x00, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x01, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8,
                0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xE0, 0x83, 0x00, 0x01, 0x7F, 0xFF, 0x84, 0x00, 0x01, 0x07, 0xF0, 0x90, 0x00], [0xA2, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00,
                0x1F, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x0F, 0x84, 0xFF, 0x01, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00,
                0x02, 0x3F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x83, 0x00, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0x80, 0x83,
                0x00, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFE,
                0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x07, 0xFF, 0x80, 0x83, 0x00, 0x02, 0x07, 0xFF, 0x80, 0x83, 0x00, 0x01, 0x03, 0xFF, 0x84, 0x00, 0x01, 0x01, 0xFE, 0x85, 0x00, 0x00, 0x78, 0x8B, 0x00], [0xA4, 0x00, 0x01, 0x7F, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF,
                0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x56, 0xFC, 0x00, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xC0, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F,
                0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02,
                0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x56, 0xFC, 0x00, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xE0, 0x03, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE,
                0x00, 0x3F, 0xFF, 0xC0, 0x01, 0xFF, 0xFE, 0x00, 0x1F, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF,
                0xE0, 0x83, 0x00, 0x01, 0x7F, 0xFF, 0x97, 0x00], [0xA4, 0x00, 0x01, 0x3F, 0xFC, 0x84, 0x00, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x7E, 0xF0, 0x00, 0x0F, 0xFF, 0xFE, 0x7F,
                0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x80, 0x01, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC,
                0x00, 0x1F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0x80, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xFC, 0x16, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x03, 0xF0, 0x00,
                0x00, 0x1F, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x00, 0xC0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x82, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xF0,
                0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x01, 0x3F, 0xFC, 0x98, 0x00]]
        }, {
            _F3: "spr_font_goals_small",
            width: 30,
            height: 45,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _T3: 29,
            _U3: 44,
            _V3: 1,
            _W3: 1,
            _X3: [728, 703, 727, 731, 733, 729, 726, 730, 725, 724],
            _Y3: [[0x8C, 0x00, 0x7E, 0x3F, 0xC0, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x01, 0xFF,
                0xFC, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0x80, 0x1F, 0xF9, 0xFF, 0x80, 0x1F, 0xF0, 0xFF, 0xC0, 0x3F, 0xF0, 0xFF, 0xC0, 0x3F, 0xF0, 0x7F, 0xE0, 0x7F, 0xE0, 0x7F, 0xE0, 0x7F, 0xE0, 0x3F, 0xE0, 0x7F, 0xE0, 0x3F, 0xE0, 0x7F, 0xC0, 0x3F, 0xE0, 0x7F, 0xC0, 0x3F, 0xE0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xE0, 0x7F, 0xC0, 0x3F, 0xE0, 0x7F, 0xE0, 0x3F, 0xE0, 0x7F, 0xE0, 0x7F, 0xE0, 0x3F, 0xF0,
                0x7F, 0xE0, 0x3F, 0xF0, 0xFF, 0xE0, 0x3F, 0xF0, 0xFF, 0xC0, 0x1F, 0xF9, 0xFF, 0xC0, 0x26, 0x1F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00], [0x84, 0x00, 0x00, 0x07, 0x82, 0x00, 0x00, 0x0F, 0x82, 0x00, 0x7E, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF,
                0xE0, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x26, 0x00, 0x3F, 0xE0, 0x00, 0x00,
                0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00], [0x84, 0x00, 0x7E, 0x3F, 0xF0, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xF0, 0x3F, 0xE0, 0x7F, 0xC0, 0x3F, 0xE0, 0x7F, 0xC0, 0x1F, 0xE0, 0x7F, 0xC0, 0x1F, 0xE0, 0x7F, 0xC0, 0x1F, 0xE0, 0x1F, 0x80, 0x1F, 0xE0, 0x0E, 0x00,
                0x3F, 0xE0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x23, 0x7F, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x1F, 0xFF, 0xFF, 0xF0, 0x1F,
                0xFF, 0xFF, 0xE0, 0x8B, 0x00], [0x84, 0x00, 0x00, 0x06, 0x82, 0x00, 0x7E, 0x3F, 0xE0, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xC0, 0x1F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xF0, 0xFF, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0x80, 0x1F, 0xF0, 0x7F, 0x80, 0x1F, 0xF0, 0x7F, 0x80, 0x1F, 0xF0, 0x7F, 0x80, 0x3F, 0xF0, 0x1E, 0x00, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x1F, 0xFF, 0xE0, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x3F, 0xFF, 0x80, 0x00,
                0x3F, 0xFF, 0x80, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0x1F, 0xFF, 0xE0, 0x1E, 0x07, 0xFF, 0xE0, 0x7F, 0x00, 0x3F, 0xE0, 0x7F, 0x00, 0x3F, 0xE0, 0xFF, 0x80, 0x1F, 0xF0, 0xFF, 0x80, 0x1F, 0xF0, 0xFF, 0x80, 0x1F, 0xF0, 0xFF, 0x80, 0x3F, 0xE0, 0x2A, 0x7F, 0xE0, 0x7F, 0xE0, 0x7F, 0xF9, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFF, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00], [0x5F, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x03,
                0xFC, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x0F, 0xFF, 0xFC, 0x00, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0xFB, 0xFC, 0x00, 0x1F, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x82, 0xFF, 0x47, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF,
                0xFF, 0xC0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x01, 0xFC, 0x82, 0x00, 0x00, 0xF8, 0x82, 0x00, 0x00, 0x60, 0x00, 0x00], [0x8B, 0x00, 0x7E, 0x0F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xF0, 0x3F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF,
                0xFF, 0xF0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xC0, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x7F, 0xFF, 0xE0, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x07, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x0F, 0xF0, 0x08, 0x00, 0x0F, 0xF0, 0x3E, 0x00, 0x1F, 0xF0, 0x7F, 0x00, 0x1F, 0xF0, 0x7F, 0x80, 0x3F, 0xF0, 0xFF, 0xFB, 0xFF, 0x00, 0xF0, 0x82,
                0xFF, 0x1E, 0xE0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0x85, 0x00], [0x8C, 0x00, 0x7E, 0x1F, 0xE0, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFF, 0xC0, 0x0F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFF, 0xE0, 0x3F, 0xF8, 0x3F, 0xE0, 0x7F, 0xE0, 0x1F, 0x80, 0x7F, 0xC0, 0x0F, 0x80, 0x7F, 0xDF, 0xC0, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xFF,
                0x00, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xF8, 0xFF, 0xF0, 0x7F, 0xE0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x0F, 0xF0, 0x7F, 0xC0, 0x0F, 0xF0, 0x7F, 0xC0, 0x0F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xF0, 0x3F, 0xF0, 0x3F, 0xFF, 0xFF, 0xF0, 0x21, 0x3F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x0F, 0xFF, 0xFF, 0xC0, 0x0F, 0xFF, 0xFF, 0x80, 0x07, 0xFF, 0xFF, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x07,
                0x85, 0x00], [0x8B, 0x00, 0x7E, 0x1F, 0xFF, 0xFF, 0xF0, 0x3F, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0xFF, 0xFC, 0x7F, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xF0, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x7F, 0xE0,
                0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0xC0, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x25, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x02, 0x82, 0x00], [0x8C, 0x00, 0x7E, 0x7F, 0xF0, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xC0, 0x3F,
                0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xE0, 0x3F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xE0, 0x3F, 0xF0, 0x7F, 0xFF, 0xFF, 0xF0, 0x3F, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xC0, 0x0F, 0xFF, 0xFF, 0x80, 0x0F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0xE0, 0x3F, 0xFF, 0xFF, 0xE0, 0x7F, 0xFF, 0xFF, 0xF0, 0x7F, 0xE0, 0x3F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xE0, 0x3F, 0xF0, 0x7F,
                0xFF, 0xFF, 0xF0, 0x1E, 0x3F, 0xFF, 0xFF, 0xF0, 0x1F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xC0, 0x0F, 0xFF, 0xFF, 0xC0, 0x0F, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xF8, 0x88, 0x00], [0x8C, 0x00, 0x7E, 0x3F, 0xE0, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0xFF, 0xC0, 0x3F, 0xFF, 0xFF, 0xE0, 0x3F, 0xF0, 0xFF, 0xE0, 0x7F, 0xE0, 0x3F, 0xE0, 0x7F, 0xC0, 0x3F, 0xE0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F,
                0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x1F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x7F, 0xC0, 0x3F, 0xF0, 0x3F, 0xF0, 0x7F, 0xE0, 0x3F, 0xF8, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF, 0xFF, 0xE0, 0x0F, 0xFF, 0xFF, 0xE0, 0x03, 0xFF, 0xFF, 0xE0, 0x03, 0xFF, 0xFF, 0xC0, 0x01, 0xFF, 0xFF, 0xC0, 0x00, 0x7F, 0xFF, 0x80, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x80, 0x01, 0xFF, 0xFF, 0x00, 0x1D, 0x03, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFC, 0x00, 0x0F, 0xFF, 0xFC, 0x00, 0x0F, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x03, 0xFE, 0x89, 0x00]]
        }
        , {
            _F3: "spr_text_playingto",
            width: 131,
            height: 34,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 65,
            _S3: 17,
            _Z3: 7,
            _T3: 124,
            __3: 5,
            _U3: 32,
            _V3: 1,
            _W3: 1,
            _X3: [810],
            _Y3: [[0xD5, 0x00, 0x02, 0xFF, 0x83, 0xC0, 0x8C, 0x00, 0x03, 0x01, 0xFF, 0xE7, 0xC0, 0x87, 0x00, 0x00, 0x07, 0x83, 0x00, 0x07, 0x01, 0xFF, 0xF7, 0xE0, 0x00, 0x00, 0x01, 0xE0, 0x83, 0x00, 0x01, 0x0F, 0x80, 0x82, 0x00, 0x07, 0x01, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x03, 0xE0, 0x83, 0x00, 0x01, 0x0F, 0x80, 0x82, 0x00, 0x07, 0x01, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x03, 0xF0, 0x83, 0x00, 0x01, 0x0F, 0x80, 0x82, 0x00, 0x07, 0x01, 0xFF, 0xFF,
                0xE0, 0x00, 0x00, 0x03, 0xF7, 0x83, 0x00, 0x0D, 0x0F, 0x80, 0x1E, 0x00, 0x00, 0x01, 0xF8, 0xFF, 0xE3, 0xF8, 0x00, 0x03, 0xFF, 0x80, 0x82, 0x00, 0x16, 0x3F, 0xE0, 0x7F, 0x80, 0x00, 0x01, 0xF9, 0xFF, 0xEF, 0xFC, 0x70, 0x79, 0xFF, 0xFE, 0x07, 0xFE, 0x00, 0x3F, 0xE0, 0xFF, 0xE0, 0x00, 0x01, 0x82, 0xFF, 0x0D, 0xFE, 0xF8, 0x7F, 0xFF, 0xFF, 0x8F, 0xFF, 0x00, 0x3F, 0xE0, 0xFF, 0xF0, 0x00, 0x01, 0x83, 0xFF, 0x0C, 0xF8, 0x7F, 0xFF, 0xFF, 0xDF, 0xFF, 0x00, 0x3F, 0xE3, 0xFF, 0xF0, 0x00, 0x01, 0x83, 0xFF, 0x01, 0xF8, 0x7F, 0x83, 0xFF, 0x0C, 0x00, 0x3F, 0xE3, 0xFF, 0xF8, 0x00, 0x01, 0xFF, 0xF7, 0xFF, 0xFF,
                0xF8, 0x7F, 0x83, 0xFF, 0x5D, 0x00, 0x0F, 0x83, 0xF1, 0xF8, 0x00, 0x01, 0xFF, 0xC7, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xC7, 0xFF, 0x3F, 0x00, 0x0F, 0x83, 0xF1, 0xF8, 0x00, 0x01, 0xFF, 0x07, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0xC7, 0xFE, 0x1F, 0x00, 0x0F, 0x9F, 0xF1, 0xF8, 0x00, 0x01, 0xF8, 0x07, 0xFF, 0xFF, 0xF8, 0x7F, 0xFF, 0x87, 0xFE, 0x1F, 0x00, 0x0F, 0xFF, 0xF9, 0xF8, 0x00, 0x01, 0xF8, 0x07, 0xFF, 0x1F, 0xF8, 0xFF, 0xFF, 0x87, 0xFE, 0x3F, 0x00, 0x0F, 0xFF, 0xFF, 0xF8, 0x00, 0x01, 0xF8, 0x07, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0x87, 0xFF, 0x3F, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x01, 0xF8, 0x07, 0x84,
                0xFF, 0x0C, 0x87, 0xFF, 0xFF, 0x00, 0x0F, 0xFE, 0xFF, 0xF0, 0x00, 0x00, 0xF0, 0x07, 0xDF, 0x82, 0xFF, 0x08, 0xEF, 0x87, 0xFF, 0xFF, 0x00, 0x07, 0xFC, 0xFF, 0xE0, 0x82, 0x00, 0x0D, 0x03, 0xC7, 0xFF, 0xFF, 0xFD, 0xC7, 0x83, 0xFF, 0xFF, 0x00, 0x03, 0xF8, 0x3F, 0xC0, 0x83, 0x00, 0x0B, 0x03, 0xFE, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x01, 0xF0, 0x1E, 0x86, 0x00, 0x05, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xFF, 0x8A, 0x00, 0x05, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xFF, 0x8A, 0x00, 0x05, 0xFF, 0xF8, 0x00, 0x00, 0x7F, 0xFF, 0x8A, 0x00, 0x05, 0x7F, 0xF8, 0x00, 0x00, 0x3F, 0xFE, 0x8A, 0x00, 0x05, 0x7F, 0xF0,
                0x00, 0x00, 0x3F, 0xFE, 0x8A, 0x00, 0x05, 0x0F, 0x80, 0x00, 0x00, 0x0F, 0xFC, 0x8E, 0x00, 0x01, 0x03, 0xF0, 0x96, 0x00]]
        }, {
            _F3: "spr_text_goals",
            width: 68,
            height: 33,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 34,
            _S3: 16,
            _Z3: 3,
            _T3: 62,
            __3: 2,
            _U3: 28,
            _V3: 1,
            _W3: 1,
            _X3: [759],
            _Y3: [[0x96, 0x00, 0x01, 0x03, 0x80, 0x86, 0x00, 0x01, 0x07, 0x80, 0x86, 0x00, 0x01, 0x07, 0xC0, 0x86, 0x00, 0x01, 0x07, 0xC0, 0x86, 0x00, 0x01, 0x07, 0xC0, 0x86, 0x00, 0x21, 0x07, 0xC1, 0xC0, 0x00, 0x00, 0xFF, 0xC3, 0xF0, 0x1F, 0x87, 0xCF, 0xF8, 0x00, 0x03, 0xFF, 0xCF, 0xFC, 0x7F, 0xE7, 0xFF, 0xFE, 0x00, 0x07, 0xFF,
                0xDF, 0xFE, 0xFF, 0xF7, 0xFF, 0xFE, 0x00, 0x07, 0xFF, 0xDF, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x85, 0xFF, 0x05, 0xFE, 0x00, 0x1F, 0xCF, 0xFF, 0x3F, 0x82, 0xFF, 0x05, 0xFE, 0x00, 0x1F, 0x87, 0xFE, 0x1F, 0x82, 0xFF, 0x05, 0xFE, 0x00, 0x1F, 0x87, 0xFE, 0x1F, 0x82, 0xFF, 0x05, 0xFE, 0x00, 0x1F, 0x87, 0xFE, 0x1F, 0x82, 0xFF, 0x03, 0xFE, 0x00, 0x0F, 0xDF, 0x84, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x85, 0xFF, 0x04, 0xFE, 0x00, 0x0F, 0xFF, 0xDF, 0x83, 0xFF, 0x05, 0xFE, 0x00, 0x0F, 0xFF, 0xCF, 0xFE, 0x82, 0xFF, 0x16, 0xFE, 0x00, 0x0F, 0xFF, 0xC7, 0xF8, 0x3F, 0xFB, 0x9F, 0xF8, 0x00, 0x0F, 0xFF, 0xC3, 0xF0,
                0x1F, 0xF3, 0x87, 0xF0, 0x00, 0x0F, 0xFF, 0xC0, 0x85, 0x00, 0x02, 0x0F, 0xFF, 0xC0, 0x85, 0x00, 0x02, 0x0F, 0xFF, 0xC0, 0x85, 0x00, 0x02, 0x07, 0xFF, 0x80, 0x85, 0x00, 0x01, 0x03, 0xFF, 0x87, 0x00, 0x00, 0x7C, 0xAA, 0x00]]
        }, {
            _F3: "spr_font_goals1",
            width: 50,
            height: 75,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _Z3: 1,
            _T3: 48,
            __3: 3,
            _U3: 73,
            _V3: 1,
            _W3: 1,
            _X3: [792, 762, 788, 798, 807, 800, 794, 803, 789, 786],
            _Y3: [[0x9D, 0x00, 0x01, 0x07, 0xE0, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xE0,
                0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x7E, 0xC0, 0x00, 0x07, 0xFF, 0xFE, 0x7F, 0xFF, 0xC0, 0x00, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0xF8, 0x1F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xE0, 0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x00,
                0x0F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x7E, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F,
                0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xE0,
                0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x00, 0x15, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0xFE, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x00, 0x83, 0xFF, 0x82, 0x00, 0x83, 0xFF, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x82,
                0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0x80, 0x83, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x1F, 0xF0, 0x90, 0x00], [0x96, 0x00, 0x01, 0x07, 0xE0, 0x84, 0x00, 0x01, 0x1F, 0xF0, 0x84, 0x00, 0x01, 0x3F, 0xF8, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x84, 0x00, 0x01, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xFE, 0x83, 0x00,
                0x02, 0x3F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F,
                0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F,
                0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFC, 0x84, 0x00, 0x01, 0x3F, 0xFC, 0x84, 0x00, 0x01, 0x3F, 0xF8, 0x84, 0x00, 0x01, 0x1F,
                0xF8, 0x84, 0x00, 0x01, 0x0F, 0xE0, 0x89, 0x00], [0x96, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x4D, 0xF8, 0x00, 0x1F, 0xFF, 0xF8, 0x03, 0xFF,
                0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x01, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x80, 0x01, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x07, 0xFC, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x01, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF,
                0xF8, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x82, 0xFF, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x82, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFC,
                0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x02, 0x3F, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF,
                0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x83, 0xFF, 0x00, 0xF0, 0xA3, 0x00], [0x96, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x7F, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF,
                0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x62, 0xF8, 0x00, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x07, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xC0, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x00,
                0xFF, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x1F, 0xFC, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x07, 0xF0, 0x00, 0x3F, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xE0,
                0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xE0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x6E, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x03, 0x80, 0x07, 0xFF, 0xFF, 0xF8, 0x00, 0x0F, 0xF0, 0x00, 0x3F, 0xFF, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xFF, 0xF8, 0x00, 0x3F, 0xF8, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x7F, 0xFE, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x7F,
                0xFF, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x7F, 0xFF, 0x80, 0x07, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0xE0, 0x0F, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0xFC, 0xFF, 0xFF, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x01, 0x83, 0xFF, 0x82, 0x00, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xC0, 0x82,
                0x00, 0x02, 0x03, 0xFF, 0xFF, 0x84, 0x00, 0x01, 0x3F, 0xF8, 0x89, 0x00], [0x97, 0x00, 0x01, 0x0F, 0x80, 0x84, 0x00, 0x01, 0x3F, 0xE0, 0x84, 0x00, 0x01, 0x7F, 0xF0, 0x84, 0x00, 0x01, 0xFF, 0xF0, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xF8, 0x83, 0x00, 0x02,
                0xFF, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x18, 0xF8, 0x00,
                0x00, 0x03, 0xFF, 0xFE, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0xFF, 0xF8, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00,
                0x07, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF8,
                0x84, 0x00, 0x01, 0xFF, 0xF8, 0x84, 0x00, 0x01, 0xFF, 0xF0, 0x84, 0x00, 0x01, 0x7F, 0xF0, 0x84, 0x00, 0x01, 0x3F, 0xE0, 0x84, 0x00, 0x01, 0x0F, 0x80, 0x88, 0x00], [0xA3, 0x00, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x1F,
                0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x03, 0xF0, 0x00, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x01, 0x1F, 0xFF, 0x84, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xFC, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xC0,
                0x00, 0x1F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x84, 0x00, 0x01, 0xFF, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x7F, 0xFE, 0x84, 0x00, 0x01, 0x3F, 0xFE, 0x84, 0x00, 0x3B, 0x3F, 0xFE, 0x00, 0x01, 0x80, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x0F, 0xF0,
                0x00, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFE, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xC0, 0x1F, 0xFF, 0xFC, 0x00, 0x7F, 0xFF, 0xFD, 0xFF, 0xFF, 0xFC, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x7F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x07, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x00, 0xFE,
                0x82, 0x00, 0x82, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0x84, 0x00, 0x01, 0x7F, 0xF0, 0x90, 0x00], [0xA4, 0x00, 0x01, 0x03, 0xF8, 0x84, 0x00, 0x02, 0x3F, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x02, 0xC0, 0x00, 0x00, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03,
                0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x27, 0xF8, 0x00, 0x0F, 0xFF, 0xFC, 0x07, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xF0, 0x01, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x00, 0xFF, 0xE0, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0xFF, 0x80, 0x83, 0x00, 0x03, 0x1F, 0xFF, 0x3F, 0xFE, 0x82, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xFC, 0x00, 0x00, 0x1F, 0x82,
                0xFF, 0x03, 0xFE, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x83, 0xFF, 0x7E, 0xFC, 0x00, 0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xF0, 0x07, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x01, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x7F, 0xFE,
                0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x7F, 0xFE, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x1F, 0xFF, 0xE0, 0x01, 0xFF, 0xFE, 0x00, 0x1F, 0xFF, 0xF0, 0x03, 0xFF, 0xFC, 0x00, 0x0F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x01, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83,
                0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xE0, 0x83, 0x00, 0x01, 0x7F, 0xFF, 0x84, 0x00, 0x01, 0x07, 0xF0, 0x90, 0x00], [0xA2, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x0F, 0x84, 0xFF, 0x01, 0x00, 0x1F, 0x84,
                0xFF, 0x01, 0x00, 0x1F, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x3F, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x84, 0xFF, 0x01, 0x80, 0x1F, 0x84, 0xFF, 0x01, 0x00, 0x0F, 0x84, 0xFF, 0x01, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF,
                0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x83, 0x00, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x83, 0x00, 0x02, 0xFF,
                0xFF, 0x80, 0x83, 0x00, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x1F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x3F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0x80, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x02, 0x01, 0xFF, 0xFE, 0x83, 0x00, 0x02,
                0x03, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0x03, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xE0, 0x83, 0x00, 0x02, 0x0F, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0x07, 0xFF, 0x80, 0x83, 0x00, 0x02, 0x07, 0xFF, 0x80, 0x83, 0x00, 0x01, 0x03, 0xFF, 0x84, 0x00, 0x01, 0x01, 0xFE, 0x85, 0x00, 0x00, 0x78, 0x8B, 0x00], [0xA4, 0x00, 0x01, 0x7F, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00,
                0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x1F, 0x83, 0xFF, 0x56, 0xFC, 0x00, 0x1F, 0xFF, 0xF8, 0x1F, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xC0, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F,
                0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03,
                0x83, 0xFF, 0x02, 0xE0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x56, 0xFC, 0x00, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xE0, 0x03, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x3F, 0xFF, 0x80,
                0x00, 0xFF, 0xFE, 0x00, 0x3F, 0xFF, 0xC0, 0x01, 0xFF, 0xFE, 0x00, 0x1F, 0xFF, 0xE0, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xFC, 0x0F, 0xFF, 0xFC, 0x00, 0x1F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xFC, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03,
                0x01, 0xFF, 0xFF, 0xE0, 0x83, 0x00, 0x01, 0x7F, 0xFF, 0x97, 0x00], [0xA4, 0x00, 0x01, 0x3F, 0xFC, 0x84, 0x00, 0x01, 0xFF, 0xFF, 0x83, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF0, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xFC, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x83, 0xFF, 0x02, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x02, 0x80, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xC0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xE0, 0x00, 0x0F, 0x83, 0xFF, 0x7E, 0xF0, 0x00, 0x0F,
                0xFF, 0xFE, 0x7F, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF0, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xF8, 0x00, 0x1F, 0xFF, 0x80, 0x01, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x3F, 0xFF, 0x80,
                0x01, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0x80, 0x01, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0x80, 0x03, 0xFF, 0xFC, 0x00, 0x1F, 0xFF, 0xC0, 0x03, 0xFF, 0xFC, 0x16, 0x00, 0x1F, 0xFF, 0xE0, 0x07, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xFC, 0x3F, 0xFF, 0xF8, 0x00, 0x0F, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x83, 0xFF, 0x02, 0xF8, 0x00, 0x01, 0x83, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x83, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x3F, 0x82, 0xFF,
                0x03, 0xF0, 0x00, 0x00, 0x1F, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x00, 0xC0, 0x82, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0x80, 0x82, 0x00, 0x02, 0x3F, 0xFF, 0xFF, 0x82, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xFE, 0x82, 0x00, 0x82, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x01, 0x82,
                0xFF, 0x03, 0xF0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xFC, 0x83, 0x00, 0x02, 0xFF, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0x7F, 0xFF, 0xC0, 0x83, 0x00, 0x01, 0x3F, 0xFC, 0x98, 0x00]]
        }, {
            _F3: "spr_w_arrow",
            width: 36,
            height: 9,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 18,
            _S3: 4,
            _T3: 35,
            _U3: 8,
            _V3: 1,
            _W3: 1,
            _X3: [375]
        }, {
            _F3: "spr_w_heart",
            width: 19,
            height: 18,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 9,
            _S3: 9,
            _T3: 17,
            _U3: 17,
            _V3: 1,
            _W3: 1,
            _X3: [374]
        }
        , {
            _F3: "spr_w_magnet",
            width: 22,
            height: 40,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 11,
            _S3: 38,
            _T3: 21,
            _U3: 39,
            _V3: 1,
            _W3: 1,
            _X3: [718]
        }, {
            _F3: "spr_w_bow",
            width: 24,
            height: 43,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 12,
            _S3: 21,
            _T3: 23,
            _U3: 42,
            _V3: 1,
            _W3: 1,
            _X3: [723]
        }, {
            _F3: "spr_w_flask",
            width: 8,
            height: 22,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 4,
            _S3: 11,
            _T3: 7,
            _U3: 20,
            _V3: 1,
            _W3: 1,
            _X3: [146]
        }, {
            _F3: "spr_w_frostbeam",
            width: 85,
            height: 73,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 42,
            _S3: 36,
            _Z3: 5,
            _T3: 79,
            __3: 5,
            _U3: 67,
            _V3: 1,
            _W3: 1,
            _X3: [825, 821, 816, 813, 819, 817, 826, 820,
                815, 814, 818, 822],
            _Y3: [[0xBB, 0x00, 0x01, 0x03, 0xFF, 0x88, 0x00, 0x02, 0x0F, 0xFF, 0xE0, 0x87, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x87, 0x00, 0x02, 0x7F, 0xFF, 0xFC, 0x86, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x86, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x00, 0x80, 0x85, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x00, 0xC0, 0x85, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x00, 0xE0, 0x83, 0x00, 0x02, 0xE0, 0x00, 0x1F, 0x82, 0xFF, 0x00, 0xF8, 0x82, 0x00, 0x03, 0x03, 0xF8, 0x00, 0x3F, 0x82, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x03, 0x07, 0xFC, 0x00, 0x7F, 0x83, 0xFF, 0x82, 0x00, 0x02, 0x0F, 0xFE, 0x00, 0x84, 0xFF, 0x05, 0x80, 0x00, 0x00, 0x1F,
                0xFF, 0x81, 0x84, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF,
                0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC,
                0x00, 0x07, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x07, 0xF0, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x07, 0xC0, 0x00, 0x3F, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x07, 0x80, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x0E, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x03, 0xFF, 0x82, 0x00, 0x07, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x01, 0xFE, 0x82, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x00, 0x7C,
                0x82, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF0, 0x86, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xE0, 0x86, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xC0, 0x87, 0x00, 0x01, 0xFF, 0xFF, 0x88, 0x00, 0x01, 0x1F, 0xFC, 0xBD, 0x00], [0xE7, 0x00, 0x02, 0x03, 0xFF, 0x80, 0x87, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x87, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x86, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0xC0, 0x00, 0x03, 0x82, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x03, 0x03, 0xFC, 0x00, 0x0F, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xC0, 0x3F, 0x83, 0xFF, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0xFC, 0x84, 0xFF, 0x03, 0x80, 0x00,
                0x00, 0x1F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07,
                0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC,
                0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x26, 0xE0, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x82, 0x00, 0x01, 0x7F, 0xFF, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF0, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFC, 0x83, 0x00, 0x00, 0x7F,
                0x83, 0x00, 0x01, 0x03, 0xF0, 0xE4, 0x00], [0xE8, 0x00, 0x01, 0x3F, 0xF8, 0x87, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0x85, 0x00, 0x84, 0xFF, 0x00, 0xC0, 0x83, 0x00, 0x00, 0x07, 0x84, 0xFF, 0x00, 0xE0, 0x83, 0x00, 0x85, 0xFF, 0x00, 0xF8, 0x82, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x82, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8,
                0x00, 0x00, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF,
                0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00,
                0x3F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x7F, 0xFF, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xE0, 0x82, 0x00, 0x01, 0x07, 0xFC, 0x83, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01, 0x01, 0xF0, 0xE4, 0x00], [0xFF, 0x00, 0x90, 0x00, 0x00, 0xFF, 0x83, 0x00, 0x01, 0x03, 0xF0, 0x82, 0x00, 0x02, 0x03, 0xFF, 0xF0, 0x82, 0x00, 0x01, 0x3F, 0xFC, 0x82, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x82, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00,
                0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00,
                0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x03, 0x88, 0xFF, 0x01, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87,
                0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x82, 0x00, 0x07, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFE, 0x82, 0x00, 0x07, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x83, 0x00, 0x06, 0x7F, 0xC0, 0x00, 0x00, 0x01, 0xFF, 0xF0, 0xE4, 0x00], [0xE4, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01, 0x01, 0xF0, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xE0, 0x82, 0x00, 0x01,
                0x07, 0xFC, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x7F, 0xFF, 0x82, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02,
                0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x03, 0x88, 0xFF,
                0x01, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x82, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x00, 0xFC, 0x83, 0x00, 0x85,
                0xFF, 0x00, 0xF8, 0x83, 0x00, 0x00, 0x07, 0x84, 0xFF, 0x00, 0xE0, 0x84, 0x00, 0x84, 0xFF, 0x00, 0xC0, 0x86, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0x88, 0x00, 0x01, 0x3F, 0xF8, 0xE5, 0x00], [0xE4, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01, 0x03, 0xF0, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFC, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF0, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0xFC, 0x82, 0x00, 0x01, 0x7F, 0xFF, 0x82, 0x00, 0x21, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x7F, 0xFF, 0xFF,
                0xF8, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00,
                0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00,
                0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x05, 0xC0, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x84, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x3F, 0x83, 0xFF, 0x82, 0x00, 0x03, 0x03, 0xFC, 0x00, 0x0F, 0x82, 0xFF, 0x00, 0xFE, 0x83, 0x00, 0x02, 0xC0, 0x00, 0x03, 0x82, 0xFF, 0x00, 0xFC, 0x86, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF0, 0x86, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x86, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x87, 0x00, 0x02, 0x03,
                0xFF, 0x80, 0xE5, 0x00], [0xB8, 0x00, 0x01, 0x1F, 0xFC, 0x88, 0x00, 0x01, 0xFF, 0xFF, 0x87, 0x00, 0x03, 0x01, 0xFF, 0xFF, 0xC0, 0x86, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0xE0, 0x86, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xF0, 0x86, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xF8, 0x82, 0x00, 0x00, 0x7C, 0x82, 0x00, 0x07, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x01, 0xFE, 0x82, 0x00, 0x07, 0x1F, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x03, 0xFF, 0x82, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x07, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x07, 0x80, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x07, 0xC0, 0x00, 0x3F,
                0xFF, 0xE0, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x06, 0xF0, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF,
                0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03,
                0x87, 0xFF, 0x02, 0xF8, 0x00, 0x01, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x05, 0xC0, 0x00, 0x00, 0x1F, 0xFF, 0x81, 0x84, 0xFF, 0x05, 0xC0, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x84, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x7F, 0x83, 0xFF, 0x82, 0x00, 0x03, 0x03, 0xF8, 0x00, 0x3F, 0x82, 0xFF, 0x00, 0xFC, 0x83, 0x00, 0x02, 0xE0, 0x00, 0x1F, 0x82, 0xFF, 0x00, 0xF8, 0x85, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x00, 0xE0, 0x85, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x00, 0xC0, 0x85, 0x00, 0x00, 0x03, 0x82, 0xFF,
                0x00, 0x80, 0x85, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x87, 0x00, 0x02, 0x7F, 0xFF, 0xFC, 0x87, 0x00, 0x02, 0x3F, 0xFF, 0xF8, 0x87, 0x00, 0x02, 0x0F, 0xFF, 0xE0, 0x87, 0x00, 0x01, 0x03, 0xFF, 0xBA, 0x00], [0xE4, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01, 0x03, 0xF0, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFC, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF0, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0xFC, 0x82, 0x00, 0x01, 0x7F, 0xFF, 0x82, 0x00, 0x21, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
                0x7F, 0xFF, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88,
                0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02,
                0xF8, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x05, 0xC0, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x84, 0xFF, 0x06, 0x80, 0x00, 0x00, 0x07, 0xFF, 0xC0, 0x3F, 0x83, 0xFF, 0x82, 0x00, 0x03, 0x03, 0xFC, 0x00, 0x0F, 0x82, 0xFF, 0x00, 0xFE, 0x83, 0x00, 0x02, 0xC0, 0x00, 0x03, 0x82, 0xFF, 0x00, 0xFC, 0x86, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF0, 0x86, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x86, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x87,
                0x00, 0x02, 0x03, 0xFF, 0x80, 0xE5, 0x00], [0xE4, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01, 0x01, 0xF0, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xE0, 0x82, 0x00, 0x01, 0x07, 0xFC, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF8, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x7F, 0xFF, 0x82, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xE0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x03, 0x87, 0xFF,
                0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF,
                0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x03, 0x88, 0xFF, 0x01, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x86, 0xFF,
                0x03, 0xC0, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x82, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x00, 0xFC, 0x83, 0x00, 0x85, 0xFF, 0x00, 0xF8, 0x83, 0x00, 0x00, 0x07, 0x84, 0xFF, 0x00, 0xE0, 0x84, 0x00, 0x84, 0xFF, 0x00, 0xC0, 0x86, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0x88, 0x00, 0x01, 0x3F, 0xF8, 0xE5, 0x00], [0xE4, 0x00, 0x06, 0x7F, 0xC0, 0x00, 0x00, 0x01, 0xFF, 0xF0, 0x82, 0x00, 0x07, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x82, 0x00, 0x07, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x3F, 0xFF, 0xFE, 0x82, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x82, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03,
                0x80, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07,
                0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC,
                0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF8, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x82, 0x00, 0x02, 0x03, 0xFF, 0xF0, 0x82, 0x00, 0x01, 0x3F, 0xFC, 0x83, 0x00, 0x00, 0xFF, 0x83, 0x00, 0x01, 0x03, 0xF0, 0xFF, 0x00, 0x90, 0x00], [0xE8, 0x00, 0x01, 0x3F, 0xF8, 0x87, 0x00, 0x02, 0x03, 0xFF, 0xFF, 0x85, 0x00, 0x84, 0xFF, 0x00, 0xC0, 0x83,
                0x00, 0x00, 0x07, 0x84, 0xFF, 0x00, 0xE0, 0x83, 0x00, 0x85, 0xFF, 0x00, 0xF8, 0x82, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x82, 0x00, 0x00, 0x0F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00,
                0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00,
                0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x86, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x0F, 0x82, 0xFF, 0x03, 0xF0, 0x00, 0x7F, 0xFF, 0x82, 0x00, 0x02,
                0x07, 0xFF, 0xF8, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xE0, 0x82, 0x00, 0x01, 0x07, 0xFC, 0x83, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01, 0x01, 0xF0, 0xE4, 0x00], [0xE7, 0x00, 0x02, 0x03, 0xFF, 0x80, 0x87, 0x00, 0x02, 0x0F, 0xFF, 0xF8, 0x87, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xC0, 0x86, 0x00, 0x03, 0x7F, 0xFF, 0xFF, 0xF0, 0x83, 0x00, 0x02, 0xC0, 0x00, 0x03, 0x82, 0xFF, 0x00, 0xFC, 0x82, 0x00, 0x03, 0x03, 0xFC, 0x00, 0x0F, 0x82, 0xFF, 0x00, 0xFE, 0x82, 0x00, 0x03, 0x07, 0xFF, 0xC0, 0x3F, 0x83, 0xFF, 0x82, 0x00, 0x02, 0x0F, 0xFF, 0xFC, 0x84, 0xFF, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x86,
                0xFF, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x02, 0xE0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x00, 0x87, 0xFF, 0x02, 0xF0, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01,
                0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x88, 0xFF, 0x01, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFE, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87,
                0xFF, 0x02, 0xFC, 0x00, 0x03, 0x87, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x87, 0xFF, 0x02, 0xF8, 0x00, 0x00, 0x87, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x26, 0xE0, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xF8, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xE0, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x0F, 0xFF, 0xFC, 0x82, 0x00, 0x01, 0x7F, 0xFF, 0x82, 0x00, 0x02, 0x07, 0xFF, 0xF0, 0x82, 0x00, 0x01, 0x1F, 0xFE, 0x82, 0x00, 0x02, 0x01, 0xFF, 0xC0, 0x82, 0x00, 0x01, 0x0F, 0xFC, 0x83, 0x00, 0x00, 0x7F, 0x83, 0x00, 0x01,
                0x03, 0xF0, 0xE4, 0x00]]
        }, {
            _F3: "spr_explosion",
            width: 218,
            height: 218,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 109,
            _S3: 109,
            _Z3: 7,
            _T3: 210,
            __3: 7,
            _U3: 210,
            _V3: 1,
            _W3: 1,
            _X3: [851]
        }, {
            _F3: "spr_basket",
            width: 78,
            height: 80,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 39,
            _S3: 10,
            _T3: 76,
            _U3: 79,
            _V3: 1,
            _W3: 1,
            _X3: [835]
        }, {
            _F3: "msk_basket",
            width: 78,
            height: 80,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 39,
            _S3: 10,
            _Z3: 7,
            _T3: 70,
            __3: 5,
            _U3: 15,
            _V3: 1,
            _W3: 1,
            _X3: [706],
            _Y3: [[0xB2, 0x00, 0x86, 0xFF, 0x02, 0xFC, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00,
                0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xFE, 0x00, 0x00, 0x86, 0xFF, 0x00, 0xFC, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00]]
        }, {
            _F3: "spr_basketball",
            width: 22,
            height: 22,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 11,
            _S3: 11,
            _Z3: 1,
            _T3: 20,
            __3: 1,
            _U3: 20,
            _V3: 1,
            _W3: 1,
            _X3: [447]
        }, {
            _F3: "spr_blackhole",
            width: 17,
            height: 17,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 8,
            _S3: 8,
            _T3: 16,
            _U3: 16,
            _V3: 1,
            _W3: 1,
            _X3: [324],
            _Y3: [[0x31, 0x03, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xFC, 0x00, 0x3F, 0xFE, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0x00, 0x7F, 0xFF, 0x00, 0x3F, 0xFE, 0x00, 0x1F, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x03, 0xE0, 0x00, 0x00]]
        }, {
            _F3: "spr_geyserwater2",
            width: 10,
            height: 6,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 5,
            _S3: 3,
            _Z3: 1,
            _T3: 9,
            _U3: 5,
            _V3: 1,
            _W3: 1,
            _X3: [26, 27, 28, 36],
            _Y3: [[0x0A, 0x07, 0x80, 0x1F, 0xC0, 0x3F, 0xC0, 0x3F, 0xC0,
                0x0F, 0x80, 0x03, 0x00, 0x00], [0x0A, 0x07, 0x80, 0x1F, 0xC0, 0x3F, 0xC0, 0x3F, 0xC0, 0x0F, 0x80, 0x03, 0x00, 0x00], [0x0A, 0x07, 0x80, 0x1F, 0xC0, 0x3F, 0xC0, 0x3F, 0xC0, 0x0F, 0x80, 0x03, 0x00, 0x00], [0x0A, 0x07, 0x80, 0x1F, 0xC0, 0x7F, 0xC0, 0x3F, 0xC0, 0x0F, 0x80, 0x03, 0x00, 0x00]]
        }, {
            _F3: "spr_geyserdrop",
            width: 21,
            height: 11,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 15,
            _S3: 5,
            _Z3: 2,
            _T3: 20,
            _U3: 10,
            _V3: 1,
            _W3: 1,
            _X3: [176, 177, 186, 175],
            _Y3: [[0x1F, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xF0, 0x03, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8,
                0x03, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x07, 0x00, 0x80], [0x1F, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xF0, 0x03, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x07, 0x00, 0x80], [0x1F, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xF0, 0x03, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x07, 0x00, 0x80], [0x1F, 0x00, 0x07, 0x80, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0xF0, 0x03, 0xFF, 0xF0, 0x0F, 0xFF, 0xF8,
                0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8, 0x03, 0xFF, 0xF0, 0x00, 0x7F, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x07, 0x00, 0x80]]
        }, {
            _F3: "spr_stopsign",
            width: 160,
            height: 158,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 80,
            _S3: 79,
            _Z3: 3,
            _T3: 158,
            __3: 1,
            _U3: 156,
            _V3: 1,
            _W3: 1,
            _X3: [849]
        }, {
            _F3: "spr_stopsignsmall",
            width: 40,
            height: 40,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 20,
            _S3: 20,
            _Z3: 1,
            _T3: 39,
            __3: 1,
            _U3: 39,
            _V3: 1,
            _W3: 1,
            _X3: [739]
        }, {
            _F3: "spr_brick",
            width: 34,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 17,
            _S3: 8,
            _T3: 33,
            _U3: 15,
            _V3: 1,
            _W3: 1,
            _X3: [669],
            _Y3: [[0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF,
                0x00, 0x80, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x01, 0x80, 0x3F, 0x82, 0xFF, 0x00, 0x00]]
        }, {
            _F3: "spr_fishinghook",
            width: 53,
            height: 45,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 10,
            _S3: 35,
            _T3: 52,
            _U3: 44,
            _V3: 1,
            _W3: 1,
            _X3: [782]
        }, {
            _F3: "spr_raindrop", width: 7, height: 13, _O3: !1, _P3: !1, preload: !1, _R3: 3, _S3: 6, _T3: 6, _U3: 12,
            _V3: 1, _W3: 1, _X3: [70]
        }, {
            _F3: "spr_raincloud",
            width: 54,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 27,
            _S3: 14,
            _T3: 53,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [737]
        }, {
            _F3: "spr_wp_crazyness",
            width: 32,
            height: 32,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 16,
            _S3: 16,
            _T3: 31,
            __3: 1,
            _U3: 31,
            _V3: 1,
            _W3: 1,
            _X3: [720],
            _Y3: [[0x84, 0x00, 0x79, 0xFF, 0xF0, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x07, 0xFF, 0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x3F, 0xC0, 0x1F, 0xE0, 0x3F, 0x00, 0x07, 0xF0, 0x7E, 0x01, 0xC3, 0xF8, 0x78, 0x3F, 0xF0, 0xFC, 0xF8, 0x7F, 0xFC, 0x7C, 0xF0, 0xE0, 0x1C, 0x3E, 0xF1, 0xC0, 0x0E,
                0x3E, 0xF1, 0xC3, 0x07, 0x1E, 0xF3, 0x8F, 0x87, 0x1F, 0xF3, 0x8F, 0x87, 0x1F, 0xF3, 0x87, 0x87, 0x1F, 0xF3, 0xC3, 0x87, 0x1F, 0x71, 0xE3, 0x8F, 0x1F, 0x79, 0xFF, 0x0F, 0x1F, 0x78, 0x78, 0x1E, 0x3F, 0x7C, 0x00, 0x3C, 0x3F, 0x3E, 0x00, 0xF8, 0x7E, 0x3F, 0x81, 0xF0, 0x7E, 0x1F, 0xFF, 0xE0, 0xFE, 0x0F, 0xFF, 0xC3, 0xFC, 0x03, 0xFF, 0x87, 0xF8, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00]]
        }, {
            _F3: "spr_fireballpar",
            width: 13,
            height: 13,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 6,
            _S3: 6,
            _T3: 12,
            _U3: 12,
            _V3: 1,
            _W3: 1,
            _X3: [157, 127, 87, 62, 45, 17, 10, 4, 2],
            _Y3: [[0x18, 0x07, 0x00, 0x1F, 0xC0, 0x3F, 0xE0, 0x7F, 0xF0, 0x7F, 0xF0, 0xFF, 0xF8, 0xFF, 0xF8, 0xFF, 0xF8, 0x7F, 0xF0, 0x7F, 0xF0, 0x3F, 0xE0, 0x1F, 0xC0, 0x07, 0x00, 0x00], [0x16, 0x0F, 0x00, 0x3F, 0xC0, 0x7F, 0xE0, 0x7F, 0xE0, 0xFF, 0xF0, 0xFF, 0xF0, 0xFF, 0xF0, 0x7F, 0xE0, 0x7F, 0xE0, 0x3F, 0xC0, 0x1F, 0x80, 0x0F, 0x82, 0x00], [0x14, 0x00, 0x00, 0x0E, 0x00, 0x1F, 0x80, 0x3F, 0xC0, 0x7F, 0xC0, 0x7F, 0xE0, 0x7F, 0xE0, 0x3F, 0xC0, 0x3F, 0xC0, 0x1F, 0x80, 0x06, 0x84, 0x00], [0x83, 0x00, 0x10, 0x07, 0x00, 0x0F, 0x80, 0x1F, 0xC0, 0x3F,
                0xE0, 0x3F, 0xE0, 0x3F, 0xC0, 0x1F, 0xC0, 0x0F, 0x80, 0x06, 0x84, 0x00], [0x83, 0x00, 0x0E, 0x0F, 0x00, 0x1F, 0x80, 0x3F, 0x80, 0x3F, 0xC0, 0x3F, 0xC0, 0x3F, 0x80, 0x1F, 0x00, 0x06, 0x86, 0x00], [0x85, 0x00, 0x0A, 0x06, 0x00, 0x0F, 0x00, 0x1F, 0x80, 0x1F, 0x80, 0x0F, 0x00, 0x06, 0x88, 0x00], [0x87, 0x00, 0x08, 0x07, 0x00, 0x0F, 0x80, 0x0F, 0x80, 0x0F, 0x80, 0x07, 0x88, 0x00], [0x87, 0x00, 0x06, 0x06, 0x00, 0x0F, 0x00, 0x0F, 0x00, 0x06, 0x8A, 0x00], [0x89, 0x00, 0x04, 0x02, 0x00, 0x07, 0x00, 0x02, 0x8A, 0x00]]
        }, {
            _F3: "spr_orb",
            width: 47,
            height: 45,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 23,
            _S3: 22,
            _T3: 46,
            __3: 1,
            _U3: 44,
            _V3: 1,
            _W3: 1,
            _X3: [776],
            _Y3: [[0x86, 0x00, 0x01, 0x18, 0x7E, 0x83, 0x00, 0x02, 0x1C, 0x7B, 0x80, 0x82, 0x00, 0x23, 0x1F, 0x3C, 0xE7, 0xC0, 0x00, 0x00, 0x13, 0xBC, 0x76, 0x70, 0x00, 0x0C, 0x11, 0xFF, 0xEE, 0x38, 0x00, 0x0F, 0x90, 0xFF, 0xFE, 0x18, 0x00, 0x07, 0xF8, 0xFF, 0xFF, 0x8C, 0x00, 0x03, 0x7B, 0xFF, 0xFF, 0xC4, 0x00, 0x03, 0x82, 0xFF, 0x08, 0xE7, 0x80, 0x01, 0xDF, 0xFF, 0xFF, 0xBF, 0x00, 0x00, 0x83, 0xFF, 0x01, 0x00, 0x00, 0x82, 0xFF, 0x02, 0xFE, 0x00, 0x07, 0x83, 0xFF, 0x01, 0xC0, 0x1E, 0x82, 0xFF, 0x02, 0xFC, 0xF0, 0x39, 0x83, 0xFF, 0x01, 0xFC, 0x67,
                0x83, 0xFF, 0x01, 0xF8, 0xC7, 0x82, 0xFF, 0x02, 0xFC, 0x30, 0xCF, 0x83, 0xFF, 0x01, 0xE0, 0x8F, 0x82, 0xFF, 0x02, 0xFD, 0xE0, 0x8F, 0x83, 0xFF, 0x01, 0x78, 0x9B, 0x82, 0xFF, 0x02, 0xFC, 0x0E, 0x9B, 0x82, 0xFF, 0x02, 0xFC, 0x0E, 0xDF, 0x82, 0xFF, 0x02, 0xFC, 0x7C, 0x7F, 0x83, 0xFF, 0x01, 0xE0, 0x3F, 0x83, 0xFF, 0x01, 0x00, 0x07, 0x82, 0xFF, 0x02, 0xFD, 0xC0, 0x0F, 0x82, 0xFF, 0x02, 0xFC, 0xF0, 0x0B, 0x82, 0xFF, 0x02, 0xFC, 0x3C, 0x0B, 0x83, 0xFF, 0x01, 0xFE, 0x0F, 0x83, 0xFF, 0x01, 0x80, 0x3D, 0x83, 0xFF, 0x0D, 0x00, 0x7B, 0x7F, 0xFF, 0xFF, 0xE3, 0xC0, 0x4E, 0x7F, 0xFF, 0xFF, 0xC0, 0xE0, 0x0E,
                0x82, 0xFF, 0x02, 0xC0, 0x20, 0x0F, 0x82, 0xFF, 0x17, 0xC0, 0x00, 0x1F, 0x23, 0xFF, 0xFF, 0xC0, 0x00, 0x1C, 0x61, 0xFF, 0xFF, 0xC0, 0x00, 0x38, 0x63, 0xFF, 0x9D, 0x80, 0x00, 0x20, 0x6F, 0xFF, 0x80, 0x82, 0x00, 0x02, 0xFC, 0x6D, 0x80, 0x82, 0x00, 0x01, 0xF8, 0x7F, 0x83, 0x00, 0x01, 0xE0, 0x73, 0x84, 0x00, 0x00, 0xE3, 0x84, 0x00, 0x00, 0xC1, 0x82, 0x00]]
        }, {
            _F3: "spr_boxingglove",
            width: 30,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _S3: 8,
            _T3: 29,
            _U3: 15,
            _V3: 1,
            _W3: 1,
            _X3: [590]
        }, {
            _F3: "spr_watch_tick",
            width: 53,
            height: 10,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: -3,
            _S3: 5,
            _T3: 52,
            _U3: 9,
            _V3: 1,
            _W3: 1,
            _X3: [641]
        }, {
            _F3: "spr_watch",
            width: 148,
            height: 182,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 74,
            _S3: 109,
            _T3: 147,
            _U3: 181,
            _V3: 1,
            _W3: 1,
            _X3: [850]
        }, {
            _F3: "spr_text_vs",
            width: 88,
            height: 110,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 44,
            _S3: 55,
            _V3: 1,
            _W3: 1,
            _X3: [842],
            _Y3: [[0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xB9, 0x00]]
        }, {
            _F3: "spr_menu_slimes_choose1",
            width: 63,
            height: 36,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 31,
            _S3: 25,
            _T3: 62,
            _U3: 35,
            _V3: 1,
            _W3: 1,
            _X3: [780]
        }, {
            _F3: "spr_menu_slimes_choose2",
            width: 63,
            height: 36,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 31,
            _S3: 25,
            _T3: 62,
            _U3: 35,
            _V3: 1,
            _W3: 1,
            _X3: [779]
        }, {
            _F3: "fghfghchoose",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [758],
            _Y3: [[0x00, 0x7C, 0x84, 0x00, 0x01, 0x3E, 0xFC, 0x84, 0x00, 0x01, 0x3F, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x00, 0x03, 0xEF, 0x00, 0x00, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xC0, 0x84, 0x00, 0x01, 0x03, 0xFC, 0x84,
                0x00, 0x01, 0x3F, 0x7C, 0x84, 0x00, 0x00, 0x3E]]
        }, {
            _F3: "spr_cloud",
            width: 199,
            height: 86,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 99,
            _S3: 70,
            _Z3: 1,
            _T3: 197,
            __3: 1,
            _U3: 83,
            _V3: 1,
            _W3: 1,
            _X3: [846],
            _Y3: [[0xA4, 0x00, 0x01, 0x03, 0x80, 0x96, 0x00, 0x01, 0x0F, 0xE0, 0x95, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0x80, 0x94, 0x00, 0x82, 0xFF, 0x00, 0xE0, 0x93, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x00, 0xF8, 0x93, 0x00, 0x83, 0xFF, 0x00, 0xFC, 0x92, 0x00, 0x00, 0x03, 0x83, 0xFF, 0x00, 0xFE, 0x92, 0x00, 0x00, 0x03, 0x84, 0xFF, 0x92, 0x00, 0x00, 0x0F, 0x84, 0xFF, 0x00, 0x80, 0x91, 0x00, 0x00, 0x0F, 0x84,
                0xFF, 0x00, 0x80, 0x91, 0x00, 0x00, 0x1F, 0x84, 0xFF, 0x00, 0xC0, 0x91, 0x00, 0x00, 0x3F, 0x84, 0xFF, 0x00, 0xC0, 0x90, 0x00, 0x00, 0x01, 0x85, 0xFF, 0x00, 0xE0, 0x90, 0x00, 0x00, 0x1F, 0x85, 0xFF, 0x00, 0xE0, 0x90, 0x00, 0x86, 0xFF, 0x00, 0xF0, 0x8F, 0x00, 0x00, 0x03, 0x86, 0xFF, 0x00, 0xF8, 0x8F, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x02, 0xFE, 0x03, 0xF8, 0x8C, 0x00, 0x01, 0x7C, 0x0F, 0x88, 0xFF, 0x00, 0xFE, 0x8B, 0x00, 0x00, 0x07, 0x8B, 0xFF, 0x00, 0xC0, 0x8A, 0x00, 0x00, 0x0F, 0x8B, 0xFF, 0x00, 0xE0, 0x8A, 0x00, 0x00, 0x3F, 0x8B, 0xFF, 0x00, 0xF8, 0x8A, 0x00, 0x00, 0x7F, 0x8C, 0xFF, 0x00, 0xC0,
                0x89, 0x00, 0x8D, 0xFF, 0x00, 0xF8, 0x88, 0x00, 0x00, 0x01, 0x8D, 0xFF, 0x00, 0xFE, 0x88, 0x00, 0x00, 0x03, 0x8E, 0xFF, 0x88, 0x00, 0x00, 0x07, 0x8E, 0xFF, 0x00, 0x80, 0x87, 0x00, 0x00, 0x3F, 0x8E, 0xFF, 0x00, 0xC0, 0x86, 0x00, 0x00, 0x07, 0x8F, 0xFF, 0x00, 0xE0, 0x86, 0x00, 0x00, 0x3F, 0x8F, 0xFF, 0x00, 0xF0, 0x86, 0x00, 0x00, 0x7F, 0x8F, 0xFF, 0x00, 0xFC, 0x85, 0x00, 0x00, 0x01, 0x90, 0xFF, 0x00, 0xFE, 0x85, 0x00, 0x00, 0x03, 0x91, 0xFF, 0x85, 0x00, 0x00, 0x07, 0x91, 0xFF, 0x00, 0x80, 0x84, 0x00, 0x00, 0x0F, 0x91, 0xFF, 0x00, 0xC0, 0x84, 0x00, 0x00, 0x0F, 0x91, 0xFF, 0x00, 0xFE, 0x84, 0x00,
                0x00, 0x1F, 0x92, 0xFF, 0x00, 0xC0, 0x83, 0x00, 0x00, 0x1F, 0x92, 0xFF, 0x00, 0xF8, 0x83, 0x00, 0x00, 0x3F, 0x92, 0xFF, 0x00, 0xFC, 0x83, 0x00, 0x00, 0x3F, 0x92, 0xFF, 0x00, 0xFE, 0x83, 0x00, 0x00, 0x3F, 0x93, 0xFF, 0x83, 0x00, 0x00, 0x3F, 0x93, 0xFF, 0x00, 0x80, 0x82, 0x00, 0x00, 0x7F, 0x93, 0xFF, 0x00, 0xC0, 0x82, 0x00, 0x00, 0x7F, 0x93, 0xFF, 0x00, 0xE0, 0x82, 0x00, 0x00, 0x7F, 0x93, 0xFF, 0x00, 0xE0, 0x82, 0x00, 0x94, 0xFF, 0x03, 0xE0, 0x00, 0x00, 0x01, 0x94, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x03, 0x94, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x07, 0x94, 0xFF, 0x03, 0xF0, 0x00, 0x00, 0x1F, 0x94, 0xFF,
                0x03, 0xF8, 0x00, 0x00, 0x3F, 0x94, 0xFF, 0x03, 0xFC, 0x00, 0x00, 0x7F, 0x94, 0xFF, 0x02, 0xFC, 0x00, 0x00, 0x95, 0xFF, 0x02, 0xFC, 0x00, 0x00, 0x95, 0xFF, 0x02, 0xFE, 0x00, 0x01, 0x96, 0xFF, 0x01, 0x00, 0x01, 0x96, 0xFF, 0x01, 0x00, 0x03, 0x96, 0xFF, 0x01, 0x80, 0x03, 0x96, 0xFF, 0x01, 0xC0, 0x07, 0x96, 0xFF, 0x01, 0xC0, 0x0F, 0x96, 0xFF, 0x01, 0xE0, 0x0F, 0x96, 0xFF, 0x01, 0xF0, 0x1F, 0x96, 0xFF, 0x01, 0xF0, 0x3F, 0x96, 0xFF, 0x01, 0xF8, 0x3F, 0x96, 0xFF, 0x01, 0xF8, 0x3F, 0x96, 0xFF, 0x01, 0xFC, 0x3F, 0x96, 0xFF, 0x01, 0xFC, 0x3F, 0x96, 0xFF, 0x01, 0xFC, 0x7F, 0x96, 0xFF, 0x01, 0xFC, 0x7F,
                0x96, 0xFF, 0x01, 0xFC, 0x7F, 0x96, 0xFF, 0x01, 0xFC, 0x3F, 0x96, 0xFF, 0x01, 0xFC, 0x3F, 0x96, 0xFF, 0x01, 0xFC, 0x3F, 0x96, 0xFF, 0x01, 0xF8, 0x1F, 0x96, 0xFF, 0x01, 0xF8, 0x1F, 0x96, 0xFF, 0x01, 0xF0, 0x0F, 0x96, 0xFF, 0x01, 0xF0, 0x0F, 0x96, 0xFF, 0x01, 0xF0, 0x07, 0x96, 0xFF, 0x01, 0xE0, 0x03, 0x96, 0xFF, 0x01, 0xC0, 0x03, 0x96, 0xFF, 0x01, 0x80, 0x00, 0x96, 0xFF, 0x02, 0x00, 0x00, 0x7F, 0x94, 0xFF, 0x03, 0xFE, 0x00, 0x00, 0x1F, 0x94, 0xFF, 0x00, 0xF0, 0x82, 0x00, 0x93, 0xFF, 0x00, 0xFE, 0xB3, 0x00]]
        }, {
            _F3: "spr_manabar", width: 225, height: 26, _O3: !1, _P3: !1, preload: !1, _R3: 112,
            _S3: 13, _T3: 224, _U3: 25, _V3: 1, _W3: 1, _X3: [833]
        }, {
            _F3: "spr_manabar2",
            width: 225,
            height: 26,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 112,
            _S3: 13,
            _T3: 224,
            _U3: 25,
            _V3: 1,
            _W3: 1,
            _X3: [832]
        }, {
            _F3: "spr_manaend",
            width: 14,
            height: 22,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 7,
            _S3: 11,
            _T3: 13,
            _U3: 20,
            _V3: 1,
            _W3: 1,
            _X3: [357, 1, 6, 14, 25, 48, 64, 94, 112, 143, 163, 185, 219, 272, 326],
            _Y3: [[0xAB, 0x00], [0x0D, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x9D, 0x00], [0x11, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x00,
                0x0C, 0x00, 0x08, 0x00, 0x08, 0x99, 0x00], [0x15, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x18, 0x00, 0x18, 0x00, 0x10, 0x00, 0x10, 0x95, 0x00], [0x17, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x38, 0x00, 0x38, 0x00, 0x30, 0x00, 0x30, 0x00, 0x20, 0x93, 0x00], [0x1B, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0x78, 0x00, 0x78, 0x00, 0x70, 0x00, 0x70, 0x00, 0x60, 0x00, 0x40, 0x00, 0x40, 0x8F, 0x00], [0x1D, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0xFC,
                0x00, 0xFC, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xE0, 0x00, 0xC0, 0x00, 0xC0, 0x00, 0x80, 0x8D, 0x00], [0x1E, 0x01, 0xFC, 0x01, 0xFC, 0x01, 0xFC, 0x01, 0xFC, 0x01, 0xFC, 0x01, 0xFC, 0x01, 0xFC, 0x01, 0xF8, 0x01, 0xF8, 0x01, 0xF0, 0x01, 0xF0, 0x01, 0xE0, 0x01, 0xC0, 0x01, 0xC0, 0x01, 0x80, 0x01, 0x8C, 0x00], [0x20, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xFC, 0x03, 0xF8, 0x03, 0xF8, 0x03, 0xF0, 0x03, 0xF0, 0x03, 0xE0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0x80, 0x03, 0x00, 0x02, 0x8A, 0x00], [0x22, 0x07, 0xFC, 0x07, 0xFC,
                0x07, 0xFC, 0x07, 0xFC, 0x07, 0xFC, 0x07, 0xFC, 0x07, 0xFC, 0x07, 0xF8, 0x07, 0xF8, 0x07, 0xF0, 0x07, 0xF0, 0x07, 0xE0, 0x07, 0xC0, 0x07, 0xC0, 0x07, 0x80, 0x07, 0x00, 0x06, 0x00, 0x04, 0x88, 0x00], [0x22, 0x0F, 0xFC, 0x0F, 0xFC, 0x0F, 0xFC, 0x0F, 0xFC, 0x0F, 0xFC, 0x0F, 0xFC, 0x0F, 0xFC, 0x0F, 0xF8, 0x0F, 0xF8, 0x0F, 0xF0, 0x0F, 0xF0, 0x0F, 0xE0, 0x0F, 0xC0, 0x0F, 0xC0, 0x0F, 0x80, 0x0F, 0x00, 0x0E, 0x00, 0x0C, 0x88, 0x00], [0x24, 0x1F, 0xFC, 0x1F, 0xFC, 0x1F, 0xFC, 0x1F, 0xFC, 0x1F, 0xFC, 0x1F, 0xFC, 0x1F, 0xFC, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF0, 0x1F, 0xF0, 0x1F, 0xE0, 0x1F, 0xC0, 0x1F, 0xC0,
                0x1F, 0x80, 0x1F, 0x00, 0x1E, 0x00, 0x1C, 0x00, 0x10, 0x86, 0x00], [0x24, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xFC, 0x3F, 0xF8, 0x3F, 0xF8, 0x3F, 0xF0, 0x3F, 0xF0, 0x3F, 0xE0, 0x3F, 0xC0, 0x3F, 0xC0, 0x3F, 0x80, 0x3F, 0x00, 0x3E, 0x00, 0x3C, 0x00, 0x30, 0x86, 0x00], [0x26, 0x7F, 0xFC, 0x7F, 0xFC, 0x7F, 0xFC, 0x7F, 0xFC, 0x7F, 0xFC, 0x7F, 0xFC, 0x7F, 0xFC, 0x7F, 0xF8, 0x7F, 0xF8, 0x7F, 0xF0, 0x7F, 0xF0, 0x7F, 0xE0, 0x7F, 0xC0, 0x7F, 0xC0, 0x7F, 0x80, 0x7F, 0x00, 0x7E, 0x00, 0x7C, 0x00, 0x70, 0x00, 0x40, 0x84, 0x00], [0x28, 0xFF, 0xFC, 0xFF, 0xFC, 0xFF,
                0xFC, 0xFF, 0xFC, 0xFF, 0xFC, 0xFF, 0xFC, 0xFF, 0xFC, 0xFF, 0xF8, 0xFF, 0xF8, 0xFF, 0xF0, 0xFF, 0xF0, 0xFF, 0xE0, 0xFF, 0xC0, 0xFF, 0xC0, 0xFF, 0x80, 0xFF, 0x00, 0xFE, 0x00, 0xFC, 0x00, 0xF0, 0x00, 0xC0, 0x00, 0x80, 0x82, 0x00]]
        }, {
            _F3: "spr_ai",
            width: 166,
            height: 148,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 74,
            _S3: 132,
            _Z3: 35,
            _T3: 138,
            __3: 31,
            _U3: 121,
            _V3: 1,
            _W3: 1,
            _X3: [841],
            _Y3: [[0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x90, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x00, 0xF8, 0x8F, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xF0, 0x8D, 0x00, 0x00, 0x0F, 0x85, 0xFF, 0x00, 0xC0,
                0x8C, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xFC, 0x8B, 0x00, 0x00, 0x01, 0x87, 0xFF, 0x00, 0xC0, 0x8A, 0x00, 0x00, 0x07, 0x87, 0xFF, 0x00, 0xFC, 0x8A, 0x00, 0x00, 0x1F, 0x88, 0xFF, 0x00, 0xC0, 0x89, 0x00, 0x00, 0x1F, 0x88, 0xFF, 0x00, 0xF0, 0x89, 0x00, 0x00, 0x0F, 0x88, 0xFF, 0x00, 0xFE, 0x89, 0x00, 0x00, 0x0F, 0x89, 0xFF, 0x00, 0x80, 0x88, 0x00, 0x00, 0x07, 0x89, 0xFF, 0x00, 0xF0, 0x88, 0x00, 0x00, 0x07, 0x89, 0xFF, 0x00, 0xFC, 0x88, 0x00, 0x00, 0x03, 0x8A, 0xFF, 0x88, 0x00, 0x00, 0x03, 0x8A, 0xFF, 0x00, 0xC0, 0x87, 0x00, 0x00, 0x01, 0x8A, 0xFF, 0x00, 0xF0, 0x87, 0x00, 0x00, 0x01, 0x8A, 0xFF,
                0x00, 0xF8, 0x88, 0x00, 0x8A, 0xFF, 0x00, 0xFE, 0x88, 0x00, 0x8B, 0xFF, 0x00, 0x80, 0x87, 0x00, 0x00, 0x7F, 0x8A, 0xFF, 0x00, 0xE0, 0x87, 0x00, 0x00, 0x7F, 0x8A, 0xFF, 0x00, 0xE0, 0x87, 0x00, 0x00, 0x7F, 0x8A, 0xFF, 0x00, 0xC0, 0x87, 0x00, 0x00, 0x3F, 0x8A, 0xFF, 0x00, 0xC0, 0x87, 0x00, 0x00, 0x3F, 0x8A, 0xFF, 0x00, 0x80, 0x87, 0x00, 0x00, 0x1F, 0x8A, 0xFF, 0x00, 0x80, 0x87, 0x00, 0x00, 0x1F, 0x8A, 0xFF, 0x88, 0x00, 0x00, 0x0F, 0x8A, 0xFF, 0x88, 0x00, 0x00, 0x0F, 0x89, 0xFF, 0x00, 0xFE, 0x88, 0x00, 0x00, 0x07, 0x89, 0xFF, 0x00, 0xFC, 0x88, 0x00, 0x00, 0x07, 0x89, 0xFF, 0x00, 0xFC, 0x88, 0x00,
                0x00, 0x03, 0x89, 0xFF, 0x00, 0xF8, 0x88, 0x00, 0x00, 0x03, 0x89, 0xFF, 0x00, 0xF8, 0x88, 0x00, 0x00, 0x03, 0x89, 0xFF, 0x00, 0xF0, 0x88, 0x00, 0x00, 0x01, 0x89, 0xFF, 0x00, 0xF0, 0x88, 0x00, 0x00, 0x01, 0x89, 0xFF, 0x00, 0xE0, 0x89, 0x00, 0x89, 0xFF, 0x00, 0xC0, 0x89, 0x00, 0x89, 0xFF, 0x00, 0xC0, 0x89, 0x00, 0x00, 0x7F, 0x88, 0xFF, 0x00, 0x80, 0x89, 0x00, 0x00, 0x7F, 0x88, 0xFF, 0x00, 0x80, 0x89, 0x00, 0x00, 0x3F, 0x88, 0xFF, 0x8A, 0x00, 0x00, 0x3F, 0x88, 0xFF, 0x8A, 0x00, 0x00, 0x1F, 0x87, 0xFF, 0x00, 0xFE, 0x8A, 0x00, 0x00, 0x1F, 0x87, 0xFF, 0x00, 0xFC, 0x8A, 0x00, 0x00, 0x0F, 0x87, 0xFF,
                0x00, 0xFC, 0x8A, 0x00, 0x00, 0x0F, 0x87, 0xFF, 0x00, 0xF8, 0x8A, 0x00, 0x00, 0x0F, 0x87, 0xFF, 0x00, 0xF8, 0x8A, 0x00, 0x00, 0x07, 0x87, 0xFF, 0x00, 0xF0, 0x8A, 0x00, 0x00, 0x07, 0x87, 0xFF, 0x00, 0xF0, 0x8A, 0x00, 0x00, 0x03, 0x87, 0xFF, 0x00, 0xE0, 0x8A, 0x00, 0x00, 0x03, 0x87, 0xFF, 0x00, 0xC0, 0x8A, 0x00, 0x00, 0x01, 0x87, 0xFF, 0x00, 0xC0, 0x8A, 0x00, 0x00, 0x01, 0x87, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x87, 0xFF, 0x00, 0x80, 0x8B, 0x00, 0x87, 0xFF, 0x8C, 0x00, 0x00, 0x7F, 0x86, 0xFF, 0x8C, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xFE, 0x8C, 0x00, 0x00, 0x3F, 0x85, 0xFF, 0x00, 0xFC, 0x8C, 0x00,
                0x00, 0x3F, 0x85, 0xFF, 0x00, 0xFC, 0x8C, 0x00, 0x00, 0x3F, 0x85, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x00, 0x1F, 0x85, 0xFF, 0x00, 0xF8, 0x8C, 0x00, 0x00, 0x1F, 0x85, 0xFF, 0x00, 0xF0, 0x8C, 0x00, 0x00, 0x0F, 0x85, 0xFF, 0x00, 0xF0, 0x8C, 0x00, 0x00, 0x0F, 0x85, 0xFF, 0x00, 0xE0, 0x8C, 0x00, 0x00, 0x07, 0x85, 0xFF, 0x00, 0xC0, 0x8C, 0x00, 0x00, 0x07, 0x85, 0xFF, 0x00, 0xC0, 0x8C, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x00, 0x80, 0x8C, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x00, 0x80, 0x8C, 0x00, 0x00, 0x01, 0x85, 0xFF, 0x8D, 0x00, 0x00, 0x01, 0x85, 0xFF, 0x8D, 0x00, 0x00, 0x01, 0x84, 0xFF, 0x00, 0xFE, 0x8E, 0x00,
                0x84, 0xFF, 0x00, 0xFC, 0x8E, 0x00, 0x84, 0xFF, 0x00, 0xFC, 0x8E, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xF8, 0x8E, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xF8, 0x8E, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x00, 0xF0, 0x8E, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x00, 0xF0, 0x8E, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xE0, 0x8E, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xC0, 0x8E, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x00, 0xC0, 0x8E, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x00, 0x80, 0x8E, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x00, 0x80, 0x8E, 0x00, 0x01, 0x07, 0xC0, 0x82, 0xFF, 0x91, 0x00, 0x02, 0x07, 0xFF, 0xFF, 0x92, 0x00, 0x01, 0xFF, 0xFE,
                0x92, 0x00, 0x01, 0x7F, 0xFC, 0x92, 0x00, 0x01, 0x1F, 0xFC, 0x92, 0x00, 0x01, 0x07, 0xF8, 0x92, 0x00, 0x01, 0x03, 0xF8, 0x92, 0x00, 0x01, 0x01, 0xF0, 0x93, 0x00, 0x00, 0xF0, 0x93, 0x00, 0x00, 0x60, 0x93, 0x00, 0x00, 0x40, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xA9, 0x00]]
        }, {
            _F3: "spr_manabarglow",
            width: 334,
            height: 79,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 169,
            _S3: 41,
            _Z3: 46,
            _T3: 291,
            __3: 17,
            _U3: 64,
            _V3: 1,
            _W3: 1,
            _X3: [845]
        }, {
            _F3: "spr_manabarempty",
            width: 224,
            height: 25,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 112,
            _S3: 12,
            _T3: 223,
            _U3: 24,
            _V3: 1,
            _W3: 1,
            _X3: [830]
        }, {
            _F3: "spr_menu_icon_cup",
            width: 73,
            height: 85,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 83,
            _S3: 98,
            _T3: 72,
            _U3: 84,
            _V3: 1,
            _W3: 1,
            _X3: [836]
        }, {
            _F3: "spr_menu_icon_book",
            width: 91,
            height: 65,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 89,
            _S3: 63,
            _T3: 90,
            __3: 1,
            _U3: 64,
            _V3: 1,
            _W3: 1,
            _X3: [831]
        }, {
            _F3: "spr_menu_icon_cross",
            width: 56,
            height: 56,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 53,
            _S3: 52,
            _T3: 55,
            _U3: 54,
            _V3: 1,
            _W3: 1,
            _X3: [796]
        }, {
            _F3: "spr_menu_icon_dollar",
            width: 40,
            height: 84,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 36,
            _S3: 81,
            _Z3: 1,
            _T3: 39,
            _U3: 83,
            _V3: 1,
            _W3: 1,
            _X3: [809]
        }, {
            _F3: "spr_menu_icon_slime",
            width: 104,
            height: 51,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 102,
            _S3: 49,
            _T3: 103,
            _U3: 50,
            _V3: 1,
            _W3: 1,
            _X3: [828]
        }, {
            _F3: "spr_menu_icon_slimes",
            width: 155,
            height: 35,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 152,
            _S3: 46,
            _Z3: 1,
            _T3: 154,
            _U3: 34,
            _V3: 1,
            _W3: 1,
            _X3: [829]
        }, {
            _F3: "spr_menu_icon_spanner",
            width: 89,
            height: 68,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 86,
            _S3: 65,
            _T3: 88,
            _U3: 67,
            _V3: 1,
            _W3: 1,
            _X3: [834]
        }, {
            _F3: "spr_menu_icon_star",
            width: 68,
            height: 64,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 66,
            _S3: 62,
            _T3: 67,
            _U3: 63,
            _V3: 1,
            _W3: 1,
            _X3: [823]
        }, {
            _F3: "spr_volleyball", width: 20,
            height: 20, _O3: !1, _P3: !1, preload: !1, _R3: 10, _S3: 10, _T3: 19, _U3: 19, _V3: 1, _W3: 1, _X3: [434]
        }, {
            _F3: "spr_volleynet",
            width: 14,
            height: 92,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 7,
            _S3: 80,
            _T3: 13,
            __3: 1,
            _U3: 91,
            _V3: 1,
            _W3: 1,
            _X3: [734]
        }, {
            _F3: "spr_starhit",
            width: 12,
            height: 12,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 6,
            _S3: 6,
            _T3: 11,
            _U3: 11,
            _V3: 1,
            _W3: 1,
            _X3: [121]
        }, {
            _F3: "spr_superstar",
            width: 12,
            height: 12,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 6,
            _S3: 6,
            _T3: 11,
            _U3: 11,
            _V3: 1,
            _W3: 1,
            _X3: [120]
        }, {
            _F3: "spr_fishhook",
            width: 15,
            height: 15,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 18,
            _S3: 7,
            _Z3: 1,
            _T3: 13,
            __3: 3,
            _U3: 11,
            _V3: 1,
            _W3: 1,
            _X3: [99],
            _Y3: [[0x86, 0x00, 0x10, 0x60, 0x00, 0x38, 0x00, 0x1C, 0x7C, 0x0C, 0x7E, 0x0C, 0x7F, 0x1C, 0x07, 0xF8, 0x03, 0xF0, 0x00, 0xE0, 0x85, 0x00]]
        }, {
            _F3: "spr_twinslime",
            width: 56,
            height: 28,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 28,
            _S3: 22,
            _T3: 55,
            _U3: 27,
            _V3: 1,
            _W3: 1,
            _X3: [741]
        }, {
            _F3: "spr_harpoon",
            width: 40,
            height: 9,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 2,
            _S3: 4,
            _T3: 39,
            _U3: 8,
            _V3: 1,
            _W3: 1,
            _X3: [402]
        }, {
            _F3: "spr_harpooncanon",
            width: 39,
            height: 12,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 12,
            _S3: 6,
            _Z3: 1,
            _T3: 38,
            _U3: 11,
            _V3: 1,
            _W3: 1,
            _X3: [525]
        }, {
            _F3: "spr_boomerang",
            width: 47,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 23,
            _S3: 8,
            _T3: 45,
            _U3: 15,
            _V3: 1,
            _W3: 1,
            _X3: [707]
        }, {
            _F3: "spr_revolver",
            width: 49,
            height: 27,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: -4,
            _S3: 14,
            _T3: 48,
            _U3: 26,
            _V3: 1,
            _W3: 1,
            _X3: [735]
        }, {
            _F3: "spr_shadow",
            width: 62,
            height: 43,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 31,
            _S3: 35,
            _Z3: 2,
            _T3: 59,
            __3: 28,
            _U3: 41,
            _V3: 1,
            _W3: 1,
            _X3: [708]
        }, {
            _F3: "spr_sb_corner",
            width: 39,
            height: 39,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 19,
            _S3: 19,
            _Z3: 7,
            _T3: 38,
            __3: 7,
            _U3: 38,
            _V3: 1,
            _W3: 1,
            _X3: [721]
        }, {
            _F3: "spr_sb_side",
            width: 20,
            height: 30,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _S3: 7,
            _T3: 19,
            __3: 7,
            _U3: 29,
            _V3: 1,
            _W3: 1,
            _X3: [558]
        }, {
            _F3: "spr_sb_tail",
            width: 22,
            height: 41,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 11,
            _S3: 20,
            _T3: 21,
            _U3: 40,
            _V3: 1,
            _W3: 1,
            _X3: [719]
        }, {
            _F3: "msk_goalhit",
            width: 40,
            height: 81,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 20,
            _S3: 40,
            _T3: 39,
            _U3: 79,
            _V3: 1,
            _W3: 1,
            _X3: [802],
            _Y3: [[0x82, 0xFF, 0x01, 0xFC, 0x00, 0x82, 0xFF, 0x01, 0xFC, 0x00, 0x82, 0xFF, 0x01, 0xFC, 0x00, 0x82, 0xFF, 0x01, 0xFC, 0x00, 0x82, 0xFF, 0x01, 0xFC, 0x00, 0x82, 0xFF, 0x01, 0xFC, 0x00, 0x82, 0xFF, 0x01, 0xFE,
                0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x82, 0xFF, 0x01, 0xFE, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0x80, 0x83, 0xFF, 0x00, 0xC0,
                0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xC0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xE0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF0, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0xFF, 0x00, 0xF8,
                0x83, 0xFF, 0x00, 0xF8, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0xFF, 0x00, 0xF8, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFC, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x83, 0xFF, 0x00, 0xFE, 0x98, 0xFF, 0x84, 0x00]]
        }, {
            _F3: "spr_mollerhoj",
            width: 190,
            height: 27,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 95,
            _S3: 13,
            _Z3: 1,
            _T3: 189,
            __3: 1,
            _U3: 25,
            _V3: 1,
            _W3: 1,
            _X3: [827],
            _Y3: [[0x9B, 0x00, 0x04, 0x79, 0xC0, 0x00, 0x00, 0xF0, 0x8E, 0x00, 0x0B, 0x3C, 0x03, 0xC0, 0x00, 0x79, 0xC0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x08, 0x8B, 0x00, 0x0B, 0x3C, 0x07, 0xC0, 0x00, 0x79, 0xC0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x3C, 0x8B, 0x00, 0x0B, 0x3E, 0x07, 0xC0, 0x00, 0x79, 0xC0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x3E, 0x88, 0x00, 0x0E, 0x18, 0x00, 0x00, 0x3E, 0x07, 0xC0, 0x00, 0x79, 0xC0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x3C, 0x88, 0x00, 0x0E, 0x78, 0x00, 0x00, 0x3E, 0x0F, 0xC0, 0x00, 0x79, 0xC0, 0x00, 0x00, 0xF0, 0x00, 0x00,
                0x1C, 0x88, 0x00, 0x7E, 0x78, 0x00, 0x00, 0x3F, 0x0F, 0xC1, 0xF8, 0x79, 0xC1, 0xF8, 0xFF, 0xFF, 0x80, 0xFC, 0x1C, 0x07, 0x7E, 0x1F, 0xC7, 0xE0, 0xFC, 0x3F, 0x0F, 0xF8, 0xFF, 0x3F, 0x00, 0x3F, 0x0F, 0xC7, 0xFE, 0x79, 0xC3, 0xFC, 0xFF, 0xFF, 0xC3, 0xFF, 0x1C, 0x07, 0xFF, 0x1F, 0xDF, 0xF1, 0xFC, 0x7F, 0x8F, 0xFC, 0xFF, 0x7F, 0xBC, 0x3F, 0x1F, 0xC7, 0xFF, 0x79, 0xC7, 0xFE, 0xFF, 0xFF, 0xE7, 0xFF, 0x1C, 0x07, 0xFF, 0x9F, 0xDF, 0xFB, 0xFC, 0xFF, 0xCF, 0xFE, 0xFF, 0xFF, 0x3C, 0x3F, 0x9F, 0xCF, 0x9F, 0x79, 0xCF, 0x9E, 0xFF, 0xF9, 0xE7, 0xCF, 0x9C, 0x07, 0xCF, 0x9F, 0x7E, 0x7B, 0xCC, 0xF3, 0xCF, 0x9E,
                0x78, 0xF3, 0x3C, 0x7F, 0x9D, 0xCF, 0x0F, 0x79, 0xCF, 0x0E, 0xF8, 0xF0, 0xE7, 0x87, 0x9C, 0x07, 0x87, 0x9E, 0x3C, 0x3B, 0xC1, 0xE1, 0xEF, 0x1E, 0x78, 0xF0, 0x3C, 0x7B, 0xBD, 0xCE, 0x07, 0x7E, 0xF9, 0xCF, 0xFE, 0xF0, 0xF0, 0xFF, 0x07, 0x9C, 0x07, 0x83, 0xDC, 0x3F, 0xFB, 0xF1, 0xFF, 0xEE, 0x0E, 0x78, 0xFC, 0x00, 0x7B, 0xFD, 0xFE, 0x07, 0xF9, 0xCF, 0xFE, 0xF0, 0xF0, 0xFF, 0x03, 0x9C, 0x07, 0x83, 0xDC, 0x3F, 0xFB, 0xF9, 0xFF, 0xEE, 0x0E, 0x78, 0x7F, 0x00, 0x7B, 0xF9, 0xFE, 0x07, 0xF9, 0xCF, 0xFE, 0xF0, 0xF0, 0xFF, 0x03, 0x9C, 0x07, 0x83, 0xDC, 0x3F, 0xF9, 0xFD, 0xFF, 0xEE, 0x0E, 0x78, 0x3F, 0x80,
                0x79, 0xF9, 0xFE, 0x07, 0xF9, 0xCE, 0x00, 0xF0, 0xF0, 0xFF, 0x07, 0x9C, 0x07, 0x83, 0xDC, 0x38, 0x00, 0x7D, 0xE0, 0x0E, 0x0E, 0x78, 0x0F, 0x80, 0x79, 0xF9, 0xEF, 0x0F, 0x79, 0xCF, 0x00, 0xF0, 0xF0, 0xF7, 0x87, 0x9C, 0x07, 0x87, 0x9C, 0x3C, 0x00, 0x1F, 0xE0, 0x0E, 0x0E, 0x78, 0x07, 0x80, 0x79, 0xF1, 0xEF, 0x9F, 0x79, 0xCF, 0x84, 0xF0, 0xF0, 0xF7, 0xCF, 0x54, 0x9C, 0x07, 0xC7, 0x9C, 0x3E, 0x13, 0x1D, 0xF0, 0xCE, 0x0E, 0x78, 0xC7, 0xBC, 0x78, 0xF1, 0xEF, 0xFF, 0x79, 0xC7, 0xFE, 0xF0, 0xF0, 0xF7, 0xFF, 0x1C, 0x07, 0xFF, 0x9C, 0x1F, 0xFB, 0xFC, 0xFF, 0xCE, 0x0E, 0x3F, 0xFF, 0xBC, 0x70, 0xF1, 0xE7,
                0xFE, 0x79, 0xC7, 0xFE, 0xF0, 0xF0, 0xF3, 0xFF, 0x1C, 0x07, 0xFF, 0x1C, 0x1F, 0xFF, 0xFC, 0x7F, 0xCE, 0x0E, 0x3F, 0xFF, 0x3C, 0x70, 0xE1, 0xE1, 0xF8, 0x79, 0xC1, 0xFC, 0xF0, 0xF0, 0xF1, 0xFC, 0x3C, 0x07, 0xFE, 0x1C, 0x07, 0xF3, 0xF8, 0x3F, 0xCE, 0x0E, 0x1F, 0xFE, 0x3C, 0x8A, 0x00, 0x02, 0x3C, 0x07, 0x80, 0x94, 0x00, 0x02, 0x7C, 0x07, 0x80, 0x93, 0x00, 0x03, 0x01, 0xF8, 0x07, 0x80, 0x93, 0x00, 0x03, 0x01, 0xF8, 0x07, 0x80, 0x94, 0x00, 0x02, 0xF0, 0x07, 0x80, 0xA1, 0x00]]
        }, {
            _F3: "spr_superslimesoccer",
            width: 492,
            height: 126,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 246,
            _S3: 63,
            _Z3: 19,
            _T3: 471,
            __3: 16,
            _U3: 107,
            _V3: 1,
            _W3: 1,
            _X3: [852],
            _Y3: [[0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xF6, 0x00, 0x01, 0x7F, 0xE0, 0x8D, 0x00, 0x01, 0x07, 0x80, 0xAA, 0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x8B, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0x80, 0xA9, 0x00, 0x82, 0xFF, 0x00, 0xF8, 0x8B, 0x00, 0x03, 0x3F, 0xFF, 0xFF, 0xF8, 0xA8, 0x00, 0x00, 0x03, 0x82, 0xFF, 0x00, 0xFE, 0x8A, 0x00, 0x00, 0x01, 0x82, 0xFF, 0x00, 0xFE, 0x98, 0x00, 0x02, 0x01, 0xFF, 0xF8, 0x8C, 0x00, 0x00, 0x0F, 0x83, 0xFF, 0x00, 0xC0, 0x89, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x00, 0xC0, 0x97,
                0x00, 0x03, 0x1F, 0xFF, 0xFF, 0xC0, 0x8B, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x00, 0xE0, 0x89, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xF0, 0x97, 0x00, 0x82, 0xFF, 0x00, 0xF8, 0x8B, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xF8, 0x89, 0x00, 0x00, 0x3F, 0x83, 0xFF, 0x00, 0xF8, 0x96, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x8A, 0x00, 0x00, 0x01, 0x84, 0xFF, 0x00, 0xFC, 0x89, 0x00, 0x84, 0xFF, 0x00, 0xFE, 0x96, 0x00, 0x00, 0x1F, 0x83, 0xFF, 0x00, 0xC0, 0x89, 0x00, 0x00, 0x03, 0x85, 0xFF, 0x88, 0x00, 0x00, 0x01, 0x85, 0xFF, 0x96, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x00, 0xF0, 0x89, 0x00, 0x00, 0x0F, 0x85, 0xFF, 0x88, 0x00,
                0x00, 0x03, 0x85, 0xFF, 0x00, 0x80, 0x95, 0x00, 0x84, 0xFF, 0x00, 0xF8, 0x89, 0x00, 0x00, 0x1F, 0x85, 0xFF, 0x00, 0x80, 0x87, 0x00, 0x00, 0x07, 0x85, 0xFF, 0x00, 0xC0, 0x94, 0x00, 0x00, 0x01, 0x84, 0xFF, 0x00, 0xFC, 0x89, 0x00, 0x00, 0x1F, 0x85, 0xFF, 0x00, 0xC0, 0x87, 0x00, 0x00, 0x0F, 0x85, 0xFF, 0x00, 0xE0, 0x94, 0x00, 0x00, 0x07, 0x84, 0xFF, 0x00, 0xFE, 0x89, 0x00, 0x00, 0x3F, 0x85, 0xFF, 0x00, 0xC0, 0x87, 0x00, 0x00, 0x1F, 0x85, 0xFF, 0x00, 0xE0, 0x94, 0x00, 0x00, 0x0F, 0x85, 0xFF, 0x89, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xE0, 0x87, 0x00, 0x00, 0x3F, 0x85, 0xFF, 0x00, 0xF0, 0x94, 0x00,
                0x00, 0x1F, 0x85, 0xFF, 0x00, 0x80, 0x88, 0x00, 0x86, 0xFF, 0x00, 0xE0, 0x87, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xF0, 0x94, 0x00, 0x00, 0x3F, 0x85, 0xFF, 0x00, 0xC0, 0x88, 0x00, 0x86, 0xFF, 0x00, 0xF0, 0x87, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xF8, 0x94, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xC0, 0x87, 0x00, 0x00, 0x01, 0x86, 0xFF, 0x00, 0xF8, 0x87, 0x00, 0x86, 0xFF, 0x00, 0xF8, 0x94, 0x00, 0x00, 0x7F, 0x85, 0xFF, 0x00, 0xE0, 0x87, 0x00, 0x00, 0x03, 0x8A, 0xFF, 0x01, 0xC0, 0x7F, 0x89, 0xFF, 0x00, 0xFC, 0x94, 0x00, 0x86, 0xFF, 0x00, 0xE0, 0x85, 0x00, 0x02, 0x3F, 0xFE, 0x07, 0x96, 0xFF, 0x00,
                0xFE, 0x93, 0x00, 0x00, 0x01, 0x86, 0xFF, 0x02, 0xF8, 0x00, 0x3F, 0x9E, 0xFF, 0x03, 0xFC, 0x00, 0x07, 0xFF, 0x8F, 0x00, 0x00, 0x01, 0xA9, 0xFF, 0x00, 0xC1, 0x85, 0xFF, 0x00, 0xC0, 0x8A, 0x00, 0x00, 0x03, 0xB3, 0xFF, 0x88, 0x00, 0x00, 0x03, 0xB3, 0xFF, 0x00, 0xFE, 0x87, 0x00, 0x00, 0x07, 0xB4, 0xFF, 0x00, 0xE0, 0x86, 0x00, 0x00, 0x07, 0xB4, 0xFF, 0x00, 0xF8, 0x86, 0x00, 0x00, 0x07, 0xB5, 0xFF, 0x86, 0x00, 0x00, 0x0F, 0xB5, 0xFF, 0x00, 0xC0, 0x85, 0x00, 0x00, 0x0F, 0xB5, 0xFF, 0x00, 0xE0, 0x85, 0x00, 0x00, 0x0F, 0xB5, 0xFF, 0x00, 0xF0, 0x85, 0x00, 0x00, 0x1F, 0xB5, 0xFF, 0x00, 0xF8, 0x85, 0x00,
                0x00, 0x1F, 0xB5, 0xFF, 0x00, 0xFC, 0x85, 0x00, 0x00, 0x1F, 0xB5, 0xFF, 0x00, 0xFE, 0x85, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x85, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0x80, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0x80, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xC0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xF0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xF0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xF0, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xF8,
                0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x03,
                0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xF8, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xFC, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xFC, 0x84, 0x00, 0x00, 0x0F, 0xB6, 0xFF, 0x00, 0xFC, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xFE, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xFE, 0x84, 0x00, 0x00, 0x1F, 0xB6, 0xFF, 0x00, 0xFE,
                0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x1F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x0F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x0F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x0F, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x07, 0xB7, 0xFF, 0x84, 0x00, 0x00, 0x07, 0xB6, 0xFF, 0x00, 0xFE, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xFE, 0x84, 0x00, 0x00, 0x03, 0xB6, 0xFF, 0x00, 0xFC, 0x84, 0x00, 0x00, 0x01, 0xB6, 0xFF, 0x00, 0xFC, 0x85, 0x00,
                0xB6, 0xFF, 0x00, 0xF8, 0x85, 0x00, 0x00, 0x7F, 0xA4, 0xFF, 0x04, 0xFC, 0x0F, 0xFF, 0xFE, 0x07, 0x8B, 0xFF, 0x00, 0xF8, 0x85, 0x00, 0x00, 0x3F, 0x8D, 0xFF, 0x02, 0x80, 0x00, 0x00, 0x83, 0xFF, 0x00, 0xC0, 0x8A, 0x00, 0x00, 0x7F, 0x82, 0xFF, 0x05, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0x3F, 0x8A, 0xFF, 0x00, 0xE0, 0x85, 0x00, 0x00, 0x0F, 0x84, 0xFF, 0x00, 0xCF, 0x82, 0xFF, 0x00, 0xC0, 0x86, 0x00, 0x03, 0x0F, 0xFF, 0xFF, 0xFE, 0x8B, 0x00, 0x00, 0x07, 0x82, 0xFF, 0x87, 0x00, 0x00, 0x3F, 0x87, 0xFF, 0x00, 0xC0, 0x85, 0x00, 0x00, 0x07, 0x83, 0xFF, 0x00, 0xFE, 0x8C, 0x00, 0x02, 0xFF, 0xFF, 0xF0, 0x8C, 0x00,
                0x02, 0xFF, 0xFF, 0xF8, 0x88, 0x00, 0x00, 0x07, 0x86, 0xFF, 0x86, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x00, 0xF8, 0x8D, 0x00, 0x00, 0xF0, 0x8D, 0x00, 0x01, 0x03, 0xFE, 0x8D, 0x00, 0x82, 0xFF, 0x00, 0xF8, 0x87, 0x00, 0x00, 0x3F, 0x82, 0xFF, 0x00, 0xC0, 0xB8, 0x00, 0x03, 0x07, 0xFF, 0xFF, 0xFE, 0xBA, 0x00, 0x02, 0x7F, 0xFF, 0xE0, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x91, 0x00]]
        }, {
            _F3: "spr_visitwebpage",
            width: 376,
            height: 84,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _Q3: !0,
            _R3: 188,
            _S3: 42,
            _Z3: 24,
            _T3: 353,
            __3: 19,
            _U3: 69,
            _V3: 1,
            _W3: 1,
            _X3: [848],
            _Y3: [[0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x94, 0x00, 0x01, 0x01, 0xE0, 0x97, 0x00, 0x04, 0xF0, 0x1F, 0xC0, 0x03, 0x80, 0x87, 0x00, 0x01, 0x1F, 0xF0, 0x84, 0x00, 0x02, 0x07, 0xFD, 0xE7, 0x83, 0x00, 0x01, 0x0F, 0xF0, 0x91, 0x00, 0x04, 0xF0, 0x1F, 0xE0, 0x07, 0x80, 0x87, 0x00, 0x01, 0x3F, 0xF0, 0x84, 0x00, 0x03, 0x0F, 0xFD, 0xEF, 0x80, 0x82, 0x00, 0x01, 0x1F, 0xF0, 0x91, 0x00, 0x04, 0xF0, 0x3F, 0xE0, 0x07, 0x8E, 0x87, 0x00, 0x01, 0x3F, 0xE0, 0x84, 0x00, 0x03, 0x0F, 0xF9, 0xEF, 0x80, 0x82, 0x00, 0x01, 0x3F, 0xF0, 0x91, 0x00, 0x04, 0x78,
                0x3D, 0xC0, 0x07, 0x8E, 0x87, 0x00, 0x01, 0x7C, 0x60, 0x84, 0x00, 0x02, 0x1E, 0x19, 0xE7, 0x83, 0x00, 0x01, 0x3C, 0x30, 0x91, 0x00, 0x04, 0x78, 0x3C, 0x00, 0x00, 0x0E, 0x87, 0x00, 0x00, 0x78, 0x85, 0x00, 0x02, 0x1E, 0x01, 0xE0, 0x83, 0x00, 0x00, 0x38, 0x92, 0x00, 0x29, 0x78, 0x79, 0xC7, 0xF3, 0xBF, 0xC1, 0xE3, 0xC3, 0xF0, 0xF1, 0xFC, 0x38, 0x78, 0x78, 0x07, 0x87, 0x3F, 0xF0, 0x3F, 0x8F, 0xFE, 0x01, 0xE7, 0x3F, 0xEF, 0xC0, 0xFE, 0x3C, 0x00, 0xFE, 0x07, 0xF8, 0xFF, 0x3F, 0x8F, 0xE0, 0x1F, 0xE7, 0xF8, 0xFF, 0xBF, 0x80, 0x84, 0x00, 0x29, 0x3C, 0x79, 0xCF, 0xF3, 0xBF, 0xC1, 0xE3, 0xC7, 0xF0, 0xF1,
                0xFC, 0x7C, 0x78, 0x7C, 0x07, 0x87, 0x3F, 0xF8, 0x7F, 0xCF, 0xFF, 0x01, 0xE7, 0x3F, 0xFF, 0xE1, 0xFF, 0x3E, 0x01, 0xFF, 0x0F, 0xF9, 0xFF, 0x7F, 0xCF, 0xE0, 0x3F, 0xEF, 0xFC, 0xFF, 0xFF, 0x80, 0x84, 0x00, 0x29, 0x3C, 0x79, 0xCF, 0xF3, 0xBF, 0xC1, 0xE3, 0xC7, 0xF9, 0xF1, 0xFC, 0x7C, 0xF0, 0x3F, 0x07, 0x87, 0x3F, 0xFC, 0xFF, 0xCF, 0xEF, 0xC1, 0xE7, 0x3F, 0xFF, 0xF3, 0xFF, 0xBF, 0x83, 0xFF, 0x9F, 0xFB, 0xFE, 0xFF, 0xEF, 0xE0, 0x7F, 0xDF, 0xFE, 0xFF, 0xFF, 0xC0, 0x84, 0x00, 0x29, 0x3C, 0xF1, 0xCE, 0x23, 0x8E, 0x01, 0xE7, 0xE7, 0xF9, 0xF3, 0xDE, 0x7C, 0xF0, 0x3F, 0xC7, 0x87, 0x3E, 0x3C, 0xF1, 0xEF,
                0x8F, 0xF1, 0xE7, 0x3E, 0x7C, 0xF3, 0xC7, 0x9F, 0xE7, 0xC7, 0xDE, 0x17, 0xC2, 0xF1, 0xEF, 0x80, 0xF8, 0x5E, 0x3E, 0xF9, 0xF3, 0xC0, 0x84, 0x00, 0x29, 0x1E, 0xF1, 0xCF, 0x03, 0x8E, 0x00, 0xF7, 0xEF, 0x79, 0xFB, 0xDE, 0xFC, 0xF0, 0x0F, 0xE7, 0x87, 0x3C, 0x1F, 0xE1, 0xEF, 0x07, 0xF9, 0xE7, 0x3C, 0x78, 0xF3, 0x87, 0x8F, 0xF7, 0x83, 0xFE, 0x07, 0x80, 0xE0, 0xEF, 0x00, 0xF0, 0x3E, 0x1E, 0xF1, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x1E, 0xF1, 0xCF, 0xC3, 0x8E, 0x00, 0xF7, 0xEF, 0x3F, 0xFB, 0xDE, 0xFE, 0xE0, 0x07, 0xF7, 0x87, 0x3C, 0x1F, 0xFF, 0xEE, 0x01, 0xFD, 0xE7, 0x3C, 0x78, 0x77, 0xFF, 0x83, 0xF7, 0x83,
                0xFC, 0x07, 0x80, 0xFF, 0xEF, 0x00, 0xF0, 0x3C, 0x0E, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x1F, 0xE1, 0xCF, 0xE3, 0x8E, 0x00, 0xFF, 0xFF, 0x3F, 0xFB, 0x8F, 0xFF, 0xE0, 0x01, 0xF7, 0x87, 0x3C, 0x1F, 0xFF, 0xEE, 0x00, 0x7D, 0xE7, 0x3C, 0x78, 0x77, 0xFF, 0x80, 0xFF, 0x83, 0xFC, 0x07, 0x80, 0xFF, 0xEF, 0x00, 0xF0, 0x3C, 0x0E, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x1F, 0xE1, 0xC3, 0xF3, 0x8E, 0x00, 0x7F, 0xFE, 0x3F, 0xBF, 0x8F, 0xEF, 0xE0, 0x00, 0xF7, 0x87, 0x3C, 0x1F, 0xFF, 0xEE, 0x00, 0x3D, 0xE7, 0x3C, 0x78, 0x77, 0xFF, 0x80, 0x7F, 0x83, 0xFC, 0x07, 0x80, 0xFF, 0xEF, 0x00, 0xF0, 0x3C, 0x0E, 0xF0,
                0xE1, 0xC0, 0x84, 0x00, 0x29, 0x0F, 0xE1, 0xC0, 0xF3, 0x8E, 0x00, 0x7E, 0x7E, 0x1F, 0xBF, 0x8F, 0xEF, 0xC0, 0x00, 0x77, 0x87, 0x3C, 0x1F, 0xE0, 0x0E, 0x00, 0x3D, 0xE7, 0x3C, 0x78, 0x73, 0x80, 0x00, 0x7F, 0x83, 0xFC, 0x07, 0x80, 0xE0, 0x0F, 0x00, 0xF0, 0x3C, 0x1E, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x0F, 0xC1, 0xC0, 0x73, 0x8E, 0x00, 0x7E, 0x7E, 0x1F, 0x9F, 0x07, 0xCF, 0xC7, 0x20, 0xF7, 0x87, 0x3C, 0x3F, 0xF0, 0x0E, 0x08, 0x3D, 0xE7, 0x3C, 0x78, 0x73, 0xC0, 0x20, 0x7F, 0xC7, 0xFE, 0x07, 0xC0, 0xF0, 0x0F, 0x0E, 0xF0, 0x1E, 0x1E, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x0F, 0xC1, 0xCE, 0xF3, 0x8E,
                0x40, 0x7E, 0x7C, 0x1F, 0x1F, 0x07, 0xC7, 0xCF, 0xF9, 0xF7, 0xDF, 0xBF, 0x7C, 0xF9, 0xCE, 0x1E, 0x7D, 0xE7, 0x3C, 0x78, 0x73, 0xE3, 0x39, 0xFF, 0xEF, 0x9F, 0x3F, 0xE6, 0xF8, 0xCF, 0x1F, 0xFC, 0xDF, 0x7E, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x07, 0xC1, 0xDF, 0xF3, 0x8F, 0xC0, 0x3C, 0x3C, 0x0F, 0x1F, 0x07, 0xC7, 0x8F, 0xFF, 0xF3, 0xFF, 0xBF, 0xFC, 0xFF, 0xCE, 0x1F, 0xF9, 0xE7, 0x3C, 0x78, 0x71, 0xFF, 0x3F, 0xF3, 0xFF, 0x9F, 0xFB, 0xFF, 0x7F, 0xEF, 0x1F, 0x7F, 0xFF, 0xFC, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x07, 0x81, 0xDF, 0xE3, 0x8F, 0xC0, 0x3C, 0x3C, 0x0F, 0x0E, 0x03, 0x87, 0x8F, 0xFF, 0xE3,
                0xFF, 0xBF, 0xF8, 0x7F, 0xCE, 0x1F, 0xF9, 0xE7, 0x3C, 0x78, 0x71, 0xFF, 0xFF, 0xE1, 0xFF, 0x0F, 0xF9, 0xFF, 0x3F, 0xEF, 0x1F, 0x3F, 0xEF, 0xF8, 0xF0, 0xE1, 0xC0, 0x84, 0x00, 0x29, 0x07, 0x81, 0xC7, 0xC3, 0x87, 0xC0, 0x3C, 0x38, 0x0E, 0x0E, 0x03, 0x83, 0x87, 0x1F, 0x80, 0xFF, 0xBF, 0xE0, 0x1F, 0x8E, 0x07, 0xE1, 0xE7, 0x3C, 0x78, 0x70, 0x7E, 0x1F, 0x80, 0x7C, 0x03, 0xF0, 0x7E, 0x1F, 0xCF, 0x0E, 0x0F, 0xC3, 0xE0, 0xF0, 0xE1, 0xC0, 0x94, 0x00, 0x00, 0x3C, 0xAD, 0x00, 0x00, 0x3C, 0xAD, 0x00, 0x00, 0x3C, 0xAD, 0x00, 0x00, 0x3C, 0xAD, 0x00, 0x00, 0x3C, 0xFF, 0x00, 0x02, 0x00, 0x00, 0xE0, 0x84, 0x00,
                0x00, 0x78, 0x82, 0x00, 0x03, 0x01, 0xE0, 0x00, 0x38, 0x8A, 0x00, 0x05, 0x1F, 0x80, 0x00, 0x00, 0x1F, 0x80, 0x8F, 0x00, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x78, 0x82, 0x00, 0x05, 0x01, 0xE0, 0x00, 0x38, 0x01, 0xE0, 0x88, 0x00, 0x05, 0x3F, 0x80, 0x00, 0x00, 0x1F, 0x80, 0x8B, 0x00, 0x00, 0x40, 0x82, 0x00, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x78, 0x82, 0x00, 0x05, 0x01, 0xE0, 0x04, 0x38, 0x01, 0xE0, 0x88, 0x00, 0x00, 0x7F, 0x82, 0x00, 0x01, 0x3F, 0x80, 0x8A, 0x00, 0x01, 0x03, 0xC0, 0x82, 0x00, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x78, 0x82, 0x00, 0x05, 0x01, 0xE0, 0x3C, 0x38, 0x01, 0xE0, 0x88, 0x00, 0x00, 0x78,
                0x82, 0x00, 0x00, 0x3C, 0x8B, 0x00, 0x01, 0x03, 0xC0, 0x82, 0x00, 0x00, 0xE0, 0x84, 0x00, 0x00, 0x78, 0x82, 0x00, 0x05, 0x01, 0xE0, 0x3C, 0x38, 0x01, 0xC0, 0x88, 0x00, 0x00, 0x78, 0x82, 0x00, 0x00, 0x38, 0x8B, 0x00, 0x26, 0x0F, 0xF8, 0x7C, 0x00, 0x1E, 0xE0, 0xF8, 0x78, 0x70, 0xEE, 0xF8, 0x78, 0x3E, 0x03, 0xE0, 0x3F, 0xE0, 0xFF, 0xBB, 0xC1, 0xC3, 0xE0, 0x03, 0xFE, 0x3E, 0x0E, 0xF1, 0xE0, 0x1E, 0x01, 0xFE, 0x1F, 0x07, 0x70, 0xFF, 0xFF, 0x1F, 0x01, 0xF0, 0x87, 0x00, 0x26, 0x0F, 0xF9, 0xFF, 0x00, 0x7F, 0xE1, 0xFE, 0x78, 0xF0, 0xFF, 0xFC, 0x78, 0xFF, 0x8F, 0xF0, 0x7F, 0xE0, 0xFF, 0xBF, 0xF1, 0xC7,
                0xF0, 0x0F, 0xFE, 0xFF, 0x8F, 0xFF, 0xF0, 0x7F, 0x81, 0xFE, 0x7F, 0xC7, 0xF0, 0xFF, 0xFF, 0x3F, 0x87, 0xF8, 0x87, 0x00, 0x26, 0x0F, 0xFB, 0xFF, 0x80, 0xFF, 0xE3, 0xFF, 0x78, 0xF1, 0xEF, 0xFE, 0x79, 0xFF, 0xCF, 0xF8, 0xFF, 0xE0, 0xFF, 0xBF, 0xF1, 0xCF, 0xF0, 0x1F, 0xFC, 0xFF, 0x8F, 0xFF, 0xF8, 0xFF, 0xC1, 0xFE, 0xFF, 0xE7, 0xF0, 0xFF, 0xFF, 0x7F, 0xC7, 0xFC, 0x87, 0x00, 0x26, 0x0F, 0xFF, 0xEF, 0x80, 0xFB, 0xE7, 0xDF, 0xB8, 0xF9, 0xEF, 0xFE, 0x79, 0xF7, 0xCE, 0x79, 0xFF, 0xE0, 0xFF, 0xBE, 0xF9, 0xCF, 0x70, 0x1F, 0x7C, 0xF7, 0xCF, 0xBF, 0x78, 0xFF, 0xC1, 0xFF, 0xFB, 0xE7, 0xF0, 0xFF, 0xFF, 0xFB,
                0xEF, 0xBE, 0x87, 0x00, 0x26, 0x03, 0xC7, 0x87, 0xC1, 0xF1, 0xE7, 0x87, 0xBD, 0xF9, 0xEF, 0x0E, 0x7B, 0xC3, 0xE0, 0x39, 0xE1, 0xE0, 0x3C, 0x3C, 0x79, 0xCF, 0x00, 0x1E, 0x3C, 0x03, 0xCF, 0x1E, 0x3D, 0xE1, 0xE0, 0x79, 0xE1, 0xF7, 0x80, 0x38, 0xF8, 0xF1, 0xEF, 0x1E, 0x87, 0x00, 0x26, 0x03, 0xC7, 0x83, 0xC1, 0xE0, 0xEF, 0x07, 0xBD, 0xF9, 0xCF, 0x0E, 0x7B, 0xC1, 0xE3, 0xF9, 0xE1, 0xE0, 0x3C, 0x38, 0x39, 0xCF, 0x80, 0x3C, 0x1C, 0x3F, 0xCE, 0x1C, 0x3D, 0xFF, 0xE0, 0x79, 0xE0, 0xF7, 0x80, 0x38, 0xF1, 0xFF, 0xFF, 0xFE, 0x87, 0x00, 0x26, 0x03, 0xC7, 0x03, 0xC1, 0xE0, 0xEF, 0x03, 0xBD, 0xFF, 0xCE, 0x0E,
                0x7B, 0xC1, 0xEF, 0xF9, 0xC1, 0xE0, 0x3C, 0x38, 0x39, 0xCF, 0xE0, 0x3C, 0x1C, 0x7F, 0xCE, 0x1C, 0x3D, 0xFF, 0xE0, 0x79, 0xE0, 0xF7, 0x00, 0x38, 0xF1, 0xFF, 0xFF, 0xFE, 0x87, 0x00, 0x26, 0x03, 0xC7, 0x03, 0xC1, 0xE0, 0xEF, 0x03, 0x9F, 0xFF, 0xCE, 0x0E, 0x7B, 0x81, 0xFF, 0xF9, 0xC1, 0xE0, 0x3C, 0x38, 0x39, 0xC7, 0xF0, 0x3C, 0x1C, 0xFF, 0xCE, 0x1C, 0x3D, 0xFF, 0xE0, 0x79, 0xC0, 0xF7, 0x00, 0x38, 0xF1, 0xFF, 0xFF, 0xFE, 0x87, 0x00, 0x25, 0x03, 0xC7, 0x83, 0xC1, 0xE0, 0xEF, 0x03, 0x9F, 0xDF, 0x8E, 0x0E, 0x7B, 0xC1, 0xFF, 0x39, 0xC1, 0xE0, 0x3C, 0x38, 0x39, 0xC1, 0xF0, 0x3C, 0x1D, 0xF1, 0xCE, 0x1C,
                0x3D, 0xE0, 0x00, 0x79, 0xE0, 0xF7, 0x00, 0x38, 0xF1, 0xE0, 0x1E, 0x88, 0x00, 0x25, 0x03, 0xC7, 0x83, 0xC1, 0xE0, 0xEF, 0x87, 0x9F, 0x9F, 0x8E, 0x0E, 0x7B, 0xC1, 0xFE, 0x39, 0xE1, 0xE0, 0x3C, 0x38, 0x39, 0xC0, 0x78, 0x3C, 0x1D, 0xE3, 0xCE, 0x1C, 0x3D, 0xE0, 0x00, 0x79, 0xE0, 0xF7, 0x00, 0x38, 0xF1, 0xE0, 0x1E, 0x88, 0x00, 0x25, 0x03, 0xC7, 0xC7, 0x81, 0xF1, 0xE7, 0x8F, 0x8F, 0x9F, 0x8E, 0x0E, 0x7B, 0xE3, 0xDE, 0x79, 0xE3, 0xE0, 0x3C, 0x38, 0x39, 0xCC, 0x78, 0x1E, 0x3D, 0xE3, 0xCE, 0x1C, 0x3D, 0xF0, 0x00, 0x79, 0xF1, 0xE7, 0x00, 0x38, 0xF0, 0xF0, 0x0F, 0x88, 0x00, 0x26, 0x03, 0xFB, 0xFF, 0x80,
                0xFF, 0xE7, 0xFF, 0x8F, 0x8F, 0x0E, 0x0E, 0x79, 0xFF, 0xDF, 0xFD, 0xFF, 0xE0, 0x3F, 0xB8, 0x39, 0xCF, 0xF0, 0x1F, 0xFD, 0xFF, 0xCE, 0x1C, 0x3C, 0xFF, 0xC0, 0x78, 0xFF, 0xE7, 0x00, 0x38, 0xF0, 0xFF, 0xCF, 0xFC, 0x87, 0x00, 0x26, 0x01, 0xFB, 0xFF, 0x00, 0x7F, 0xE3, 0xFF, 0x0F, 0x0F, 0x0E, 0x0E, 0x79, 0xFF, 0x9F, 0xFC, 0xFF, 0xE0, 0x1F, 0xB8, 0x39, 0xDF, 0xF0, 0x0F, 0xFC, 0xFF, 0xCE, 0x1C, 0x3C, 0xFF, 0xC0, 0x78, 0xFF, 0xC7, 0x00, 0x38, 0xF0, 0x7F, 0xC7, 0xFC, 0x87, 0x00, 0x26, 0x01, 0xF9, 0xFE, 0x00, 0x3F, 0xE1, 0xFE, 0x0F, 0x0F, 0x0E, 0x0E, 0x78, 0xFF, 0x0F, 0xFC, 0x7F, 0xE0, 0x1F, 0xB8, 0x39,
                0xCF, 0xE0, 0x07, 0xFC, 0x7F, 0xCE, 0x1C, 0x3C, 0x7F, 0xC0, 0x78, 0x7F, 0x87, 0x00, 0x38, 0xF0, 0x3F, 0xC3, 0xFC, 0x9E, 0x00, 0x00, 0x1C, 0xAC, 0x00, 0x01, 0x08, 0x3C, 0xAC, 0x00, 0x01, 0x1F, 0xFC, 0xAC, 0x00, 0x01, 0x1F, 0xF8, 0xAC, 0x00, 0x01, 0x1F, 0xF0, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xA4, 0x00]]
        }, {
            _F3: "spr_tree",
            width: 94,
            height: 117,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 47,
            _S3: 115,
            _T3: 93,
            _U3: 116,
            _V3: 1,
            _W3: 1,
            _X3: [844]
        }, {
            _F3: "spr_treepre1",
            width: 94,
            height: 117,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 47,
            _S3: 114,
            _Z3: 36,
            _T3: 56,
            __3: 76,
            _U3: 116,
            _V3: 1,
            _W3: 1,
            _X3: [709]
        }, {
            _F3: "spr_treepre2",
            width: 94,
            height: 117,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 47,
            _S3: 114,
            _Z3: 21,
            _T3: 70,
            __3: 52,
            _U3: 116,
            _V3: 1,
            _W3: 1,
            _X3: [805]
        }, {
            _F3: "spr_treepre3",
            width: 94,
            height: 117,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 47,
            _S3: 114,
            _Z3: 13,
            _T3: 92,
            __3: 25,
            _U3: 116,
            _V3: 1,
            _W3: 1,
            _X3: [837]
        }, {
            _F3: "copyright",
            width: 260,
            height: 32,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _R3: 130,
            _S3: 16,
            _Z3: 24,
            _T3: 227,
            __3: 10,
            _U3: 25,
            _V3: 1,
            _W3: 1,
            _X3: [806]
        }, {
            _F3: "spr_keyboard", width: 554, height: 129, _O3: !1, _P3: !1, preload: !1, _R3: 277, _S3: 64, _Z3: 8,
            _T3: 545, __3: 7, _U3: 121, _V3: 1, _W3: 1, _X3: [853]
        }, {
            _F3: "bg_game",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [868]
        }, {
            _F3: "bg_menu",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [865]
        }, {
            _F3: "bg_load",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [866]
        }, {
            _F3: "bg_castle",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [872]
        }, {
            _F3: "bg_desert", width: 560, height: 400, _O3: !1, _P3: !1, preload: !1, _T3: 559, _U3: 399,
            _W3: 15, _X3: [871]
        }, {
            _F3: "bg_disco",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [870]
        }, {
            _F3: "bg_forest",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [869]
        }, {
            _F3: "bg_lab",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [867]
        }, {
            _F3: "bg_moon",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [864]
        }, {
            _F3: "bg_runnertrack",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [863]
        }
        , {
            _F3: "bg_urban",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [862]
        }, {
            _F3: "bg_winter",
            width: 560,
            height: 400,
            _O3: !1,
            _P3: !1,
            preload: !1,
            _T3: 559,
            _U3: 399,
            _W3: 15,
            _X3: [861]
        }],
    _04: [],
    _14: [],
    _24: [_34, _44, _54, _64, _74, _84, _94, _a4, _b4, _c4, _d4, _e4, _f4, _g4, _h4, _i4, _j4, _k4, _l4, _m4, _n4, _o4, _p4, _q4, _r4, _s4, _t4, _u4, _v4, _w4, _x4, _y4, _z4, _A4, _B4, _C4, _D4, _E4, _F4, _G4, _H4, _I4, _J4, _K4, _L4, _M4, _N4, _O4, _P4, _Q4, _R4, _S4, _T4, _U4, _V4, _W4, _X4, _Y4, _Z4, __4, _05, _15, _25, _35, _45, _55, _65, _75, _85, _95, _a5, _b5,
        _c5, _d5, _e5, _f5, _g5, _h5],
    _i5: ["scr_cheat", "scr_START", "scr_start_dataini", "scr_startupglobals", "scr_string_decrypt", "scr_string_encrypt", "scr_player_create", "scr_player_step", "scr_player_draw", "scr_player_checkdraw", "scr_player_ai_weapons", "scr_player_ai_create", "scr_player_ai", "scr_ai_original", "scr_player_ai_new", "scr_ai_random_weapon_use", "scr_ball_cal", "scr_ball_prec", "scr_ball", "scr_prevent_ball_stuck", "scr_name_to_sprite", "scr_name_to_weapon", "scr_name_to_title", "scr_name_to_color", "scr_name_to_prize",
        "scr_name_to_manause", "scr_random_name", "scr_name_to_area", "scr_next_slime", "scr_name_to_unlocked", "scr_keyname", "scr_choose_area", "scr_choose_cheat", "scr_drawtext", "scr_drawtext2", "scr_player_weapon", "scr_weaphold", "scr_hudmanagive", "scr_story1", "scr_number_to_name", "scr_TEST", "scr_text_init", "scr_text", "sound_play2", "sound_loop2", "music_loop", "scr_comment", "scr_scored", "action_bounce", "action_create_object", "action_kill_object", "action_move_contact", "action_set_alarm", "action_set_gravity", "action_set_vspeed",
        "__init_action", "__background_set", "__background_set_internal", "__init_background", "__background_get_element", "__background_get_internal", "__background_set_element", "d3d_set_fog", "__init_d3d", "instance_create", "object_get_depth", "sound_isplaying", "sound_loop", "sound_play", "sound_stop", "sound_stop_all", "__view_get", "__view_set", "__view_set_internal", "__init_view", "__init_global", "__global_object_depths", "scr_load_save_file"],
    _j5: [],
    _k5: [{
        _F3: "font_namedraw",
        _l5: 20,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 856,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 71, y: 167, _v5: 8, _w5: 31, shift: 8, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 181,
            y: 167,
            _v5: 6,
            _w5: 31,
            shift: 10,
            offset: 2
        }, {_t5: 34, _u5: "\"", x: 2, y: 167, _v5: 10, _w5: 31, shift: 10, offset: 0}, {
            _t5: 35,
            _u5: "#",
            x: 206,
            y: 35,
            _v5: 16,
            _w5: 31,
            shift: 16,
            offset: 0
        }, {_t5: 36, _u5: "$", x: 118, y: 134, _v5: 12, _w5: 31, shift: 16, offset: 2}, {
            _t5: 37,
            _u5: "%",
            x: 160,
            y: 2,
            _v5: 18,
            _w5: 31,
            shift: 18,
            offset: 0
        }, {_t5: 38, _u5: "&", x: 21, y: 35, _v5: 17, _w5: 31, shift: 19, offset: 1}, {
            _t5: 39, _u5: "'", x: 197,
            y: 167, _v5: 4, _w5: 31, shift: 6, offset: 1
        }, {_t5: 40, _u5: "(", x: 147, y: 167, _v5: 7, _w5: 31, shift: 10, offset: 2}, {
            _t5: 41,
            _u5: ")",
            x: 138,
            y: 167,
            _v5: 7,
            _w5: 31,
            shift: 10,
            offset: 2
        }, {_t5: 42, _u5: "*", x: 173, y: 134, _v5: 11, _w5: 31, shift: 12, offset: 0}, {
            _t5: 43,
            _u5: "+",
            x: 146,
            y: 134,
            _v5: 12,
            _w5: 31,
            shift: 16,
            offset: 2
        }, {_t5: 44, _u5: ",", x: 111, y: 167, _v5: 7, _w5: 31, shift: 10, offset: 1}, {
            _t5: 45,
            _u5: "-",
            x: 61,
            y: 167,
            _v5: 8,
            _w5: 31,
            shift: 10,
            offset: 1
        }, {_t5: 46, _u5: ".", x: 189, y: 167, _v5: 6, _w5: 31, shift: 10, offset: 2}, {
            _t5: 47, _u5: "/", x: 160, y: 134, _v5: 11, _w5: 31,
            shift: 11, offset: 0
        }, {_t5: 48, _u5: "0", x: 121, y: 68, _v5: 15, _w5: 31, shift: 16, offset: 0}, {
            _t5: 49,
            _u5: "1",
            x: 81,
            y: 167,
            _v5: 8,
            _w5: 31,
            shift: 16,
            offset: 3
        }, {_t5: 50, _u5: "2", x: 130, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
            _t5: 51,
            _u5: "3",
            x: 32,
            y: 134,
            _v5: 13,
            _w5: 31,
            shift: 16,
            offset: 1
        }, {_t5: 52, _u5: "4", x: 70, y: 68, _v5: 15, _w5: 31, shift: 16, offset: 0}, {
            _t5: 53,
            _u5: "5",
            x: 226,
            y: 101,
            _v5: 13,
            _w5: 31,
            shift: 16,
            offset: 2
        }, {_t5: 54, _u5: "6", x: 146, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
            _t5: 55,
            _u5: "7",
            x: 104,
            y: 68,
            _v5: 15,
            _w5: 31,
            shift: 16,
            offset: 1
        },
            {_t5: 56, _u5: "8", x: 162, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 57,
                _u5: "9",
                x: 178,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {_t5: 58, _u5: ":", x: 173, y: 167, _v5: 6, _w5: 31, shift: 10, offset: 2}, {
                _t5: 59,
                _u5: ";",
                x: 129,
                y: 167,
                _v5: 7,
                _w5: 31,
                shift: 10,
                offset: 1
            }, {_t5: 60, _u5: "<", x: 90, y: 134, _v5: 12, _w5: 31, shift: 16, offset: 2}, {
                _t5: 61,
                _u5: "=",
                x: 47,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 16,
                offset: 2
            }, {_t5: 62, _u5: ">", x: 132, y: 134, _v5: 12, _w5: 31, shift: 16, offset: 3}, {
                _t5: 63,
                _u5: "?",
                x: 238,
                y: 134,
                _v5: 10,
                _w5: 31,
                shift: 12,
                offset: 1
            }, {
                _t5: 64, _u5: "@",
                x: 96, y: 2, _v5: 20, _w5: 31, shift: 21, offset: 0
            }, {_t5: 65, _u5: "A", x: 140, y: 2, _v5: 18, _w5: 31, shift: 17, offset: 0}, {
                _t5: 66,
                _u5: "B",
                x: 224,
                y: 35,
                _v5: 15,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {_t5: 67, _u5: "C", x: 53, y: 68, _v5: 15, _w5: 31, shift: 17, offset: 1}, {
                _t5: 68,
                _u5: "D",
                x: 152,
                y: 35,
                _v5: 16,
                _w5: 31,
                shift: 17,
                offset: 1
            }, {_t5: 69, _u5: "E", x: 114, y: 101, _v5: 14, _w5: 31, shift: 15, offset: 1}, {
                _t5: 70,
                _u5: "F",
                x: 171,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {_t5: 71, _u5: "G", x: 40, y: 35, _v5: 17, _w5: 31, shift: 18, offset: 1}, {
                _t5: 72, _u5: "H", x: 116, y: 35, _v5: 16, _w5: 31,
                shift: 18, offset: 1
            }, {_t5: 73, _u5: "I", x: 203, y: 167, _v5: 4, _w5: 31, shift: 8, offset: 2}, {
                _t5: 74,
                _u5: "J",
                x: 2,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 75, _u5: "K", x: 199, y: 2, _v5: 17, _w5: 31, shift: 17, offset: 1}, {
                _t5: 76,
                _u5: "L",
                x: 187,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {_t5: 77, _u5: "M", x: 74, y: 2, _v5: 20, _w5: 31, shift: 20, offset: 0}, {
                _t5: 78,
                _u5: "N",
                x: 134,
                y: 35,
                _v5: 16,
                _w5: 31,
                shift: 18,
                offset: 1
            }, {_t5: 79, _u5: "O", x: 218, y: 2, _v5: 17, _w5: 31, shift: 19, offset: 1}, {
                _t5: 80,
                _u5: "P",
                x: 203,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {
                _t5: 81,
                _u5: "Q", x: 118, y: 2, _v5: 20, _w5: 31, shift: 19, offset: 1
            }, {_t5: 82, _u5: "R", x: 188, y: 35, _v5: 16, _w5: 31, shift: 17, offset: 1}, {
                _t5: 83,
                _u5: "S",
                x: 104,
                y: 134,
                _v5: 12,
                _w5: 31,
                shift: 14,
                offset: 1
            }, {_t5: 84, _u5: "T", x: 180, y: 2, _v5: 17, _w5: 31, shift: 17, offset: 0}, {
                _t5: 85,
                _u5: "U",
                x: 170,
                y: 35,
                _v5: 16,
                _w5: 31,
                shift: 18,
                offset: 1
            }, {_t5: 86, _u5: "V", x: 78, y: 35, _v5: 17, _w5: 31, shift: 17, offset: 0}, {
                _t5: 87,
                _u5: "W",
                x: 2,
                y: 2,
                _v5: 24,
                _w5: 31,
                shift: 24,
                offset: 0
            }, {_t5: 88, _u5: "X", x: 59, y: 35, _v5: 17, _w5: 31, shift: 16, offset: 0}, {
                _t5: 89, _u5: "Y", x: 2, y: 35, _v5: 17, _w5: 31,
                shift: 17, offset: 0
            }, {_t5: 90, _u5: "Z", x: 219, y: 68, _v5: 14, _w5: 31, shift: 15, offset: 1}, {
                _t5: 91,
                _u5: "[",
                x: 101,
                y: 167,
                _v5: 8,
                _w5: 31,
                shift: 11,
                offset: 1
            }, {_t5: 92, _u5: "\\", x: 225, y: 134, _v5: 11, _w5: 31, shift: 10, offset: -1}, {
                _t5: 93,
                _u5: "]",
                x: 91,
                y: 167,
                _v5: 8,
                _w5: 31,
                shift: 11,
                offset: 1
            }, {_t5: 94, _u5: "^", x: 62, y: 134, _v5: 12, _w5: 31, shift: 16, offset: 2}, {
                _t5: 95,
                _u5: "_",
                x: 97,
                y: 35,
                _v5: 17,
                _w5: 31,
                shift: 16,
                offset: -1
            }, {_t5: 96, _u5: "`", x: 156, y: 167, _v5: 7, _w5: 31, shift: 16, offset: 4}, {
                _t5: 97,
                _u5: "a",
                x: 155,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 14,
                offset: 0
            }
            , {_t5: 98, _u5: "b", x: 235, y: 68, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 99,
                _u5: "c",
                x: 17,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 100, _u5: "d", x: 210, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 101,
                _u5: "e",
                x: 138,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 16,
                offset: 0
            }, {_t5: 102, _u5: "f", x: 212, y: 134, _v5: 11, _w5: 31, shift: 10, offset: 0}, {
                _t5: 103,
                _u5: "g",
                x: 194,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 104, _u5: "h", x: 98, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 105,
                _u5: "i",
                x: 120,
                y: 167,
                _v5: 7,
                _w5: 31,
                shift: 8,
                offset: 0
            }, {
                _t5: 106, _u5: "j",
                x: 50, y: 167, _v5: 9, _w5: 31, shift: 10, offset: -1
            }, {_t5: 107, _u5: "k", x: 82, y: 101, _v5: 14, _w5: 31, shift: 15, offset: 1}, {
                _t5: 108,
                _u5: "l",
                x: 165,
                y: 167,
                _v5: 6,
                _w5: 31,
                shift: 8,
                offset: 2
            }, {_t5: 109, _u5: "m", x: 28, y: 2, _v5: 21, _w5: 31, shift: 23, offset: 1}, {
                _t5: 110,
                _u5: "n",
                x: 66,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {_t5: 111, _u5: "o", x: 87, y: 68, _v5: 15, _w5: 31, shift: 15, offset: 0}, {
                _t5: 112,
                _u5: "p",
                x: 50,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {_t5: 113, _u5: "q", x: 34, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 114, _u5: "r", x: 186, y: 134, _v5: 11,
                _w5: 31, shift: 12, offset: 1
            }, {_t5: 115, _u5: "s", x: 199, y: 134, _v5: 11, _w5: 31, shift: 12, offset: 0}, {
                _t5: 116,
                _u5: "t",
                x: 38,
                y: 167,
                _v5: 10,
                _w5: 31,
                shift: 11,
                offset: 0
            }, {_t5: 117, _u5: "u", x: 18, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 118,
                _u5: "v",
                x: 36,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 119, _u5: "w", x: 51, y: 2, _v5: 21, _w5: 31, shift: 21, offset: 0}, {
                _t5: 120,
                _u5: "x",
                x: 19,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 121, _u5: "y", x: 2, y: 68, _v5: 15, _w5: 31, shift: 14, offset: 0}, {
                _t5: 122,
                _u5: "z",
                x: 2,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 14,
                offset: 0
            }
            , {_t5: 123, _u5: "{", x: 26, y: 167, _v5: 10, _w5: 31, shift: 12, offset: 1}, {
                _t5: 124,
                _u5: "|",
                x: 209,
                y: 167,
                _v5: 4,
                _w5: 31,
                shift: 16,
                offset: 6
            }, {_t5: 125, _u5: "}", x: 14, y: 167, _v5: 10, _w5: 31, shift: 12, offset: 1}, {
                _t5: 126,
                _u5: "~",
                x: 76,
                y: 134,
                _v5: 12,
                _w5: 31,
                shift: 16,
                offset: 2
            },],
    }, {
        _F3: "font_namebigdraw",
        _l5: 26,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 858,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 61, y: 128, _v5: 11, _w5: 40, shift: 11, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 229,
            y: 128,
            _v5: 7,
            _w5: 40,
            shift: 13,
            offset: 3
        }, {
            _t5: 34,
            _u5: "\"", x: 74, y: 128, _v5: 11, _w5: 40, shift: 13, offset: 1
        }, {_t5: 35, _u5: "#", x: 486, y: 2, _v5: 20, _w5: 40, shift: 21, offset: 1}, {
            _t5: 36,
            _u5: "$",
            x: 302,
            y: 86,
            _v5: 16,
            _w5: 40,
            shift: 21,
            offset: 2
        }, {_t5: 37, _u5: "%", x: 176, y: 2, _v5: 24, _w5: 40, shift: 24, offset: 0}, {
            _t5: 38,
            _u5: "&",
            x: 252,
            y: 2,
            _v5: 22,
            _w5: 40,
            shift: 25,
            offset: 1
        }, {_t5: 39, _u5: "'", x: 246, y: 128, _v5: 5, _w5: 40, shift: 8, offset: 2}, {
            _t5: 40,
            _u5: "(",
            x: 112,
            y: 128,
            _v5: 10,
            _w5: 40,
            shift: 13,
            offset: 2
        }, {_t5: 41, _u5: ")", x: 124, y: 128, _v5: 10, _w5: 40, shift: 13, offset: 2}, {
            _t5: 42, _u5: "*", x: 354, y: 86, _v5: 15,
            _w5: 40, shift: 15, offset: 0
        }, {_t5: 43, _u5: "+", x: 78, y: 86, _v5: 17, _w5: 40, shift: 21, offset: 2}, {
            _t5: 44,
            _u5: ",",
            x: 170,
            y: 128,
            _v5: 8,
            _w5: 40,
            shift: 13,
            offset: 2
        }, {_t5: 45, _u5: "-", x: 148, y: 128, _v5: 10, _w5: 40, shift: 13, offset: 1}, {
            _t5: 46,
            _u5: ".",
            x: 210,
            y: 128,
            _v5: 8,
            _w5: 40,
            shift: 13,
            offset: 2
        }, {_t5: 47, _u5: "/", x: 436, y: 86, _v5: 14, _w5: 40, shift: 14, offset: 0}, {
            _t5: 48,
            _u5: "0",
            x: 111,
            y: 44,
            _v5: 19,
            _w5: 40,
            shift: 21,
            offset: 1
        }, {_t5: 49, _u5: "1", x: 87, y: 128, _v5: 11, _w5: 40, shift: 21, offset: 4}, {
            _t5: 50,
            _u5: "2",
            x: 455,
            y: 44,
            _v5: 18,
            _w5: 40,
            shift: 21,
            offset: 2
        }
            , {_t5: 51, _u5: "3", x: 248, y: 86, _v5: 16, _w5: 40, shift: 21, offset: 2}, {
                _t5: 52,
                _u5: "4",
                x: 153,
                y: 44,
                _v5: 19,
                _w5: 40,
                shift: 21,
                offset: 1
            }, {_t5: 53, _u5: "5", x: 40, y: 86, _v5: 17, _w5: 40, shift: 21, offset: 2}, {
                _t5: 54,
                _u5: "6",
                x: 211,
                y: 86,
                _v5: 17,
                _w5: 40,
                shift: 21,
                offset: 2
            }, {_t5: 55, _u5: "7", x: 315, y: 44, _v5: 18, _w5: 40, shift: 21, offset: 2}, {
                _t5: 56,
                _u5: "8",
                x: 116,
                y: 86,
                _v5: 17,
                _w5: 40,
                shift: 21,
                offset: 2
            }, {_t5: 57, _u5: "9", x: 415, y: 44, _v5: 18, _w5: 40, shift: 21, offset: 1}, {
                _t5: 58,
                _u5: ":",
                x: 180,
                y: 128,
                _v5: 8,
                _w5: 40,
                shift: 13,
                offset: 2
            }, {
                _t5: 59, _u5: ";", x: 200,
                y: 128, _v5: 8, _w5: 40, shift: 13, offset: 2
            }, {_t5: 60, _u5: "<", x: 404, y: 86, _v5: 14, _w5: 40, shift: 21, offset: 3}, {
                _t5: 61,
                _u5: "=",
                x: 230,
                y: 86,
                _v5: 16,
                _w5: 40,
                shift: 21,
                offset: 3
            }, {_t5: 62, _u5: ">", x: 371, y: 86, _v5: 15, _w5: 40, shift: 21, offset: 4}, {
                _t5: 63,
                _u5: "?",
                x: 452,
                y: 86,
                _v5: 14,
                _w5: 40,
                shift: 15,
                offset: 1
            }, {_t5: 64, _u5: "@", x: 149, y: 2, _v5: 25, _w5: 40, shift: 27, offset: 1}, {
                _t5: 65,
                _u5: "A",
                x: 227,
                y: 2,
                _v5: 23,
                _w5: 40,
                shift: 22,
                offset: 0
            }, {_t5: 66, _u5: "B", x: 235, y: 44, _v5: 18, _w5: 40, shift: 21, offset: 2}, {
                _t5: 67, _u5: "C", x: 2, y: 44, _v5: 20, _w5: 40, shift: 21,
                offset: 1
            }, {_t5: 68, _u5: "D", x: 24, y: 44, _v5: 20, _w5: 40, shift: 22, offset: 2}, {
                _t5: 69,
                _u5: "E",
                x: 192,
                y: 86,
                _v5: 17,
                _w5: 40,
                shift: 20,
                offset: 2
            }, {_t5: 70, _u5: "F", x: 195, y: 44, _v5: 18, _w5: 40, shift: 20, offset: 2}, {
                _t5: 71,
                _u5: "G",
                x: 372,
                y: 2,
                _v5: 22,
                _w5: 40,
                shift: 24,
                offset: 1
            }, {_t5: 72, _u5: "H", x: 68, y: 44, _v5: 20, _w5: 40, shift: 24, offset: 2}, {
                _t5: 73,
                _u5: "I",
                x: 238,
                y: 128,
                _v5: 6,
                _w5: 40,
                shift: 10,
                offset: 2
            }, {_t5: 74, _u5: "J", x: 135, y: 86, _v5: 17, _w5: 40, shift: 19, offset: 0}, {
                _t5: 75,
                _u5: "K",
                x: 419,
                y: 2,
                _v5: 21,
                _w5: 40,
                shift: 22,
                offset: 2
            }, {
                _t5: 76, _u5: "L",
                x: 97, y: 86, _v5: 17, _w5: 40, shift: 19, offset: 2
            }, {_t5: 77, _u5: "M", x: 65, y: 2, _v5: 26, _w5: 40, shift: 26, offset: 0}, {
                _t5: 78,
                _u5: "N",
                x: 132,
                y: 44,
                _v5: 19,
                _w5: 40,
                shift: 23,
                offset: 2
            }, {_t5: 79, _u5: "O", x: 202, y: 2, _v5: 23, _w5: 40, shift: 25, offset: 1}, {
                _t5: 80,
                _u5: "P",
                x: 215,
                y: 44,
                _v5: 18,
                _w5: 40,
                shift: 21,
                offset: 2
            }, {_t5: 81, _u5: "Q", x: 93, y: 2, _v5: 26, _w5: 40, shift: 25, offset: 1}, {
                _t5: 82,
                _u5: "R",
                x: 464,
                y: 2,
                _v5: 20,
                _w5: 40,
                shift: 21,
                offset: 2
            }, {_t5: 83, _u5: "S", x: 266, y: 86, _v5: 16, _w5: 40, shift: 18, offset: 1}, {
                _t5: 84, _u5: "T", x: 300, y: 2, _v5: 22, _w5: 40, shift: 21,
                offset: 0
            }, {_t5: 85, _u5: "U", x: 442, y: 2, _v5: 20, _w5: 40, shift: 24, offset: 2}, {
                _t5: 86,
                _u5: "V",
                x: 276,
                y: 2,
                _v5: 22,
                _w5: 40,
                shift: 22,
                offset: 0
            }, {_t5: 87, _u5: "W", x: 2, y: 2, _v5: 31, _w5: 40, shift: 31, offset: 0}, {
                _t5: 88,
                _u5: "X",
                x: 396,
                y: 2,
                _v5: 21,
                _w5: 40,
                shift: 21,
                offset: 0
            }, {_t5: 89, _u5: "Y", x: 324, y: 2, _v5: 22, _w5: 40, shift: 21, offset: 0}, {
                _t5: 90,
                _u5: "Z",
                x: 255,
                y: 44,
                _v5: 18,
                _w5: 40,
                shift: 20,
                offset: 1
            }, {_t5: 91, _u5: "[", x: 100, y: 128, _v5: 10, _w5: 40, shift: 14, offset: 2}, {
                _t5: 92,
                _u5: "\\",
                x: 388,
                y: 86,
                _v5: 14,
                _w5: 40,
                shift: 12,
                offset: -1
            }, {
                _t5: 93, _u5: "]",
                x: 136, y: 128, _v5: 10, _w5: 40, shift: 14, offset: 2
            }, {_t5: 94, _u5: "^", x: 320, y: 86, _v5: 15, _w5: 40, shift: 21, offset: 3}, {
                _t5: 95,
                _u5: "_",
                x: 348,
                y: 2,
                _v5: 22,
                _w5: 40,
                shift: 21,
                offset: -1
            }, {_t5: 96, _u5: "`", x: 160, y: 128, _v5: 8, _w5: 40, shift: 21, offset: 6}, {
                _t5: 97,
                _u5: "a",
                x: 154,
                y: 86,
                _v5: 17,
                _w5: 40,
                shift: 19,
                offset: 1
            }, {_t5: 98, _u5: "b", x: 275, y: 44, _v5: 18, _w5: 40, shift: 20, offset: 1}, {
                _t5: 99,
                _u5: "c",
                x: 284,
                y: 86,
                _v5: 16,
                _w5: 40,
                shift: 18,
                offset: 1
            }, {_t5: 100, _u5: "d", x: 475, y: 44, _v5: 18, _w5: 40, shift: 20, offset: 1}, {
                _t5: 101, _u5: "e", x: 295, y: 44, _v5: 18,
                _w5: 40, shift: 20, offset: 1
            }, {_t5: 102, _u5: "f", x: 420, y: 86, _v5: 14, _w5: 40, shift: 13, offset: 0}, {
                _t5: 103,
                _u5: "g",
                x: 335,
                y: 44,
                _v5: 18,
                _w5: 40,
                shift: 18,
                offset: 0
            }, {_t5: 104, _u5: "h", x: 173, y: 86, _v5: 17, _w5: 40, shift: 21, offset: 2}, {
                _t5: 105,
                _u5: "i",
                x: 190,
                y: 128,
                _v5: 8,
                _w5: 40,
                shift: 10,
                offset: 1
            }, {_t5: 106, _u5: "j", x: 47, y: 128, _v5: 12, _w5: 40, shift: 13, offset: -1}, {
                _t5: 107,
                _u5: "k",
                x: 395,
                y: 44,
                _v5: 18,
                _w5: 40,
                shift: 19,
                offset: 2
            }, {_t5: 108, _u5: "l", x: 220, y: 128, _v5: 7, _w5: 40, shift: 10, offset: 3}, {
                _t5: 109, _u5: "m", x: 121, y: 2, _v5: 26, _w5: 40, shift: 30,
                offset: 2
            }, {_t5: 110, _u5: "n", x: 21, y: 86, _v5: 17, _w5: 40, shift: 21, offset: 2}, {
                _t5: 111,
                _u5: "o",
                x: 435,
                y: 44,
                _v5: 18,
                _w5: 40,
                shift: 20,
                offset: 1
            }, {_t5: 112, _u5: "p", x: 375, y: 44, _v5: 18, _w5: 40, shift: 20, offset: 1}, {
                _t5: 113,
                _u5: "q",
                x: 355,
                y: 44,
                _v5: 18,
                _w5: 40,
                shift: 20,
                offset: 1
            }, {_t5: 114, _u5: "r", x: 2, y: 128, _v5: 13, _w5: 40, shift: 15, offset: 2}, {
                _t5: 115,
                _u5: "s",
                x: 17,
                y: 128,
                _v5: 13,
                _w5: 40,
                shift: 15,
                offset: 1
            }, {_t5: 116, _u5: "t", x: 32, y: 128, _v5: 13, _w5: 40, shift: 14, offset: 0}, {
                _t5: 117,
                _u5: "u",
                x: 59,
                y: 86,
                _v5: 17,
                _w5: 40,
                shift: 21,
                offset: 2
            }, {
                _t5: 118,
                _u5: "v", x: 90, y: 44, _v5: 19, _w5: 40, shift: 18, offset: 0
            }, {_t5: 119, _u5: "w", x: 35, y: 2, _v5: 28, _w5: 40, shift: 27, offset: 0}, {
                _t5: 120,
                _u5: "x",
                x: 46,
                y: 44,
                _v5: 20,
                _w5: 40,
                shift: 19,
                offset: 0
            }, {_t5: 121, _u5: "y", x: 174, y: 44, _v5: 19, _w5: 40, shift: 19, offset: 0}, {
                _t5: 122,
                _u5: "z",
                x: 2,
                y: 86,
                _v5: 17,
                _w5: 40,
                shift: 18,
                offset: 1
            }, {_t5: 123, _u5: "{", x: 483, y: 86, _v5: 13, _w5: 40, shift: 15, offset: 1}, {
                _t5: 124,
                _u5: "|",
                x: 253,
                y: 128,
                _v5: 5,
                _w5: 40,
                shift: 21,
                offset: 8
            }, {_t5: 125, _u5: "}", x: 468, y: 86, _v5: 13, _w5: 40, shift: 15, offset: 1}, {
                _t5: 126, _u5: "~", x: 337, y: 86,
                _v5: 15, _w5: 40, shift: 21, offset: 3
            },],
    }, {
        _F3: "font_menu",
        _l5: 24,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 859,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 425, y: 80, _v5: 10, _w5: 37, shift: 10, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 77,
            y: 119,
            _v5: 6,
            _w5: 37,
            shift: 12,
            offset: 3
        }, {_t5: 34, _u5: "\"", x: 437, y: 80, _v5: 10, _w5: 37, shift: 12, offset: 1}, {
            _t5: 35,
            _u5: "#",
            x: 448,
            y: 2,
            _v5: 18,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 36, _u5: "$", x: 483, y: 41, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 37, _u5: "%", x: 163, y: 2, _v5: 22, _w5: 37, shift: 22,
            offset: 0
        }, {_t5: 38, _u5: "&", x: 321, y: 2, _v5: 20, _w5: 37, shift: 23, offset: 1}, {
            _t5: 39,
            _u5: "'",
            x: 85,
            y: 119,
            _v5: 5,
            _w5: 37,
            shift: 7,
            offset: 1
        }, {_t5: 40, _u5: "(", x: 460, y: 80, _v5: 9, _w5: 37, shift: 12, offset: 2}, {
            _t5: 41,
            _u5: ")",
            x: 471,
            y: 80,
            _v5: 9,
            _w5: 37,
            shift: 12,
            offset: 2
        }, {_t5: 42, _u5: "*", x: 253, y: 80, _v5: 13, _w5: 37, shift: 14, offset: 0}, {
            _t5: 43,
            _u5: "+",
            x: 36,
            y: 80,
            _v5: 15,
            _w5: 37,
            shift: 19,
            offset: 2
        }, {_t5: 44, _u5: ",", x: 23, y: 119, _v5: 7, _w5: 37, shift: 12, offset: 2}, {
            _t5: 45,
            _u5: "-",
            x: 2,
            y: 119,
            _v5: 9,
            _w5: 37,
            shift: 12,
            offset: 1
        }, {
            _t5: 46, _u5: ".", x: 68,
            y: 119, _v5: 7, _w5: 37, shift: 12, offset: 2
        }, {_t5: 47, _u5: "/", x: 313, y: 80, _v5: 13, _w5: 37, shift: 12, offset: 0}, {
            _t5: 48,
            _u5: "0",
            x: 176,
            y: 41,
            _v5: 17,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 49, _u5: "1", x: 482, y: 80, _v5: 9, _w5: 37, shift: 19, offset: 4}, {
            _t5: 50,
            _u5: "2",
            x: 394,
            y: 41,
            _v5: 16,
            _w5: 37,
            shift: 19,
            offset: 2
        }, {_t5: 51, _u5: "3", x: 121, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 52,
            _u5: "4",
            x: 100,
            y: 41,
            _v5: 17,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 53, _u5: "5", x: 155, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 54, _u5: "6", x: 250, y: 41, _v5: 16, _w5: 37, shift: 19,
            offset: 2
        }, {_t5: 55, _u5: "7", x: 214, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2}, {
            _t5: 56,
            _u5: "8",
            x: 430,
            y: 41,
            _v5: 16,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 57, _u5: "9", x: 286, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 1}, {
            _t5: 58,
            _u5: ":",
            x: 41,
            y: 119,
            _v5: 7,
            _w5: 37,
            shift: 12,
            offset: 2
        }, {_t5: 59, _u5: ";", x: 59, y: 119, _v5: 7, _w5: 37, shift: 12, offset: 2}, {
            _t5: 60,
            _u5: "<",
            x: 268,
            y: 80,
            _v5: 13,
            _w5: 37,
            shift: 19,
            offset: 3
        }, {_t5: 61, _u5: "=", x: 172, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 62,
            _u5: ">",
            x: 298,
            y: 80,
            _v5: 13,
            _w5: 37,
            shift: 19,
            offset: 4
        }, {
            _t5: 63, _u5: "?",
            x: 356, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 1
        }, {_t5: 64, _u5: "@", x: 138, y: 2, _v5: 23, _w5: 37, shift: 25, offset: 1}, {
            _t5: 65,
            _u5: "A",
            x: 210,
            y: 2,
            _v5: 21,
            _w5: 37,
            shift: 20,
            offset: 0
        }, {_t5: 66, _u5: "B", x: 232, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2}, {
            _t5: 67,
            _u5: "C",
            x: 2,
            y: 41,
            _v5: 18,
            _w5: 37,
            shift: 20,
            offset: 1
        }, {_t5: 68, _u5: "D", x: 488, y: 2, _v5: 18, _w5: 37, shift: 21, offset: 2}, {
            _t5: 69,
            _u5: "E",
            x: 138,
            y: 80,
            _v5: 15,
            _w5: 37,
            shift: 18,
            offset: 2
        }, {_t5: 70, _u5: "F", x: 304, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2}, {
            _t5: 71, _u5: "G", x: 233, y: 2, _v5: 20, _w5: 37, shift: 21,
            offset: 1
        }, {_t5: 72, _u5: "H", x: 468, y: 2, _v5: 18, _w5: 37, shift: 22, offset: 2}, {
            _t5: 73,
            _u5: "I",
            x: 99,
            y: 119,
            _v5: 5,
            _w5: 37,
            shift: 9,
            offset: 2
        }, {_t5: 74, _u5: "J", x: 87, y: 80, _v5: 15, _w5: 37, shift: 17, offset: 0}, {
            _t5: 75,
            _u5: "K",
            x: 387,
            y: 2,
            _v5: 19,
            _w5: 37,
            shift: 20,
            offset: 2
        }, {_t5: 76, _u5: "L", x: 53, y: 80, _v5: 15, _w5: 37, shift: 18, offset: 2}, {
            _t5: 77,
            _u5: "M",
            x: 86,
            y: 2,
            _v5: 24,
            _w5: 37,
            shift: 24,
            offset: 0
        }, {_t5: 78, _u5: "N", x: 428, y: 2, _v5: 18, _w5: 37, shift: 21, offset: 2}, {
            _t5: 79,
            _u5: "O",
            x: 187,
            y: 2,
            _v5: 21,
            _w5: 37,
            shift: 23,
            offset: 1
        }, {
            _t5: 80, _u5: "P", x: 358,
            y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2
        }, {_t5: 81, _u5: "Q", x: 112, y: 2, _v5: 24, _w5: 37, shift: 23, offset: 1}, {
            _t5: 82,
            _u5: "R",
            x: 42,
            y: 41,
            _v5: 18,
            _w5: 37,
            shift: 20,
            offset: 2
        }, {_t5: 83, _u5: "S", x: 189, y: 80, _v5: 15, _w5: 37, shift: 16, offset: 1}, {
            _t5: 84,
            _u5: "T",
            x: 255,
            y: 2,
            _v5: 20,
            _w5: 37,
            shift: 20,
            offset: 0
        }, {_t5: 85, _u5: "U", x: 22, y: 41, _v5: 18, _w5: 37, shift: 22, offset: 2}, {
            _t5: 86,
            _u5: "V",
            x: 299,
            y: 2,
            _v5: 20,
            _w5: 37,
            shift: 20,
            offset: 0
        }, {_t5: 87, _u5: "W", x: 2, y: 2, _v5: 29, _w5: 37, shift: 28, offset: 0}, {
            _t5: 88,
            _u5: "X",
            x: 343,
            y: 2,
            _v5: 20,
            _w5: 37,
            shift: 19,
            offset: 0
        }
            , {_t5: 89, _u5: "Y", x: 365, y: 2, _v5: 20, _w5: 37, shift: 20, offset: 0}, {
                _t5: 90,
                _u5: "Z",
                x: 448,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 18,
                offset: 1
            }, {_t5: 91, _u5: "[", x: 449, y: 80, _v5: 9, _w5: 37, shift: 13, offset: 2}, {
                _t5: 92,
                _u5: "\\",
                x: 238,
                y: 80,
                _v5: 13,
                _w5: 37,
                shift: 11,
                offset: -1
            }, {_t5: 93, _u5: "]", x: 493, y: 80, _v5: 9, _w5: 37, shift: 13, offset: 2}, {
                _t5: 94,
                _u5: "^",
                x: 206,
                y: 80,
                _v5: 14,
                _w5: 37,
                shift: 19,
                offset: 2
            }, {_t5: 95, _u5: "_", x: 277, y: 2, _v5: 20, _w5: 37, shift: 19, offset: -1}, {
                _t5: 96,
                _u5: "`",
                x: 13,
                y: 119,
                _v5: 8,
                _w5: 37,
                shift: 19,
                offset: 5
            }, {
                _t5: 97, _u5: "a", x: 340,
                y: 41, _v5: 16, _w5: 37, shift: 17, offset: 1
            }, {_t5: 98, _u5: "b", x: 62, y: 41, _v5: 17, _w5: 37, shift: 19, offset: 1}, {
                _t5: 99,
                _u5: "c",
                x: 104,
                y: 80,
                _v5: 15,
                _w5: 37,
                shift: 16,
                offset: 1
            }, {_t5: 100, _u5: "d", x: 268, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 1}, {
                _t5: 101,
                _u5: "e",
                x: 81,
                y: 41,
                _v5: 17,
                _w5: 37,
                shift: 18,
                offset: 1
            }, {_t5: 102, _u5: "f", x: 283, y: 80, _v5: 13, _w5: 37, shift: 12, offset: 0}, {
                _t5: 103,
                _u5: "g",
                x: 376,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 16,
                offset: 0
            }, {_t5: 104, _u5: "h", x: 466, y: 41, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
                _t5: 105, _u5: "i", x: 50, y: 119, _v5: 7, _w5: 37,
                shift: 10, offset: 1
            }, {_t5: 106, _u5: "j", x: 412, y: 80, _v5: 11, _w5: 37, shift: 12, offset: -1}, {
                _t5: 107,
                _u5: "k",
                x: 412,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 18,
                offset: 2
            }, {_t5: 108, _u5: "l", x: 32, y: 119, _v5: 7, _w5: 37, shift: 9, offset: 2}, {
                _t5: 109,
                _u5: "m",
                x: 60,
                y: 2,
                _v5: 24,
                _w5: 37,
                shift: 28,
                offset: 2
            }, {_t5: 110, _u5: "n", x: 70, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
                _t5: 111,
                _u5: "o",
                x: 195,
                y: 41,
                _v5: 17,
                _w5: 37,
                shift: 18,
                offset: 1
            }, {_t5: 112, _u5: "p", x: 157, y: 41, _v5: 17, _w5: 37, shift: 19, offset: 1}, {
                _t5: 113,
                _u5: "q",
                x: 322,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 19,
                offset: 1
            }
            , {_t5: 114, _u5: "r", x: 370, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 2}, {
                _t5: 115,
                _u5: "s",
                x: 384,
                y: 80,
                _v5: 12,
                _w5: 37,
                shift: 14,
                offset: 1
            }, {_t5: 116, _u5: "t", x: 398, y: 80, _v5: 12, _w5: 37, shift: 13, offset: 0}, {
                _t5: 117,
                _u5: "u",
                x: 19,
                y: 80,
                _v5: 15,
                _w5: 37,
                shift: 19,
                offset: 2
            }, {_t5: 118, _u5: "v", x: 119, y: 41, _v5: 17, _w5: 37, shift: 17, offset: 0}, {
                _t5: 119,
                _u5: "w",
                x: 33,
                y: 2,
                _v5: 25,
                _w5: 37,
                shift: 25,
                offset: 0
            }, {_t5: 120, _u5: "x", x: 408, y: 2, _v5: 18, _w5: 37, shift: 18, offset: 0}, {
                _t5: 121,
                _u5: "y",
                x: 138,
                y: 41,
                _v5: 17,
                _w5: 37,
                shift: 17,
                offset: 0
            }, {
                _t5: 122, _u5: "z",
                x: 2, y: 80, _v5: 15, _w5: 37, shift: 17, offset: 1
            }, {_t5: 123, _u5: "{", x: 342, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 1}, {
                _t5: 124,
                _u5: "|",
                x: 92,
                y: 119,
                _v5: 5,
                _w5: 37,
                shift: 19,
                offset: 7
            }, {_t5: 125, _u5: "}", x: 328, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 1}, {
                _t5: 126,
                _u5: "~",
                x: 222,
                y: 80,
                _v5: 14,
                _w5: 37,
                shift: 19,
                offset: 2
            },],
    }, {
        _F3: "font_weapondraw",
        _l5: 10,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 847,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 66, y: 104, _v5: 4, _w5: 15, shift: 4, offset: 0}, {
            _t5: 33, _u5: "!", x: 92, y: 104,
            _v5: 3, _w5: 15, shift: 5, offset: 1
        }, {_t5: 34, _u5: "\"", x: 106, y: 87, _v5: 5, _w5: 15, shift: 5, offset: 0}, {
            _t5: 35,
            _u5: "#",
            x: 87,
            y: 19,
            _v5: 8,
            _w5: 15,
            shift: 8,
            offset: 0
        }, {_t5: 36, _u5: "$", x: 58, y: 53, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
            _t5: 37,
            _u5: "%",
            x: 35,
            y: 19,
            _v5: 9,
            _w5: 15,
            shift: 9,
            offset: 0
        }, {_t5: 38, _u5: "&", x: 46, y: 19, _v5: 9, _w5: 15, shift: 9, offset: 0}, {
            _t5: 39,
            _u5: "'",
            x: 87,
            y: 104,
            _v5: 3,
            _w5: 15,
            shift: 3,
            offset: 0
        }, {_t5: 40, _u5: "(", x: 54, y: 104, _v5: 4, _w5: 15, shift: 5, offset: 1}, {
            _t5: 41,
            _u5: ")",
            x: 48,
            y: 104,
            _v5: 4,
            _w5: 15,
            shift: 5,
            offset: 1
        }, {
            _t5: 42,
            _u5: "*", x: 34, y: 87, _v5: 6, _w5: 15, shift: 6, offset: 0
        }, {_t5: 43, _u5: "+", x: 50, y: 87, _v5: 6, _w5: 15, shift: 8, offset: 1}, {
            _t5: 44,
            _u5: ",",
            x: 36,
            y: 104,
            _v5: 4,
            _w5: 15,
            shift: 5,
            offset: 0
        }, {_t5: 45, _u5: "-", x: 120, y: 87, _v5: 5, _w5: 15, shift: 5, offset: 0}, {
            _t5: 46,
            _u5: ".",
            x: 77,
            y: 104,
            _v5: 3,
            _w5: 15,
            shift: 5,
            offset: 1
        }, {_t5: 47, _u5: "/", x: 90, y: 87, _v5: 6, _w5: 15, shift: 5, offset: 0}, {
            _t5: 48,
            _u5: "0",
            x: 2,
            y: 53,
            _v5: 8,
            _w5: 15,
            shift: 8,
            offset: 0
        }, {_t5: 49, _u5: "1", x: 2, y: 104, _v5: 5, _w5: 15, shift: 8, offset: 1}, {
            _t5: 50,
            _u5: "2",
            x: 12,
            y: 53,
            _v5: 8,
            _w5: 15,
            shift: 8,
            offset: 0
        }
            , {_t5: 51, _u5: "3", x: 85, y: 53, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 52,
                _u5: "4",
                x: 82,
                y: 36,
                _v5: 8,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {_t5: 53, _u5: "5", x: 18, y: 87, _v5: 6, _w5: 15, shift: 8, offset: 1}, {
                _t5: 54,
                _u5: "6",
                x: 29,
                y: 70,
                _v5: 7,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {_t5: 55, _u5: "7", x: 112, y: 36, _v5: 8, _w5: 15, shift: 8, offset: 0}, {
                _t5: 56,
                _u5: "8",
                x: 38,
                y: 70,
                _v5: 7,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {_t5: 57, _u5: "9", x: 47, y: 70, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 58,
                _u5: ":",
                x: 97,
                y: 104,
                _v5: 3,
                _w5: 15,
                shift: 5,
                offset: 1
            }, {
                _t5: 59, _u5: ";", x: 30, y: 104, _v5: 4, _w5: 15, shift: 5,
                offset: 0
            }, {_t5: 60, _u5: "<", x: 82, y: 87, _v5: 6, _w5: 15, shift: 8, offset: 1}, {
                _t5: 61,
                _u5: "=",
                x: 74,
                y: 87,
                _v5: 6,
                _w5: 15,
                shift: 8,
                offset: 1
            }, {_t5: 62, _u5: ">", x: 66, y: 87, _v5: 6, _w5: 15, shift: 8, offset: 1}, {
                _t5: 63,
                _u5: "?",
                x: 58,
                y: 87,
                _v5: 6,
                _w5: 15,
                shift: 6,
                offset: 0
            }, {_t5: 64, _u5: "@", x: 66, y: 2, _v5: 10, _w5: 15, shift: 10, offset: 0}, {
                _t5: 65,
                _u5: "A",
                x: 13,
                y: 19,
                _v5: 9,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {_t5: 66, _u5: "B", x: 42, y: 36, _v5: 8, _w5: 15, shift: 8, offset: 0}, {
                _t5: 67,
                _u5: "C",
                x: 57,
                y: 19,
                _v5: 8,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {
                _t5: 68, _u5: "D", x: 22, y: 36, _v5: 8, _w5: 15,
                shift: 8, offset: 0
            }, {_t5: 69, _u5: "E", x: 92, y: 70, _v5: 7, _w5: 15, shift: 7, offset: 0}, {
                _t5: 70,
                _u5: "F",
                x: 2,
                y: 36,
                _v5: 8,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {_t5: 71, _u5: "G", x: 2, y: 19, _v5: 9, _w5: 15, shift: 9, offset: 0}, {
                _t5: 72,
                _u5: "H",
                x: 117,
                y: 19,
                _v5: 8,
                _w5: 15,
                shift: 9,
                offset: 0
            }, {_t5: 73, _u5: "I", x: 82, y: 104, _v5: 3, _w5: 15, shift: 4, offset: 0}, {
                _t5: 74,
                _u5: "J",
                x: 112,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 75, _u5: "K", x: 111, y: 2, _v5: 9, _w5: 15, shift: 8, offset: 0}, {
                _t5: 76,
                _u5: "L",
                x: 83,
                y: 70,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {
                _t5: 77, _u5: "M", x: 54, y: 2,
                _v5: 10, _w5: 15, shift: 10, offset: 0
            }, {_t5: 78, _u5: "N", x: 107, y: 19, _v5: 8, _w5: 15, shift: 9, offset: 0}, {
                _t5: 79,
                _u5: "O",
                x: 78,
                y: 2,
                _v5: 9,
                _w5: 15,
                shift: 9,
                offset: 0
            }, {_t5: 80, _u5: "P", x: 97, y: 19, _v5: 8, _w5: 15, shift: 8, offset: 0}, {
                _t5: 81,
                _u5: "Q",
                x: 42,
                y: 2,
                _v5: 10,
                _w5: 15,
                shift: 9,
                offset: 0
            }, {_t5: 82, _u5: "R", x: 100, y: 2, _v5: 9, _w5: 15, shift: 8, offset: 0}, {
                _t5: 83,
                _u5: "S",
                x: 49,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 84, _u5: "T", x: 77, y: 19, _v5: 8, _w5: 15, shift: 8, offset: 0}, {
                _t5: 85,
                _u5: "U",
                x: 67,
                y: 19,
                _v5: 8,
                _w5: 15,
                shift: 9,
                offset: 0
            }, {
                _t5: 86, _u5: "V",
                x: 89, y: 2, _v5: 9, _w5: 15, shift: 8, offset: 0
            }, {_t5: 87, _u5: "W", x: 2, y: 2, _v5: 12, _w5: 15, shift: 11, offset: 0}, {
                _t5: 88,
                _u5: "X",
                x: 32,
                y: 36,
                _v5: 8,
                _w5: 15,
                shift: 8,
                offset: 0
            }, {_t5: 89, _u5: "Y", x: 72, y: 36, _v5: 8, _w5: 15, shift: 8, offset: 0}, {
                _t5: 90,
                _u5: "Z",
                x: 22,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 91, _u5: "[", x: 23, y: 104, _v5: 5, _w5: 15, shift: 5, offset: 0}, {
                _t5: 92,
                _u5: "\\",
                x: 26,
                y: 87,
                _v5: 6,
                _w5: 15,
                shift: 5,
                offset: -1
            }, {_t5: 93, _u5: "]", x: 9, y: 104, _v5: 5, _w5: 15, shift: 5, offset: 0}, {
                _t5: 94,
                _u5: "^",
                x: 98,
                y: 87,
                _v5: 6,
                _w5: 15,
                shift: 8,
                offset: 1
            }, {
                _t5: 95, _u5: "_", x: 24, y: 19, _v5: 9, _w5: 15, shift: 8, offset: -1
            }, {_t5: 96, _u5: "`", x: 60, y: 104, _v5: 4, _w5: 15, shift: 8, offset: 2}, {
                _t5: 97,
                _u5: "a",
                x: 94,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 98, _u5: "b", x: 12, y: 36, _v5: 8, _w5: 15, shift: 8, offset: 0}, {
                _t5: 99,
                _u5: "c",
                x: 76,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 100, _u5: "d", x: 2, y: 70, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 101,
                _u5: "e",
                x: 62,
                y: 36,
                _v5: 8,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 102, _u5: "f", x: 2, y: 87, _v5: 6, _w5: 15, shift: 5, offset: 0}, {
                _t5: 103, _u5: "g", x: 103, y: 53, _v5: 7, _w5: 15, shift: 7,
                offset: 0
            }, {_t5: 104, _u5: "h", x: 74, y: 70, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 105,
                _u5: "i",
                x: 42,
                y: 104,
                _v5: 4,
                _w5: 15,
                shift: 4,
                offset: 0
            }, {_t5: 106, _u5: "j", x: 16, y: 104, _v5: 5, _w5: 15, shift: 5, offset: -1}, {
                _t5: 107,
                _u5: "k",
                x: 92,
                y: 36,
                _v5: 8,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 108, _u5: "l", x: 72, y: 104, _v5: 3, _w5: 15, shift: 4, offset: 1}, {
                _t5: 109,
                _u5: "m",
                x: 29,
                y: 2,
                _v5: 11,
                _w5: 15,
                shift: 11,
                offset: 0
            }, {_t5: 110, _u5: "n", x: 11, y: 70, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 111,
                _u5: "o",
                x: 67,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {
                _t5: 112, _u5: "p", x: 102,
                y: 36, _v5: 8, _w5: 15, shift: 8, offset: 0
            }, {_t5: 113, _u5: "q", x: 40, y: 53, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 114,
                _u5: "r",
                x: 101,
                y: 70,
                _v5: 6,
                _w5: 15,
                shift: 6,
                offset: 0
            }, {_t5: 115, _u5: "s", x: 109, y: 70, _v5: 6, _w5: 15, shift: 6, offset: 0}, {
                _t5: 116,
                _u5: "t",
                x: 113,
                y: 87,
                _v5: 5,
                _w5: 15,
                shift: 5,
                offset: 0
            }, {_t5: 117, _u5: "u", x: 56, y: 70, _v5: 7, _w5: 15, shift: 8, offset: 0}, {
                _t5: 118,
                _u5: "v",
                x: 65,
                y: 70,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 119, _u5: "w", x: 16, y: 2, _v5: 11, _w5: 15, shift: 10, offset: 0}, {
                _t5: 120,
                _u5: "x",
                x: 52,
                y: 36,
                _v5: 8,
                _w5: 15,
                shift: 7,
                offset: 0
            }
            , {_t5: 121, _u5: "y", x: 20, y: 70, _v5: 7, _w5: 15, shift: 7, offset: 0}, {
                _t5: 122,
                _u5: "z",
                x: 31,
                y: 53,
                _v5: 7,
                _w5: 15,
                shift: 7,
                offset: 0
            }, {_t5: 123, _u5: "{", x: 117, y: 70, _v5: 6, _w5: 15, shift: 6, offset: 0}, {
                _t5: 124,
                _u5: "|",
                x: 102,
                y: 104,
                _v5: 2,
                _w5: 15,
                shift: 8,
                offset: 3
            }, {_t5: 125, _u5: "}", x: 42, y: 87, _v5: 6, _w5: 15, shift: 6, offset: 0}, {
                _t5: 126,
                _u5: "~",
                x: 10,
                y: 87,
                _v5: 6,
                _w5: 15,
                shift: 8,
                offset: 1
            },],
    }, {
        _F3: "font_slimepoints",
        _l5: 20,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Arial",
        _r5: 854,
        scaleX: 1,
        scaleY: 1,
        _s5: [{
            _t5: 32, _u5: " ", x: 180,
            y: 167, _v5: 8, _w5: 31, shift: 8, offset: 0
        }, {_t5: 33, _u5: "!", x: 248, y: 167, _v5: 5, _w5: 31, shift: 9, offset: 2}, {
            _t5: 34,
            _u5: "\"",
            x: 2,
            y: 167,
            _v5: 11,
            _w5: 31,
            shift: 13,
            offset: 1
        }, {_t5: 35, _u5: "#", x: 36, y: 101, _v5: 15, _w5: 31, shift: 15, offset: 0}, {
            _t5: 36,
            _u5: "$",
            x: 103,
            y: 101,
            _v5: 14,
            _w5: 31,
            shift: 15,
            offset: 0
        }, {_t5: 37, _u5: "%", x: 59, y: 2, _v5: 22, _w5: 31, shift: 24, offset: 1}, {
            _t5: 38,
            _u5: "&",
            x: 65,
            y: 35,
            _v5: 19,
            _w5: 31,
            shift: 20,
            offset: 1
        }, {_t5: 39, _u5: "'", x: 199, y: 167, _v5: 5, _w5: 31, shift: 6, offset: 1}, {
            _t5: 40, _u5: "(", x: 130, y: 167, _v5: 8, _w5: 31, shift: 9,
            offset: 1
        }, {_t5: 41, _u5: ")", x: 170, y: 167, _v5: 8, _w5: 31, shift: 9, offset: 0}, {
            _t5: 42,
            _u5: "*",
            x: 39,
            y: 167,
            _v5: 10,
            _w5: 31,
            shift: 11,
            offset: 0
        }, {_t5: 43, _u5: "+", x: 50, y: 134, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
            _t5: 44,
            _u5: ",",
            x: 241,
            y: 167,
            _v5: 5,
            _w5: 31,
            shift: 8,
            offset: 1
        }, {_t5: 45, _u5: "-", x: 108, y: 167, _v5: 9, _w5: 31, shift: 9, offset: 1}, {
            _t5: 46,
            _u5: ".",
            x: 2,
            y: 200,
            _v5: 5,
            _w5: 31,
            shift: 8,
            offset: 1
        }, {_t5: 47, _u5: "/", x: 97, y: 167, _v5: 9, _w5: 31, shift: 8, offset: -1}, {
            _t5: 48,
            _u5: "0",
            x: 207,
            y: 134,
            _v5: 13,
            _w5: 31,
            shift: 15,
            offset: 1
        }, {
            _t5: 49, _u5: "1",
            x: 119, y: 167, _v5: 9, _w5: 31, shift: 15, offset: 2
        }, {_t5: 50, _u5: "2", x: 34, y: 134, _v5: 14, _w5: 31, shift: 15, offset: 0}, {
            _t5: 51,
            _u5: "3",
            x: 192,
            y: 134,
            _v5: 13,
            _w5: 31,
            shift: 15,
            offset: 1
        }, {_t5: 52, _u5: "4", x: 70, y: 101, _v5: 15, _w5: 31, shift: 15, offset: 0}, {
            _t5: 53,
            _u5: "5",
            x: 130,
            y: 134,
            _v5: 14,
            _w5: 31,
            shift: 15,
            offset: 1
        }, {_t5: 54, _u5: "6", x: 66, y: 134, _v5: 14, _w5: 31, shift: 15, offset: 1}, {
            _t5: 55,
            _u5: "7",
            x: 222,
            y: 134,
            _v5: 13,
            _w5: 31,
            shift: 15,
            offset: 1
        }, {_t5: 56, _u5: "8", x: 237, y: 134, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
            _t5: 57, _u5: "9", x: 82, y: 134, _v5: 14,
            _w5: 31, shift: 15, offset: 0
        }, {_t5: 58, _u5: ":", x: 220, y: 167, _v5: 5, _w5: 31, shift: 9, offset: 2}, {
            _t5: 59,
            _u5: ";",
            x: 206,
            y: 167,
            _v5: 5,
            _w5: 31,
            shift: 9,
            offset: 2
        }, {_t5: 60, _u5: "<", x: 98, y: 134, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
            _t5: 61,
            _u5: "=",
            x: 114,
            y: 134,
            _v5: 14,
            _w5: 31,
            shift: 16,
            offset: 1
        }, {_t5: 62, _u5: ">", x: 87, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
            _t5: 63,
            _u5: "?",
            x: 53,
            y: 101,
            _v5: 15,
            _w5: 31,
            shift: 17,
            offset: 1
        }, {_t5: 64, _u5: "@", x: 2, y: 2, _v5: 27, _w5: 31, shift: 26, offset: 0}, {
            _t5: 65,
            _u5: "A",
            x: 130,
            y: 2,
            _v5: 20,
            _w5: 31,
            shift: 20,
            offset: 0
        }
            , {_t5: 66, _u5: "B", x: 106, y: 35, _v5: 18, _w5: 31, shift: 20, offset: 1}, {
                _t5: 67,
                _u5: "C",
                x: 166,
                y: 35,
                _v5: 18,
                _w5: 31,
                shift: 20,
                offset: 1
            }, {_t5: 68, _u5: "D", x: 86, y: 35, _v5: 18, _w5: 31, shift: 20, offset: 1}, {
                _t5: 69,
                _u5: "E",
                x: 39,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 18,
                offset: 1
            }, {_t5: 70, _u5: "F", x: 213, y: 68, _v5: 15, _w5: 31, shift: 17, offset: 1}, {
                _t5: 71,
                _u5: "G",
                x: 2,
                y: 35,
                _v5: 19,
                _w5: 31,
                shift: 21,
                offset: 1
            }, {_t5: 72, _u5: "H", x: 186, y: 35, _v5: 17, _w5: 31, shift: 20, offset: 1}, {
                _t5: 73,
                _u5: "I",
                x: 234,
                y: 167,
                _v5: 5,
                _w5: 31,
                shift: 8,
                offset: 1
            }, {
                _t5: 74, _u5: "J", x: 177, y: 134,
                _v5: 13, _w5: 31, shift: 15, offset: 0
            }, {_t5: 75, _u5: "K", x: 146, y: 35, _v5: 18, _w5: 31, shift: 20, offset: 2}, {
                _t5: 76,
                _u5: "L",
                x: 146,
                y: 134,
                _v5: 14,
                _w5: 31,
                shift: 17,
                offset: 2
            }, {_t5: 77, _u5: "M", x: 152, y: 2, _v5: 20, _w5: 31, shift: 22, offset: 1}, {
                _t5: 78,
                _u5: "N",
                x: 21,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 20,
                offset: 2
            }, {_t5: 79, _u5: "O", x: 218, y: 2, _v5: 19, _w5: 31, shift: 21, offset: 1}, {
                _t5: 80,
                _u5: "P",
                x: 93,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 18,
                offset: 1
            }, {_t5: 81, _u5: "Q", x: 174, y: 2, _v5: 20, _w5: 31, shift: 21, offset: 1}, {
                _t5: 82,
                _u5: "R",
                x: 23,
                y: 35,
                _v5: 19,
                _w5: 31,
                shift: 20,
                offset: 1
            }
            , {_t5: 83, _u5: "S", x: 205, y: 35, _v5: 17, _w5: 31, shift: 18, offset: 0}, {
                _t5: 84,
                _u5: "T",
                x: 75,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 17,
                offset: 0
            }, {_t5: 85, _u5: "U", x: 2, y: 68, _v5: 17, _w5: 31, shift: 20, offset: 1}, {
                _t5: 86,
                _u5: "V",
                x: 44,
                y: 35,
                _v5: 19,
                _w5: 31,
                shift: 18,
                offset: -1
            }, {_t5: 87, _u5: "W", x: 31, y: 2, _v5: 26, _w5: 31, shift: 25, offset: 0}, {
                _t5: 88,
                _u5: "X",
                x: 126,
                y: 35,
                _v5: 18,
                _w5: 31,
                shift: 18,
                offset: 0
            }, {_t5: 89, _u5: "Y", x: 196, y: 2, _v5: 20, _w5: 31, shift: 18, offset: -1}, {
                _t5: 90,
                _u5: "Z",
                x: 57,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 17,
                offset: 0
            }, {
                _t5: 91, _u5: "[", x: 160, y: 167,
                _v5: 8, _w5: 31, shift: 9, offset: 1
            }, {_t5: 92, _u5: "\\", x: 75, y: 167, _v5: 9, _w5: 31, shift: 8, offset: -1}, {
                _t5: 93,
                _u5: "]",
                x: 150,
                y: 167,
                _v5: 8,
                _w5: 31,
                shift: 9,
                offset: 0
            }, {_t5: 94, _u5: "^", x: 18, y: 134, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 95,
                _u5: "_",
                x: 224,
                y: 35,
                _v5: 17,
                _w5: 31,
                shift: 15,
                offset: -1
            }, {_t5: 96, _u5: "`", x: 190, y: 167, _v5: 7, _w5: 31, shift: 9, offset: 0}, {
                _t5: 97,
                _u5: "a",
                x: 145,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 98, _u5: "b", x: 179, y: 68, _v5: 15, _w5: 31, shift: 17, offset: 1}, {
                _t5: 99,
                _u5: "c",
                x: 2,
                y: 134,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 1
            }
            , {_t5: 100, _u5: "d", x: 231, y: 101, _v5: 14, _w5: 31, shift: 17, offset: 1}, {
                _t5: 101,
                _u5: "e",
                x: 162,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 102, _u5: "f", x: 63, y: 167, _v5: 10, _w5: 31, shift: 9, offset: 0}, {
                _t5: 103,
                _u5: "g",
                x: 215,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 17,
                offset: 1
            }, {_t5: 104, _u5: "h", x: 199, y: 101, _v5: 14, _w5: 31, shift: 17, offset: 1}, {
                _t5: 105,
                _u5: "i",
                x: 227,
                y: 167,
                _v5: 5,
                _w5: 31,
                shift: 8,
                offset: 1
            }, {_t5: 106, _u5: "j", x: 140, y: 167, _v5: 8, _w5: 31, shift: 8, offset: -2}, {
                _t5: 107,
                _u5: "k",
                x: 183,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {
                _t5: 108,
                _u5: "l", x: 213, y: 167, _v5: 5, _w5: 31, shift: 8, offset: 1
            }, {_t5: 109, _u5: "m", x: 83, y: 2, _v5: 22, _w5: 31, shift: 24, offset: 1}, {
                _t5: 110,
                _u5: "n",
                x: 167,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 17,
                offset: 1
            }, {_t5: 111, _u5: "o", x: 111, y: 68, _v5: 15, _w5: 31, shift: 17, offset: 1}, {
                _t5: 112,
                _u5: "p",
                x: 128,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 17,
                offset: 1
            }, {_t5: 113, _u5: "q", x: 151, y: 101, _v5: 14, _w5: 31, shift: 17, offset: 1}, {
                _t5: 114,
                _u5: "r",
                x: 15,
                y: 167,
                _v5: 10,
                _w5: 31,
                shift: 11,
                offset: 1
            }, {_t5: 115, _u5: "s", x: 135, y: 101, _v5: 14, _w5: 31, shift: 15, offset: 0}, {
                _t5: 116, _u5: "t", x: 86,
                y: 167, _v5: 9, _w5: 31, shift: 9, offset: 0
            }, {_t5: 117, _u5: "u", x: 119, y: 101, _v5: 14, _w5: 31, shift: 17, offset: 1}, {
                _t5: 118,
                _u5: "v",
                x: 196,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 119, _u5: "w", x: 107, y: 2, _v5: 21, _w5: 31, shift: 21, offset: 0}, {
                _t5: 120,
                _u5: "x",
                x: 230,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 121, _u5: "y", x: 2, y: 101, _v5: 15, _w5: 31, shift: 15, offset: 0}, {
                _t5: 122,
                _u5: "z",
                x: 162,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 123, _u5: "{", x: 51, y: 167, _v5: 10, _w5: 31, shift: 11, offset: 0}, {
                _t5: 124, _u5: "|", x: 9, y: 200, _v5: 4, _w5: 31,
                shift: 8, offset: 2
            }, {_t5: 125, _u5: "}", x: 27, y: 167, _v5: 10, _w5: 31, shift: 11, offset: 0}, {
                _t5: 126,
                _u5: "~",
                x: 19,
                y: 101,
                _v5: 15,
                _w5: 31,
                shift: 16,
                offset: 0
            },],
    }, {
        _F3: "font_slimeinfo",
        _l5: 20,
        bold: !1,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Arial",
        _r5: 855,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 13, y: 167, _v5: 8, _w5: 31, shift: 8, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 141,
            y: 167,
            _v5: 4,
            _w5: 31,
            shift: 8,
            offset: 2
        }, {_t5: 34, _u5: "\"", x: 33, y: 167, _v5: 8, _w5: 31, shift: 10, offset: 1}, {
            _t5: 35,
            _u5: "#",
            x: 72,
            y: 68,
            _v5: 15,
            _w5: 31,
            shift: 15,
            offset: 0
        },
            {_t5: 36, _u5: "$", x: 18, y: 101, _v5: 14, _w5: 31, shift: 15, offset: 0}, {
                _t5: 37,
                _u5: "%",
                x: 58,
                y: 2,
                _v5: 22,
                _w5: 31,
                shift: 24,
                offset: 1
            }, {_t5: 38, _u5: "&", x: 139, y: 35, _v5: 17, _w5: 31, shift: 18, offset: 1}, {
                _t5: 39,
                _u5: "'",
                x: 165,
                y: 167,
                _v5: 3,
                _w5: 31,
                shift: 5,
                offset: 1
            }, {_t5: 40, _u5: "(", x: 73, y: 167, _v5: 8, _w5: 31, shift: 9, offset: 1}, {
                _t5: 41,
                _u5: ")",
                x: 63,
                y: 167,
                _v5: 8,
                _w5: 31,
                shift: 9,
                offset: 1
            }, {_t5: 42, _u5: "*", x: 180, y: 134, _v5: 10, _w5: 31, shift: 11, offset: 0}, {
                _t5: 43,
                _u5: "+",
                x: 130,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {
                _t5: 44, _u5: ",", x: 123, y: 167,
                _v5: 4, _w5: 31, shift: 8, offset: 2
            }, {_t5: 45, _u5: "-", x: 214, y: 134, _v5: 9, _w5: 31, shift: 9, offset: 0}, {
                _t5: 46,
                _u5: ".",
                x: 135,
                y: 167,
                _v5: 4,
                _w5: 31,
                shift: 8,
                offset: 2
            }, {_t5: 47, _u5: "/", x: 43, y: 167, _v5: 8, _w5: 31, shift: 8, offset: 0}, {
                _t5: 48,
                _u5: "0",
                x: 32,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {_t5: 49, _u5: "1", x: 203, y: 134, _v5: 9, _w5: 31, shift: 15, offset: 2}, {
                _t5: 50,
                _u5: "2",
                x: 114,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 51, _u5: "3", x: 77, y: 134, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 52,
                _u5: "4",
                x: 82,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 0
            }
            , {_t5: 53, _u5: "5", x: 92, y: 134, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 54,
                _u5: "6",
                x: 122,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {_t5: 55, _u5: "7", x: 137, y: 134, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 56,
                _u5: "8",
                x: 107,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {_t5: 57, _u5: "9", x: 62, y: 134, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 58,
                _u5: ":",
                x: 153,
                y: 167,
                _v5: 4,
                _w5: 31,
                shift: 8,
                offset: 2
            }, {_t5: 59, _u5: ";", x: 129, y: 167, _v5: 4, _w5: 31, shift: 8, offset: 2}, {
                _t5: 60,
                _u5: "<",
                x: 66,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            }, {
                _t5: 61, _u5: "=", x: 50,
                y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1
            }, {_t5: 62, _u5: ">", x: 34, y: 101, _v5: 14, _w5: 31, shift: 16, offset: 1}, {
                _t5: 63,
                _u5: "?",
                x: 146,
                y: 101,
                _v5: 13,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {_t5: 64, _u5: "@", x: 30, y: 2, _v5: 26, _w5: 31, shift: 27, offset: 1}, {
                _t5: 65,
                _u5: "A",
                x: 82,
                y: 2,
                _v5: 20,
                _w5: 31,
                shift: 18,
                offset: -1
            }, {_t5: 66, _u5: "B", x: 158, y: 35, _v5: 16, _w5: 31, shift: 18, offset: 1}, {
                _t5: 67,
                _u5: "C",
                x: 233,
                y: 2,
                _v5: 18,
                _w5: 31,
                shift: 20,
                offset: 1
            }, {_t5: 68, _u5: "D", x: 82, y: 35, _v5: 17, _w5: 31, shift: 20, offset: 2}, {
                _t5: 69, _u5: "E", x: 38, y: 68, _v5: 15, _w5: 31, shift: 18,
                offset: 2
            }, {_t5: 70, _u5: "F", x: 98, y: 101, _v5: 14, _w5: 31, shift: 17, offset: 2}, {
                _t5: 71,
                _u5: "G",
                x: 212,
                y: 2,
                _v5: 19,
                _w5: 31,
                shift: 21,
                offset: 1
            }, {_t5: 72, _u5: "H", x: 176, y: 35, _v5: 16, _w5: 31, shift: 20, offset: 2}, {
                _t5: 73,
                _u5: "I",
                x: 147,
                y: 167,
                _v5: 4,
                _w5: 31,
                shift: 8,
                offset: 2
            }, {_t5: 74, _u5: "J", x: 166, y: 134, _v5: 12, _w5: 31, shift: 14, offset: 0}, {
                _t5: 75,
                _u5: "K",
                x: 101,
                y: 35,
                _v5: 17,
                _w5: 31,
                shift: 18,
                offset: 1
            }, {_t5: 76, _u5: "L", x: 122, y: 68, _v5: 14, _w5: 31, shift: 15, offset: 1}, {
                _t5: 77,
                _u5: "M",
                x: 170,
                y: 2,
                _v5: 19,
                _w5: 31,
                shift: 22,
                offset: 2
            }, {
                _t5: 78, _u5: "N",
                x: 194, y: 35, _v5: 16, _w5: 31, shift: 20, offset: 2
            }, {_t5: 79, _u5: "O", x: 191, y: 2, _v5: 19, _w5: 31, shift: 21, offset: 1}, {
                _t5: 80,
                _u5: "P",
                x: 55,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 18,
                offset: 2
            }, {_t5: 81, _u5: "Q", x: 126, y: 2, _v5: 20, _w5: 31, shift: 21, offset: 1}, {
                _t5: 82,
                _u5: "R",
                x: 62,
                y: 35,
                _v5: 18,
                _w5: 31,
                shift: 20,
                offset: 2
            }, {_t5: 83, _u5: "S", x: 212, y: 35, _v5: 16, _w5: 31, shift: 18, offset: 1}, {
                _t5: 84,
                _u5: "T",
                x: 20,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 17,
                offset: 0
            }, {_t5: 85, _u5: "U", x: 230, y: 35, _v5: 16, _w5: 31, shift: 20, offset: 2}, {
                _t5: 86, _u5: "V", x: 42, y: 35, _v5: 18, _w5: 31, shift: 18,
                offset: 0
            }, {_t5: 87, _u5: "W", x: 2, y: 2, _v5: 26, _w5: 31, shift: 25, offset: 0}, {
                _t5: 88,
                _u5: "X",
                x: 22,
                y: 35,
                _v5: 18,
                _w5: 31,
                shift: 18,
                offset: 0
            }, {_t5: 89, _u5: "Y", x: 2, y: 35, _v5: 18, _w5: 31, shift: 18, offset: 0}, {
                _t5: 90,
                _u5: "Z",
                x: 2,
                y: 68,
                _v5: 16,
                _w5: 31,
                shift: 17,
                offset: 0
            }, {_t5: 91, _u5: "[", x: 83, y: 167, _v5: 7, _w5: 31, shift: 8, offset: 1}, {
                _t5: 92,
                _u5: "\\",
                x: 53,
                y: 167,
                _v5: 8,
                _w5: 31,
                shift: 8,
                offset: 0
            }, {_t5: 93, _u5: "]", x: 109, y: 167, _v5: 6, _w5: 31, shift: 8, offset: 0}, {
                _t5: 94,
                _u5: "^",
                x: 152,
                y: 134,
                _v5: 12,
                _w5: 31,
                shift: 13,
                offset: 0
            }, {
                _t5: 95, _u5: "_", x: 120,
                y: 35, _v5: 17, _w5: 31, shift: 15, offset: -1
            }, {_t5: 96, _u5: "`", x: 101, y: 167, _v5: 6, _w5: 31, shift: 9, offset: 1}, {
                _t5: 97,
                _u5: "a",
                x: 138,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 98, _u5: "b", x: 161, y: 101, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 99,
                _u5: "c",
                x: 47,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 1
            }, {_t5: 100, _u5: "d", x: 154, y: 68, _v5: 14, _w5: 31, shift: 15, offset: 0}, {
                _t5: 101,
                _u5: "e",
                x: 202,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 102, _u5: "f", x: 225, y: 134, _v5: 9, _w5: 31, shift: 8, offset: 0}, {
                _t5: 103, _u5: "g", x: 218, y: 68, _v5: 14, _w5: 31,
                shift: 15, offset: 0
            }, {_t5: 104, _u5: "h", x: 176, y: 101, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 105,
                _u5: "i",
                x: 117,
                y: 167,
                _v5: 4,
                _w5: 31,
                shift: 6,
                offset: 1
            }, {_t5: 106, _u5: "j", x: 92, y: 167, _v5: 7, _w5: 31, shift: 6, offset: -2}, {
                _t5: 107,
                _u5: "k",
                x: 17,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 1
            }, {_t5: 108, _u5: "l", x: 159, y: 167, _v5: 4, _w5: 31, shift: 6, offset: 1}, {
                _t5: 109,
                _u5: "m",
                x: 148,
                y: 2,
                _v5: 20,
                _w5: 31,
                shift: 22,
                offset: 1
            }, {_t5: 110, _u5: "n", x: 206, y: 101, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 111,
                _u5: "o",
                x: 89,
                y: 68,
                _v5: 15,
                _w5: 31,
                shift: 15,
                offset: 0
            }
            , {_t5: 112, _u5: "p", x: 191, y: 101, _v5: 13, _w5: 31, shift: 15, offset: 1}, {
                _t5: 113,
                _u5: "q",
                x: 106,
                y: 68,
                _v5: 14,
                _w5: 31,
                shift: 15,
                offset: 0
            }, {_t5: 114, _u5: "r", x: 2, y: 167, _v5: 9, _w5: 31, shift: 9, offset: 1}, {
                _t5: 115,
                _u5: "s",
                x: 221,
                y: 101,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 116, _u5: "t", x: 23, y: 167, _v5: 8, _w5: 31, shift: 8, offset: 0}, {
                _t5: 117,
                _u5: "u",
                x: 236,
                y: 101,
                _v5: 13,
                _w5: 31,
                shift: 15,
                offset: 1
            }, {_t5: 118, _u5: "v", x: 234, y: 68, _v5: 14, _w5: 31, shift: 14, offset: 0}, {
                _t5: 119,
                _u5: "w",
                x: 104,
                y: 2,
                _v5: 20,
                _w5: 31,
                shift: 20,
                offset: 0
            }, {
                _t5: 120, _u5: "x",
                x: 170, y: 68, _v5: 14, _w5: 31, shift: 14, offset: 0
            }, {_t5: 121, _u5: "y", x: 186, y: 68, _v5: 14, _w5: 31, shift: 14, offset: 0}, {
                _t5: 122,
                _u5: "z",
                x: 2,
                y: 134,
                _v5: 13,
                _w5: 31,
                shift: 14,
                offset: 0
            }, {_t5: 123, _u5: "{", x: 192, y: 134, _v5: 9, _w5: 31, shift: 9, offset: 0}, {
                _t5: 124,
                _u5: "|",
                x: 170,
                y: 167,
                _v5: 3,
                _w5: 31,
                shift: 7,
                offset: 2
            }, {_t5: 125, _u5: "}", x: 236, y: 134, _v5: 9, _w5: 31, shift: 9, offset: 0}, {
                _t5: 126,
                _u5: "~",
                x: 2,
                y: 101,
                _v5: 14,
                _w5: 31,
                shift: 16,
                offset: 1
            },],
    }, {
        _F3: "font_menuinfo",
        _l5: 16,
        bold: !0,
        _m5: !0,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 857,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 239, y: 110, _v5: 6, _w5: 25, shift: 6, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 171,
            y: 110,
            _v5: 7,
            _w5: 25,
            shift: 8,
            offset: 1
        }, {_t5: 34, _u5: "\"", x: 74, y: 110, _v5: 9, _w5: 25, shift: 8, offset: 1}, {
            _t5: 35,
            _u5: "#",
            x: 220,
            y: 29,
            _v5: 13,
            _w5: 25,
            shift: 12,
            offset: 0
        }, {_t5: 36, _u5: "$", x: 136, y: 83, _v5: 11, _w5: 25, shift: 12, offset: 1}, {
            _t5: 37,
            _u5: "%",
            x: 136,
            y: 2,
            _v5: 15,
            _w5: 25,
            shift: 15,
            offset: 1
        }, {_t5: 38, _u5: "&", x: 98, y: 29, _v5: 14, _w5: 25, shift: 15, offset: 1}, {
            _t5: 39,
            _u5: "'",
            x: 9,
            y: 137,
            _v5: 5,
            _w5: 25,
            shift: 6,
            offset: 2
        }
            , {_t5: 40, _u5: "(", x: 151, y: 110, _v5: 8, _w5: 25, shift: 8, offset: 1}, {
                _t5: 41,
                _u5: ")",
                x: 161,
                y: 110,
                _v5: 8,
                _w5: 25,
                shift: 8,
                offset: -1
            }, {_t5: 42, _u5: "*", x: 85, y: 110, _v5: 9, _w5: 25, shift: 9, offset: 1}, {
                _t5: 43,
                _u5: "+",
                x: 50,
                y: 110,
                _v5: 10,
                _w5: 25,
                shift: 12,
                offset: 1
            }, {_t5: 44, _u5: ",", x: 247, y: 110, _v5: 5, _w5: 25, shift: 8, offset: 1}, {
                _t5: 45,
                _u5: "-",
                x: 189,
                y: 110,
                _v5: 7,
                _w5: 25,
                shift: 8,
                offset: 0
            }, {_t5: 46, _u5: ".", x: 16, y: 137, _v5: 4, _w5: 25, shift: 8, offset: 2}, {
                _t5: 47,
                _u5: "/",
                x: 107,
                y: 110,
                _v5: 9,
                _w5: 25,
                shift: 8,
                offset: -1
            }, {
                _t5: 48, _u5: "0", x: 62, y: 56,
                _v5: 13, _w5: 25, shift: 12, offset: 0
            }, {_t5: 49, _u5: "1", x: 180, y: 110, _v5: 7, _w5: 25, shift: 12, offset: 3}, {
                _t5: 50,
                _u5: "2",
                x: 217,
                y: 56,
                _v5: 12,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 51, _u5: "3", x: 133, y: 56, _v5: 12, _w5: 25, shift: 12, offset: 0}, {
                _t5: 52,
                _u5: "4",
                x: 77,
                y: 56,
                _v5: 12,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 53, _u5: "5", x: 71, y: 83, _v5: 11, _w5: 25, shift: 12, offset: 1}, {
                _t5: 54,
                _u5: "6",
                x: 84,
                y: 83,
                _v5: 11,
                _w5: 25,
                shift: 12,
                offset: 1
            }, {_t5: 55, _u5: "7", x: 175, y: 29, _v5: 13, _w5: 25, shift: 12, offset: 1}, {
                _t5: 56, _u5: "8", x: 189, y: 56, _v5: 12, _w5: 25, shift: 12,
                offset: 0
            }, {_t5: 57, _u5: "9", x: 97, y: 83, _v5: 11, _w5: 25, shift: 12, offset: 1}, {
                _t5: 58,
                _u5: ":",
                x: 215,
                y: 110,
                _v5: 6,
                _w5: 25,
                shift: 8,
                offset: 1
            }, {_t5: 59, _u5: ";", x: 223, y: 110, _v5: 6, _w5: 25, shift: 8, offset: 1}, {
                _t5: 60,
                _u5: "<",
                x: 62,
                y: 110,
                _v5: 10,
                _w5: 25,
                shift: 12,
                offset: 1
            }, {_t5: 61, _u5: "=", x: 149, y: 83, _v5: 11, _w5: 25, shift: 12, offset: 1}, {
                _t5: 62,
                _u5: ">",
                x: 140,
                y: 110,
                _v5: 9,
                _w5: 25,
                shift: 12,
                offset: 2
            }, {_t5: 63, _u5: "?", x: 118, y: 110, _v5: 9, _w5: 25, shift: 8, offset: 0}, {
                _t5: 64,
                _u5: "@",
                x: 118,
                y: 2,
                _v5: 16,
                _w5: 25,
                shift: 16,
                offset: 0
            }, {
                _t5: 65, _u5: "A",
                x: 2, y: 29, _v5: 14, _w5: 25, shift: 13, offset: -1
            }, {_t5: 66, _u5: "B", x: 44, y: 83, _v5: 12, _w5: 25, shift: 12, offset: 0}, {
                _t5: 67,
                _u5: "C",
                x: 175,
                y: 56,
                _v5: 12,
                _w5: 25,
                shift: 13,
                offset: 1
            }, {_t5: 68, _u5: "D", x: 66, y: 29, _v5: 14, _w5: 25, shift: 13, offset: 0}, {
                _t5: 69,
                _u5: "E",
                x: 190,
                y: 29,
                _v5: 13,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 70, _u5: "F", x: 50, y: 29, _v5: 14, _w5: 25, shift: 12, offset: 0}, {
                _t5: 71,
                _u5: "G",
                x: 34,
                y: 29,
                _v5: 14,
                _w5: 25,
                shift: 14,
                offset: 0
            }, {_t5: 72, _u5: "H", x: 187, y: 2, _v5: 15, _w5: 25, shift: 14, offset: 0}, {
                _t5: 73, _u5: "I", x: 198, y: 110, _v5: 7, _w5: 25, shift: 6,
                offset: 0
            }, {_t5: 74, _u5: "J", x: 161, y: 56, _v5: 12, _w5: 25, shift: 10, offset: -1}, {
                _t5: 75,
                _u5: "K",
                x: 170,
                y: 2,
                _v5: 15,
                _w5: 25,
                shift: 14,
                offset: 0
            }, {_t5: 76, _u5: "L", x: 175, y: 83, _v5: 11, _w5: 25, shift: 11, offset: 0}, {
                _t5: 77,
                _u5: "M",
                x: 43,
                y: 2,
                _v5: 17,
                _w5: 25,
                shift: 17,
                offset: -1
            }, {_t5: 78, _u5: "N", x: 153, y: 2, _v5: 15, _w5: 25, shift: 14, offset: 0}, {
                _t5: 79,
                _u5: "O",
                x: 82,
                y: 29,
                _v5: 14,
                _w5: 25,
                shift: 15,
                offset: 1
            }, {_t5: 80, _u5: "P", x: 32, y: 56, _v5: 13, _w5: 25, shift: 12, offset: 0}, {
                _t5: 81,
                _u5: "Q",
                x: 62,
                y: 2,
                _v5: 17,
                _w5: 25,
                shift: 16,
                offset: 1
            }, {
                _t5: 82, _u5: "R",
                x: 130, y: 29, _v5: 13, _w5: 25, shift: 13, offset: 0
            }, {_t5: 83, _u5: "S", x: 162, y: 83, _v5: 11, _w5: 25, shift: 11, offset: 0}, {
                _t5: 84,
                _u5: "T",
                x: 2,
                y: 56,
                _v5: 13,
                _w5: 25,
                shift: 14,
                offset: 2
            }, {_t5: 85, _u5: "U", x: 220, y: 2, _v5: 14, _w5: 25, shift: 14, offset: 1}, {
                _t5: 86,
                _u5: "V",
                x: 204,
                y: 2,
                _v5: 14,
                _w5: 25,
                shift: 14,
                offset: 2
            }, {_t5: 87, _u5: "W", x: 2, y: 2, _v5: 19, _w5: 25, shift: 19, offset: 2}, {
                _t5: 88,
                _u5: "X",
                x: 100,
                y: 2,
                _v5: 16,
                _w5: 25,
                shift: 14,
                offset: -1
            }, {_t5: 89, _u5: "Y", x: 236, y: 2, _v5: 14, _w5: 25, shift: 14, offset: 2}, {
                _t5: 90, _u5: "Z", x: 205, y: 29, _v5: 13, _w5: 25, shift: 13,
                offset: 0
            }, {_t5: 91, _u5: "[", x: 38, y: 110, _v5: 10, _w5: 25, shift: 10, offset: 0}, {
                _t5: 92,
                _u5: "\\",
                x: 129,
                y: 110,
                _v5: 9,
                _w5: 25,
                shift: 10,
                offset: 1
            }, {_t5: 93, _u5: "]", x: 26, y: 110, _v5: 10, _w5: 25, shift: 10, offset: 0}, {
                _t5: 94,
                _u5: "^",
                x: 14,
                y: 110,
                _v5: 10,
                _w5: 25,
                shift: 12,
                offset: 2
            }, {_t5: 95, _u5: "_", x: 18, y: 29, _v5: 14, _w5: 25, shift: 12, offset: -1}, {
                _t5: 96,
                _u5: "`",
                x: 2,
                y: 137,
                _v5: 5,
                _w5: 25,
                shift: 12,
                offset: 4
            }, {_t5: 97, _u5: "a", x: 16, y: 83, _v5: 12, _w5: 25, shift: 12, offset: 0}, {
                _t5: 98,
                _u5: "b",
                x: 2,
                y: 83,
                _v5: 12,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {
                _t5: 99, _u5: "c",
                x: 58, y: 83, _v5: 11, _w5: 25, shift: 10, offset: 0
            }, {_t5: 100, _u5: "d", x: 145, y: 29, _v5: 13, _w5: 25, shift: 12, offset: 0}, {
                _t5: 101,
                _u5: "e",
                x: 119,
                y: 56,
                _v5: 12,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 102, _u5: "f", x: 105, y: 56, _v5: 12, _w5: 25, shift: 9, offset: -1}, {
                _t5: 103,
                _u5: "g",
                x: 147,
                y: 56,
                _v5: 12,
                _w5: 25,
                shift: 11,
                offset: 0
            }, {_t5: 104, _u5: "h", x: 231, y: 56, _v5: 12, _w5: 25, shift: 12, offset: 0}, {
                _t5: 105,
                _u5: "i",
                x: 231,
                y: 110,
                _v5: 6,
                _w5: 25,
                shift: 7,
                offset: 1
            }, {_t5: 106, _u5: "j", x: 225, y: 83, _v5: 10, _w5: 25, shift: 8, offset: -2}, {
                _t5: 107, _u5: "k", x: 188, y: 83, _v5: 11,
                _w5: 25, shift: 11, offset: 0
            }, {_t5: 108, _u5: "l", x: 207, y: 110, _v5: 6, _w5: 25, shift: 7, offset: 1}, {
                _t5: 109,
                _u5: "m",
                x: 23,
                y: 2,
                _v5: 18,
                _w5: 25,
                shift: 17,
                offset: 0
            }, {_t5: 110, _u5: "n", x: 203, y: 56, _v5: 12, _w5: 25, shift: 12, offset: 0}, {
                _t5: 111,
                _u5: "o",
                x: 30,
                y: 83,
                _v5: 12,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 112, _u5: "p", x: 160, y: 29, _v5: 13, _w5: 25, shift: 13, offset: -1}, {
                _t5: 113,
                _u5: "q",
                x: 17,
                y: 56,
                _v5: 13,
                _w5: 25,
                shift: 13,
                offset: 0
            }, {_t5: 114, _u5: "r", x: 201, y: 83, _v5: 10, _w5: 25, shift: 9, offset: 0}, {
                _t5: 115,
                _u5: "s",
                x: 213,
                y: 83,
                _v5: 10,
                _w5: 25,
                shift: 10,
                offset: 0
            }
            , {_t5: 116, _u5: "t", x: 96, y: 110, _v5: 9, _w5: 25, shift: 9, offset: 1}, {
                _t5: 117,
                _u5: "u",
                x: 91,
                y: 56,
                _v5: 12,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 118, _u5: "v", x: 47, y: 56, _v5: 13, _w5: 25, shift: 12, offset: 0}, {
                _t5: 119,
                _u5: "w",
                x: 81,
                y: 2,
                _v5: 17,
                _w5: 25,
                shift: 16,
                offset: 0
            }, {_t5: 120, _u5: "x", x: 114, y: 29, _v5: 14, _w5: 25, shift: 12, offset: -1}, {
                _t5: 121,
                _u5: "y",
                x: 235,
                y: 29,
                _v5: 13,
                _w5: 25,
                shift: 12,
                offset: 0
            }, {_t5: 122, _u5: "z", x: 123, y: 83, _v5: 11, _w5: 25, shift: 11, offset: 0}, {
                _t5: 123,
                _u5: "{",
                x: 237,
                y: 83,
                _v5: 10,
                _w5: 25,
                shift: 10,
                offset: 1
            }, {
                _t5: 124, _u5: "|",
                x: 22, y: 137, _v5: 3, _w5: 25, shift: 12, offset: 5
            }, {_t5: 125, _u5: "}", x: 110, y: 83, _v5: 11, _w5: 25, shift: 10, offset: -1}, {
                _t5: 126,
                _u5: "~",
                x: 2,
                y: 110,
                _v5: 10,
                _w5: 25,
                shift: 12,
                offset: 1
            },],
    }, {
        _F3: "font_goals_new",
        _l5: 44,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 873,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 44, y: 352, _v5: 18, _w5: 68, shift: 18, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 271,
            y: 352,
            _v5: 10,
            _w5: 68,
            shift: 22,
            offset: 6
        }, {_t5: 34, _u5: "\"", x: 2, y: 352, _v5: 19, _w5: 68, shift: 22, offset: 2}, {
            _t5: 35, _u5: "#", x: 298, y: 72,
            _v5: 33, _w5: 68, shift: 35, offset: 1
        }, {_t5: 36, _u5: "$", x: 31, y: 282, _v5: 27, _w5: 68, shift: 35, offset: 4}, {
            _t5: 37,
            _u5: "%",
            x: 285,
            y: 2,
            _v5: 39,
            _w5: 68,
            shift: 40,
            offset: 0
        }, {_t5: 38, _u5: "&", x: 78, y: 72, _v5: 36, _w5: 68, shift: 42, offset: 3}, {
            _t5: 39,
            _u5: "'",
            x: 283,
            y: 352,
            _v5: 8,
            _w5: 68,
            shift: 14,
            offset: 3
        }, {_t5: 40, _u5: "(", x: 137, y: 352, _v5: 15, _w5: 68, shift: 22, offset: 4}, {
            _t5: 41,
            _u5: ")",
            x: 154,
            y: 352,
            _v5: 15,
            _w5: 68,
            shift: 22,
            offset: 4
        }, {_t5: 42, _u5: "*", x: 276, y: 282, _v5: 23, _w5: 68, shift: 26, offset: 1}, {
            _t5: 43, _u5: "+", x: 430, y: 212, _v5: 27, _w5: 68, shift: 35,
            offset: 4
        }, {_t5: 44, _u5: ",", x: 187, y: 352, _v5: 13, _w5: 68, shift: 22, offset: 3}, {
            _t5: 45,
            _u5: "-",
            x: 101,
            y: 352,
            _v5: 16,
            _w5: 68,
            shift: 22,
            offset: 3
        }, {_t5: 46, _u5: ".", x: 245, y: 352, _v5: 11, _w5: 68, shift: 22, offset: 5}, {
            _t5: 47,
            _u5: "/",
            x: 351,
            y: 282,
            _v5: 23,
            _w5: 68,
            shift: 23,
            offset: 0
        }, {_t5: 48, _u5: "0", x: 104, y: 142, _v5: 31, _w5: 68, shift: 35, offset: 2}, {
            _t5: 49,
            _u5: "1",
            x: 64,
            y: 352,
            _v5: 17,
            _w5: 68,
            shift: 35,
            offset: 7
        }, {_t5: 50, _u5: "2", x: 219, y: 212, _v5: 29, _w5: 68, shift: 35, offset: 4}, {
            _t5: 51,
            _u5: "3",
            x: 60,
            y: 282,
            _v5: 27,
            _w5: 68,
            shift: 35,
            offset: 4
        }, {
            _t5: 52,
            _u5: "4", x: 70, y: 142, _v5: 32, _w5: 68, shift: 35, offset: 1
        }, {_t5: 53, _u5: "5", x: 89, y: 282, _v5: 27, _w5: 68, shift: 35, offset: 4}, {
            _t5: 54,
            _u5: "6",
            x: 64,
            y: 212,
            _v5: 29,
            _w5: 68,
            shift: 35,
            offset: 3
        }, {_t5: 55, _u5: "7", x: 299, y: 142, _v5: 30, _w5: 68, shift: 35, offset: 4}, {
            _t5: 56,
            _u5: "8",
            x: 455,
            y: 142,
            _v5: 29,
            _w5: 68,
            shift: 35,
            offset: 3
        }, {_t5: 57, _u5: "9", x: 157, y: 212, _v5: 29, _w5: 68, shift: 35, offset: 3}, {
            _t5: 58,
            _u5: ":",
            x: 232,
            y: 352,
            _v5: 11,
            _w5: 68,
            shift: 22,
            offset: 5
        }, {_t5: 59, _u5: ";", x: 217, y: 352, _v5: 13, _w5: 68, shift: 22, offset: 3}, {
            _t5: 60, _u5: "<", x: 199, y: 282,
            _v5: 24, _w5: 68, shift: 35, offset: 5
        }, {_t5: 61, _u5: "=", x: 2, y: 282, _v5: 27, _w5: 68, shift: 35, offset: 5}, {
            _t5: 62,
            _u5: ">",
            x: 225,
            y: 282,
            _v5: 24,
            _w5: 68,
            shift: 35,
            offset: 7
        }, {_t5: 63, _u5: "?", x: 448, y: 282, _v5: 22, _w5: 68, shift: 26, offset: 2}, {
            _t5: 64,
            _u5: "@",
            x: 241,
            y: 2,
            _v5: 42,
            _w5: 68,
            shift: 45,
            offset: 2
        }, {_t5: 65, _u5: "A", x: 366, y: 2, _v5: 38, _w5: 68, shift: 37, offset: 0}, {
            _t5: 66,
            _u5: "B",
            x: 331,
            y: 142,
            _v5: 29,
            _w5: 68,
            shift: 35,
            offset: 4
        }, {_t5: 67, _u5: "C", x: 333, y: 72, _v5: 33, _w5: 68, shift: 36, offset: 2}, {
            _t5: 68, _u5: "D", x: 471, y: 72, _v5: 32, _w5: 68, shift: 38,
            offset: 4
        }, {_t5: 69, _u5: "E", x: 280, y: 212, _v5: 28, _w5: 68, shift: 34, offset: 4}, {
            _t5: 70,
            _u5: "F",
            x: 188,
            y: 212,
            _v5: 29,
            _w5: 68,
            shift: 34,
            offset: 4
        }, {_t5: 71, _u5: "G", x: 2, y: 72, _v5: 36, _w5: 68, shift: 40, offset: 2}, {
            _t5: 72,
            _u5: "H",
            x: 263,
            y: 72,
            _v5: 33,
            _w5: 68,
            shift: 40,
            offset: 4
        }, {_t5: 73, _u5: "I", x: 293, y: 352, _v5: 8, _w5: 68, shift: 16, offset: 4}, {
            _t5: 74,
            _u5: "J",
            x: 400,
            y: 212,
            _v5: 28,
            _w5: 68,
            shift: 31,
            offset: 0
        }, {_t5: 75, _u5: "K", x: 192, y: 72, _v5: 34, _w5: 68, shift: 36, offset: 4}, {
            _t5: 76,
            _u5: "L",
            x: 459,
            y: 212,
            _v5: 27,
            _w5: 68,
            shift: 33,
            offset: 4
        }, {
            _t5: 77,
            _u5: "M", x: 150, y: 2, _v5: 44, _w5: 68, shift: 44, offset: 0
        }, {_t5: 78, _u5: "N", x: 437, y: 72, _v5: 32, _w5: 68, shift: 39, offset: 4}, {
            _t5: 79,
            _u5: "O",
            x: 326,
            y: 2,
            _v5: 38,
            _w5: 68,
            shift: 41,
            offset: 2
        }, {_t5: 80, _u5: "P", x: 33, y: 212, _v5: 29, _w5: 68, shift: 35, offset: 4}, {
            _t5: 81,
            _u5: "Q",
            x: 196,
            y: 2,
            _v5: 43,
            _w5: 68,
            shift: 42,
            offset: 2
        }, {_t5: 82, _u5: "R", x: 368, y: 72, _v5: 33, _w5: 68, shift: 36, offset: 4}, {
            _t5: 83,
            _u5: "S",
            x: 118,
            y: 282,
            _v5: 26,
            _w5: 68,
            shift: 30,
            offset: 2
        }, {_t5: 84, _u5: "T", x: 154, y: 72, _v5: 36, _w5: 68, shift: 36, offset: 0}, {
            _t5: 85, _u5: "U", x: 403, y: 72, _v5: 32,
            _w5: 68, shift: 40, offset: 4
        }, {_t5: 86, _u5: "V", x: 445, y: 2, _v5: 37, _w5: 68, shift: 37, offset: 0}, {
            _t5: 87,
            _u5: "W",
            x: 2,
            y: 2,
            _v5: 52,
            _w5: 68,
            shift: 52,
            offset: 0
        }, {_t5: 88, _u5: "X", x: 116, y: 72, _v5: 36, _w5: 68, shift: 35, offset: 0}, {
            _t5: 89,
            _u5: "Y",
            x: 406,
            y: 2,
            _v5: 37,
            _w5: 68,
            shift: 36,
            offset: 0
        }, {_t5: 90, _u5: "Z", x: 393, y: 142, _v5: 29, _w5: 68, shift: 33, offset: 2}, {
            _t5: 91,
            _u5: "[",
            x: 119,
            y: 352,
            _v5: 16,
            _w5: 68,
            shift: 24,
            offset: 4
        }, {_t5: 92, _u5: "\\", x: 251, y: 282, _v5: 23, _w5: 68, shift: 21, offset: -1}, {
            _t5: 93,
            _u5: "]",
            x: 83,
            y: 352,
            _v5: 16,
            _w5: 68,
            shift: 24,
            offset: 4
        }
            , {_t5: 94, _u5: "^", x: 146, y: 282, _v5: 25, _w5: 68, shift: 35, offset: 5}, {
                _t5: 95,
                _u5: "_",
                x: 40,
                y: 72,
                _v5: 36,
                _w5: 68,
                shift: 35,
                offset: -1
            }, {_t5: 96, _u5: "`", x: 171, y: 352, _v5: 14, _w5: 68, shift: 35, offset: 10}, {
                _t5: 97,
                _u5: "a",
                x: 203,
                y: 142,
                _v5: 30,
                _w5: 68,
                shift: 31,
                offset: 1
            }, {_t5: 98, _u5: "b", x: 126, y: 212, _v5: 29, _w5: 68, shift: 34, offset: 3}, {
                _t5: 99,
                _u5: "c",
                x: 370,
                y: 212,
                _v5: 28,
                _w5: 68,
                shift: 30,
                offset: 1
            }, {_t5: 100, _u5: "d", x: 95, y: 212, _v5: 29, _w5: 68, shift: 34, offset: 2}, {
                _t5: 101,
                _u5: "e",
                x: 2,
                y: 142,
                _v5: 32,
                _w5: 68,
                shift: 34,
                offset: 1
            }, {
                _t5: 102, _u5: "f",
                x: 326, y: 282, _v5: 23, _w5: 68, shift: 22, offset: 1
            }, {_t5: 103, _u5: "g", x: 310, y: 212, _v5: 28, _w5: 68, shift: 30, offset: 1}, {
                _t5: 104,
                _u5: "h",
                x: 362,
                y: 142,
                _v5: 29,
                _w5: 68,
                shift: 35,
                offset: 3
            }, {_t5: 105, _u5: "i", x: 202, y: 352, _v5: 13, _w5: 68, shift: 18, offset: 1}, {
                _t5: 106,
                _u5: "j",
                x: 23,
                y: 352,
                _v5: 19,
                _w5: 68,
                shift: 22,
                offset: -1
            }, {_t5: 107, _u5: "k", x: 267, y: 142, _v5: 30, _w5: 68, shift: 32, offset: 3}, {
                _t5: 108,
                _u5: "l",
                x: 258,
                y: 352,
                _v5: 11,
                _w5: 68,
                shift: 17,
                offset: 5
            }, {_t5: 109, _u5: "m", x: 104, y: 2, _v5: 44, _w5: 68, shift: 51, offset: 3}, {
                _t5: 110, _u5: "n", x: 250,
                y: 212, _v5: 28, _w5: 68, shift: 35, offset: 3
            }, {_t5: 111, _u5: "o", x: 170, y: 142, _v5: 31, _w5: 68, shift: 33, offset: 1}, {
                _t5: 112,
                _u5: "p",
                x: 2,
                y: 212,
                _v5: 29,
                _w5: 68,
                shift: 34,
                offset: 3
            }, {_t5: 113, _u5: "q", x: 235, y: 142, _v5: 30, _w5: 68, shift: 34, offset: 2}, {
                _t5: 114,
                _u5: "r",
                x: 376,
                y: 282,
                _v5: 22,
                _w5: 68,
                shift: 25,
                offset: 3
            }, {_t5: 115, _u5: "s", x: 301, y: 282, _v5: 23, _w5: 68, shift: 25, offset: 1}, {
                _t5: 116,
                _u5: "t",
                x: 472,
                y: 282,
                _v5: 21,
                _w5: 68,
                shift: 23,
                offset: 1
            }, {_t5: 117, _u5: "u", x: 340, y: 212, _v5: 28, _w5: 68, shift: 35, offset: 3}, {
                _t5: 118, _u5: "v", x: 137, y: 142,
                _v5: 31, _w5: 68, shift: 31, offset: 0
            }, {_t5: 119, _u5: "w", x: 56, y: 2, _v5: 46, _w5: 68, shift: 46, offset: 0}, {
                _t5: 120,
                _u5: "x",
                x: 228,
                y: 72,
                _v5: 33,
                _w5: 68,
                shift: 33,
                offset: 0
            }, {_t5: 121, _u5: "y", x: 36, y: 142, _v5: 32, _w5: 68, shift: 31, offset: 0}, {
                _t5: 122,
                _u5: "z",
                x: 424,
                y: 142,
                _v5: 29,
                _w5: 68,
                shift: 31,
                offset: 1
            }, {_t5: 123, _u5: "{", x: 424, y: 282, _v5: 22, _w5: 68, shift: 26, offset: 2}, {
                _t5: 124,
                _u5: "|",
                x: 303,
                y: 352,
                _v5: 7,
                _w5: 68,
                shift: 35,
                offset: 14
            }, {_t5: 125, _u5: "}", x: 400, y: 282, _v5: 22, _w5: 68, shift: 26, offset: 2}, {
                _t5: 126, _u5: "~", x: 173, y: 282, _v5: 24, _w5: 68,
                shift: 35, offset: 5
            },],
    }, {
        _F3: "font_goals_small_new",
        _l5: 24,
        bold: !0,
        _m5: !1,
        _n5: 32,
        _o5: 126,
        _p5: 1,
        antialias: 1,
        _q5: "Trebuchet MS",
        _r5: 860,
        scaleX: 1,
        scaleY: 1,
        _s5: [{_t5: 32, _u5: " ", x: 425, y: 80, _v5: 10, _w5: 37, shift: 10, offset: 0}, {
            _t5: 33,
            _u5: "!",
            x: 77,
            y: 119,
            _v5: 6,
            _w5: 37,
            shift: 12,
            offset: 3
        }, {_t5: 34, _u5: "\"", x: 437, y: 80, _v5: 10, _w5: 37, shift: 12, offset: 1}, {
            _t5: 35,
            _u5: "#",
            x: 448,
            y: 2,
            _v5: 18,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 36, _u5: "$", x: 483, y: 41, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 37, _u5: "%", x: 163, y: 2, _v5: 22, _w5: 37, shift: 22,
            offset: 0
        }, {_t5: 38, _u5: "&", x: 321, y: 2, _v5: 20, _w5: 37, shift: 23, offset: 1}, {
            _t5: 39,
            _u5: "'",
            x: 85,
            y: 119,
            _v5: 5,
            _w5: 37,
            shift: 7,
            offset: 1
        }, {_t5: 40, _u5: "(", x: 460, y: 80, _v5: 9, _w5: 37, shift: 12, offset: 2}, {
            _t5: 41,
            _u5: ")",
            x: 471,
            y: 80,
            _v5: 9,
            _w5: 37,
            shift: 12,
            offset: 2
        }, {_t5: 42, _u5: "*", x: 253, y: 80, _v5: 13, _w5: 37, shift: 14, offset: 0}, {
            _t5: 43,
            _u5: "+",
            x: 36,
            y: 80,
            _v5: 15,
            _w5: 37,
            shift: 19,
            offset: 2
        }, {_t5: 44, _u5: ",", x: 23, y: 119, _v5: 7, _w5: 37, shift: 12, offset: 2}, {
            _t5: 45,
            _u5: "-",
            x: 2,
            y: 119,
            _v5: 9,
            _w5: 37,
            shift: 12,
            offset: 1
        }, {
            _t5: 46, _u5: ".", x: 68,
            y: 119, _v5: 7, _w5: 37, shift: 12, offset: 2
        }, {_t5: 47, _u5: "/", x: 313, y: 80, _v5: 13, _w5: 37, shift: 12, offset: 0}, {
            _t5: 48,
            _u5: "0",
            x: 176,
            y: 41,
            _v5: 17,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 49, _u5: "1", x: 482, y: 80, _v5: 9, _w5: 37, shift: 19, offset: 4}, {
            _t5: 50,
            _u5: "2",
            x: 394,
            y: 41,
            _v5: 16,
            _w5: 37,
            shift: 19,
            offset: 2
        }, {_t5: 51, _u5: "3", x: 121, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 52,
            _u5: "4",
            x: 100,
            y: 41,
            _v5: 17,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 53, _u5: "5", x: 155, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 54, _u5: "6", x: 250, y: 41, _v5: 16, _w5: 37, shift: 19,
            offset: 2
        }, {_t5: 55, _u5: "7", x: 214, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2}, {
            _t5: 56,
            _u5: "8",
            x: 430,
            y: 41,
            _v5: 16,
            _w5: 37,
            shift: 19,
            offset: 1
        }, {_t5: 57, _u5: "9", x: 286, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 1}, {
            _t5: 58,
            _u5: ":",
            x: 41,
            y: 119,
            _v5: 7,
            _w5: 37,
            shift: 12,
            offset: 2
        }, {_t5: 59, _u5: ";", x: 59, y: 119, _v5: 7, _w5: 37, shift: 12, offset: 2}, {
            _t5: 60,
            _u5: "<",
            x: 268,
            y: 80,
            _v5: 13,
            _w5: 37,
            shift: 19,
            offset: 3
        }, {_t5: 61, _u5: "=", x: 172, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
            _t5: 62,
            _u5: ">",
            x: 298,
            y: 80,
            _v5: 13,
            _w5: 37,
            shift: 19,
            offset: 4
        }, {
            _t5: 63, _u5: "?",
            x: 356, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 1
        }, {_t5: 64, _u5: "@", x: 138, y: 2, _v5: 23, _w5: 37, shift: 25, offset: 1}, {
            _t5: 65,
            _u5: "A",
            x: 210,
            y: 2,
            _v5: 21,
            _w5: 37,
            shift: 20,
            offset: 0
        }, {_t5: 66, _u5: "B", x: 232, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2}, {
            _t5: 67,
            _u5: "C",
            x: 2,
            y: 41,
            _v5: 18,
            _w5: 37,
            shift: 20,
            offset: 1
        }, {_t5: 68, _u5: "D", x: 488, y: 2, _v5: 18, _w5: 37, shift: 21, offset: 2}, {
            _t5: 69,
            _u5: "E",
            x: 138,
            y: 80,
            _v5: 15,
            _w5: 37,
            shift: 18,
            offset: 2
        }, {_t5: 70, _u5: "F", x: 304, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2}, {
            _t5: 71, _u5: "G", x: 233, y: 2, _v5: 20, _w5: 37, shift: 21,
            offset: 1
        }, {_t5: 72, _u5: "H", x: 468, y: 2, _v5: 18, _w5: 37, shift: 22, offset: 2}, {
            _t5: 73,
            _u5: "I",
            x: 99,
            y: 119,
            _v5: 5,
            _w5: 37,
            shift: 9,
            offset: 2
        }, {_t5: 74, _u5: "J", x: 87, y: 80, _v5: 15, _w5: 37, shift: 17, offset: 0}, {
            _t5: 75,
            _u5: "K",
            x: 387,
            y: 2,
            _v5: 19,
            _w5: 37,
            shift: 20,
            offset: 2
        }, {_t5: 76, _u5: "L", x: 53, y: 80, _v5: 15, _w5: 37, shift: 18, offset: 2}, {
            _t5: 77,
            _u5: "M",
            x: 86,
            y: 2,
            _v5: 24,
            _w5: 37,
            shift: 24,
            offset: 0
        }, {_t5: 78, _u5: "N", x: 428, y: 2, _v5: 18, _w5: 37, shift: 21, offset: 2}, {
            _t5: 79,
            _u5: "O",
            x: 187,
            y: 2,
            _v5: 21,
            _w5: 37,
            shift: 23,
            offset: 1
        }, {
            _t5: 80, _u5: "P", x: 358,
            y: 41, _v5: 16, _w5: 37, shift: 19, offset: 2
        }, {_t5: 81, _u5: "Q", x: 112, y: 2, _v5: 24, _w5: 37, shift: 23, offset: 1}, {
            _t5: 82,
            _u5: "R",
            x: 42,
            y: 41,
            _v5: 18,
            _w5: 37,
            shift: 20,
            offset: 2
        }, {_t5: 83, _u5: "S", x: 189, y: 80, _v5: 15, _w5: 37, shift: 16, offset: 1}, {
            _t5: 84,
            _u5: "T",
            x: 255,
            y: 2,
            _v5: 20,
            _w5: 37,
            shift: 20,
            offset: 0
        }, {_t5: 85, _u5: "U", x: 22, y: 41, _v5: 18, _w5: 37, shift: 22, offset: 2}, {
            _t5: 86,
            _u5: "V",
            x: 299,
            y: 2,
            _v5: 20,
            _w5: 37,
            shift: 20,
            offset: 0
        }, {_t5: 87, _u5: "W", x: 2, y: 2, _v5: 29, _w5: 37, shift: 28, offset: 0}, {
            _t5: 88,
            _u5: "X",
            x: 343,
            y: 2,
            _v5: 20,
            _w5: 37,
            shift: 19,
            offset: 0
        }
            , {_t5: 89, _u5: "Y", x: 365, y: 2, _v5: 20, _w5: 37, shift: 20, offset: 0}, {
                _t5: 90,
                _u5: "Z",
                x: 448,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 18,
                offset: 1
            }, {_t5: 91, _u5: "[", x: 449, y: 80, _v5: 9, _w5: 37, shift: 13, offset: 2}, {
                _t5: 92,
                _u5: "\\",
                x: 238,
                y: 80,
                _v5: 13,
                _w5: 37,
                shift: 11,
                offset: -1
            }, {_t5: 93, _u5: "]", x: 493, y: 80, _v5: 9, _w5: 37, shift: 13, offset: 2}, {
                _t5: 94,
                _u5: "^",
                x: 206,
                y: 80,
                _v5: 14,
                _w5: 37,
                shift: 19,
                offset: 2
            }, {_t5: 95, _u5: "_", x: 277, y: 2, _v5: 20, _w5: 37, shift: 19, offset: -1}, {
                _t5: 96,
                _u5: "`",
                x: 13,
                y: 119,
                _v5: 8,
                _w5: 37,
                shift: 19,
                offset: 5
            }, {
                _t5: 97, _u5: "a", x: 340,
                y: 41, _v5: 16, _w5: 37, shift: 17, offset: 1
            }, {_t5: 98, _u5: "b", x: 62, y: 41, _v5: 17, _w5: 37, shift: 19, offset: 1}, {
                _t5: 99,
                _u5: "c",
                x: 104,
                y: 80,
                _v5: 15,
                _w5: 37,
                shift: 16,
                offset: 1
            }, {_t5: 100, _u5: "d", x: 268, y: 41, _v5: 16, _w5: 37, shift: 19, offset: 1}, {
                _t5: 101,
                _u5: "e",
                x: 81,
                y: 41,
                _v5: 17,
                _w5: 37,
                shift: 18,
                offset: 1
            }, {_t5: 102, _u5: "f", x: 283, y: 80, _v5: 13, _w5: 37, shift: 12, offset: 0}, {
                _t5: 103,
                _u5: "g",
                x: 376,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 16,
                offset: 0
            }, {_t5: 104, _u5: "h", x: 466, y: 41, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
                _t5: 105, _u5: "i", x: 50, y: 119, _v5: 7, _w5: 37,
                shift: 10, offset: 1
            }, {_t5: 106, _u5: "j", x: 412, y: 80, _v5: 11, _w5: 37, shift: 12, offset: -1}, {
                _t5: 107,
                _u5: "k",
                x: 412,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 18,
                offset: 2
            }, {_t5: 108, _u5: "l", x: 32, y: 119, _v5: 7, _w5: 37, shift: 9, offset: 2}, {
                _t5: 109,
                _u5: "m",
                x: 60,
                y: 2,
                _v5: 24,
                _w5: 37,
                shift: 28,
                offset: 2
            }, {_t5: 110, _u5: "n", x: 70, y: 80, _v5: 15, _w5: 37, shift: 19, offset: 2}, {
                _t5: 111,
                _u5: "o",
                x: 195,
                y: 41,
                _v5: 17,
                _w5: 37,
                shift: 18,
                offset: 1
            }, {_t5: 112, _u5: "p", x: 157, y: 41, _v5: 17, _w5: 37, shift: 19, offset: 1}, {
                _t5: 113,
                _u5: "q",
                x: 322,
                y: 41,
                _v5: 16,
                _w5: 37,
                shift: 19,
                offset: 1
            }
            , {_t5: 114, _u5: "r", x: 370, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 2}, {
                _t5: 115,
                _u5: "s",
                x: 384,
                y: 80,
                _v5: 12,
                _w5: 37,
                shift: 14,
                offset: 1
            }, {_t5: 116, _u5: "t", x: 398, y: 80, _v5: 12, _w5: 37, shift: 13, offset: 0}, {
                _t5: 117,
                _u5: "u",
                x: 19,
                y: 80,
                _v5: 15,
                _w5: 37,
                shift: 19,
                offset: 2
            }, {_t5: 118, _u5: "v", x: 119, y: 41, _v5: 17, _w5: 37, shift: 17, offset: 0}, {
                _t5: 119,
                _u5: "w",
                x: 33,
                y: 2,
                _v5: 25,
                _w5: 37,
                shift: 25,
                offset: 0
            }, {_t5: 120, _u5: "x", x: 408, y: 2, _v5: 18, _w5: 37, shift: 18, offset: 0}, {
                _t5: 121,
                _u5: "y",
                x: 138,
                y: 41,
                _v5: 17,
                _w5: 37,
                shift: 17,
                offset: 0
            }, {
                _t5: 122, _u5: "z",
                x: 2, y: 80, _v5: 15, _w5: 37, shift: 17, offset: 1
            }, {_t5: 123, _u5: "{", x: 342, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 1}, {
                _t5: 124,
                _u5: "|",
                x: 92,
                y: 119,
                _v5: 5,
                _w5: 37,
                shift: 19,
                offset: 7
            }, {_t5: 125, _u5: "}", x: 328, y: 80, _v5: 12, _w5: 37, shift: 14, offset: 1}, {
                _t5: 126,
                _u5: "~",
                x: 222,
                y: 80,
                _v5: 14,
                _w5: 37,
                shift: 19,
                offset: 2
            },],
    }],
    _x5: [],
    _y5: [{},],
    _z5: [{
        _F3: "obj_START",
        _A5: -1,
        _B5: !0,
        parent: -100,
        _C5: _D5,
        _E5: _F5,
        _G5: _H5,
        _I5: _J5,
        _K5: _L5,
        _M5: [],
        _N5: []
    }, {_F3: "obj_menu_slime", _A5: -1, _B5: !0, parent: -100, _O5: 0, _C5: _P5, _Q5: _R5, _K5: _S5, _M5: [], _N5: []}
        , {
            _F3: "obj_menu_slimes",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _T5,
            _Q5: _U5,
            _V5: _W5,
            _G5: _X5,
            _K5: _Y5,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_slimes_choose",
            _A5: 6,
            _B5: !0,
            parent: -100,
            _C5: _Z5,
            __5: _06,
            _16: _26,
            _Q5: _36,
            _G5: _46,
            _56: _66,
            _K5: _76,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_effects",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _86,
            _Q5: _96,
            _G5: _a6,
            _K5: _b6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_title",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _c6,
            _Q5: _d6,
            _e6: _f6,
            _G5: _g6,
            _h6: _i6,
            _K5: _j6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_story", _A5: -1, _B5: !0, parent: -100, _C5: _k6, _Q5: _l6,
            _G5: _m6, _K5: _n6, _M5: [], _N5: []
        }, {
            _F3: "obj_menu_championship",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _o6,
            _G5: _p6,
            _K5: _q6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_options",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _r6,
            _Q5: _s6,
            _G5: _t6,
            _K5: _u6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_controls",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _v6,
            _Q5: _w6,
            _G5: _x6,
            _56: _y6,
            _K5: _z6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_friendlydefault",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _A6,
            _Q5: _B6,
            _G5: _C6,
            _56: _D6,
            _K5: _E6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_must_sign_up4", _A5: -1, _B5: !0, parent: -100, _C5: _F6,
            _Q5: _G6, _G5: _H6, _I5: _I6, _K5: _J6, _M5: [], _N5: []
        }, {
            _F3: "obj_menu_controls1",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _K6,
            _Q5: _L6,
            _G5: _M6,
            _56: _N6,
            _K5: _O6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_controls2",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _P6,
            _Q5: _Q6,
            _G5: _R6,
            _56: _S6,
            _K5: _T6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_gameend",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _U6,
            _Q5: _V6,
            _G5: _W6,
            _K5: _X6,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_settings",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _Y6,
            _Q5: _Z6,
            _G5: __6,
            _56: _07,
            _K5: _17,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_result", _A5: -1, _B5: !0,
            parent: -100, _C5: _27, _Q5: _37, _e6: _47, _G5: _57, _K5: _67, _M5: [], _N5: []
        }, {
            _F3: "obj_menu_log_in4",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _77,
            _E5: _87,
            _Q5: _97,
            _a7: _b7,
            _c7: _d7,
            _e6: _e7,
            _G5: _f7,
            _K5: _g7,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_menu_prize",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _h7,
            _e6: _i7,
            _G5: _j7,
            _I5: _k7,
            _K5: _l7,
            _M5: [],
            _N5: []
        }, {_F3: "obj_cloud4", _A5: 94, _B5: !0, parent: -100, _C5: _m7, _G5: _n7, _K5: _o7, _M5: [], _N5: []}, {
            _F3: "obj_menu_sign_in",
            _A5: 114,
            _B5: !0,
            parent: -100,
            _C5: _p7,
            _E5: _q7,
            _Q5: _r7,
            _a7: _s7,
            _c7: _t7,
            _e6: _u7,
            _G5: _v7,
            _K5: _w7,
            _M5: [],
            _N5: []
        }, {_F3: "par_weapon", _A5: -1, _B5: !0, parent: -100, _K5: _x7, _M5: [], _N5: []}, {
            _F3: "obj_w_TEMPLATE",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _y7,
            _Q5: _z7,
            _K5: _A7,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_arrow",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _B7,
            _G5: _C7,
            _K5: _D7,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_attaction",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _E7,
            _F7: _G7,
            _Q5: _H7,
            _K5: _I7,
            _M5: [],
            _N5: []
        }, {_F3: "obj_wp_heart", _A5: 66, _B5: !0, parent: 21, _C5: _J7, _Q5: _K7, _K5: _L7, _M5: [], _N5: []}, {
            _F3: "obj_w_basketmode", _A5: -1, _B5: !0, parent: 21, _C5: _M7, _F7: _N7, _Q5: _O7,
            _G5: _P7, _K5: _Q7, _M5: [], _N5: []
        }, {
            _F3: "obj_w_goal_basket",
            _A5: 72,
            _B5: !0,
            parent: 21,
            _O5: 73,
            _K5: _R7,
            _M5: [],
            _N5: [67, _S7]
        }, {_F3: "obj_w_goal_basket_block", _A5: 5, parent: 21, _K5: _T7, _M5: [], _N5: []}, {
            _F3: "obj_w_brick",
            _A5: 80,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _U7,
            _Q5: _V7,
            _K5: _W7,
            _M5: [],
            _N5: [72, _X7, 69, _Y7]
        }, {
            _F3: "obj_w_brick_still",
            _A5: 80,
            _B5: !0,
            parent: 21,
            _C5: _Z7,
            _16: __7,
            _E5: _08,
            _Q5: _18,
            _K5: _28,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_boxingglove",
            _A5: 4,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _38,
            _F7: _48,
            _G5: _58,
            _K5: _68,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_blackhole",
            _A5: 75, parent: 21, _C5: _78, _F7: _88, _Q5: _98, _K5: _a8, _M5: [], _N5: []
        }, {
            _F3: "obj_wp_blackhole_particle",
            _A5: 75,
            _B5: !0,
            parent: -100,
            _C5: _b8,
            _Q5: _c8,
            _K5: _d8,
            _M5: [],
            _N5: [32, _e8]
        }, {
            _F3: "obj_w_crazyness",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _f8,
            _F7: _g8,
            _G5: _h8,
            _K5: _i8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_wp_crazyness",
            _A5: 84,
            parent: 21,
            _C5: _j8,
            _E5: _k8,
            _Q5: _l8,
            _G5: _m8,
            _K5: _n8,
            _M5: [],
            _N5: []
        }, {_F3: "obj_wp_crazyness2", _A5: -1, _B5: !0, parent: -100, _C5: _o8, _Q5: _p8, _K5: _q8, _M5: [], _N5: []}, {
            _F3: "obj_w_discomove", _A5: -1, _B5: !0, parent: 21,
            _C5: _r8, _Q5: _s8, _K5: _t8, _M5: [], _N5: []
        }, {
            _F3: "obj_w_explosion",
            _A5: 71,
            _B5: !0,
            parent: 21,
            _C5: _u8,
            _F7: _v8,
            _Q5: _w8,
            _K5: _x8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_flask",
            _A5: 4,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _y8,
            _F7: _z8,
            _E5: _A8,
            _G5: _B8,
            _K5: _C8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_frostbeam",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _D8,
            _F7: _E8,
            _E5: _F8,
            _G5: _G8,
            _K5: _H8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_fishinghook",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _I8,
            _F7: _J8,
            _E5: _K8,
            _G5: _L8,
            _K5: _M8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_fireball", _A5: -1, _B5: !0, parent: 21,
            _C5: _N8, _F7: _O8, _E5: _P8, _Q5: _Q8, _K5: _R8, _M5: [], _N5: []
        }, {
            _F3: "obj_wp_fireball",
            _A5: 85,
            _B5: !0,
            parent: 21,
            _C5: _S8,
            _T8: _U8,
            _K5: _V8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_grow",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _W8,
            _Q5: _X8,
            _K5: _Y8,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_geyser",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _Z8,
            _F7: __8,
            _E5: _09,
            _Q5: _19,
            _K5: _29,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_harpoon",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _39,
            _G5: _49,
            _K5: _59,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_invisibility", _A5: -1, _B5: !0, parent: 21, _O5: 8, _C5: _69, _F7: _79, _G5: _89, _K5: _99,
            _M5: [], _N5: []
        }, {
            _F3: "obj_w_magnet",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _a9,
            _G5: _b9,
            _K5: _c9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_wp_poison",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _d9,
            _Q5: _e9,
            _K5: _f9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_raindance",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _g9,
            _F7: _h9,
            _G5: _i9,
            _K5: _j9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_wp_raindrop",
            _A5: 82,
            _B5: !0,
            parent: 21,
            _C5: _k9,
            _E5: _l9,
            _Q5: _m9,
            _n9: _o9,
            _K5: _p9,
            _M5: [],
            _N5: [76, _q9, 72, _r9]
        }, {
            _F3: "obj_w_remote",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _s9,
            _F7: _t9,
            _Q5: _u9,
            _G5: _v9,
            _K5: _w9,
            _M5: [],
            _N5: []
        }
        , {
            _F3: "obj_w_revolver",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _x9,
            _G5: _y9,
            _K5: _z9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_stoptime",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _A9,
            _F7: _B9,
            _16: _C9,
            _E5: _D9,
            _Q5: _E9,
            _G5: _F9,
            _K5: _G9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_sprint",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _H9,
            _E5: _I9,
            _Q5: _J9,
            _K5: _K9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_stopsign",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _L9,
            _G5: _M9,
            _K5: _N9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_super",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _O9,
            _F7: _P9,
            _E5: _Q9,
            _Q5: _R9,
            _K5: _S9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_wp_superstar",
            _A5: 112, _B5: !0, parent: 21, _C5: _T9, _Q5: _U9, _K5: _V9, _M5: [], _N5: []
        }, {
            _F3: "obj_w_teleport",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _C5: _W9,
            _F7: _X9,
            _Q5: _Y9,
            _G5: _Z9,
            _K5: __9,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_telekinesis",
            _A5: -1,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _0a,
            _G5: _1a,
            _K5: _2a,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_wp_telekinesis",
            _A5: 86,
            _B5: !0,
            parent: 21,
            _O5: 8,
            _C5: _3a,
            _Q5: _4a,
            _K5: _5a,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_twin",
            _A5: 114,
            _B5: !0,
            parent: 21,
            _C5: _6a,
            _Q5: _7a,
            _G5: _8a,
            _K5: _9a,
            _M5: [],
            _N5: []
        }, {
            _F3: "123456789", _A5: -1, _B5: !0, parent: -100, _K5: _aa, _M5: [],
            _N5: []
        }, {
            _F3: "obj_w_tree",
            _A5: 128,
            _B5: !0,
            parent: -100,
            _C5: _ba,
            _Q5: _ca,
            _K5: _da,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_player1",
            _B5: !0,
            parent: 76,
            _O5: 0,
            _C5: _ea,
            _Q5: _fa,
            _G5: _ga,
            _K5: _ha,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_player2",
            _B5: !0,
            parent: 76,
            _O5: 0,
            _C5: _ia,
            _Q5: _ja,
            _G5: _ka,
            _K5: _la,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_ball",
            _A5: 49,
            _B5: !0,
            parent: -100,
            _O5: 4,
            _C5: _ma,
            _E5: _na,
            _16: _oa,
            _pa: _qa,
            _Q5: _ra,
            _G5: _sa,
            _K5: _ta,
            _M5: [],
            _N5: [79, _ua, 69, _va, 72, _wa, 71, _xa]
        }, {
            _F3: "obj_basketball", _A5: 74, _B5: !0, parent: -100, _O5: 4, _C5: _ya, _E5: _za, _16: _Aa, _Q5: _Ba,
            _G5: _Ca, _K5: _Da, _M5: [], _N5: [79, _Ea, 69, _Fa, 71, _Ga, 72, _Ha]
        }, {_F3: "obj_wall", _A5: 1, _Ia: !0, parent: 78, _K5: _Ja, _M5: [], _N5: []}, {
            _F3: "obj_stop",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _Ka,
            _F7: _La,
            _E5: _Ma,
            _Q5: _Na,
            _K5: _Oa,
            _M5: [],
            _N5: []
        }, {_F3: "obj_ceil", _A5: 2, _Ia: !0, parent: 78, _K5: _Pa, _M5: [], _N5: []}, {
            _F3: "obj_ground",
            _A5: 2,
            _Ia: !0,
            parent: 78,
            _K5: _Qa,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_goal",
            _A5: 50,
            _B5: !0,
            parent: -100,
            _C5: _Ra,
            _F7: _Sa,
            _K5: _Ta,
            _M5: [],
            _N5: []
        }, {_F3: "obj_goal_front", _A5: 51, _B5: !0, parent: -100, _K5: _Ua, _M5: [], _N5: []}, {
            _F3: "obj_goal_block",
            _A5: 123, parent: -100, _K5: _Va, _M5: [], _N5: [68, _Wa, 67, _Xa]
        }, {_F3: "par_player", _A5: -1, _B5: !0, parent: -100, _K5: _Ya, _M5: [], _N5: []}, {
            _F3: "obj_ballghost",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _Q5: _Za,
            _K5: __a,
            _M5: [],
            _N5: []
        }, {_F3: "par_block", _A5: -1, _B5: !0, parent: -100, _K5: _0b, _M5: [], _N5: []}, {
            _F3: "obj_crossbar",
            _A5: 3,
            _Ia: !0,
            parent: -100,
            _K5: _1b,
            _M5: [],
            _N5: []
        }, {_F3: "obj_shadow", _A5: 119, _B5: !0, parent: -100, _G5: _2b, _K5: _3b, _M5: [], _N5: []}, {
            _F3: "obj_ctrl", _A5: -1, _B5: !0, parent: -100, _C5: _4b, _5b: _6b, _7b: _8b, _G5: _9b, _ab: _bb, _cb: _db,
            _eb: _fb, _gb: _hb, _56: _ib, _K5: _jb, _M5: [], _N5: []
        }, {
            _F3: "obj_hud",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _kb,
            _G5: _lb,
            _K5: _mb,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_startup",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _nb,
            __5: _ob,
            _16: _pb,
            _E5: _qb,
            _G5: _rb,
            _K5: _sb,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_annonce",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _tb,
            _G5: _ub,
            _K5: _vb,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_story",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _wb,
            _Q5: _xb,
            _K5: _yb,
            _M5: [],
            _N5: []
        }, {_F3: "obj_game_music", _A5: -1, _B5: !0, parent: -100, _C5: _zb, _K5: _Ab, _M5: [], _N5: []}, {
            _F3: "obj_stats", _A5: -1,
            _B5: !0, parent: -100, _C5: _Bb, _Q5: _Cb, _K5: _Db, _M5: [], _N5: []
        }, {
            _F3: "obj_speechbubble",
            _A5: -1,
            _B5: !0,
            parent: -100,
            _C5: _Eb,
            _E5: _Fb,
            _G5: _Gb,
            _K5: _Hb,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_watch",
            _A5: 89,
            _B5: !0,
            parent: -100,
            _C5: _Ib,
            _G5: _Jb,
            _K5: _Kb,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_ai",
            _A5: 98,
            parent: -100,
            _C5: _Lb,
            _E5: _Mb,
            _K5: _Nb,
            _M5: [],
            _N5: []
        }, {
            _F3: "obj_wp_geyserwater_new",
            _A5: 76,
            _B5: !0,
            parent: -100,
            _C5: _Ob,
            _Q5: _Pb,
            _K5: _Qb,
            _M5: [],
            _N5: []
        }, {_F3: "obj_copyright1", _A5: 132, _B5: !0, parent: -100, _K5: _Rb, _M5: [], _N5: []}],
    _Sb: [{
        _F3: "room_START",
        width: 560,
        height: 400,
        _Tb: 0,
        _Ub: 0,
        _Vb: 2,
        _Wb: !1,
        _Xb: [],
        _Yb: [{}, {}, {}, {}, {}, {}, {}, {}],
        _Zb: [{x: 0, y: 0, index: 0, id: 100000, rotation: 0, scaleX: 1, scaleY: 1, _Ub: 4294967295}],
        __b: [],
        _0c: [{
            _F3: "Compatibility_Instances_Depth_0",
            id: 0,
            type: 2,
            _1c: 0,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _4c: 1,
            _5c: [100000,],
        }, {
            _F3: "Compatibility_Colour",
            id: 1,
            type: 1,
            _1c: 2147483600,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _6c: !0,
            _7c: !1,
            _8c: -1,
            _9c: !1,
            _ac: !1,
            _bc: !1,
            _cc: -16777216,
            _dc: 0,
            _ec: -1,
        }]
    }, {
        _F3: "room_menu",
        width: 560,
        height: 400,
        _Tb: 0,
        _Ub: 0,
        _Vb: 4,
        _Wb: !1,
        _Xb: [],
        _Yb: [{}, {}, {}, {}, {}, {}, {}, {}],
        _Zb: [{x: 20, y: 30, index: 4, id: 100002, rotation: 0, scaleX: 1, scaleY: 1, _Ub: 4294967295}, {
            x: 0,
            y: 30,
            index: 5,
            id: 100001,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            _Ub: 4294967295
        }],
        __b: [],
        _0c: [{
            _F3: "Compatibility_Instances_Depth_0",
            id: 2,
            type: 2,
            _1c: 0,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _4c: 1,
            _5c: [100001,],
        }, {
            _F3: "Compatibility_Instances_Depth_80",
            id: 3,
            type: 2,
            _1c: 80,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _4c: 1,
            _5c: [100002,],
        }, {
            _F3: "Compatibility_Background_0_bg_menu",
            id: 4,
            type: 1,
            _1c: 2147483500,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _6c: !0,
            _7c: !1,
            _8c: 134,
            _9c: !0,
            _ac: !0,
            _bc: !1,
            _cc: -1,
            _dc: 0,
            _ec: 15,
        }, {
            _F3: "Compatibility_Colour",
            id: 5,
            type: 1,
            _1c: 2147483600,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _6c: !0,
            _7c: !1,
            _8c: -1,
            _9c: !1,
            _ac: !1,
            _bc: !1,
            _cc: -16736512,
            _dc: 0,
            _ec: -1,
        }]
    }, {
        _F3: "room_game",
        width: 560,
        height: 400,
        _Tb: 0,
        _Ub: 0,
        _Vb: 3,
        _Wb: !1,
        _fc: !0,
        _Xb: [],
        _Yb: [{_B5: !0, _gc: 560, _hc: 400, _ic: 560, _jc: 400,}, {
            _kc: 20,
            _lc: 20,
            _gc: 520,
            _hc: 360,
            _ic: 560,
            _jc: 400,
        }, {}, {}, {}, {}, {}, {}],
        _Zb: [{x: 0, y: 0, index: 69, id: 100004, rotation: 0, scaleX: 1, scaleY: 1, _Ub: 4294967295}, {
            x: 540, y: 0,
            index: 69, id: 100005, rotation: 0, scaleX: 1, scaleY: 1, _Ub: 4294967295
        }, {x: 0, y: 0, index: 71, id: 100006, rotation: 0, scaleX: 1, scaleY: 1, _Ub: 4294967295}, {
            x: 0,
            y: 380,
            index: 72,
            id: 100007,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            _Ub: 4294967295
        }, {x: 20, y: 20, index: 81, id: 100003, rotation: 0, scaleX: 1, scaleY: 1, _Ub: 4294967295}],
        __b: [],
        _0c: [{
            _F3: "Compatibility_Instances_Depth_-1316134911",
            id: 6,
            type: 2,
            _1c: -1316134911,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _4c: 1,
            _5c: [100003,],
        }, {
            _F3: "Compatibility_Instances_Depth_0", id: 7, type: 2, _1c: 0, x: 0, y: 0, _2c: 0, _3c: 0,
            _B5: 1, _4c: 4, _5c: [100004, 100005, 100006, 100007,],
        }, {
            _F3: "Compatibility_Colour",
            id: 8,
            type: 1,
            _1c: 2147483600,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 0,
            _6c: !0,
            _7c: !1,
            _8c: -1,
            _9c: !1,
            _ac: !1,
            _bc: !1,
            _cc: -16777216,
            _dc: 0,
            _ec: -1,
        }]
    }, {
        _F3: "room_create_profile",
        _Tb: 0,
        _Ub: 0,
        _Vb: 2,
        _Wb: !1,
        _mc: !1,
        _Xb: [],
        _Yb: [{_gc: 1024, _hc: 768, _ic: 1024, _jc: 768,}, {_gc: 1024, _hc: 768, _ic: 1024, _jc: 768,}, {
            _gc: 1024,
            _hc: 768,
            _ic: 1024,
            _jc: 768,
        }, {_gc: 1024, _hc: 768, _ic: 1024, _jc: 768,}, {_gc: 1024, _hc: 768, _ic: 1024, _jc: 768,}, {
            _gc: 1024,
            _hc: 768,
            _ic: 1024,
            _jc: 768,
        }, {
            _gc: 1024,
            _hc: 768, _ic: 1024, _jc: 768,
        }, {_gc: 1024, _hc: 768, _ic: 1024, _jc: 768,}],
        _Zb: [],
        __b: [],
        _0c: [{
            _F3: "Instances",
            id: 9,
            type: 2,
            _1c: 0,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _4c: 0,
            _5c: [],
        }, {
            _F3: "Background",
            id: 10,
            type: 1,
            _1c: 100,
            x: 0,
            y: 0,
            _2c: 0,
            _3c: 0,
            _B5: 1,
            _6c: !0,
            _7c: !1,
            _8c: -1,
            _9c: !1,
            _ac: !1,
            _bc: !1,
            _cc: -16777216,
            _dc: 0,
            _ec: -1,
        }]
    }],
    _nc: [0, 1, 2, 3],
    _oc: [{x: 2, y: 2, _v5: 1, _w5: 1, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 1, _uc: 1, _vc: 0}, {
        x: 2,
        y: 10,
        _v5: 1,
        _w5: 7,
        _pc: 13,
        _qc: 0,
        _rc: 1,
        _sc: 7,
        _tc: 14,
        _uc: 22,
        _vc: 0
    }, {
        x: 2, y: 22, _v5: 3, _w5: 3, _pc: 5, _qc: 5, _rc: 3, _sc: 3, _tc: 13,
        _uc: 13, _vc: 0
    }, {x: 2, y: 30, _v5: 4, _w5: 4, _pc: 7, _qc: 15, _rc: 4, _sc: 4, _tc: 17, _uc: 25, _vc: 0}, {
        x: 2,
        y: 38,
        _v5: 4,
        _w5: 4,
        _pc: 4,
        _qc: 4,
        _rc: 4,
        _sc: 4,
        _tc: 13,
        _uc: 13,
        _vc: 0
    }, {x: 2, y: 46, _v5: 4, _w5: 4, _pc: 25, _qc: 12, _rc: 4, _sc: 4, _tc: 56, _uc: 28, _vc: 0}, {
        x: 2,
        y: 54,
        _v5: 2,
        _w5: 9,
        _pc: 12,
        _qc: 0,
        _rc: 2,
        _sc: 9,
        _tc: 14,
        _uc: 22,
        _vc: 0
    }, {x: 2, y: 70, _v5: 4, _w5: 5, _pc: 11, _qc: 22, _rc: 4, _sc: 5, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 82,
        _v5: 4,
        _w5: 5,
        _pc: 11,
        _qc: 22,
        _rc: 4,
        _sc: 5,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 94, _v5: 4, _w5: 6, _pc: 7, _qc: 14, _rc: 4, _sc: 6, _tc: 18, _uc: 26, _vc: 0}, {
        x: 2, y: 106,
        _v5: 5, _w5: 5, _pc: 4, _qc: 4, _rc: 5, _sc: 5, _tc: 13, _uc: 13, _vc: 0
    }, {x: 2, y: 118, _v5: 9, _w5: 3, _pc: 5, _qc: 11, _rc: 9, _sc: 3, _tc: 17, _uc: 25, _vc: 0}, {
        x: 10,
        y: 2,
        _v5: 3,
        _w5: 10,
        _pc: 7,
        _qc: 9,
        _rc: 3,
        _sc: 10,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {x: 2, y: 126, _v5: 4, _w5: 8, _pc: 7, _qc: 14, _rc: 4, _sc: 8, _tc: 17, _uc: 25, _vc: 0}, {
        x: 10,
        y: 18,
        _v5: 3,
        _w5: 11,
        _pc: 11,
        _qc: 0,
        _rc: 3,
        _sc: 11,
        _tc: 14,
        _uc: 22,
        _vc: 0
    }, {x: 2, y: 138, _v5: 5, _w5: 7, _pc: 9, _qc: 18, _rc: 5, _sc: 7, _tc: 22, _uc: 32, _vc: 0}, {
        x: 2,
        y: 150,
        _v5: 6,
        _w5: 6,
        _pc: 5,
        _qc: 1,
        _rc: 6,
        _sc: 6,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {
        x: 2, y: 162, _v5: 6, _w5: 6, _pc: 3,
        _qc: 3, _rc: 6, _sc: 6, _tc: 13, _uc: 13, _vc: 0
    }, {x: 10, y: 34, _v5: 4, _w5: 10, _pc: 7, _qc: 0, _rc: 4, _sc: 10, _tc: 17, _uc: 25, _vc: 0}, {
        x: 2,
        y: 174,
        _v5: 4,
        _w5: 10,
        _pc: 7,
        _qc: 0,
        _rc: 4,
        _sc: 10,
        _tc: 18,
        _uc: 26,
        _vc: 0
    }, {x: 2, y: 190, _v5: 7, _w5: 6, _pc: 4, _qc: 1, _rc: 7, _sc: 6, _tc: 18, _uc: 26, _vc: 0}, {
        x: 2,
        y: 202,
        _v5: 6,
        _w5: 7,
        _pc: 10,
        _qc: 21,
        _rc: 6,
        _sc: 7,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 214, _v5: 6, _w5: 7, _pc: 10, _qc: 21, _rc: 6, _sc: 7, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 226,
        _v5: 11,
        _w5: 4,
        _pc: 4,
        _qc: 10,
        _rc: 11,
        _sc: 4,
        _tc: 18,
        _uc: 26,
        _vc: 0
    }, {
        x: 10, y: 50, _v5: 4, _w5: 11, _pc: 6, _qc: 9, _rc: 4,
        _sc: 11, _tc: 18, _uc: 26, _vc: 0
    }, {x: 10, y: 174, _v5: 4, _w5: 12, _pc: 10, _qc: 0, _rc: 4, _sc: 12, _tc: 14, _uc: 22, _vc: 0}, {
        x: 2,
        y: 234,
        _v5: 8,
        _w5: 6,
        _pc: 2,
        _qc: 0,
        _rc: 8,
        _sc: 6,
        _tc: 10,
        _uc: 6,
        _vc: 0
    }, {x: 2, y: 246, _v5: 8, _w5: 6, _pc: 2, _qc: 0, _rc: 8, _sc: 6, _tc: 10, _uc: 6, _vc: 0}, {
        x: 2,
        y: 258,
        _v5: 8,
        _w5: 6,
        _pc: 2,
        _qc: 0,
        _rc: 8,
        _sc: 6,
        _tc: 10,
        _uc: 6,
        _vc: 0
    }, {x: 2, y: 270, _v5: 6, _w5: 8, _pc: 6, _qc: 14, _rc: 6, _sc: 8, _tc: 18, _uc: 26, _vc: 0}, {
        x: 10,
        y: 66,
        _v5: 4,
        _w5: 13,
        _pc: 10,
        _qc: 14,
        _rc: 4,
        _sc: 13,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {
        x: 2, y: 282, _v5: 13, _w5: 4, _pc: 7, _qc: 16, _rc: 13, _sc: 4, _tc: 24, _uc: 36,
        _vc: 0
    }, {x: 14, y: 126, _v5: 4, _w5: 13, _pc: 11, _qc: 1, _rc: 4, _sc: 13, _tc: 24, _uc: 36, _vc: 0}, {
        x: 14,
        y: 190,
        _v5: 4,
        _w5: 13,
        _pc: 11,
        _qc: 1,
        _rc: 4,
        _sc: 13,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 290, _v5: 13, _w5: 4, _pc: 7, _qc: 16, _rc: 13, _sc: 4, _tc: 24, _uc: 36, _vc: 0}, {
        x: 10,
        y: 86,
        _v5: 4,
        _w5: 13,
        _pc: 10,
        _qc: 14,
        _rc: 4,
        _sc: 13,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 298, _v5: 9, _w5: 6, _pc: 1, _qc: 0, _rc: 9, _sc: 6, _tc: 10, _uc: 6, _vc: 0}, {
        x: 2,
        y: 310,
        _v5: 9,
        _w5: 6,
        _pc: 0,
        _qc: 2,
        _rc: 9,
        _sc: 6,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {x: 2, y: 322, _v5: 5, _w5: 11, _pc: 6, _qc: 9, _rc: 5, _sc: 11, _tc: 17, _uc: 25, _vc: 0}, {
        x: 2, y: 338, _v5: 6, _w5: 10, _pc: 10, _qc: 21, _rc: 6, _sc: 10, _tc: 24, _uc: 36, _vc: 0
    }, {x: 2, y: 354, _v5: 15, _w5: 4, _pc: 1, _qc: 15, _rc: 15, _sc: 4, _tc: 17, _uc: 25, _vc: 0}, {
        x: 2,
        y: 362,
        _v5: 6,
        _w5: 10,
        _pc: 10,
        _qc: 21,
        _rc: 6,
        _sc: 10,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 378, _v5: 8, _w5: 8, _pc: 7, _qc: 2, _rc: 8, _sc: 8, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 390,
        _v5: 8,
        _w5: 8,
        _pc: 5,
        _qc: 1,
        _rc: 8,
        _sc: 8,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {x: 2, y: 402, _v5: 8, _w5: 8, _pc: 7, _qc: 2, _rc: 8, _sc: 8, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 414,
        _v5: 8,
        _w5: 8,
        _pc: 2,
        _qc: 2,
        _rc: 8,
        _sc: 8,
        _tc: 13,
        _uc: 13,
        _vc: 0
    }, {
        x: 2, y: 426, _v5: 5,
        _w5: 13, _pc: 9, _qc: 0, _rc: 5, _sc: 13, _tc: 22, _uc: 32, _vc: 0
    }, {x: 14, y: 234, _v5: 4, _w5: 17, _pc: 7, _qc: 3, _rc: 4, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
        x: 2,
        y: 446,
        _v5: 5,
        _w5: 14,
        _pc: 9,
        _qc: 0,
        _rc: 5,
        _sc: 14,
        _tc: 14,
        _uc: 22,
        _vc: 0
    }, {x: 2, y: 466, _v5: 10, _w5: 7, _pc: 0, _qc: 1, _rc: 10, _sc: 7, _tc: 18, _uc: 26, _vc: 0}, {
        x: 2,
        y: 478,
        _v5: 14,
        _w5: 5,
        _pc: 5,
        _qc: 13,
        _rc: 14,
        _sc: 5,
        _tc: 22,
        _uc: 32,
        _vc: 0
    }, {x: 2, y: 490, _v5: 5, _w5: 14, _pc: 8, _qc: 11, _rc: 5, _sc: 14, _tc: 22, _uc: 32, _vc: 0}, {
        x: 14,
        y: 146,
        _v5: 4,
        _w5: 18,
        _pc: 7,
        _qc: 1,
        _rc: 4,
        _sc: 18,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {
        x: 14, y: 322, _v5: 4, _w5: 18,
        _pc: 7, _qc: 2, _rc: 4, _sc: 18, _tc: 18, _uc: 26, _vc: 0
    }, {x: 2, y: 510, _v5: 9, _w5: 8, _pc: 5, _qc: 1, _rc: 9, _sc: 8, _tc: 22, _uc: 32, _vc: 0}, {
        x: 14,
        y: 258,
        _v5: 4,
        _w5: 19,
        _pc: 7,
        _qc: 0,
        _rc: 4,
        _sc: 19,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {x: 2, y: 522, _v5: 7, _w5: 11, _pc: 8, _qc: 17, _rc: 7, _sc: 11, _tc: 22, _uc: 32, _vc: 0}, {
        x: 2,
        y: 538,
        _v5: 6,
        _w5: 13,
        _pc: 5,
        _qc: 8,
        _rc: 6,
        _sc: 13,
        _tc: 18,
        _uc: 26,
        _vc: 0
    }, {x: 2, y: 558, _v5: 6, _w5: 13, _pc: 10, _qc: 1, _rc: 6, _sc: 13, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 578,
        _v5: 10,
        _w5: 8,
        _pc: 4,
        _qc: 1,
        _rc: 10,
        _sc: 8,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {
        x: 14, y: 362, _v5: 4, _w5: 20, _pc: 6, _qc: 0,
        _rc: 4, _sc: 20, _tc: 17, _uc: 25, _vc: 0
    }, {x: 2, y: 590, _v5: 10, _w5: 8, _pc: 4, _qc: 1, _rc: 10, _sc: 8, _tc: 18, _uc: 26, _vc: 0}, {
        x: 2,
        y: 602,
        _v5: 9,
        _w5: 9,
        _pc: 2,
        _qc: 2,
        _rc: 9,
        _sc: 9,
        _tc: 13,
        _uc: 13,
        _vc: 0
    }, {x: 2, y: 618, _v5: 11, _w5: 8, _pc: 3, _qc: 1, _rc: 11, _sc: 8, _tc: 18, _uc: 26, _vc: 0}, {
        x: 2,
        y: 630,
        _v5: 6,
        _w5: 15,
        _pc: 8,
        _qc: 0,
        _rc: 6,
        _sc: 15,
        _tc: 14,
        _uc: 22,
        _vc: 0
    }, {x: 2, y: 650, _v5: 6, _w5: 15, _pc: 9, _qc: 13, _rc: 6, _sc: 15, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 670,
        _v5: 15,
        _w5: 6,
        _pc: 6,
        _qc: 15,
        _rc: 15,
        _sc: 6,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {
        x: 2, y: 682, _v5: 6, _w5: 15, _pc: 9, _qc: 13, _rc: 6, _sc: 15,
        _tc: 24, _uc: 36, _vc: 0
    }, {x: 2, y: 702, _v5: 6, _w5: 15, _pc: 10, _qc: 0, _rc: 6, _sc: 15, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 722,
        _v5: 15,
        _w5: 6,
        _pc: 6,
        _qc: 15,
        _rc: 15,
        _sc: 6,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 734, _v5: 7, _w5: 13, _pc: 0, _qc: 0, _rc: 7, _sc: 13, _tc: 7, _uc: 13, _vc: 0}, {
        x: 2,
        y: 754,
        _v5: 13,
        _w5: 7,
        _pc: 2,
        _qc: 7,
        _rc: 13,
        _sc: 7,
        _tc: 17,
        _uc: 25,
        _vc: 0
    }, {x: 14, y: 522, _v5: 4, _w5: 23, _pc: 11, _qc: 5, _rc: 4, _sc: 23, _tc: 24, _uc: 36, _vc: 0}, {
        x: 14,
        y: 386,
        _v5: 4,
        _w5: 23,
        _pc: 11,
        _qc: 5,
        _rc: 4,
        _sc: 23,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {
        x: 2, y: 766, _v5: 5, _w5: 19, _pc: 6, _qc: 1, _rc: 5, _sc: 19, _tc: 18,
        _uc: 26, _vc: 0
    }, {x: 2, y: 790, _v5: 6, _w5: 16, _pc: 9, _qc: 13, _rc: 6, _sc: 16, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 810,
        _v5: 12,
        _w5: 8,
        _pc: 1,
        _qc: 3,
        _rc: 12,
        _sc: 8,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 822, _v5: 16, _w5: 6, _pc: 1, _qc: 14, _rc: 16, _sc: 6, _tc: 18, _uc: 26, _vc: 0}, {
        x: 2,
        y: 834,
        _v5: 6,
        _w5: 16,
        _pc: 9,
        _qc: 13,
        _rc: 6,
        _sc: 16,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 854, _v5: 12, _w5: 8, _pc: 1, _qc: 3, _rc: 12, _sc: 8, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 866,
        _v5: 8,
        _w5: 12,
        _pc: 9,
        _qc: 20,
        _rc: 8,
        _sc: 12,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {
        x: 2, y: 882, _v5: 8, _w5: 12, _pc: 9, _qc: 20, _rc: 8, _sc: 12, _tc: 24, _uc: 36,
        _vc: 0
    }, {x: 2, y: 898, _v5: 20, _w5: 5, _pc: 2, _qc: 22, _rc: 20, _sc: 5, _tc: 24, _uc: 36, _vc: 0}, {
        x: 14,
        y: 630,
        _v5: 5,
        _w5: 20,
        _pc: 6,
        _qc: 0,
        _rc: 5,
        _sc: 20,
        _tc: 18,
        _uc: 26,
        _vc: 0
    }, {x: 2, y: 910, _v5: 20, _w5: 5, _pc: 2, _qc: 22, _rc: 20, _sc: 5, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 922,
        _v5: 10,
        _w5: 10,
        _pc: 6,
        _qc: 1,
        _rc: 10,
        _sc: 10,
        _tc: 24,
        _uc: 36,
        _vc: 0
    }, {x: 2, y: 938, _v5: 10, _w5: 10, _pc: 6, _qc: 1, _rc: 10, _sc: 10, _tc: 24, _uc: 36, _vc: 0}, {
        x: 2,
        y: 954,
        _v5: 10,
        _w5: 10,
        _pc: 1,
        _qc: 1,
        _rc: 10,
        _sc: 10,
        _tc: 13,
        _uc: 13,
        _vc: 0
    }, {
        x: 14, y: 490, _v5: 8, _w5: 13, _pc: 4, _qc: 6, _rc: 8, _sc: 13, _tc: 17, _uc: 25,
        _vc: 0
    }, {x: 2, y: 970, _v5: 15, _w5: 7, _pc: 1, _qc: 7, _rc: 15, _sc: 7, _tc: 18, _uc: 26, _vc: 0}, {
        x: 14,
        y: 682,
        _v5: 5,
        _w5: 21,
        _pc: 5,
        _qc: 0,
        _rc: 5,
        _sc: 21,
        _tc: 18,
        _uc: 26,
        _vc: 0
    }, {x: 14, y: 734, _v5: 7, _w5: 15, _pc: 7, _qc: 11, _rc: 7, _sc: 15, _tc: 22, _uc: 32, _vc: 0}, {
        x: 2,
        y: 982,
        _v5: 12,
        _w5: 9,
        _pc: 0,
        _qc: 1,
        _rc: 12,
        _sc: 9,
        _tc: 22,
        _uc: 32,
        _vc: 0
    }, {x: 14, y: 550, _v5: 5, _w5: 22, _pc: 9, _qc: 3, _rc: 5, _sc: 22, _tc: 22, _uc: 32, _vc: 0}, {
        x: 14,
        y: 414,
        _v5: 7,
        _w5: 16,
        _pc: 7,
        _qc: 0,
        _rc: 7,
        _sc: 16,
        _tc: 14,
        _uc: 22,
        _vc: 0
    }, {x: 14, y: 766, _v5: 6, _w5: 19, _pc: 4, _qc: 1, _rc: 6, _sc: 19, _tc: 17, _uc: 25, _vc: 0}
        , {x: 14, y: 866, _v5: 6, _w5: 19, _pc: 5, _qc: 1, _rc: 6, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 998,
            _v5: 6,
            _w5: 19,
            _pc: 5,
            _qc: 1,
            _rc: 6,
            _sc: 19,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 2, y: 1022, _v5: 9, _w5: 13, _pc: 3, _qc: 6, _rc: 9, _sc: 13, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1042,
            _v5: 13,
            _w5: 9,
            _pc: 1,
            _qc: 3,
            _rc: 13,
            _sc: 9,
            _tc: 15,
            _uc: 15,
            _vc: 0
        }, {x: 14, y: 434, _v5: 7, _w5: 17, _pc: 8, _qc: 13, _rc: 7, _sc: 17, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1058,
            _v5: 11,
            _w5: 11,
            _pc: 7,
            _qc: 2,
            _rc: 11,
            _sc: 11,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1074, _v5: 11, _w5: 11, _pc: 7, _qc: 2, _rc: 11, _sc: 11, _tc: 24, _uc: 36, _vc: 0}
        , {x: 2, y: 1090, _v5: 5, _w5: 25, _pc: 10, _qc: 2, _rc: 5, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 14,
            y: 1090,
            _v5: 5,
            _w5: 25,
            _pc: 10,
            _qc: 2,
            _rc: 5,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1122, _v5: 5, _w5: 26, _pc: 10, _qc: 1, _rc: 5, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 14,
            y: 1122,
            _v5: 5,
            _w5: 26,
            _pc: 10,
            _qc: 1,
            _rc: 5,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1154, _v5: 13, _w5: 10, _pc: 1, _qc: 2, _rc: 13, _sc: 10, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1170,
            _v5: 12,
            _w5: 11,
            _pc: 5,
            _qc: 1,
            _rc: 12,
            _sc: 11,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 14, y: 998, _v5: 7, _w5: 19, _pc: 1, _qc: 1, _rc: 7, _sc: 19, _tc: 9, _uc: 21,
            _vc: 0
        }, {x: 2, y: 1186, _v5: 7, _w5: 19, _pc: 5, _qc: 1, _rc: 7, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 14,
            y: 1186,
            _v5: 7,
            _w5: 19,
            _pc: 5,
            _qc: 1,
            _rc: 7,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 2, y: 1210, _v5: 8, _w5: 17, _pc: 6, _qc: 0, _rc: 8, _sc: 17, _tc: 14, _uc: 22, _vc: 0}, {
            x: 14,
            y: 1210,
            _v5: 8,
            _w5: 17,
            _pc: 6,
            _qc: 2,
            _rc: 8,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 2, y: 1234, _v5: 5, _w5: 28, _pc: 9, _qc: 1, _rc: 5, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1266,
            _v5: 20,
            _w5: 7,
            _pc: 1,
            _qc: 18,
            _rc: 20,
            _sc: 7,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 2, y: 1278, _v5: 5, _w5: 28, _pc: 9, _qc: 1, _rc: 5, _sc: 28, _tc: 24, _uc: 36,
            _vc: 0
        }, {x: 2, y: 1310, _v5: 14, _w5: 10, _pc: 0, _qc: 2, _rc: 14, _sc: 10, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1326,
            _v5: 13,
            _w5: 11,
            _pc: 6,
            _qc: 2,
            _rc: 13,
            _sc: 11,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1342, _v5: 13, _w5: 11, _pc: 6, _qc: 2, _rc: 13, _sc: 11, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1358,
            _v5: 12,
            _w5: 12,
            _pc: 0,
            _qc: 0,
            _rc: 12,
            _sc: 12,
            _tc: 12,
            _uc: 12,
            _vc: 0
        }, {x: 2, y: 1358, _v5: 12, _w5: 12, _pc: 0, _qc: 0, _rc: 12, _sc: 12, _tc: 12, _uc: 12, _vc: 0}, {
            x: 14,
            y: 1234,
            _v5: 8,
            _w5: 18,
            _pc: 6,
            _qc: 1,
            _rc: 8,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 14, y: 1278, _v5: 8, _w5: 18, _pc: 3, _qc: 1, _rc: 8, _sc: 18, _tc: 17,
            _uc: 25, _vc: 0
        }, {x: 2, y: 1374, _v5: 6, _w5: 24, _pc: 8, _qc: 1, _rc: 6, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 14,
            y: 1374,
            _v5: 6,
            _w5: 24,
            _pc: 10,
            _qc: 4,
            _rc: 6,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1402, _v5: 8, _w5: 18, _pc: 8, _qc: 12, _rc: 8, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1426,
            _v5: 12,
            _w5: 12,
            _pc: 0,
            _qc: 0,
            _rc: 12,
            _sc: 12,
            _tc: 13,
            _uc: 13,
            _vc: 0
        }, {x: 2, y: 1442, _v5: 10, _w5: 15, _pc: 3, _qc: 5, _rc: 10, _sc: 15, _tc: 18, _uc: 26, _vc: 0}, {
            x: 2,
            y: 1462,
            _v5: 6,
            _w5: 25,
            _pc: 8,
            _qc: 0,
            _rc: 6,
            _sc: 25,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 14, y: 1462, _v5: 6, _w5: 25, _pc: 10, _qc: 4, _rc: 6, _sc: 25, _tc: 24,
            _uc: 36, _vc: 0
        }, {x: 14, y: 1402, _v5: 8, _w5: 19, _pc: 4, _qc: 1, _rc: 8, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 2,
            y: 1494,
            _v5: 8,
            _w5: 19,
            _pc: 2,
            _qc: 1,
            _rc: 8,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 2, y: 1518, _v5: 17, _w5: 9, _pc: 4, _qc: 11, _rc: 17, _sc: 9, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1534,
            _v5: 17,
            _w5: 9,
            _pc: 4,
            _qc: 11,
            _rc: 17,
            _sc: 9,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1550, _v5: 14, _w5: 11, _pc: 4, _qc: 1, _rc: 14, _sc: 11, _tc: 22, _uc: 32, _vc: 0}, {
            x: 2,
            y: 1566,
            _v5: 22,
            _w5: 7,
            _pc: 1,
            _qc: 21,
            _rc: 22,
            _sc: 7,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 2, y: 1578, _v5: 22, _w5: 7, _pc: 1, _qc: 21, _rc: 22, _sc: 7, _tc: 24,
            _uc: 36, _vc: 0
        }, {x: 2, y: 1590, _v5: 13, _w5: 12, _pc: 2, _qc: 7, _rc: 13, _sc: 12, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1606,
            _v5: 13,
            _w5: 12,
            _pc: 1,
            _qc: 6,
            _rc: 13,
            _sc: 12,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 2, y: 1622, _v5: 13, _w5: 12, _pc: 3, _qc: 6, _rc: 13, _sc: 12, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1638,
            _v5: 13,
            _w5: 12,
            _pc: 2,
            _qc: 7,
            _rc: 13,
            _sc: 12,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 18, y: 2, _v5: 6, _w5: 26, _pc: 7, _qc: 0, _rc: 6, _sc: 26, _tc: 22, _uc: 32, _vc: 0}, {
            x: 14,
            y: 1494,
            _v5: 9,
            _w5: 18,
            _pc: 5,
            _qc: 0,
            _rc: 9,
            _sc: 18,
            _tc: 14,
            _uc: 22,
            _vc: 0
        }, {
            x: 2, y: 1654, _v5: 18, _w5: 9, _pc: 2, _qc: 9, _rc: 18, _sc: 9, _tc: 22,
            _uc: 32, _vc: 0
        }, {x: 14, y: 834, _v5: 11, _w5: 15, _pc: 2, _qc: 5, _rc: 11, _sc: 15, _tc: 18, _uc: 26, _vc: 0}, {
            x: 18,
            y: 922,
            _v5: 8,
            _w5: 21,
            _pc: 0,
            _qc: 0,
            _rc: 8,
            _sc: 21,
            _tc: 8,
            _uc: 22,
            _vc: 0
        }, {x: 2, y: 1670, _v5: 13, _w5: 13, _pc: 2, _qc: 6, _rc: 13, _sc: 13, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1690,
            _v5: 13,
            _w5: 13,
            _pc: 2,
            _qc: 6,
            _rc: 13,
            _sc: 13,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 2, y: 1710, _v5: 13, _w5: 13, _pc: 2, _qc: 6, _rc: 13, _sc: 13, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1730,
            _v5: 13,
            _w5: 13,
            _pc: 2,
            _qc: 6,
            _rc: 13,
            _sc: 13,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 2, y: 1750, _v5: 13, _w5: 13, _pc: 1, _qc: 6, _rc: 13, _sc: 13,
            _tc: 17, _uc: 25, _vc: 0
        }, {x: 2, y: 1770, _v5: 13, _w5: 13, _pc: 2, _qc: 6, _rc: 13, _sc: 13, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1790,
            _v5: 13,
            _w5: 13,
            _pc: 3,
            _qc: 6,
            _rc: 13,
            _sc: 13,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 2, y: 1810, _v5: 13, _w5: 13, _pc: 2, _qc: 6, _rc: 13, _sc: 13, _tc: 17, _uc: 25, _vc: 0}, {
            x: 2,
            y: 1830,
            _v5: 13,
            _w5: 13,
            _pc: 6,
            _qc: 1,
            _rc: 13,
            _sc: 13,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 1850, _v5: 13, _w5: 13, _pc: 6, _qc: 1, _rc: 13, _sc: 13, _tc: 24, _uc: 36, _vc: 0}, {
            x: 2,
            y: 1870,
            _v5: 13,
            _w5: 13,
            _pc: 0,
            _qc: 0,
            _rc: 13,
            _sc: 13,
            _tc: 13,
            _uc: 13,
            _vc: 0
        }, {
            x: 2, y: 1890, _v5: 10, _w5: 17, _pc: 4, _qc: 2, _rc: 10,
            _sc: 17, _tc: 17, _uc: 25, _vc: 0
        }, {x: 2, y: 1914, _v5: 9, _w5: 19, _pc: 5, _qc: 1, _rc: 9, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 2,
            y: 1938,
            _v5: 9,
            _w5: 19,
            _pc: 2,
            _qc: 1,
            _rc: 9,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 2, y: 1962, _v5: 9, _w5: 19, _pc: 5, _qc: 1, _rc: 9, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 2,
            y: 1986,
            _v5: 9,
            _w5: 19,
            _pc: 4,
            _qc: 1,
            _rc: 9,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 2, y: 2010, _v5: 10, _w5: 18, _pc: 4, _qc: 0, _rc: 10, _sc: 18, _tc: 14, _uc: 22, _vc: 0}, {
            x: 14,
            y: 790,
            _v5: 14,
            _w5: 13,
            _pc: 2,
            _qc: 6,
            _rc: 14,
            _sc: 13,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 18, y: 210, _v5: 14, _w5: 13, _pc: 2, _qc: 6, _rc: 14,
            _sc: 13, _tc: 17, _uc: 25, _vc: 0
        }, {x: 18, y: 170, _v5: 13, _w5: 14, _pc: 1, _qc: 5, _rc: 13, _sc: 14, _tc: 18, _uc: 26, _vc: 0}, {
            x: 22,
            y: 654,
            _v5: 9,
            _w5: 21,
            _pc: 3,
            _qc: 3,
            _rc: 9,
            _sc: 21,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 18, y: 578, _v5: 7, _w5: 27, _pc: 9, _qc: 1, _rc: 7, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 22,
            y: 510,
            _v5: 7,
            _w5: 27,
            _pc: 9,
            _qc: 1,
            _rc: 7,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 22, y: 458, _v5: 7, _w5: 27, _pc: 9, _qc: 1, _rc: 7, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 18,
            y: 298,
            _v5: 15,
            _w5: 13,
            _pc: 5,
            _qc: 1,
            _rc: 15,
            _sc: 13,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 18, y: 1058, _v5: 15, _w5: 13, _pc: 5, _qc: 1, _rc: 15,
            _sc: 13, _tc: 24, _uc: 36, _vc: 0
        }, {x: 22, y: 1154, _v5: 7, _w5: 28, _pc: 9, _qc: 0, _rc: 7, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 22,
            y: 710,
            _v5: 11,
            _w5: 18,
            _pc: 6,
            _qc: 9,
            _rc: 11,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 2, y: 2034, _v5: 18, _w5: 11, _pc: 3, _qc: 0, _rc: 18, _sc: 11, _tc: 21, _uc: 11, _vc: 0}, {
            x: 18,
            y: 982,
            _v5: 18,
            _w5: 11,
            _pc: 3,
            _qc: 0,
            _rc: 18,
            _sc: 11,
            _tc: 21,
            _uc: 11,
            _vc: 0
        }, {x: 18, y: 1022, _v5: 18, _w5: 11, _pc: 3, _qc: 0, _rc: 18, _sc: 11, _tc: 21, _uc: 11, _vc: 0}, {
            x: 22,
            y: 1302,
            _v5: 11,
            _w5: 18,
            _pc: 3,
            _qc: 1,
            _rc: 11,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 18, y: 1426, _v5: 11, _w5: 18, _pc: 4,
            _qc: 2, _rc: 11, _sc: 18, _tc: 17, _uc: 25, _vc: 0
        }, {x: 18, y: 34, _v5: 11, _w5: 18, _pc: 6, _qc: 9, _rc: 11, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 26,
            y: 1518,
            _v5: 12,
            _w5: 17,
            _pc: 2,
            _qc: 2,
            _rc: 12,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 26, y: 1590, _v5: 12, _w5: 17, _pc: 4, _qc: 7, _rc: 12, _sc: 17, _tc: 22, _uc: 32, _vc: 0}, {
            x: 26,
            y: 854,
            _v5: 8,
            _w5: 26,
            _pc: 8,
            _qc: 2,
            _rc: 8,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 26, y: 610, _v5: 8, _w5: 26, _pc: 8, _qc: 2, _rc: 8, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 22,
            y: 810,
            _v5: 11,
            _w5: 19,
            _pc: 3,
            _qc: 0,
            _rc: 11,
            _sc: 19,
            _tc: 14,
            _uc: 22,
            _vc: 0
        }, {
            x: 18, y: 1358, _v5: 19, _w5: 11,
            _pc: 2, _qc: 0, _rc: 19, _sc: 11, _tc: 21, _uc: 11, _vc: 0
        }, {x: 26, y: 542, _v5: 11, _w5: 19, _pc: 3, _qc: 1, _rc: 11, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 18,
            y: 950,
            _v5: 19,
            _w5: 11,
            _pc: 3,
            _qc: 10,
            _rc: 19,
            _sc: 11,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 18, y: 1890, _v5: 19, _w5: 11, _pc: 3, _qc: 10, _rc: 19, _sc: 11, _tc: 24, _uc: 36, _vc: 0}, {
            x: 22,
            y: 190,
            _v5: 15,
            _w5: 14,
            _pc: 1,
            _qc: 6,
            _rc: 15,
            _sc: 14,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 22, y: 230, _v5: 15, _w5: 14, _pc: 2, _qc: 5, _rc: 15, _sc: 14, _tc: 18, _uc: 26, _vc: 0}, {
            x: 22,
            y: 318,
            _v5: 15,
            _w5: 14,
            _pc: 1,
            _qc: 6,
            _rc: 15,
            _sc: 14,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {
            x: 22, y: 1038,
            _v5: 14, _w5: 15, _pc: 1, _qc: 5, _rc: 14, _sc: 15, _tc: 18, _uc: 26, _vc: 0
        }, {x: 26, y: 1078, _v5: 7, _w5: 30, _pc: 8, _qc: 0, _rc: 7, _sc: 30, _tc: 24, _uc: 36, _vc: 0}, {
            x: 26,
            y: 734,
            _v5: 7,
            _w5: 30,
            _pc: 8,
            _qc: 0,
            _rc: 7,
            _sc: 30,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 26, y: 682, _v5: 12, _w5: 18, _pc: 5, _qc: 9, _rc: 12, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 26,
            y: 998,
            _v5: 12,
            _w5: 18,
            _pc: 2,
            _qc: 6,
            _rc: 12,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 26, y: 1186, _v5: 12, _w5: 18, _pc: 3, _qc: 2, _rc: 12, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 26,
            y: 1450,
            _v5: 12,
            _w5: 18,
            _pc: 2,
            _qc: 1,
            _rc: 12,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 18,
            y: 58, _v5: 9, _w5: 24, _pc: 6, _qc: 1, _rc: 9, _sc: 24, _tc: 22, _uc: 32, _vc: 0
        }, {x: 22, y: 1614, _v5: 9, _w5: 24, _pc: 4, _qc: 1, _rc: 9, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 26,
            y: 1542,
            _v5: 12,
            _w5: 18,
            _pc: 5,
            _qc: 9,
            _rc: 12,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 22, y: 1326, _v5: 13, _w5: 17, _pc: 2, _qc: 1, _rc: 13, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 18,
            y: 1906,
            _v5: 13,
            _w5: 17,
            _pc: 1,
            _qc: 1,
            _rc: 13,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 22, y: 1670, _v5: 13, _w5: 17, _pc: 2, _qc: 2, _rc: 13, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 22,
            y: 250,
            _v5: 13,
            _w5: 17,
            _pc: 2,
            _qc: 2,
            _rc: 13,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }
        , {x: 22, y: 338, _v5: 13, _w5: 17, _pc: 2, _qc: 2, _rc: 13, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 18,
            y: 86,
            _v5: 13,
            _w5: 17,
            _pc: 2,
            _qc: 2,
            _rc: 13,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 18, y: 1930, _v5: 13, _w5: 17, _pc: 2, _qc: 2, _rc: 13, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 22,
            y: 1694,
            _v5: 13,
            _w5: 17,
            _pc: 2,
            _qc: 2,
            _rc: 13,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 22, y: 274, _v5: 15, _w5: 15, _pc: 2, _qc: 5, _rc: 15, _sc: 15, _tc: 18, _uc: 26, _vc: 0}, {
            x: 22,
            y: 362,
            _v5: 15,
            _w5: 15,
            _pc: 1,
            _qc: 5,
            _rc: 15,
            _sc: 15,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {
            x: 22, y: 110, _v5: 15, _w5: 15, _pc: 1, _qc: 5, _rc: 15, _sc: 15, _tc: 18, _uc: 26,
            _vc: 0
        }, {x: 18, y: 1954, _v5: 15, _w5: 15, _pc: 1, _qc: 5, _rc: 15, _sc: 15, _tc: 18, _uc: 26, _vc: 0}, {
            x: 22,
            y: 1718,
            _v5: 15,
            _w5: 15,
            _pc: 1,
            _qc: 5,
            _rc: 15,
            _sc: 15,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 22, y: 382, _v5: 15, _w5: 15, _pc: 1, _qc: 5, _rc: 15, _sc: 15, _tc: 18, _uc: 26, _vc: 0}, {
            x: 22,
            y: 130,
            _v5: 15,
            _w5: 15,
            _pc: 1,
            _qc: 5,
            _rc: 15,
            _sc: 15,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 18, y: 1974, _v5: 15, _w5: 15, _pc: 0, _qc: 0, _rc: 15, _sc: 15, _tc: 15, _uc: 15, _vc: 0}, {
            x: 26,
            y: 886,
            _v5: 12,
            _w5: 19,
            _pc: 2,
            _qc: 0,
            _rc: 12,
            _sc: 19,
            _tc: 14,
            _uc: 22,
            _vc: 0
        }, {
            x: 26, y: 1374, _v5: 12, _w5: 19, _pc: 3, _qc: 1, _rc: 12, _sc: 19,
            _tc: 17, _uc: 25, _vc: 0
        }, {x: 26, y: 1114, _v5: 12, _w5: 19, _pc: 2, _qc: 0, _rc: 12, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 26,
            y: 1210,
            _v5: 12,
            _w5: 19,
            _pc: 5,
            _qc: 9,
            _rc: 12,
            _sc: 19,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 22, y: 1738, _v5: 9, _w5: 26, _pc: 5, _qc: 2, _rc: 9, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 26,
            y: 402,
            _v5: 9,
            _w5: 26,
            _pc: 7,
            _qc: 2,
            _rc: 9,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 18, y: 1994, _v5: 13, _w5: 18, _pc: 2, _qc: 1, _rc: 13, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 22,
            y: 1770,
            _v5: 13,
            _w5: 18,
            _pc: 2,
            _qc: 1,
            _rc: 13,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 22, y: 1794, _v5: 13, _w5: 18, _pc: 2, _qc: 1, _rc: 13,
            _sc: 18, _tc: 17, _uc: 25, _vc: 0
        }, {x: 22, y: 1818, _v5: 13, _w5: 18, _pc: 2, _qc: 1, _rc: 13, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 22,
            y: 1842,
            _v5: 13,
            _w5: 18,
            _pc: 3,
            _qc: 1,
            _rc: 13,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 22, y: 1866, _v5: 13, _w5: 18, _pc: 2, _qc: 2, _rc: 13, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 26,
            y: 1642,
            _v5: 13,
            _w5: 18,
            _pc: 2,
            _qc: 1,
            _rc: 13,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 26, y: 1398, _v5: 13, _w5: 18, _pc: 3, _qc: 2, _rc: 13, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 26,
            y: 1234,
            _v5: 13,
            _w5: 18,
            _pc: 3,
            _qc: 7,
            _rc: 13,
            _sc: 18,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 30, y: 2, _v5: 9, _w5: 26, _pc: 5,
            _qc: 2, _rc: 9, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 30, y: 566, _v5: 9, _w5: 26, _pc: 7, _qc: 2, _rc: 9, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 26,
            y: 434,
            _v5: 13,
            _w5: 18,
            _pc: 5,
            _qc: 9,
            _rc: 13,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 26, y: 2018, _v5: 14, _w5: 17, _pc: 2, _qc: 2, _rc: 14, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 26,
            y: 1258,
            _v5: 14,
            _w5: 17,
            _pc: 2,
            _qc: 2,
            _rc: 14,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 30, y: 1474, _v5: 14, _w5: 17, _pc: 1, _qc: 2, _rc: 14, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 30,
            y: 1566,
            _v5: 14,
            _w5: 17,
            _pc: 2,
            _qc: 2,
            _rc: 14,
            _sc: 17,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 30, y: 910, _v5: 14, _w5: 17,
            _pc: 2, _qc: 2, _rc: 14, _sc: 17, _tc: 17, _uc: 25, _vc: 0
        }, {x: 34, y: 770, _v5: 14, _w5: 17, _pc: 2, _qc: 2, _rc: 14, _sc: 17, _tc: 17, _uc: 25, _vc: 0}, {
            x: 34,
            y: 1138,
            _v5: 14,
            _w5: 17,
            _pc: 1,
            _qc: 1,
            _rc: 14,
            _sc: 17,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 38, y: 150, _v5: 10, _w5: 24, _pc: 9, _qc: 3, _rc: 10, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 26,
            y: 490,
            _v5: 16,
            _w5: 15,
            _pc: 1,
            _qc: 5,
            _rc: 16,
            _sc: 15,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 38, y: 1058, _v5: 10, _w5: 24, _pc: 5, _qc: 1, _rc: 10, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 38,
            y: 1738,
            _v5: 10,
            _w5: 24,
            _pc: 9,
            _qc: 3,
            _rc: 10,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 34, y: 1422,
            _v5: 13, _w5: 19, _pc: 2, _qc: 1, _rc: 13, _sc: 19, _tc: 17, _uc: 25, _vc: 0
        }, {x: 34, y: 34, _v5: 13, _w5: 19, _pc: 2, _qc: 1, _rc: 13, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 34,
            y: 1162,
            _v5: 13,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 13,
            _sc: 19,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 34, y: 458, _v5: 13, _w5: 19, _pc: 2, _qc: 1, _rc: 13, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 34,
            y: 510,
            _v5: 13,
            _w5: 19,
            _pc: 3,
            _qc: 1,
            _rc: 13,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 34, y: 58, _v5: 13, _w5: 19, _pc: 2, _qc: 1, _rc: 13, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 38,
            y: 598,
            _v5: 10,
            _w5: 25,
            _pc: 5,
            _qc: 2,
            _rc: 10,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 38,
            y: 1906, _v5: 10, _w5: 25, _pc: 9, _qc: 2, _rc: 10, _sc: 25, _tc: 24, _uc: 36, _vc: 0
        }, {x: 38, y: 1282, _v5: 10, _w5: 25, _pc: 9, _qc: 2, _rc: 10, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 38,
            y: 706,
            _v5: 10,
            _w5: 25,
            _pc: 5,
            _qc: 2,
            _rc: 10,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 38, y: 294, _v5: 14, _w5: 18, _pc: 2, _qc: 2, _rc: 14, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 38,
            y: 1614,
            _v5: 14,
            _w5: 18,
            _pc: 2,
            _qc: 1,
            _rc: 14,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 38, y: 794, _v5: 14, _w5: 18, _pc: 2, _qc: 1, _rc: 14, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 38, y: 1086, _v5: 14, _w5: 18, _pc: 2, _qc: 2, _rc: 14, _sc: 18, _tc: 17, _uc: 25,
            _vc: 0
        }, {x: 38, y: 82, _v5: 14, _w5: 18, _pc: 2, _qc: 1, _rc: 14, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 38,
            y: 630,
            _v5: 14,
            _w5: 18,
            _pc: 2,
            _qc: 1,
            _rc: 14,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 38, y: 1938, _v5: 14, _w5: 18, _pc: 2, _qc: 1, _rc: 14, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 38,
            y: 738,
            _v5: 14,
            _w5: 18,
            _pc: 2,
            _qc: 6,
            _rc: 14,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 38, y: 818, _v5: 14, _w5: 18, _pc: 2, _qc: 1, _rc: 14, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 38,
            y: 654,
            _v5: 14,
            _w5: 18,
            _pc: 2,
            _qc: 1,
            _rc: 14,
            _sc: 18,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 42, y: 1498, _v5: 11, _w5: 23, _pc: 2, _qc: 2, _rc: 11, _sc: 23, _tc: 18,
            _uc: 26, _vc: 0
        }, {x: 38, y: 1962, _v5: 15, _w5: 17, _pc: 1, _qc: 1, _rc: 15, _sc: 17, _tc: 18, _uc: 26, _vc: 0}, {
            x: 38,
            y: 210,
            _v5: 17,
            _w5: 15,
            _pc: 1,
            _qc: 5,
            _rc: 17,
            _sc: 15,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 42, y: 934, _v5: 10, _w5: 26, _pc: 7, _qc: 2, _rc: 10, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 42,
            y: 1666,
            _v5: 13,
            _w5: 20,
            _pc: 1,
            _qc: 0,
            _rc: 13,
            _sc: 20,
            _tc: 14,
            _uc: 22,
            _vc: 0
        }, {x: 46, y: 2, _v5: 10, _w5: 26, _pc: 7, _qc: 2, _rc: 10, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 42,
            y: 1446,
            _v5: 13,
            _w5: 20,
            _pc: 5,
            _qc: 8,
            _rc: 13,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 42, y: 1186, _v5: 11, _w5: 24, _pc: 7, _qc: 1, _rc: 11, _sc: 24,
            _tc: 22, _uc: 32, _vc: 0
        }, {x: 42, y: 534, _v5: 11, _w5: 24, _pc: 7, _qc: 1, _rc: 11, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 46,
            y: 482,
            _v5: 11,
            _w5: 24,
            _pc: 3,
            _qc: 1,
            _rc: 11,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 42, y: 1766, _v5: 11, _w5: 24, _pc: 5, _qc: 1, _rc: 11, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 42,
            y: 1314,
            _v5: 14,
            _w5: 19,
            _pc: 2,
            _qc: 5,
            _rc: 14,
            _sc: 19,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {x: 42, y: 318, _v5: 14, _w5: 19, _pc: 2, _qc: 1, _rc: 14, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 42,
            y: 1590,
            _v5: 14,
            _w5: 19,
            _pc: 2,
            _qc: 1,
            _rc: 14,
            _sc: 19,
            _tc: 17,
            _uc: 25,
            _vc: 0
        }, {
            x: 42, y: 1110, _v5: 14, _w5: 19, _pc: 1, _qc: 1,
            _rc: 14, _sc: 19, _tc: 17, _uc: 25, _vc: 0
        }, {x: 42, y: 106, _v5: 14, _w5: 19, _pc: 2, _qc: 1, _rc: 14, _sc: 19, _tc: 17, _uc: 25, _vc: 0}, {
            x: 38,
            y: 842,
            _v5: 14,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 14,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 42, y: 678, _v5: 14, _w5: 19, _pc: 2, _qc: 1, _rc: 14, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 1526,
            _v5: 14,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 14,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 38, y: 1986, _v5: 14, _w5: 19, _pc: 1, _qc: 1, _rc: 14, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 178,
            _v5: 14,
            _w5: 19,
            _pc: 2,
            _qc: 1,
            _rc: 14,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {
            x: 42, y: 230, _v5: 15, _w5: 18,
            _pc: 1, _qc: 2, _rc: 15, _sc: 18, _tc: 17, _uc: 25, _vc: 0
        }, {x: 42, y: 966, _v5: 15, _w5: 18, _pc: 1, _qc: 6, _rc: 15, _sc: 18, _tc: 17, _uc: 25, _vc: 0}, {
            x: 42,
            y: 1690,
            _v5: 10,
            _w5: 27,
            _pc: 5,
            _qc: 2,
            _rc: 10,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 42, y: 1794, _v5: 14, _w5: 20, _pc: 1, _qc: 0, _rc: 14, _sc: 20, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 1338,
            _v5: 14,
            _w5: 20,
            _pc: 1,
            _qc: 5,
            _rc: 14,
            _sc: 20,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 46, y: 1214, _v5: 10, _w5: 28, _pc: 7, _qc: 1, _rc: 10, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 46,
            y: 562,
            _v5: 10,
            _w5: 28,
            _pc: 7,
            _qc: 1,
            _rc: 10,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 42, y: 342,
            _v5: 14, _w5: 20, _pc: 4, _qc: 8, _rc: 14, _sc: 20, _tc: 24, _uc: 36, _vc: 0
        }, {x: 42, y: 866, _v5: 15, _w5: 19, _pc: 2, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 254,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 42, y: 990, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 1818,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 42, y: 1362, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 366,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }
        , {x: 42, y: 1014, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 1842,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 42, y: 390, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 42,
            y: 1866,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 46, y: 1638, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 46,
            y: 2010,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {
            x: 46, y: 1246, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18,
            _uc: 26, _vc: 0
        }, {x: 46, y: 1386, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 46,
            y: 414,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 50, y: 1470, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 50,
            y: 1550,
            _v5: 15,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 15,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 50, y: 890, _v5: 15, _w5: 19, _pc: 1, _qc: 1, _rc: 15, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 54,
            y: 762,
            _v5: 17,
            _w5: 17,
            _pc: 4,
            _qc: 10,
            _rc: 17,
            _sc: 17,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 54, y: 34, _v5: 17, _w5: 17, _pc: 4, _qc: 10, _rc: 17,
            _sc: 17, _tc: 24, _uc: 36, _vc: 0
        }, {x: 54, y: 510, _v5: 17, _w5: 17, _pc: 5, _qc: 9, _rc: 17, _sc: 17, _tc: 24, _uc: 36, _vc: 0}, {
            x: 54,
            y: 1134,
            _v5: 17,
            _w5: 17,
            _pc: 2,
            _qc: 9,
            _rc: 17,
            _sc: 17,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 54, y: 702, _v5: 17, _w5: 17, _pc: 1, _qc: 7, _rc: 17, _sc: 17, _tc: 22, _uc: 32, _vc: 0}, {
            x: 54,
            y: 130,
            _v5: 17,
            _w5: 17,
            _pc: 4,
            _qc: 10,
            _rc: 17,
            _sc: 17,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 54, y: 1722, _v5: 17, _w5: 17, _pc: 4, _qc: 10, _rc: 17, _sc: 17, _tc: 24, _uc: 36, _vc: 0}, {
            x: 54,
            y: 594,
            _v5: 17,
            _w5: 17,
            _pc: 5,
            _qc: 9,
            _rc: 17,
            _sc: 17,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 54, y: 1038, _v5: 17, _w5: 17, _pc: 2,
            _qc: 9, _rc: 17, _sc: 17, _tc: 24, _uc: 36, _vc: 0
        }, {x: 54, y: 1890, _v5: 17, _w5: 17, _pc: 0, _qc: 0, _rc: 17, _sc: 17, _tc: 17, _uc: 17, _vc: 0}, {
            x: 54,
            y: 1270,
            _v5: 17,
            _w5: 17,
            _pc: 0,
            _qc: 0,
            _rc: 17,
            _sc: 17,
            _tc: 17,
            _uc: 17,
            _vc: 0
        }, {x: 58, y: 278, _v5: 14, _w5: 21, _pc: 0, _qc: 0, _rc: 14, _sc: 21, _tc: 14, _uc: 22, _vc: 0}, {
            x: 58,
            y: 1614,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 54, y: 1410, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 54,
            y: 438,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {
            x: 58, y: 1494, _v5: 16,
            _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0
        }, {x: 58, y: 914, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 58,
            y: 786,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 54, y: 58, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 58,
            y: 534,
            _v5: 16,
            _w5: 19,
            _pc: 2,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 54, y: 1158, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 58,
            y: 726,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {
            x: 54, y: 154,
            _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0
        }, {x: 58, y: 1690, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 58,
            y: 1746,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 58, y: 618, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 54,
            y: 1062,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 54, y: 1914, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 58,
            y: 938,
            _v5: 16,
            _w5: 19,
            _pc: 1,
            _qc: 1,
            _rc: 16,
            _sc: 19,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }
        , {x: 58, y: 810, _v5: 16, _w5: 19, _pc: 1, _qc: 1, _rc: 16, _sc: 19, _tc: 18, _uc: 26, _vc: 0}, {
            x: 58,
            y: 82,
            _v5: 17,
            _w5: 18,
            _pc: 4,
            _qc: 9,
            _rc: 17,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 58, y: 1182, _v5: 17, _w5: 18, _pc: 5, _qc: 9, _rc: 17, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 58,
            y: 1770,
            _v5: 17,
            _w5: 18,
            _pc: 4,
            _qc: 9,
            _rc: 17,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 58, y: 642, _v5: 17, _w5: 18, _pc: 4, _qc: 9, _rc: 17, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 58,
            y: 1086,
            _v5: 18,
            _w5: 17,
            _pc: 3,
            _qc: 7,
            _rc: 18,
            _sc: 17,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 58, y: 1938, _v5: 17, _w5: 18, _pc: 3, _qc: 7, _rc: 17, _sc: 18, _tc: 22,
            _uc: 32, _vc: 0
        }, {x: 58, y: 834, _v5: 18, _w5: 17, _pc: 2, _qc: 8, _rc: 18, _sc: 17, _tc: 22, _uc: 32, _vc: 0}, {
            x: 58,
            y: 1962,
            _v5: 18,
            _w5: 17,
            _pc: 2,
            _qc: 8,
            _rc: 18,
            _sc: 17,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 58, y: 1986, _v5: 17, _w5: 18, _pc: 4, _qc: 9, _rc: 17, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 2,
            _v5: 17,
            _w5: 18,
            _pc: 4,
            _qc: 9,
            _rc: 17,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 62, y: 1294, _v5: 17, _w5: 18, _pc: 4, _qc: 9, _rc: 17, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 306,
            _v5: 17,
            _w5: 18,
            _pc: 5,
            _qc: 9,
            _rc: 17,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 62, y: 1574, _v5: 14, _w5: 22, _pc: 0, _qc: 0, _rc: 1, _sc: 1,
            _tc: 14, _uc: 22, _vc: 0
        }, {x: 62, y: 1434, _v5: 11, _w5: 28, _pc: 6, _qc: 1, _rc: 11, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 462,
            _v5: 11,
            _w5: 28,
            _pc: 6,
            _qc: 1,
            _rc: 11,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 62, y: 1518, _v5: 11, _w5: 28, _pc: 4, _qc: 1, _rc: 11, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 558,
            _v5: 13,
            _w5: 24,
            _pc: 6,
            _qc: 3,
            _rc: 13,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 62, y: 178, _v5: 13, _w5: 24, _pc: 6, _qc: 3, _rc: 13, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 66,
            y: 1638,
            _v5: 12,
            _w5: 26,
            _pc: 8,
            _qc: 2,
            _rc: 12,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 62, y: 962, _v5: 12, _w5: 26, _pc: 8, _qc: 2,
            _rc: 12, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 62, y: 1206, _v5: 12, _w5: 26, _pc: 8, _qc: 2, _rc: 12, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 106,
            _v5: 16,
            _w5: 20,
            _pc: 1,
            _qc: 5,
            _rc: 16,
            _sc: 20,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 62, y: 1794, _v5: 16, _w5: 20, _pc: 1, _qc: 1, _rc: 16, _sc: 20, _tc: 18, _uc: 26, _vc: 0}, {
            x: 62,
            y: 666,
            _v5: 16,
            _w5: 20,
            _pc: 1,
            _qc: 5,
            _rc: 16,
            _sc: 20,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 62, y: 1110, _v5: 18, _w5: 18, _pc: 4, _qc: 9, _rc: 18, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 858,
            _v5: 18,
            _w5: 18,
            _pc: 3,
            _qc: 9,
            _rc: 18,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 62, y: 1318, _v5: 18, _w5: 18,
            _pc: 3, _qc: 9, _rc: 18, _sc: 18, _tc: 24, _uc: 36, _vc: 0
        }, {x: 62, y: 330, _v5: 18, _w5: 18, _pc: 3, _qc: 9, _rc: 18, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 206,
            _v5: 18,
            _w5: 18,
            _pc: 2,
            _qc: 9,
            _rc: 18,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 62, y: 994, _v5: 18, _w5: 18, _pc: 0, _qc: 0, _rc: 18, _sc: 18, _tc: 19, _uc: 18, _vc: 0}, {
            x: 46,
            y: 2034,
            _v5: 36,
            _w5: 9,
            _pc: 0,
            _qc: 0,
            _rc: 36,
            _sc: 9,
            _tc: 36,
            _uc: 9,
            _vc: 0
        }, {x: 62, y: 1818, _v5: 18, _w5: 18, _pc: 3, _qc: 7, _rc: 18, _sc: 18, _tc: 22, _uc: 32, _vc: 0}, {
            x: 62,
            y: 1342,
            _v5: 18,
            _w5: 18,
            _pc: 2,
            _qc: 7,
            _rc: 18,
            _sc: 18,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 62, y: 354, _v5: 18,
            _w5: 18, _pc: 1, _qc: 7, _rc: 18, _sc: 18, _tc: 22, _uc: 32, _vc: 0
        }, {x: 62, y: 230, _v5: 18, _w5: 18, _pc: 2, _qc: 7, _rc: 18, _sc: 18, _tc: 22, _uc: 32, _vc: 0}, {
            x: 62,
            y: 1842,
            _v5: 18,
            _w5: 18,
            _pc: 3,
            _qc: 9,
            _rc: 18,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 62, y: 378, _v5: 18, _w5: 18, _pc: 3, _qc: 9, _rc: 18, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 254,
            _v5: 18,
            _w5: 18,
            _pc: 3,
            _qc: 9,
            _rc: 18,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 62, y: 1866, _v5: 18, _w5: 18, _pc: 2, _qc: 9, _rc: 18, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 66,
            y: 1238,
            _v5: 18,
            _w5: 18,
            _pc: 4,
            _qc: 9,
            _rc: 18,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 70,
            y: 882, _v5: 12, _w5: 27, _pc: 4, _qc: 1, _rc: 12, _sc: 27, _tc: 24, _uc: 36, _vc: 0
        }, {x: 66, y: 2010, _v5: 18, _w5: 18, _pc: 4, _qc: 9, _rc: 18, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 66,
            y: 1366,
            _v5: 12,
            _w5: 27,
            _pc: 4,
            _qc: 1,
            _rc: 12,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 66, y: 402, _v5: 12, _w5: 27, _pc: 8, _qc: 1, _rc: 12, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 70,
            y: 1466,
            _v5: 16,
            _w5: 21,
            _pc: 1,
            _qc: 5,
            _rc: 16,
            _sc: 21,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 74, y: 1398, _v5: 14, _w5: 24, _pc: 4, _qc: 1, _rc: 14, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 78, y: 26, _v5: 12, _w5: 28, _pc: 6, _qc: 1, _rc: 12, _sc: 28, _tc: 24, _uc: 36,
            _vc: 0
        }, {x: 78, y: 586, _v5: 12, _w5: 28, _pc: 6, _qc: 1, _rc: 12, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 70,
            y: 1550,
            _v5: 19,
            _w5: 18,
            _pc: 4,
            _qc: 9,
            _rc: 19,
            _sc: 18,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 74, y: 58, _v5: 19, _w5: 18, _pc: 2, _qc: 7, _rc: 19, _sc: 18, _tc: 22, _uc: 32, _vc: 0}, {
            x: 74,
            y: 1158,
            _v5: 19,
            _w5: 18,
            _pc: 1,
            _qc: 7,
            _rc: 19,
            _sc: 18,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 74, y: 1062, _v5: 19, _w5: 18, _pc: 1, _qc: 7, _rc: 19, _sc: 18, _tc: 22, _uc: 32, _vc: 0}, {
            x: 74,
            y: 1914,
            _v5: 19,
            _w5: 18,
            _pc: 1,
            _qc: 7,
            _rc: 19,
            _sc: 18,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 74, y: 154, _v5: 19, _w5: 18, _pc: 4, _qc: 9, _rc: 19, _sc: 18,
            _tc: 24, _uc: 36, _vc: 0
        }, {x: 74, y: 434, _v5: 19, _w5: 18, _pc: 3, _qc: 9, _rc: 19, _sc: 18, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 1602,
            _v5: 12,
            _w5: 29,
            _pc: 5,
            _qc: 5,
            _rc: 12,
            _sc: 29,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 1670, _v5: 12, _w5: 29, _pc: 5, _qc: 5, _rc: 12, _sc: 29, _tc: 24, _uc: 36, _vc: 0}, {
            x: 62,
            y: 494,
            _v5: 40,
            _w5: 9,
            _pc: 0,
            _qc: 0,
            _rc: 40,
            _sc: 9,
            _tc: 40,
            _uc: 9,
            _vc: 0
        }, {x: 78, y: 690, _v5: 20, _w5: 18, _pc: 2, _qc: 7, _rc: 20, _sc: 18, _tc: 22, _uc: 32, _vc: 0}, {
            x: 78,
            y: 278,
            _v5: 18,
            _w5: 20,
            _pc: 4,
            _qc: 8,
            _rc: 18,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 78, y: 1206, _v5: 19, _w5: 19, _pc: 1, _qc: 8, _rc: 19,
            _sc: 19, _tc: 24, _uc: 36, _vc: 0
        }, {x: 78, y: 1262, _v5: 19, _w5: 19, _pc: 3, _qc: 9, _rc: 19, _sc: 19, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 914,
            _v5: 19,
            _w5: 19,
            _pc: 1,
            _qc: 8,
            _rc: 19,
            _sc: 19,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 82, y: 1366, _v5: 19, _w5: 19, _pc: 4, _qc: 8, _rc: 19, _sc: 19, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 1426,
            _v5: 19,
            _w5: 19,
            _pc: 3,
            _qc: 9,
            _rc: 19,
            _sc: 19,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 618, _v5: 19, _w5: 19, _pc: 3, _qc: 9, _rc: 19, _sc: 19, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 1494,
            _v5: 19,
            _w5: 19,
            _pc: 0,
            _qc: 0,
            _rc: 19,
            _sc: 19,
            _tc: 19,
            _uc: 19,
            _vc: 0
        }, {
            x: 78, y: 1018, _v5: 13, _w5: 28, _pc: 3,
            _qc: 3, _rc: 13, _sc: 28, _tc: 22, _uc: 32, _vc: 0
        }, {x: 86, y: 1086, _v5: 15, _w5: 25, _pc: 5, _qc: 2, _rc: 15, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 1938,
            _v5: 15,
            _w5: 25,
            _pc: 5,
            _qc: 2,
            _rc: 15,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 1134, _v5: 19, _w5: 20, _pc: 4, _qc: 8, _rc: 19, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 1890,
            _v5: 19,
            _w5: 20,
            _pc: 3,
            _qc: 8,
            _rc: 19,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 130, _v5: 19, _w5: 20, _pc: 3, _qc: 8, _rc: 19, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 178,
            _v5: 19,
            _w5: 20,
            _pc: 4,
            _qc: 8,
            _rc: 19,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 82, y: 402, _v5: 19,
            _w5: 20, _pc: 3, _qc: 8, _rc: 19, _sc: 20, _tc: 24, _uc: 36, _vc: 0
        }, {x: 82, y: 1574, _v5: 19, _w5: 20, _pc: 3, _qc: 8, _rc: 19, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 1706,
            _v5: 19,
            _w5: 20,
            _pc: 4,
            _qc: 8,
            _rc: 19,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 82, y: 1638, _v5: 16, _w5: 24, _pc: 4, _qc: 3, _rc: 16, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 458,
            _v5: 16,
            _w5: 24,
            _pc: 4,
            _qc: 1,
            _rc: 16,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 78, y: 510, _v5: 16, _w5: 24, _pc: 3, _qc: 1, _rc: 16, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 78,
            y: 714,
            _v5: 16,
            _w5: 24,
            _pc: 4,
            _qc: 1,
            _rc: 16,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 78,
            y: 938, _v5: 16, _w5: 24, _pc: 4, _qc: 3, _rc: 16, _sc: 24, _tc: 24, _uc: 36, _vc: 0
        }, {x: 86, y: 1286, _v5: 15, _w5: 26, _pc: 6, _qc: 2, _rc: 15, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 642,
            _v5: 15,
            _w5: 26,
            _pc: 6,
            _qc: 2,
            _rc: 15,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 1518, _v5: 15, _w5: 26, _pc: 5, _qc: 2, _rc: 15, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 1970,
            _v5: 15,
            _w5: 26,
            _pc: 5,
            _qc: 2,
            _rc: 15,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 82, y: 82, _v5: 18, _w5: 22, _pc: 1, _qc: 1, _rc: 18, _sc: 22, _tc: 22, _uc: 32, _vc: 0}, {
            x: 86, y: 202, _v5: 16, _w5: 25, _pc: 5, _qc: 3, _rc: 16, _sc: 25, _tc: 24, _uc: 36,
            _vc: 0
        }, {x: 86, y: 302, _v5: 16, _w5: 25, _pc: 4, _qc: 2, _rc: 16, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 1182,
            _v5: 20,
            _w5: 20,
            _pc: 0,
            _qc: 0,
            _rc: 20,
            _sc: 20,
            _tc: 20,
            _uc: 20,
            _vc: 0
        }, {x: 78, y: 1730, _v5: 16, _w5: 25, _pc: 5, _qc: 3, _rc: 16, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 538,
            _v5: 16,
            _w5: 25,
            _pc: 4,
            _qc: 2,
            _rc: 16,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 742, _v5: 20, _w5: 20, _pc: 2, _qc: 8, _rc: 20, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 78,
            y: 966,
            _v5: 20,
            _w5: 20,
            _pc: 2,
            _qc: 8,
            _rc: 20,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 82, y: 1762, _v5: 20, _w5: 20, _pc: 2, _qc: 8, _rc: 20, _sc: 20,
            _tc: 24, _uc: 36, _vc: 0
        }, {x: 78, y: 766, _v5: 20, _w5: 20, _pc: 1, _qc: 8, _rc: 20, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 1786,
            _v5: 20,
            _w5: 20,
            _pc: 3,
            _qc: 8,
            _rc: 20,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 78, y: 790, _v5: 20, _w5: 20, _pc: 3, _qc: 8, _rc: 20, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 82,
            y: 814,
            _v5: 20,
            _w5: 20,
            _pc: 2,
            _qc: 8,
            _rc: 20,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 86, y: 2, _v5: 20, _w5: 20, _pc: 3, _qc: 8, _rc: 20, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 86,
            y: 1318,
            _v5: 20,
            _w5: 20,
            _pc: 3,
            _qc: 8,
            _rc: 20,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 86, y: 234, _v5: 20, _w5: 20, _pc: 2, _qc: 8, _rc: 20,
            _sc: 20, _tc: 24, _uc: 36, _vc: 0
        }, {x: 86, y: 334, _v5: 20, _w5: 20, _pc: 1, _qc: 1, _rc: 20, _sc: 20, _tc: 22, _uc: 22, _vc: 0}, {
            x: 90,
            y: 1450,
            _v5: 13,
            _w5: 31,
            _pc: 5,
            _qc: 4,
            _rc: 13,
            _sc: 31,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 86, y: 990, _v5: 17, _w5: 24, _pc: 4, _qc: 3, _rc: 17, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 86,
            y: 1810,
            _v5: 17,
            _w5: 24,
            _pc: 4,
            _qc: 3,
            _rc: 17,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 86, y: 838, _v5: 17, _w5: 24, _pc: 3, _qc: 1, _rc: 17, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 86,
            y: 358,
            _v5: 17,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 17,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 86, y: 1838, _v5: 17, _w5: 24, _pc: 2,
            _qc: 1, _rc: 17, _sc: 24, _tc: 22, _uc: 32, _vc: 0
        }, {x: 86, y: 866, _v5: 17, _w5: 24, _pc: 4, _qc: 3, _rc: 17, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 90,
            y: 1230,
            _v5: 17,
            _w5: 24,
            _pc: 4,
            _qc: 3,
            _rc: 17,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 90, y: 2002, _v5: 18, _w5: 23, _pc: 3, _qc: 2, _rc: 18, _sc: 23, _tc: 24, _uc: 36, _vc: 0}, {
            x: 94,
            y: 1390,
            _v5: 18,
            _w5: 23,
            _pc: 2,
            _qc: 2,
            _rc: 18,
            _sc: 23,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 94, y: 1598, _v5: 18, _w5: 23, _pc: 3, _qc: 2, _rc: 18, _sc: 23, _tc: 24, _uc: 36, _vc: 0}, {
            x: 94,
            y: 1666,
            _v5: 18,
            _w5: 23,
            _pc: 2,
            _qc: 2,
            _rc: 18,
            _sc: 23,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 98, y: 426, _v5: 16,
            _w5: 26, _pc: 5, _qc: 2, _rc: 16, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 98, y: 1518, _v5: 16, _w5: 26, _pc: 5, _qc: 2, _rc: 16, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 94,
            y: 570,
            _v5: 19,
            _w5: 22,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 22,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 86, y: 1342, _v5: 21, _w5: 20, _pc: 3, _qc: 8, _rc: 21, _sc: 20, _tc: 24, _uc: 36, _vc: 0}, {
            x: 86,
            y: 1866,
            _v5: 21,
            _w5: 20,
            _pc: 2,
            _qc: 8,
            _rc: 21,
            _sc: 20,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 94, y: 26, _v5: 17, _w5: 25, _pc: 5, _qc: 2, _rc: 17, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 98,
            y: 1730,
            _v5: 17,
            _w5: 25,
            _pc: 3,
            _qc: 9,
            _rc: 17,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 98,
            y: 1018, _v5: 17, _w5: 25, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 17, _uc: 25, _vc: 0
        }, {x: 98, y: 1018, _v5: 17, _w5: 25, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 17, _uc: 25, _vc: 0}, {
            x: 98,
            y: 458,
            _v5: 17,
            _w5: 25,
            _pc: 5,
            _qc: 2,
            _rc: 17,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 98, y: 1050, _v5: 17, _w5: 25, _pc: 3, _qc: 9, _rc: 17, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 98,
            y: 510,
            _v5: 18,
            _w5: 24,
            _pc: 3,
            _qc: 3,
            _rc: 18,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 98, y: 714, _v5: 18, _w5: 24, _pc: 3, _qc: 3, _rc: 18, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 98,
            y: 938,
            _v5: 18,
            _w5: 24,
            _pc: 3,
            _qc: 3,
            _rc: 18,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }
        , {x: 102, y: 110, _v5: 18, _w5: 24, _pc: 4, _qc: 3, _rc: 18, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 1118,
            _v5: 18,
            _w5: 24,
            _pc: 4,
            _qc: 3,
            _rc: 18,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 102, y: 258, _v5: 18, _w5: 24, _pc: 3, _qc: 3, _rc: 18, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 1258,
            _v5: 18,
            _w5: 24,
            _pc: 3,
            _qc: 1,
            _rc: 18,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 102, y: 1418, _v5: 18, _w5: 24, _pc: 2, _qc: 1, _rc: 18, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 102,
            y: 1626,
            _v5: 18,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 18,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 102, y: 1486, _v5: 18, _w5: 24, _pc: 2, _qc: 1, _rc: 18, _sc: 24,
            _tc: 22, _uc: 32, _vc: 0
        }, {x: 102, y: 1890, _v5: 18, _w5: 24, _pc: 1, _qc: 1, _rc: 18, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 102,
            y: 1694,
            _v5: 18,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 18,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 102, y: 538, _v5: 18, _w5: 24, _pc: 1, _qc: 7, _rc: 18, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 102,
            y: 598,
            _v5: 18,
            _w5: 24,
            _pc: 3,
            _qc: 3,
            _rc: 18,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 102, y: 742, _v5: 18, _w5: 24, _pc: 4, _qc: 3, _rc: 18, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 894,
            _v5: 18,
            _w5: 24,
            _pc: 4,
            _qc: 3,
            _rc: 18,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 102, y: 138, _v5: 18, _w5: 24, _pc: 3,
            _qc: 3, _rc: 18, _sc: 24, _tc: 24, _uc: 36, _vc: 0
        }, {x: 102, y: 1146, _v5: 18, _w5: 24, _pc: 3, _qc: 3, _rc: 18, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 1918,
            _v5: 18,
            _w5: 24,
            _pc: 3,
            _qc: 3,
            _rc: 18,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 106, y: 386, _v5: 14, _w5: 31, _pc: 4, _qc: 4, _rc: 14, _sc: 31, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 626,
            _v5: 17,
            _w5: 26,
            _pc: 4,
            _qc: 2,
            _rc: 17,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 102, y: 770, _v5: 17, _w5: 26, _pc: 3, _qc: 1, _rc: 17, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 1946,
            _v5: 17,
            _w5: 26,
            _pc: 4,
            _qc: 2,
            _rc: 17,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 102, y: 658,
            _v5: 17, _w5: 26, _pc: 3, _qc: 1, _rc: 17, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 106, y: 1550, _v5: 17, _w5: 26, _pc: 4, _qc: 2, _rc: 17, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 106,
            y: 1762,
            _v5: 18,
            _w5: 25,
            _pc: 3,
            _qc: 2,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 106, y: 58, _v5: 18, _w5: 25, _pc: 4, _qc: 3, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 106,
            y: 1082,
            _v5: 18,
            _w5: 25,
            _pc: 4,
            _qc: 2,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 106, y: 286, _v5: 18, _w5: 25, _pc: 4, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 106, y: 1286, _v5: 18, _w5: 25, _pc: 4, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36,
            _vc: 0
        }, {x: 106, y: 166, _v5: 18, _w5: 25, _pc: 3, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 106,
            y: 1174,
            _v5: 18,
            _w5: 25,
            _pc: 3,
            _qc: 2,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 106, y: 802, _v5: 18, _w5: 25, _pc: 3, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 106,
            y: 198,
            _v5: 18,
            _w5: 25,
            _pc: 4,
            _qc: 9,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 110, y: 966, _v5: 18, _w5: 25, _pc: 4, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 110,
            y: 1446,
            _v5: 18,
            _w5: 25,
            _pc: 3,
            _qc: 3,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 110, y: 1794, _v5: 18, _w5: 25, _pc: 5, _qc: 3, _rc: 18,
            _sc: 25, _tc: 24, _uc: 36, _vc: 0
        }, {x: 110, y: 318, _v5: 18, _w5: 25, _pc: 1, _qc: 0, _rc: 18, _sc: 25, _tc: 22, _uc: 32, _vc: 0}, {
            x: 110,
            y: 834,
            _v5: 18,
            _w5: 25,
            _pc: 4,
            _qc: 2,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 110, y: 1826, _v5: 18, _w5: 25, _pc: 3, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 110,
            y: 350,
            _v5: 18,
            _w5: 25,
            _pc: 3,
            _qc: 2,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 114, y: 1978, _v5: 18, _w5: 25, _pc: 4, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 114,
            y: 1318,
            _v5: 18,
            _w5: 25,
            _pc: 4,
            _qc: 3,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 114, y: 1206, _v5: 18, _w5: 25,
            _pc: 4, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0
        }, {x: 114, y: 1858, _v5: 18, _w5: 25, _pc: 3, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 114,
            y: 2010,
            _v5: 18,
            _w5: 25,
            _pc: 5,
            _qc: 3,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 114, y: 1350, _v5: 18, _w5: 25, _pc: 4, _qc: 9, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 118,
            y: 1654,
            _v5: 18,
            _w5: 25,
            _pc: 3,
            _qc: 2,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 118, y: 566, _v5: 18, _w5: 25, _pc: 4, _qc: 2, _rc: 18, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 118,
            y: 422,
            _v5: 18,
            _w5: 25,
            _pc: 3,
            _qc: 3,
            _rc: 18,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 118,
            y: 1514, _v5: 19, _w5: 24, _pc: 3, _qc: 3, _rc: 19, _sc: 24, _tc: 24, _uc: 36, _vc: 0
        }, {x: 118, y: 1582, _v5: 19, _w5: 24, _pc: 3, _qc: 3, _rc: 19, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 118,
            y: 2,
            _v5: 19,
            _w5: 24,
            _pc: 3,
            _qc: 3,
            _rc: 19,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 110, y: 230, _v5: 19, _w5: 24, _pc: 2, _qc: 3, _rc: 19, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 102,
            y: 922,
            _v5: 38,
            _w5: 12,
            _pc: 1,
            _qc: 0,
            _rc: 38,
            _sc: 12,
            _tc: 39,
            _uc: 12,
            _vc: 0
        }, {x: 122, y: 690, _v5: 19, _w5: 24, _pc: 2, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 122, y: 1722, _v5: 19, _w5: 24, _pc: 2, _qc: 7, _rc: 19, _sc: 24, _tc: 22, _uc: 32,
            _vc: 0
        }, {x: 122, y: 998, _v5: 19, _w5: 24, _pc: 2, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 110,
            y: 866,
            _v5: 19,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 118, y: 1382, _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 122,
            y: 454,
            _v5: 19,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 118, y: 30, _v5: 19, _w5: 24, _pc: 2, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 122,
            y: 938,
            _v5: 19,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 122, y: 1026, _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24,
            _tc: 22, _uc: 32, _vc: 0
        }, {x: 122, y: 482, _v5: 19, _w5: 24, _pc: 2, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 122,
            y: 1054,
            _v5: 19,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 122, y: 510, _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 126,
            y: 90,
            _v5: 19,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 126, y: 1114, _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 126,
            y: 1238,
            _v5: 19,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 126, y: 1890, _v5: 19, _w5: 24, _pc: 1,
            _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0
        }, {x: 126, y: 382, _v5: 19, _w5: 24, _pc: 2, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 126,
            y: 1478,
            _v5: 19,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 126, y: 1610, _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 126,
            y: 258,
            _v5: 19,
            _w5: 24,
            _pc: 3,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 126, y: 598, _v5: 19, _w5: 24, _pc: 2, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 126,
            y: 718,
            _v5: 19,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 126, y: 1686,
            _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0
        }, {x: 126, y: 894, _v5: 19, _w5: 24, _pc: 1, _qc: 1, _rc: 19, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 126,
            y: 1410,
            _v5: 19,
            _w5: 24,
            _pc: 2,
            _qc: 1,
            _rc: 19,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 126, y: 538, _v5: 19, _w5: 24, _pc: 3, _qc: 3, _rc: 19, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 126,
            y: 118,
            _v5: 19,
            _w5: 24,
            _pc: 2,
            _qc: 3,
            _rc: 19,
            _sc: 24,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 126, y: 1142, _v5: 19, _w5: 24, _pc: 3, _qc: 3, _rc: 19, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 126, y: 1918, _v5: 19, _w5: 24, _pc: 3, _qc: 3, _rc: 19, _sc: 24, _tc: 24, _uc: 36,
            _vc: 0
        }, {x: 126, y: 626, _v5: 17, _w5: 27, _pc: 5, _qc: 2, _rc: 17, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 126,
            y: 746,
            _v5: 17,
            _w5: 27,
            _pc: 5,
            _qc: 2,
            _rc: 17,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 126, y: 1946, _v5: 17, _w5: 27, _pc: 4, _qc: 1, _rc: 17, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 126,
            y: 658,
            _v5: 20,
            _w5: 23,
            _pc: 0,
            _qc: 7,
            _rc: 20,
            _sc: 23,
            _tc: 20,
            _uc: 30,
            _vc: 0
        }, {x: 130, y: 1542, _v5: 18, _w5: 26, _pc: 3, _qc: 2, _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 130,
            y: 1750,
            _v5: 18,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 18,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 130, y: 58, _v5: 18, _w5: 26, _pc: 4, _qc: 2, _rc: 18, _sc: 26,
            _tc: 24, _uc: 36, _vc: 0
        }, {x: 130, y: 1082, _v5: 18, _w5: 26, _pc: 3, _qc: 2, _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 130,
            y: 1266,
            _v5: 18,
            _w5: 26,
            _pc: 4,
            _qc: 2,
            _rc: 18,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 130, y: 286, _v5: 18, _w5: 26, _pc: 3, _qc: 2, _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 130,
            y: 146,
            _v5: 18,
            _w5: 26,
            _pc: 0,
            _qc: 0,
            _rc: 1,
            _sc: 1,
            _tc: 18,
            _uc: 26,
            _vc: 0
        }, {x: 130, y: 146, _v5: 18, _w5: 26, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 18, _uc: 26, _vc: 0}, {
            x: 130,
            y: 1170,
            _v5: 18,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 18,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 130, y: 778, _v5: 18, _w5: 26, _pc: 3, _qc: 2,
            _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 130, y: 178, _v5: 18, _w5: 26, _pc: 3, _qc: 2, _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 134,
            y: 966,
            _v5: 18,
            _w5: 26,
            _pc: 4,
            _qc: 2,
            _rc: 18,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 134, y: 1438, _v5: 18, _w5: 26, _pc: 4, _qc: 2, _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 134,
            y: 1782,
            _v5: 18,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 18,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 134, y: 318, _v5: 18, _w5: 26, _pc: 3, _qc: 2, _rc: 18, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 134,
            y: 810,
            _v5: 18,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 18,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 134, y: 210, _v5: 19,
            _w5: 25, _pc: 3, _qc: 3, _rc: 19, _sc: 25, _tc: 24, _uc: 36, _vc: 0
        }, {x: 134, y: 1814, _v5: 19, _w5: 25, _pc: 3, _qc: 2, _rc: 19, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 134,
            y: 350,
            _v5: 19,
            _w5: 25,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 134, y: 842, _v5: 19, _w5: 25, _pc: 3, _qc: 3, _rc: 19, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 138,
            y: 1978,
            _v5: 19,
            _w5: 25,
            _pc: 1,
            _qc: 1,
            _rc: 19,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 138, y: 1298, _v5: 17, _w5: 28, _pc: 5, _qc: 1, _rc: 17, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 138,
            y: 1202,
            _v5: 20,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }
        , {x: 138, y: 1846, _v5: 20, _w5: 24, _pc: 1, _qc: 1, _rc: 20, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 138,
            y: 2010,
            _v5: 20,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 138, y: 1330, _v5: 20, _w5: 24, _pc: 1, _qc: 7, _rc: 20, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 142,
            y: 410,
            _v5: 20,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 142, y: 1638, _v5: 20, _w5: 24, _pc: 1, _qc: 1, _rc: 20, _sc: 24, _tc: 22, _uc: 32, _vc: 0}, {
            x: 142,
            y: 566,
            _v5: 20,
            _w5: 24,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 24,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {
            x: 142, y: 1506, _v5: 20, _w5: 24, _pc: 1, _qc: 1, _rc: 20, _sc: 24,
            _tc: 22, _uc: 32, _vc: 0
        }, {x: 142, y: 1574, _v5: 20, _w5: 24, _pc: 2, _qc: 1, _rc: 20, _sc: 24, _tc: 24, _uc: 36, _vc: 0}, {
            x: 134,
            y: 874,
            _v5: 30,
            _w5: 16,
            _pc: 0,
            _qc: 0,
            _rc: 30,
            _sc: 16,
            _tc: 30,
            _uc: 16,
            _vc: 0
        }, {x: 146, y: 686, _v5: 18, _w5: 27, _pc: 4, _qc: 8, _rc: 18, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 146,
            y: 1714,
            _v5: 18,
            _w5: 27,
            _pc: 4,
            _qc: 8,
            _rc: 18,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 142, y: 2, _v5: 18, _w5: 27, _pc: 3, _qc: 1, _rc: 18, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 146,
            y: 922,
            _v5: 18,
            _w5: 27,
            _pc: 4,
            _qc: 1,
            _rc: 18,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 146, y: 998, _v5: 18, _w5: 27, _pc: 3, _qc: 1,
            _rc: 18, _sc: 27, _tc: 24, _uc: 36, _vc: 0
        }, {x: 142, y: 1358, _v5: 18, _w5: 27, _pc: 4, _qc: 2, _rc: 18, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 146,
            y: 438,
            _v5: 19,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 146, y: 1030, _v5: 19, _w5: 26, _pc: 2, _qc: 2, _rc: 19, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 146,
            y: 470,
            _v5: 19,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 146, y: 502, _v5: 19, _w5: 26, _pc: 2, _qc: 6, _rc: 19, _sc: 26, _tc: 22, _uc: 32, _vc: 0}, {
            x: 150,
            y: 90,
            _v5: 19,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 19,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 150, y: 1114, _v5: 19,
            _w5: 26, _pc: 3, _qc: 2, _rc: 19, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 150, y: 242, _v5: 19, _w5: 26, _pc: 3, _qc: 2, _rc: 19, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 150,
            y: 1230,
            _v5: 19,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 150, y: 1874, _v5: 19, _w5: 26, _pc: 2, _qc: 2, _rc: 19, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 150,
            y: 1470,
            _v5: 19,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 150, y: 1602, _v5: 19, _w5: 26, _pc: 3, _qc: 2, _rc: 19, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 150,
            y: 594,
            _v5: 19,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }
        , {x: 150, y: 718, _v5: 19, _w5: 26, _pc: 3, _qc: 2, _rc: 19, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 150,
            y: 1666,
            _v5: 20,
            _w5: 25,
            _pc: 2,
            _qc: 3,
            _rc: 20,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 150, y: 1390, _v5: 20, _w5: 25, _pc: 2, _qc: 9, _rc: 20, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 150,
            y: 534,
            _v5: 20,
            _w5: 25,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 25,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 150, y: 1906, _v5: 20, _w5: 25, _pc: 2, _qc: 3, _rc: 20, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 150,
            y: 626,
            _v5: 20,
            _w5: 25,
            _pc: 2,
            _qc: 9,
            _rc: 20,
            _sc: 25,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 150, y: 1938, _v5: 20, _w5: 25, _pc: 2, _qc: 1, _rc: 20, _sc: 25,
            _tc: 24, _uc: 36, _vc: 0
        }, {x: 154, y: 1534, _v5: 20, _w5: 25, _pc: 2, _qc: 1, _rc: 20, _sc: 25, _tc: 24, _uc: 36, _vc: 0}, {
            x: 154,
            y: 1746,
            _v5: 18,
            _w5: 28,
            _pc: 4,
            _qc: 1,
            _rc: 18,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 154, y: 34, _v5: 19, _w5: 27, _pc: 3, _qc: 2, _rc: 19, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 154,
            y: 122,
            _v5: 19,
            _w5: 27,
            _pc: 3,
            _qc: 2,
            _rc: 19,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 154, y: 1062, _v5: 19, _w5: 27, _pc: 2, _qc: 8, _rc: 19, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 154,
            y: 1146,
            _v5: 19,
            _w5: 27,
            _pc: 4,
            _qc: 1,
            _rc: 19,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 154, y: 274, _v5: 19, _w5: 27, _pc: 2,
            _qc: 1, _rc: 19, _sc: 27, _tc: 24, _uc: 36, _vc: 0
        }, {x: 154, y: 1262, _v5: 19, _w5: 27, _pc: 3, _qc: 1, _rc: 19, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 154,
            y: 750,
            _v5: 19,
            _w5: 27,
            _pc: 2,
            _qc: 8,
            _rc: 19,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 154, y: 154, _v5: 20, _w5: 26, _pc: 2, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 158,
            y: 954,
            _v5: 20,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 158, y: 1422, _v5: 20, _w5: 26, _pc: 3, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 158,
            y: 1778,
            _v5: 20,
            _w5: 26,
            _pc: 4,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 158, y: 306,
            _v5: 20, _w5: 26, _pc: 3, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 158, y: 782, _v5: 20, _w5: 26, _pc: 3, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 158,
            y: 186,
            _v5: 20,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 158, y: 1810, _v5: 20, _w5: 26, _pc: 3, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 158,
            y: 338,
            _v5: 20,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 158, y: 814, _v5: 20, _w5: 26, _pc: 2, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 158,
            y: 370,
            _v5: 20,
            _w5: 26,
            _pc: 3,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }
        , {x: 162, y: 1970, _v5: 20, _w5: 26, _pc: 2, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 162,
            y: 1178,
            _v5: 20,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 162, y: 1294, _v5: 20, _w5: 26, _pc: 2, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 162,
            y: 1842,
            _v5: 20,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 20,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 162, y: 2002, _v5: 20, _w5: 26, _pc: 3, _qc: 2, _rc: 20, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 166,
            y: 2,
            _v5: 53,
            _w5: 10,
            _pc: 0,
            _qc: 0,
            _rc: 53,
            _sc: 10,
            _tc: 53,
            _uc: 10,
            _vc: 0
        }, {
            x: 162, y: 1326, _v5: 19, _w5: 28, _pc: 3, _qc: 1, _rc: 19, _sc: 28,
            _tc: 24, _uc: 36, _vc: 0
        }, {x: 166, y: 1634, _v5: 19, _w5: 28, _pc: 2, _qc: 0, _rc: 19, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 166,
            y: 1502,
            _v5: 19,
            _w5: 28,
            _pc: 4,
            _qc: 1,
            _rc: 19,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 166, y: 1566, _v5: 20, _w5: 27, _pc: 3, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 166,
            y: 402,
            _v5: 20,
            _w5: 27,
            _pc: 2,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 166, y: 1358, _v5: 20, _w5: 27, _pc: 3, _qc: 8, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 170,
            y: 658,
            _v5: 20,
            _w5: 27,
            _pc: 3,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 170, y: 1698, _v5: 20, _w5: 27, _pc: 2,
            _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0
        }, {x: 170, y: 986, _v5: 20, _w5: 27, _pc: 2, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 170,
            y: 846,
            _v5: 20,
            _w5: 27,
            _pc: 2,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 170, y: 434, _v5: 20, _w5: 27, _pc: 2, _qc: 2, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 170,
            y: 1018,
            _v5: 20,
            _w5: 27,
            _pc: 3,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 170, y: 878, _v5: 20, _w5: 27, _pc: 3, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 170,
            y: 466,
            _v5: 20,
            _w5: 27,
            _pc: 3,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 170, y: 910, _v5: 20,
            _w5: 27, _pc: 2, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0
        }, {x: 170, y: 498, _v5: 20, _w5: 27, _pc: 3, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 66,
            _v5: 20,
            _w5: 27,
            _pc: 2,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 174, y: 1094, _v5: 20, _w5: 27, _pc: 3, _qc: 8, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 218,
            _v5: 20,
            _w5: 27,
            _pc: 3,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 174, y: 1210, _v5: 20, _w5: 27, _pc: 3, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 1874,
            _v5: 20,
            _w5: 27,
            _pc: 3,
            _qc: 2,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        },
        {x: 174, y: 1454, _v5: 20, _w5: 27, _pc: 3, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 1598,
            _v5: 20,
            _w5: 27,
            _pc: 2,
            _qc: 2,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 174, y: 1390, _v5: 20, _w5: 27, _pc: 3, _qc: 2, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 690,
            _v5: 20,
            _w5: 27,
            _pc: 2,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 174, y: 1666, _v5: 20, _w5: 27, _pc: 2, _qc: 1, _rc: 20, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 530,
            _v5: 20,
            _w5: 27,
            _pc: 2,
            _qc: 1,
            _rc: 20,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 226, y: 2, _v5: 34, _w5: 16, _pc: 0, _qc: 0, _rc: 34, _sc: 16, _tc: 34,
            _uc: 16, _vc: 0
        }, {x: 174, y: 1906, _v5: 21, _w5: 26, _pc: 1, _qc: 2, _rc: 21, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 562,
            _v5: 21,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 21,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 174, y: 1938, _v5: 21, _w5: 26, _pc: 2, _qc: 2, _rc: 21, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 174,
            y: 594,
            _v5: 21,
            _w5: 26,
            _pc: 1,
            _qc: 2,
            _rc: 21,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 174, y: 626, _v5: 21, _w5: 26, _pc: 2, _qc: 2, _rc: 21, _sc: 26, _tc: 24, _uc: 36, _vc: 0}, {
            x: 178,
            y: 1534,
            _v5: 21,
            _w5: 26,
            _pc: 2,
            _qc: 2,
            _rc: 21,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 178, y: 1730, _v5: 21, _w5: 26, _pc: 2, _qc: 2,
            _rc: 21, _sc: 26, _tc: 24, _uc: 36, _vc: 0
        }, {x: 182, y: 942, _v5: 20, _w5: 28, _pc: 3, _qc: 8, _rc: 20, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 178,
            y: 98,
            _v5: 20,
            _w5: 28,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 178, y: 1050, _v5: 20, _w5: 28, _pc: 2, _qc: 1, _rc: 20, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 178,
            y: 1126,
            _v5: 20,
            _w5: 28,
            _pc: 2,
            _qc: 1,
            _rc: 20,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 178, y: 250, _v5: 20, _w5: 28, _pc: 2, _qc: 1, _rc: 20, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 178,
            y: 1242,
            _v5: 20,
            _w5: 28,
            _pc: 3,
            _qc: 1,
            _rc: 20,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 182, y: 1422, _v5: 20,
            _w5: 28, _pc: 2, _qc: 1, _rc: 20, _sc: 28, _tc: 24, _uc: 36, _vc: 0
        }, {x: 178, y: 722, _v5: 20, _w5: 28, _pc: 3, _qc: 1, _rc: 20, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 178,
            y: 18,
            _v5: 20,
            _w5: 28,
            _pc: 1,
            _qc: 1,
            _rc: 20,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 266, y: 2, _v5: 80, _w5: 7, _pc: 0, _qc: 0, _rc: 80, _sc: 7, _tc: 80, _uc: 7, _vc: 0}, {
            x: 178,
            y: 130,
            _v5: 21,
            _w5: 27,
            _pc: 1,
            _qc: 1,
            _rc: 21,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 182, y: 1762, _v5: 21, _w5: 27, _pc: 2, _qc: 1, _rc: 21, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 182,
            y: 282,
            _v5: 21,
            _w5: 27,
            _pc: 2,
            _qc: 1,
            _rc: 21,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 182,
            y: 754, _v5: 21, _w5: 27, _pc: 2, _qc: 2, _rc: 21, _sc: 27, _tc: 24, _uc: 36, _vc: 0
        }, {x: 182, y: 162, _v5: 21, _w5: 27, _pc: 2, _qc: 1, _rc: 21, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 182,
            y: 1794,
            _v5: 22,
            _w5: 26,
            _pc: 1,
            _qc: 2,
            _rc: 22,
            _sc: 26,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 186, y: 1970, _v5: 20, _w5: 29, _pc: 3, _qc: 7, _rc: 20, _sc: 29, _tc: 24, _uc: 36, _vc: 0}, {
            x: 182,
            y: 314,
            _v5: 21,
            _w5: 28,
            _pc: 2,
            _qc: 1,
            _rc: 21,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 182, y: 786, _v5: 21, _w5: 28, _pc: 2, _qc: 1, _rc: 21, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 182, y: 346, _v5: 21, _w5: 28, _pc: 2, _qc: 1, _rc: 21, _sc: 28, _tc: 24, _uc: 36,
            _vc: 0
        }, {x: 186, y: 1158, _v5: 21, _w5: 28, _pc: 2, _qc: 1, _rc: 21, _sc: 28, _tc: 24, _uc: 36, _vc: 0}, {
            x: 186,
            y: 1274,
            _v5: 21,
            _w5: 28,
            _pc: 1,
            _qc: 1,
            _rc: 21,
            _sc: 28,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 186, y: 1826, _v5: 22, _w5: 27, _pc: 1, _qc: 8, _rc: 22, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 186,
            y: 2006,
            _v5: 22,
            _w5: 27,
            _pc: 1,
            _qc: 8,
            _rc: 22,
            _sc: 27,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 186, y: 1306, _v5: 22, _w5: 27, _pc: 1, _qc: 2, _rc: 22, _sc: 27, _tc: 24, _uc: 36, _vc: 0}, {
            x: 190,
            y: 1630,
            _v5: 21,
            _w5: 29,
            _pc: 2,
            _qc: 1,
            _rc: 21,
            _sc: 29,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 190, y: 1486, _v5: 15, _w5: 44, _pc: 4, _qc: 1, _rc: 15,
            _sc: 44, _tc: 30, _uc: 45, _vc: 0
        }, {x: 190, y: 378, _v5: 22, _w5: 32, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 22, _uc: 32, _vc: 0}, {
            x: 190,
            y: 378,
            _v5: 22,
            _w5: 32,
            _pc: 0,
            _qc: 0,
            _rc: 1,
            _sc: 1,
            _tc: 22,
            _uc: 32,
            _vc: 0
        }, {x: 350, y: 2, _v5: 64, _w5: 11, _pc: 7, _qc: 5, _rc: 64, _sc: 11, _tc: 78, _uc: 80, _vc: 0}, {
            x: 418,
            y: 2,
            _v5: 46,
            _w5: 16,
            _pc: 0,
            _qc: 0,
            _rc: 46,
            _sc: 16,
            _tc: 47,
            _uc: 16,
            _vc: 0
        }, {x: 470, y: 2, _v5: 58, _w5: 14, _pc: 2, _qc: 28, _rc: 58, _sc: 14, _tc: 62, _uc: 43, _vc: 0}, {
            x: 190,
            y: 1338,
            _v5: 21,
            _w5: 41,
            _pc: 36,
            _qc: 76,
            _rc: 21,
            _sc: 41,
            _tc: 94,
            _uc: 117,
            _vc: 0
        }, {
            x: 194, y: 974, _v5: 24, _w5: 36, _pc: 0,
            _qc: 0, _rc: 1, _sc: 1, _tc: 24, _uc: 36, _vc: 0
        }, {x: 194, y: 974, _v5: 24, _w5: 36, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 24, _uc: 36, _vc: 0}, {
            x: 194,
            y: 974,
            _v5: 24,
            _w5: 36,
            _pc: 0,
            _qc: 0,
            _rc: 1,
            _sc: 1,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 194, y: 974, _v5: 24, _w5: 36, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 24, _uc: 36, _vc: 0}, {
            x: 194,
            y: 974,
            _v5: 24,
            _w5: 36,
            _pc: 0,
            _qc: 0,
            _rc: 1,
            _sc: 1,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {x: 194, y: 974, _v5: 24, _w5: 36, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 24, _uc: 36, _vc: 0}, {
            x: 194,
            y: 974,
            _v5: 24,
            _w5: 36,
            _pc: 0,
            _qc: 0,
            _rc: 1,
            _sc: 1,
            _tc: 24,
            _uc: 36,
            _vc: 0
        }, {
            x: 194, y: 974, _v5: 24, _w5: 36, _pc: 0,
            _qc: 0, _rc: 1, _sc: 1, _tc: 24, _uc: 36, _vc: 0
        }, {x: 194, y: 818, _v5: 22, _w5: 40, _pc: 0, _qc: 0, _rc: 22, _sc: 40, _tc: 22, _uc: 40, _vc: 0}, {
            x: 194,
            y: 414,
            _v5: 22,
            _w5: 41,
            _pc: 0,
            _qc: 0,
            _rc: 22,
            _sc: 41,
            _tc: 22,
            _uc: 41,
            _vc: 0
        }, {x: 194, y: 1014, _v5: 32, _w5: 31, _pc: 0, _qc: 1, _rc: 32, _sc: 31, _tc: 32, _uc: 32, _vc: 0}, {
            x: 194,
            y: 862,
            _v5: 32,
            _w5: 32,
            _pc: 7,
            _qc: 7,
            _rc: 32,
            _sc: 32,
            _tc: 39,
            _uc: 39,
            _vc: 0
        }, {x: 194, y: 462, _v5: 32, _w5: 32, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 32, _uc: 32, _vc: 0}, {
            x: 198,
            y: 658,
            _v5: 24,
            _w5: 43,
            _pc: 0,
            _qc: 0,
            _rc: 24,
            _sc: 43,
            _tc: 24,
            _uc: 43,
            _vc: 0
        }, {
            x: 198, y: 1082, _v5: 27,
            _w5: 40, _pc: 1, _qc: 3, _rc: 27, _sc: 40, _tc: 30, _uc: 45, _vc: 0
        }, {x: 198, y: 50, _v5: 27, _w5: 40, _pc: 1, _qc: 3, _rc: 27, _sc: 40, _tc: 30, _uc: 45, _vc: 0}, {
            x: 198,
            y: 194,
            _v5: 27,
            _w5: 41,
            _pc: 1,
            _qc: 3,
            _rc: 27,
            _sc: 41,
            _tc: 30,
            _uc: 45,
            _vc: 0
        }, {x: 198, y: 1190, _v5: 27, _w5: 41, _pc: 1, _qc: 1, _rc: 27, _sc: 41, _tc: 30, _uc: 45, _vc: 0}, {
            x: 198,
            y: 1858,
            _v5: 27,
            _w5: 42,
            _pc: 1,
            _qc: 3,
            _rc: 27,
            _sc: 42,
            _tc: 30,
            _uc: 45,
            _vc: 0
        }, {x: 198, y: 1566, _v5: 29, _w5: 41, _pc: 0, _qc: 3, _rc: 29, _sc: 41, _tc: 30, _uc: 45, _vc: 0}, {
            x: 198,
            y: 1666,
            _v5: 29,
            _w5: 42,
            _pc: 1,
            _qc: 3,
            _rc: 29,
            _sc: 42,
            _tc: 30,
            _uc: 45,
            _vc: 0
        }
        , {x: 198, y: 498, _v5: 28, _w5: 44, _pc: 0, _qc: 1, _rc: 28, _sc: 44, _tc: 30, _uc: 45, _vc: 0}, {
            x: 534,
            y: 2,
            _v5: 52,
            _w5: 24,
            _pc: 0,
            _qc: 0,
            _rc: 52,
            _sc: 24,
            _tc: 52,
            _uc: 24,
            _vc: 0
        }, {x: 202, y: 1906, _v5: 28, _w5: 45, _pc: 0, _qc: 0, _rc: 28, _sc: 45, _tc: 30, _uc: 45, _vc: 0}, {
            x: 206,
            y: 1386,
            _v5: 14,
            _w5: 91,
            _pc: 0,
            _qc: 1,
            _rc: 14,
            _sc: 91,
            _tc: 14,
            _uc: 92,
            _vc: 0
        }, {x: 590, y: 2, _v5: 49, _w5: 27, _pc: 0, _qc: 0, _rc: 49, _sc: 27, _tc: 49, _uc: 27, _vc: 0}, {
            x: 646,
            y: 2,
            _v5: 56,
            _w5: 27,
            _pc: 0,
            _qc: 1,
            _rc: 56,
            _sc: 27,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {
            x: 706, y: 2, _v5: 54, _w5: 28, _pc: 0, _qc: 0, _rc: 54, _sc: 28, _tc: 54, _uc: 28,
            _vc: 0
        }, {x: 206, y: 898, _v5: 22, _w5: 69, _pc: 58, _qc: 12, _rc: 22, _sc: 69, _tc: 145, _uc: 95, _vc: 0}, {
            x: 766,
            y: 2,
            _v5: 39,
            _w5: 39,
            _pc: 1,
            _qc: 1,
            _rc: 39,
            _sc: 39,
            _tc: 40,
            _uc: 40,
            _vc: 0
        }, {x: 266, y: 14, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 810,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {x: 870, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 930,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {
            x: 990, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56,
            _uc: 28, _vc: 0
        }, {x: 1050, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 1110,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {x: 1170, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 1230,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {x: 1290, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 1350,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {
            x: 1410, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28,
            _tc: 56, _uc: 28, _vc: 0
        }, {x: 1470, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 1530,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 29,
            _vc: 0
        }, {x: 1590, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 1650,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 28,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {x: 1710, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56, _sc: 28, _tc: 56, _uc: 28, _vc: 0}, {
            x: 1770,
            y: 2,
            _v5: 56,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 1,
            _sc: 1,
            _tc: 56,
            _uc: 28,
            _vc: 0
        }, {
            x: 1830, y: 2, _v5: 56, _w5: 28, _pc: 0, _qc: 0, _rc: 56,
            _sc: 28, _tc: 56, _uc: 28, _vc: 0
        }, {x: 1890, y: 2, _v5: 60, _w5: 27, _pc: 3, _qc: 2, _rc: 60, _sc: 27, _tc: 68, _uc: 33, _vc: 0}, {
            x: 1954,
            y: 2,
            _v5: 56,
            _w5: 29,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 29,
            _tc: 56,
            _uc: 29,
            _vc: 0
        }, {x: 326, y: 18, _v5: 56, _w5: 29, _pc: 0, _qc: 0, _rc: 56, _sc: 29, _tc: 56, _uc: 29, _vc: 0}, {
            x: 202,
            y: 546,
            _v5: 23,
            _w5: 71,
            _pc: 8,
            _qc: 3,
            _rc: 23,
            _sc: 71,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 202, y: 546, _v5: 23, _w5: 71, _pc: 8, _qc: 3, _rc: 23, _sc: 71, _tc: 50, _uc: 75, _vc: 0}, {
            x: 386,
            y: 22,
            _v5: 62,
            _w5: 28,
            _pc: 0,
            _qc: 0,
            _rc: 62,
            _sc: 28,
            _tc: 62,
            _uc: 28,
            _vc: 0
        }, {
            x: 454, y: 22, _v5: 56, _w5: 31, _pc: 0,
            _qc: 0, _rc: 56, _sc: 31, _tc: 56, _uc: 31, _vc: 0
        }, {x: 514, y: 30, _v5: 56, _w5: 31, _pc: 0, _qc: 0, _rc: 56, _sc: 31, _tc: 56, _uc: 32, _vc: 0}, {
            x: 810,
            y: 34,
            _v5: 58,
            _w5: 30,
            _pc: 0,
            _qc: 0,
            _rc: 58,
            _sc: 30,
            _tc: 58,
            _uc: 30,
            _vc: 0
        }, {x: 574, y: 34, _v5: 60, _w5: 31, _pc: 0, _qc: 0, _rc: 60, _sc: 31, _tc: 60, _uc: 31, _vc: 0}, {
            x: 874,
            y: 34,
            _v5: 55,
            _w5: 34,
            _pc: 0,
            _qc: 8,
            _rc: 55,
            _sc: 34,
            _tc: 55,
            _uc: 54,
            _vc: 0
        }, {x: 638, y: 34, _v5: 56, _w5: 34, _pc: 1, _qc: 0, _rc: 56, _sc: 34, _tc: 57, _uc: 34, _vc: 0}, {
            x: 934,
            y: 34,
            _v5: 60,
            _w5: 32,
            _pc: 0,
            _qc: 0,
            _rc: 60,
            _sc: 32,
            _tc: 60,
            _uc: 32,
            _vc: 0
        }, {
            x: 698, y: 34, _v5: 57, _w5: 34,
            _pc: 0, _qc: 0, _rc: 57, _sc: 34, _tc: 57, _uc: 34, _vc: 0
        }, {x: 998, y: 34, _v5: 68, _w5: 29, _pc: 0, _qc: 0, _rc: 68, _sc: 29, _tc: 68, _uc: 29, _vc: 0}, {
            x: 1070,
            y: 34,
            _v5: 52,
            _w5: 39,
            _pc: 0,
            _qc: 0,
            _rc: 52,
            _sc: 39,
            _tc: 52,
            _uc: 39,
            _vc: 0
        }, {x: 1126, y: 34, _v5: 62, _w5: 33, _pc: 1, _qc: 0, _rc: 62, _sc: 33, _tc: 63, _uc: 33, _vc: 0}, {
            x: 1194,
            y: 34,
            _v5: 47,
            _w5: 44,
            _pc: 0,
            _qc: 1,
            _rc: 47,
            _sc: 44,
            _tc: 47,
            _uc: 45,
            _vc: 0
        }, {x: 1246, y: 34, _v5: 56, _w5: 37, _pc: 0, _qc: 0, _rc: 56, _sc: 37, _tc: 56, _uc: 37, _vc: 0}, {
            x: 1306,
            y: 34,
            _v5: 56,
            _w5: 38,
            _pc: 26,
            _qc: 24,
            _rc: 56,
            _sc: 38,
            _tc: 108,
            _uc: 96,
            _vc: 0
        }, {
            x: 1366,
            y: 34, _v5: 63, _w5: 36, _pc: 0, _qc: 0, _rc: 63, _sc: 36, _tc: 63, _uc: 36, _vc: 0
        }, {x: 1434, y: 34, _v5: 63, _w5: 36, _pc: 0, _qc: 0, _rc: 63, _sc: 36, _tc: 63, _uc: 36, _vc: 0}, {
            x: 1502,
            y: 34,
            _v5: 70,
            _w5: 34,
            _pc: 0,
            _qc: 0,
            _rc: 70,
            _sc: 34,
            _tc: 70,
            _uc: 35,
            _vc: 0
        }, {x: 1578, y: 34, _v5: 53, _w5: 45, _pc: 0, _qc: 0, _rc: 53, _sc: 45, _tc: 53, _uc: 45, _vc: 0}, {
            x: 1638,
            y: 34,
            _v5: 56,
            _w5: 43,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 43,
            _tc: 56,
            _uc: 43,
            _vc: 0
        }, {x: 1698, y: 34, _v5: 57, _w5: 46, _pc: 0, _qc: 0, _rc: 57, _sc: 46, _tc: 57, _uc: 46, _vc: 0}, {
            x: 1762, y: 34, _v5: 68, _w5: 43, _pc: 3, _qc: 3, _rc: 68, _sc: 43, _tc: 74, _uc: 49,
            _vc: 0
        }, {x: 1834, y: 34, _v5: 44, _w5: 67, _pc: 2, _qc: 5, _rc: 44, _sc: 67, _tc: 50, _uc: 75, _vc: 0}, {
            x: 1834,
            y: 34,
            _v5: 44,
            _w5: 67,
            _pc: 2,
            _qc: 5,
            _rc: 44,
            _sc: 67,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 1934, y: 38, _v5: 45, _w5: 67, _pc: 2, _qc: 3, _rc: 45, _sc: 67, _tc: 50, _uc: 75, _vc: 0}, {
            x: 1882,
            y: 34,
            _v5: 45,
            _w5: 67,
            _pc: 2,
            _qc: 5,
            _rc: 45,
            _sc: 67,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 1882, y: 34, _v5: 45, _w5: 67, _pc: 2, _qc: 5, _rc: 45, _sc: 67, _tc: 50, _uc: 75, _vc: 0}, {
            x: 1934,
            y: 38,
            _v5: 45,
            _w5: 67,
            _pc: 2,
            _qc: 3,
            _rc: 45,
            _sc: 67,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {
            x: 1986, y: 38, _v5: 44, _w5: 69, _pc: 2, _qc: 4, _rc: 44, _sc: 69,
            _tc: 50, _uc: 75, _vc: 0
        }, {x: 1986, y: 38, _v5: 44, _w5: 69, _pc: 2, _qc: 4, _rc: 44, _sc: 69, _tc: 50, _uc: 75, _vc: 0}, {
            x: 234,
            y: 46,
            _v5: 45,
            _w5: 68,
            _pc: 2,
            _qc: 5,
            _rc: 45,
            _sc: 68,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 234, y: 46, _v5: 45, _w5: 68, _pc: 2, _qc: 5, _rc: 45, _sc: 68, _tc: 50, _uc: 75, _vc: 0}, {
            x: 286,
            y: 54,
            _v5: 56,
            _w5: 55,
            _pc: 0,
            _qc: 0,
            _rc: 56,
            _sc: 55,
            _tc: 56,
            _uc: 56,
            _vc: 0
        }, {x: 346, y: 54, _v5: 49, _w5: 65, _pc: 48, _qc: 13, _rc: 49, _sc: 65, _tc: 145, _uc: 95, _vc: 0}, {
            x: 402,
            y: 54,
            _v5: 45,
            _w5: 71,
            _pc: 1,
            _qc: 3,
            _rc: 45,
            _sc: 71,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {
            x: 402, y: 54, _v5: 45, _w5: 71, _pc: 1, _qc: 3,
            _rc: 45, _sc: 71, _tc: 50, _uc: 75, _vc: 0
        }, {x: 454, y: 58, _v5: 47, _w5: 68, _pc: 1, _qc: 5, _rc: 47, _sc: 68, _tc: 50, _uc: 75, _vc: 0}, {
            x: 454,
            y: 58,
            _v5: 47,
            _w5: 68,
            _pc: 1,
            _qc: 5,
            _rc: 47,
            _sc: 68,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 762, y: 46, _v5: 40, _w5: 80, _pc: 0, _qc: 0, _rc: 40, _sc: 80, _tc: 40, _uc: 81, _vc: 0}, {
            x: 506,
            y: 66,
            _v5: 47,
            _w5: 69,
            _pc: 2,
            _qc: 5,
            _rc: 47,
            _sc: 69,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 506, y: 66, _v5: 47, _w5: 69, _pc: 2, _qc: 5, _rc: 47, _sc: 69, _tc: 50, _uc: 75, _vc: 0}, {
            x: 934,
            y: 70,
            _v5: 50,
            _w5: 65,
            _pc: 21,
            _qc: 52,
            _rc: 50,
            _sc: 65,
            _tc: 94,
            _uc: 117,
            _vc: 0
        }, {
            x: 1246, y: 78, _v5: 204, _w5: 16,
            _pc: 24, _qc: 10, _rc: 204, _sc: 16, _tc: 260, _uc: 32, _vc: 0
        }, {x: 806, y: 70, _v5: 46, _w5: 71, _pc: 1, _qc: 3, _rc: 46, _sc: 71, _tc: 50, _uc: 75, _vc: 0}, {
            x: 806,
            y: 70,
            _v5: 46,
            _w5: 71,
            _pc: 1,
            _qc: 3,
            _rc: 46,
            _sc: 71,
            _tc: 50,
            _uc: 75,
            _vc: 0
        }, {x: 558, y: 70, _v5: 39, _w5: 84, _pc: 1, _qc: 0, _rc: 39, _sc: 84, _tc: 40, _uc: 84, _vc: 0}, {
            x: 206,
            y: 118,
            _v5: 118,
            _w5: 28,
            _pc: 7,
            _qc: 5,
            _rc: 118,
            _sc: 28,
            _tc: 131,
            _uc: 34,
            _vc: 0
        }, {x: 1762, y: 82, _v5: 65, _w5: 51, _pc: 0, _qc: 0, _rc: 65, _sc: 51, _tc: 66, _uc: 51, _vc: 0}, {
            x: 1126,
            y: 74,
            _v5: 49,
            _w5: 68,
            _pc: 48,
            _qc: 13,
            _rc: 49,
            _sc: 68,
            _tc: 145,
            _uc: 95,
            _vc: 0
        }, {
            x: 990,
            y: 70, _v5: 75, _w5: 51, _pc: 5, _qc: 13, _rc: 75, _sc: 51, _tc: 85, _uc: 73, _vc: 0
        }, {x: 1454, y: 74, _v5: 75, _w5: 51, _pc: 5, _qc: 9, _rc: 75, _sc: 51, _tc: 85, _uc: 73, _vc: 0}, {
            x: 1534,
            y: 86,
            _v5: 75,
            _w5: 55,
            _pc: 5,
            _qc: 9,
            _rc: 75,
            _sc: 55,
            _tc: 85,
            _uc: 73,
            _vc: 0
        }, {x: 602, y: 74, _v5: 75, _w5: 55, _pc: 5, _qc: 9, _rc: 75, _sc: 55, _tc: 85, _uc: 73, _vc: 0}, {
            x: 1182,
            y: 98,
            _v5: 75,
            _w5: 55,
            _pc: 5,
            _qc: 9,
            _rc: 75,
            _sc: 55,
            _tc: 85,
            _uc: 73,
            _vc: 0
        }, {x: 602, y: 74, _v5: 75, _w5: 55, _pc: 5, _qc: 9, _rc: 75, _sc: 55, _tc: 85, _uc: 73, _vc: 0}, {
            x: 1534, y: 86, _v5: 75, _w5: 55, _pc: 5, _qc: 9, _rc: 75, _sc: 55, _tc: 85, _uc: 73,
            _vc: 0
        }, {x: 1182, y: 98, _v5: 75, _w5: 55, _pc: 5, _qc: 9, _rc: 75, _sc: 55, _tc: 85, _uc: 73, _vc: 0}, {
            x: 682,
            y: 74,
            _v5: 75,
            _w5: 55,
            _pc: 5,
            _qc: 9,
            _rc: 75,
            _sc: 55,
            _tc: 85,
            _uc: 73,
            _vc: 0
        }, {x: 682, y: 74, _v5: 75, _w5: 55, _pc: 5, _qc: 9, _rc: 75, _sc: 55, _tc: 85, _uc: 73, _vc: 0}, {
            x: 858,
            y: 74,
            _v5: 68,
            _w5: 64,
            _pc: 0,
            _qc: 0,
            _rc: 68,
            _sc: 64,
            _tc: 68,
            _uc: 64,
            _vc: 0
        }, {x: 1070, y: 78, _v5: 49, _w5: 94, _pc: 0, _qc: 20, _rc: 49, _sc: 94, _tc: 69, _uc: 114, _vc: 0}, {
            x: 1834,
            y: 106,
            _v5: 75,
            _w5: 63,
            _pc: 5,
            _qc: 5,
            _rc: 75,
            _sc: 63,
            _tc: 85,
            _uc: 73,
            _vc: 0
        }, {
            x: 1614, y: 86, _v5: 75, _w5: 63, _pc: 5, _qc: 5, _rc: 75, _sc: 63,
            _tc: 85, _uc: 73, _vc: 0
        }, {x: 330, y: 142, _v5: 189, _w5: 25, _pc: 1, _qc: 1, _rc: 189, _sc: 25, _tc: 190, _uc: 27, _vc: 0}, {
            x: 1262,
            y: 98,
            _v5: 104,
            _w5: 51,
            _pc: 0,
            _qc: 0,
            _rc: 104,
            _sc: 51,
            _tc: 104,
            _uc: 51,
            _vc: 0
        }, {x: 602, y: 134, _v5: 154, _w5: 35, _pc: 1, _qc: 0, _rc: 154, _sc: 35, _tc: 155, _uc: 35, _vc: 0}, {
            x: 1370,
            y: 146,
            _v5: 224,
            _w5: 25,
            _pc: 0,
            _qc: 0,
            _rc: 224,
            _sc: 25,
            _tc: 224,
            _uc: 25,
            _vc: 0
        }, {x: 1914, y: 114, _v5: 91, _w5: 64, _pc: 0, _qc: 1, _rc: 91, _sc: 64, _tc: 91, _uc: 65, _vc: 0}, {
            x: 762,
            y: 146,
            _v5: 225,
            _w5: 26,
            _pc: 0,
            _qc: 0,
            _rc: 225,
            _sc: 26,
            _tc: 225,
            _uc: 26,
            _vc: 0
        }, {
            x: 1598, y: 154, _v5: 225,
            _w5: 26, _pc: 0, _qc: 0, _rc: 225, _sc: 26, _tc: 225, _uc: 26, _vc: 0
        }, {x: 234, y: 150, _v5: 89, _w5: 68, _pc: 0, _qc: 0, _rc: 89, _sc: 68, _tc: 89, _uc: 68, _vc: 0}, {
            x: 1262,
            y: 154,
            _v5: 77,
            _w5: 80,
            _pc: 0,
            _qc: 0,
            _rc: 77,
            _sc: 80,
            _tc: 78,
            _uc: 80,
            _vc: 0
        }, {x: 1126, y: 158, _v5: 73, _w5: 85, _pc: 0, _qc: 0, _rc: 73, _sc: 85, _tc: 73, _uc: 85, _vc: 0}, {
            x: 1830,
            y: 174,
            _v5: 80,
            _w5: 92,
            _pc: 13,
            _qc: 25,
            _rc: 80,
            _sc: 92,
            _tc: 94,
            _uc: 117,
            _vc: 0
        }, {x: 230, y: 974, _v5: 20, _w5: 400, _pc: 0, _qc: 0, _rc: 20, _sc: 400, _tc: 20, _uc: 400, _vc: 0}, {
            x: 994, y: 126, _v5: 70, _w5: 115, _pc: 0, _qc: 0, _rc: 70, _sc: 115, _tc: 70, _uc: 115,
            _vc: 0
        }, {x: 330, y: 174, _v5: 118, _w5: 69, _pc: 12, _qc: 10, _rc: 118, _sc: 69, _tc: 145, _uc: 95, _vc: 0}, {
            x: 454,
            y: 174,
            _v5: 104,
            _w5: 91,
            _pc: 35,
            _qc: 31,
            _rc: 104,
            _sc: 91,
            _tc: 166,
            _uc: 148,
            _vc: 0
        }, {x: 562, y: 174, _v5: 88, _w5: 110, _pc: 0, _qc: 0, _rc: 1, _sc: 1, _tc: 88, _uc: 110, _vc: 0}, {
            x: 1206,
            y: 238,
            _v5: 540,
            _w5: 20,
            _pc: 0,
            _qc: 0,
            _rc: 540,
            _sc: 20,
            _tc: 540,
            _uc: 20,
            _vc: 0
        }, {x: 654, y: 174, _v5: 94, _w5: 117, _pc: 0, _qc: 0, _rc: 94, _sc: 117, _tc: 94, _uc: 117, _vc: 0}, {
            x: 1346,
            y: 178,
            _v5: 246,
            _w5: 48,
            _pc: 46,
            _qc: 17,
            _rc: 246,
            _sc: 48,
            _tc: 334,
            _uc: 79,
            _vc: 0
        }, {
            x: 754, y: 178, _v5: 197, _w5: 83,
            _pc: 1, _qc: 1, _rc: 197, _sc: 83, _tc: 199, _uc: 86, _vc: 0
        }, {
            x: 1914,
            y: 182,
            _v5: 128,
            _w5: 128,
            _pc: 0,
            _qc: 0,
            _rc: 128,
            _sc: 128,
            _tc: 128,
            _uc: 128,
            _vc: 0
        }, {x: 958, y: 262, _v5: 330, _w5: 51, _pc: 24, _qc: 19, _rc: 330, _sc: 51, _tc: 376, _uc: 84, _vc: 0}, {
            x: 218,
            y: 250,
            _v5: 156,
            _w5: 156,
            _pc: 3,
            _qc: 1,
            _rc: 156,
            _sc: 156,
            _tc: 160,
            _uc: 158,
            _vc: 0
        }, {
            x: 226,
            y: 622,
            _v5: 148,
            _w5: 182,
            _pc: 0,
            _qc: 0,
            _rc: 148,
            _sc: 182,
            _tc: 148,
            _uc: 182,
            _vc: 0
        }, {x: 230, y: 410, _v5: 204, _w5: 204, _pc: 7, _qc: 7, _rc: 204, _sc: 204, _tc: 218, _uc: 218, _vc: 0}, {
            x: 1294, y: 262, _v5: 453, _w5: 92, _pc: 19, _qc: 16, _rc: 453,
            _sc: 92, _tc: 492, _uc: 126, _vc: 0
        }, {
            x: 438,
            y: 318,
            _v5: 538,
            _w5: 115,
            _pc: 8,
            _qc: 7,
            _rc: 538,
            _sc: 115,
            _tc: 554,
            _uc: 129,
            _vc: 0
        }, {
            x: 234,
            y: 1378,
            _v5: 256,
            _w5: 256,
            _pc: 0,
            _qc: 0,
            _rc: 256,
            _sc: 256,
            _tc: 256,
            _uc: 256,
            _vc: 0
        }, {
            x: 234,
            y: 1638,
            _v5: 256,
            _w5: 256,
            _pc: 0,
            _qc: 0,
            _rc: 256,
            _sc: 256,
            _tc: 256,
            _uc: 256,
            _vc: 0
        }, {
            x: 254,
            y: 810,
            _v5: 256,
            _w5: 256,
            _pc: 0,
            _qc: 0,
            _rc: 256,
            _sc: 256,
            _tc: 256,
            _uc: 256,
            _vc: 0
        }, {x: 254, y: 1070, _v5: 256, _w5: 256, _pc: 0, _qc: 0, _rc: 256, _sc: 256, _tc: 256, _uc: 256, _vc: 0}, {
            x: 982, y: 358, _v5: 512, _w5: 256, _pc: 0, _qc: 0, _rc: 512, _sc: 256, _tc: 512, _uc: 256,
            _vc: 0
        }, {
            x: 1498,
            y: 358,
            _v5: 512,
            _w5: 256,
            _pc: 0,
            _qc: 0,
            _rc: 512,
            _sc: 256,
            _tc: 512,
            _uc: 256,
            _vc: 0
        }, {
            x: 1498,
            y: 358,
            _v5: 512,
            _w5: 256,
            _pc: 0,
            _qc: 0,
            _rc: 512,
            _sc: 256,
            _tc: 512,
            _uc: 256,
            _vc: 0
        }, {
            x: 514,
            y: 618,
            _v5: 560,
            _w5: 400,
            _pc: 0,
            _qc: 0,
            _rc: 560,
            _sc: 400,
            _tc: 560,
            _uc: 400,
            _vc: 0
        }, {
            x: 1078,
            y: 618,
            _v5: 560,
            _w5: 400,
            _pc: 0,
            _qc: 0,
            _rc: 560,
            _sc: 400,
            _tc: 560,
            _uc: 400,
            _vc: 0
        }, {
            x: 494,
            y: 1330,
            _v5: 560,
            _w5: 400,
            _pc: 0,
            _qc: 0,
            _rc: 560,
            _sc: 400,
            _tc: 560,
            _uc: 400,
            _vc: 0
        }, {x: 1058, y: 1022, _v5: 560, _w5: 400, _pc: 0, _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 0}, {
            x: 1058,
            y: 1426, _v5: 560, _w5: 400, _pc: 0, _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 0
        }, {x: 2, y: 2, _v5: 560, _w5: 400, _pc: 0, _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 1}, {
            x: 566,
            y: 2,
            _v5: 560,
            _w5: 400,
            _pc: 0,
            _qc: 0,
            _rc: 560,
            _sc: 400,
            _tc: 560,
            _uc: 400,
            _vc: 1
        }, {x: 1130, y: 2, _v5: 560, _w5: 400, _pc: 0, _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 1}, {
            x: 2,
            y: 406,
            _v5: 560,
            _w5: 400,
            _pc: 0,
            _qc: 0,
            _rc: 560,
            _sc: 400,
            _tc: 560,
            _uc: 400,
            _vc: 1
        }, {x: 566, y: 406, _v5: 560, _w5: 400, _pc: 0, _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 1}, {
            x: 1130, y: 406, _v5: 560, _w5: 400, _pc: 0,
            _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 1
        }, {x: 2, y: 810, _v5: 560, _w5: 400, _pc: 0, _qc: 0, _rc: 560, _sc: 400, _tc: 560, _uc: 400, _vc: 1}, {
            x: 2,
            y: 1214,
            _v5: 512,
            _w5: 512,
            _pc: 0,
            _qc: 0,
            _rc: 512,
            _sc: 512,
            _tc: 512,
            _uc: 512,
            _vc: 1
        }],
    _wc: ["SSS_texture_0.png", "SSS_texture_1.png"],
    _xc: {
        _yc: !1,
        _zc: 2,
        _Ac: 0,
        _Bc: 0,
        _Cc: 30,
        _Dc: 4294967295,
        _Ec: 0,
        _Fc: "ba9a2ddf-986a-4ccc-8885-c9d07103fc2f",
        _Gc: !1,
        _Hc: !0,
        _Ic: !0,
        scale: 1,
        _Jc: !0,
        _Kc: !1,
        _Lc: !1,
        _Mc: !0,
        _Nc: !1,
        _Oc: !1,
        _Pc: !0,
        _Qc: !0,
        _Rc: 0,
        _Sc: 0,
        _Tc: !0,
        _Uc: "html5game",
        _Vc: "default",
        _Wc: 0,
        _Xc: !1,
        _Yc: !0,
        _Zc: !0,
        __c: 0,
        _0d: [138, 101, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        _1d: "made in gamemaker studio 2",
        _2d: 1,
        _3d: 0,
        _4d: 0,
        _5d: 0,
        _6d: 1526497595,
        _7d: "True",
        _8d: ""
    }
};

function _9d() {
    _ad(null, null);
    _bd(null, null);
    _cd(null, null);
    _dd(null, null);
}

function _34(_ed, _fd, _gd, _hd, _id, _jd, _kd) {
    if (_ld(1) > 0.5) {
        {
            _ed._md = _ed._nd;
            if ((_ed._nd == "")) {
                {
                    if (_ld(_od(_gd)) > 0.5) {
                        {
                            _ed._nd = _gd;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._nd == _gd)) {
                {
                    if (_ld(_od(_hd)) > 0.5) {
                        {
                            _ed._nd = (_gd + _hd);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._nd == (_gd + _hd))) {
                {
                    if (_ld(_od(_id)) > 0.5) {
                        {
                            _ed._nd = (_gd + _hd + _id);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._nd == (_gd + _hd + _id))) {
                {
                    if (_ld(_od(_jd)) > 0.5) {
                        {
                            _ed._nd = (_gd + _hd + _id + _jd);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._nd == (_gd + _hd + _id + _jd))) {
                {
                    if (_ld(_od(_kd)) > 0.5) {
                        {
                            _ed._nd = (_gd + _hd + _id + _jd + _kd);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._nd == (_gd + _hd + _id + _jd + _kd))) {
                {
                    if (_ld(13) > 0.5) {
                        {
                            _ed._nd = "Cheat accepted";
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._nd == _ed._md)) {
                {
                    _ed._nd = "";
                }
            }
            ;
        }
    }
    ;
    if ((_ed._nd == "Cheat accepted")) {
        {
            return 1;
        }
    } else {
        {
            return 0;
        }
    }
    ;
}

function _44(_ed, _fd) {
    _54(_ed, _fd);
    _pd();
    global._qd = 0;
    global._rd = "classic";
    global._sd = "classic";
    global._td = 0;
    global._ud = 0 ? 1 : 0;
    global._vd = "friendly";
    global._wd = 0;
    global._xd = 0;
    global._yd = 1;
    global._zd = 0 ? 1 : 0;
    global._Ad = 0 ? 1 : 0;
    global._Bd = 0;
    global._Cd = "";
    global._Dd = "";
    global._Ed = 0;
}

function _54(_ed, _fd) {
    global._Fd = 39;
    global._Gd = 38;
    global._Hd = 37;
    global._Id = 40;
    global._Jd = 32;
    global._Kd = _Ld(68);
    global._Md = _Ld(87);
    global._Nd = _Ld(65);
    global._Od = _Ld(83);
    global._Pd = _Ld(49);
    global._Qd = 0;
    global._Rd = 1;
    global._Sd = 1;
    global._Td = 1;
    global._Ud = "Bonus";
    global._Vd = "Medium";
    global._Wd = "Easy";
    global._Xd = "random";
    global._Yd = 5;
    global._Zd = "No cheat";
}

function _64(_ed, _fd) {
    _ed.__d = "\r\nglobal.zz_slimepoints=0\r\nglobal.zz_has_archer=2\r\nglobal.zz_has_disco=2\r\nglobal.zz_has_female=2\r\nglobal.zz_has_ice=2\r\nglobal.zz_has_robot=2\r\nglobal.zz_has_runner=2\r\nglobal.zz_has_scientist=2\r\nglobal.zz_has_classic=2\r\nglobal.zz_has_random=2\r\nglobal.zz_has_alien=1\r\nglobal.zz_has_australian=0\r\nglobal.zz_has_basket=1\r\nglobal.zz_has_bomb=1\r\nglobal.zz_has_boxer=1\r\nglobal.zz_has_builder=0\r\nglobal.zz_has_clock=1\r\nglobal.zz_has_cowboy=0\r\nglobal.zz_has_cosmos=1\r\nglobal.zz_has_diver=0\r\nglobal.zz_has_fire=1\r\nglobal.zz_has_fisher=1\r\nglobal.zz_has_ghost=1\r\nglobal.zz_has_indian=1\r\nglobal.zz_has_maniac=1\r\nglobal.zz_has_monk=1\r\nglobal.zz_has_mud=0\r\nglobal.zz_has_murder=0\r\nglobal.zz_has_music=0\r\nglobal.zz_has_nature=1\r\nglobal.zz_has_retro=0\r\nglobal.zz_has_sponge=1\r\nglobal.zz_has_super=1\r\nglobal.zz_has_traffic=1\r\nglobal.zz_has_tv=1\r\nglobal.zz_has_twin=1\r\nglobal.zz_has_water=2\r\nglobal.zz_income_archer=100\r\nglobal.zz_income_disco=100\r\nglobal.zz_income_female=100\r\nglobal.zz_income_ice=100\r\nglobal.zz_income_robot=100\r\nglobal.zz_income_runner=100\r\nglobal.zz_income_scientist=100\r\nglobal.zz_income_classic=100\r\nglobal.zz_income_alien=100\r\nglobal.zz_income_australian=100\r\nglobal.zz_income_basket=100\r\nglobal.zz_income_bomb=100\r\nglobal.zz_income_boxer=100\r\nglobal.zz_income_builder=100\r\nglobal.zz_income_clock=100\r\nglobal.zz_income_cowboy=100\r\nglobal.zz_income_cosmos=100\r\nglobal.zz_income_diver=100\r\nglobal.zz_income_fire=100\r\nglobal.zz_income_fisher=100\r\nglobal.zz_income_ghost=100\r\nglobal.zz_income_indian=100\r\nglobal.zz_income_maniac=100\r\nglobal.zz_income_monk=100\r\nglobal.zz_income_mud=100\r\nglobal.zz_income_murder=100\r\nglobal.zz_income_music=100\r\nglobal.zz_income_nature=100\r\nglobal.zz_income_retro=100\r\nglobal.zz_income_sponge=100\r\nglobal.zz_income_super=100\r\nglobal.zz_income_traffic=100\r\nglobal.zz_income_tv=100\r\nglobal.zz_income_twin=100\r\nglobal.zz_income_water=100\r\n";
    global._0e = 0;
    global._1e = 2;
    global._2e = 2;
    global._3e = 2;
    global._4e = 2;
    global._5e = 2;
    global._6e = 2;
    global._7e = 2;
    global._8e = 2;
    global._9e = 2;
    global._ae = 1;
    global._be = 0;
    global._ce = 1;
    global._de = 1;
    global._ee = 1;
    global._fe = 0;
    global._ge = 1;
    global._he = 0;
    global._ie = 1;
    global._je = 0;
    global._ke = 1;
    global._le = 1;
    global._me = 1;
    global._ne = 1;
    global._oe = 1;
    global._pe = 1;
    global._qe = 0;
    global._re = 0;
    global._se = 0;
    global._te = 1;
    global._ue = 0;
    global._ve = 1;
    global._we = 1;
    global._xe = 1;
    global._ye = 1;
    global._ze = 1;
    global._Ae = 2;
    global._Be = 100;
    global._Ce = 100;
    global._De = 100;
    global._Ee = 100;
    global._Fe = 100;
    global._Ge = 100;
    global._He = 100;
    global._Ie = 100;
    global._Je = 100;
    global._Ke = 100;
    global._Le = 100;
    global._Me = 100;
    global._Ne = 100;
    global._Oe = 100;
    global._Pe = 100;
    global._Qe = 100;
    global._Re = 100;
    global._Se = 100;
    global._Te = 100;
    global._Ue = 100;
    global._Ve = 100;
    global._We = 100;
    global._Xe = 100;
    global._Ye = 100;
    global._Ze = 100;
    global.__e = 100;
    global._0f = 100;
    global._1f = 100;
    global._2f = 100;
    global._3f = 100;
    global._4f = 100;
    global._5f = 100;
    global._6f = 100;
    global._7f = 100;
    global._8f = 100;
}

function _74(_ed,
             _fd, _gd, _hd) {
    var _9f, _af, _bf, _cf, _df, _ef, _ff, _gf;
    _9f = _gd;
    _af = _hd;
    _bf = _hf(_9f);
    _cf = _hf(_af);
    _ef = 1;
    for (_df = 1; (_df <= _bf); _df += 1) {
        {
            _ff = _if(_9f, _df);
            _gf = _if(_af, _ef);
            _ff = _od(_ff);
            _gf = _od(_gf);
            _ff -= _gf;
            if ((_ff < 0)) {
                _ff += 256
            }
            ;_ff = _jf(_ff);
            _9f = _kf(_9f, _df, 1);
            _9f = _lf(_ff, _9f, _df);
            _ef += 1;
            if ((_ef > _cf)) {
                _ef = 1
            }
            ;
        }
    }
    ;
    return _9f;
}

function _84(_ed, _fd, _gd, _hd) {
    var _9f, _af, _bf, _cf, _df, _ef, _ff, _gf;
    _9f = _gd;
    _af = _hd;
    _bf = _hf(_9f);
    _cf = _hf(_af);
    _ef = 1;
    for (_df = 1; (_df <= _bf); _df += 1) {
        {
            _ff = _if(_9f, _df);
            _gf = _if(_af, _ef);
            _ff = _od(_ff);
            _gf = _od(_gf);
            _ff += _gf;
            if ((_ff >= 256)) {
                _ff -= 256
            }
            ;_ff = _jf(_ff);
            _9f = _kf(_9f, _df, 1);
            _9f = _lf(_ff, _9f, _df);
            _ef += 1;
            if ((_ef > _cf)) {
                _ef = 1
            }
            ;
        }
    }
    ;
    return _9f;
}

function _94(_ed, _fd, _gd) {
    _ed._mf = 0 ? 1 : 0;
    _ed._nf = 0 ? 1 : 0;
    _ed._of = 0 ? 1 : 0;
    _ed._pf = _qf(random(255), 255, 255);
    _ed._rf = 0 ? 1 : 0;
    _ed._sf = 0 ? 1 : 0;
    _ed._tf = 0 ? 1 : 0;
    _ed._uf = 0 ? 1 : 0;
    _ed._vf = 0 ? 1 : 0;
    _ed._wf = 0 ? 1 : 0;
    _ed._xf = 0 ? 1 : 0;
    _ed._yf = 0 ? 1 : 0;
    _ed._zf = 0 ? 1 : 0;
    _ed._Af = 0 ? 1 : 0;
    _ed._Bf = 0 ? 1 : 0;
    _ed._Cf = _gd;
    if ((_ed._Cf == 1)) {
        {
            _ed._Df = (-1);
            _ed._Ef(_n4(_ed, _fd, global._rd));
        }
    } else {
        {
            _ed._Df = 1;
            _ed._Ef(_n4(_ed,
                _fd, global._sd));
            if ((global._ud == 1)) {
                {
                    _e4(_ed, _fd);
                    _ed._Ff = (-999);
                    _ed._Gf = (-999);
                    _ed._Hf = (-999);
                    _ed._If = 0 ? 1 : 0;
                    _ed._Jf = 0;
                    _ed._Kf = 0;
                    _ed._Lf = 0;
                    _ed._Mf = 0;
                }
            }
            ;
        }
    }
    ;_ed._Nf = 0;
    _ed._Of = 6;
    _ed._Pf = _45(_ed, _fd, 0, 0, 80);
    _Qf(_ed._Pf)._Rf = _ed.id;
    _Qf(_ed._Pf)._Cf = "player";
}

function _a4(_ed, _fd, _gd, _hd, _id, _jd, _kd) {
    _ed._Sf = 0.3;
    if ((_ed.y > 400)) {
        {
            _ed._Tf(400);
        }
    }
    ;
    if ((_ed._Nf > 0)) {
        {
            _ed._Nf -= 1;
        }
    } else {
        {
            _ed._Nf = 0;
        }
    }
    ;
    if ((_ed._xf == 1)) {
        {
            _ed._Uf((max(0, (abs(_ed._2c) - 20)) * _Vf(_ed._2c)));
        }
    }
    ;
    if (_Wf(_ed, _ed.x, (_ed.y + 5), 72) > 0.5) {
        {
            _Xf(_ed,
                270, (-1));
            if ((_ed._Af == 0)) {
                {
                    _ed._Yf(0);
                    _ed._Zf = 0;
                }
            }
            ;
        }
    } else {
        {
            if ((_ed._Af == 0)) {
                {
                    _ed._Zf = 0.4;
                }
            } else {
                {
                    _ed._Zf = 0;
                }
            }
            ;
        }
    }
    ;
    if (_kd > 0.5) {
        {
        }
    }
    ;
    if (_jd > 0.5) {
        {
            if ((_ed._Cf == 1)) {
                {
                    if ((((_ed._wf == 0)) && ((_ed._wf == 0)))) {
                        {
                            if ((((_Qf(82).__f > _s4(_ed, _fd, global._rd))) && ((_ed._Nf == 0)))) {
                                {
                                    if ((_C4(_ed, _fd, global._rd, 66, _ed._Cf) == 1)) {
                                        {
                                            _Qf(82).__f -= _s4(_ed, _fd, global._rd);
                                            _ed._Nf = 10;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Cf == 2)) {
                {
                    if ((((_ed._wf == 0)) && ((_ed._nf == 0)))) {
                        {
                            if ((((_Qf(82)._0g > _s4(_ed, _fd, global._sd))) && ((_ed._Nf == 0)))) {
                                {
                                    if ((_C4(_ed, _fd,
                                        global._sd, 65, _ed._Cf) == 1)) {
                                        {
                                            _Qf(82)._0g -= _s4(_ed, _fd, global._sd);
                                            _ed._Nf = 10;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if ((((_ed._yf == 0)) && ((_ed._zf == 0)) && ((_ed._Af == 0)) && ((_ed._nf == 0)))) {
        {
            if (((_hd > 0.5) || ((_ed._of == 1)))) {
                {
                    if (_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5) {
                        {
                            _ed._Yf((-9));
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (_id > 0.5) {
        {
            if ((((_ed._mf == 0)) && ((_ed._wf == 0)) && ((_ed._zf == 0)) && ((_ed._nf == 0)) && ((_ed._Of > 5)))) {
                {
                    if ((_ed._of == 0)) {
                        {
                            _ed._Df = (-1);
                        }
                    }
                    ;_ed._Of = 0;
                }
            }
            ;
            if ((((_ed._2c > ((-5) - (_ed._xf * 15)))) && ((_ed._mf == 0)) && ((_ed._zf == 0)) && ((_ed._Af == 0)) && ((_ed._nf == 0)))) {
                {
                    _ed._Uf(_ed._2c + ((-0.5) - (_ed._xf * 15)));
                }
            }
            ;
        }
    }
    ;
    if (_gd > 0.5) {
        {
            if ((((_ed._mf == 0)) && ((_ed._wf == 0)) && ((_ed._zf == 0)) && ((_ed._nf == 0)) && ((_ed._Of > 5)))) {
                {
                    if ((_ed._of == 0)) {
                        {
                            _ed._Df = 1;
                        }
                    }
                    ;_ed._Of = 0;
                }
            }
            ;
            if ((((_ed._2c < (5 + (_ed._xf * 15)))) && ((_ed._mf == 0)) && ((_ed._zf == 0)) && ((_ed._Af == 0)) && ((_ed._nf == 0)))) {
                {
                    _ed._Uf(_ed._2c + (0.5 + (_ed._xf * 15)));
                }
            }
            ;
        }
    }
    ;
}

function _b4(_ed, _fd) {
    if ((_ed.x < 45)) {
        {
            _ed._Uf(0);
            _ed._1g(45);
        }
    }
    ;
    if ((_ed.x > 515)) {
        {
            _ed._Uf(0);
            _ed._1g(515);
        }
    }
    ;
    while (_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5) {
        {
            _ed._Tf(_ed.y - 1);
        }
    }
    ;
    if ((_ed.y < 50)) {
        {
            _ed._Tf(50);
        }
    }
    ;
    if ((_ed._Cf == 1)) {
        {
            _ed._Ef(_n4(_ed, _fd, global._rd));
        }
    }
    ;
    if ((_ed._Cf == 2)) {
        {
            _ed._Ef(_n4(_ed, _fd, global._sd));
        }
    }
    ;
    if ((_c4(_ed, _fd, _ed.id) == 1)) {
        {
            _2g(_ed, _ed._3g, 0, _ed.x, _ed.y, (_ed._4g * _ed._Df), _ed._5g, _ed._6g, _ed._7g(), _ed._8g);
            if ((_ed._of == 1)) {
                {
                    if ((floor(random(5)) == 0)) {
                        {
                            _ed._pf = _qf(random(255), 255, 255);
                        }
                    }
                    ;_25(_ed, _fd, 1, _ed._pf, 0, 0);
                    _2g(_ed, _ed._3g, 0, _ed.x, _ed.y, (_ed._4g * _ed._Df), _ed._5g, _ed._6g, _ed._7g(), (_ed._8g / 2));
                    _25(_ed, _fd, 0, _ed._pf, 0, 0);
                    _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 35);
                    _Qf(_ed._Pf)._9g = _ed._pf;
                    _ed._ag = _45(_ed, _fd, _ed.x, _ed.y, 36);
                    _Qf(_ed._ag)._Ef(_ed._3g);
                    _Qf(_ed._ag)._bg(random(360));
                }
            }
            ;
            if ((_ed._Cf == 2)) {
                {
                    if ((global._rd == global._sd)) {
                        {
                            _2g(_ed, _ed._3g, 0, _ed.x, _ed.y, (_ed._4g * _ed._Df), _ed._5g, _ed._6g, 0, 0.3);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _c4(_ed, _fd, _gd) {
    {
        var _cg = _dg(_gd);
        for (var _eg in _cg) {
            if (!_cg.hasOwnProperty(_eg)) continue;
            var _fg = _cg[_eg];
            if (_fg._gg) continue;
            if (!_fg._hg) continue;
            {
                if ((((_fg._vf == 0)) && ((_fg._sf == 0)) && ((_fg._uf == 0)))) {
                    {
                        return 1;
                    }
                } else {
                    {
                        return 0;
                    }
                }
                ;
            }
        }
    }
    ;
}

function _d4(_ed, _fd, _gd) {
    _ed._ig = 0 ? 1 : 0;
    _ed._jg = _Qf(67).x;
    _ed._kg = _Qf(67).y;
    if ((_gd == "classic")) {
        {
            _ed._ig = 0 ? 1 : 0;
        }
    }
    ;
    if ((_gd == "archer")) {
        {
            _ed._jg = _Qf(67)._lg[~~(20 + floor((_mg(_ed, 67) / 80)))];
            _ed._kg = _Qf(67)._ng[~~(20 + floor((_mg(_ed, 67) / 80)))];
            if ((((_ed._jg > (_ed.x + 80))) && ((_ed._kg > 335)) && ((_ed._kg < 350)) && ((_ed._Jf > 80)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._jg = _Qf(67)._lg[~~6];
            _ed._kg = _Qf(67)._lg[~~6];
            if ((((_ed._jg > _ed.x)) && ((_ed._kg > 290)) && ((_ed._og == 1)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
            if ((((_Qf(82)._0g > 80)) && ((_Qf(67)._pg == 1)) && ((_Qf(67)._qg < 10)) && ((_Qf(67)._qg > 4)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "female")) {
        {
            if ((((_Qf(67)._rg == 1)) && ((_Qf(67)._sg < 40)) && ((_Qf(65).x > _ed._jg)) && ((_ed._Jf > 60)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
            if ((((_Qf(82)._0g >= 100)) && ((abs(_Qf(67)._Tb) > 5)) && ((_ed._Jf > 100)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            if ((((_Qf(67)._rg == (-1))) && ((_Qf(67)._sg < 30)) && ((_ed.x > (_ed._jg - 50))))) {
                {
                    _ed._Kf += 1;
                }
            } else {
                {
                    _ed._Kf = 0;
                }
            }
            ;
            if ((_ed._Kf > 5)) {
                {
                    _ed._If = 1 ? 1 : 0;
                }
            }
            ;
            if ((((_Qf(67)._tg == 1)) && ((_Qf(67)._ug < 30)) && ((_Qf(67)._ug > 5)) && ((_Qf(67)._2c > 1)) && ((_Qf(65).y < 350)))) {
                {
                    _ed._If = 1 ? 1 : 0;
                }
            }
            ;
            if ((_Qf(82)._0g < 5)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._Lf > 20)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._If == 1)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            if ((((_Qf(67)._rg == (-1))) && ((_ed._jg < (_ed.x - 25))))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            if ((_Qf(67)._vg > 0)) {
                {
                    _ed._jg = _Qf(67)._vg;
                }
            } else {
                {
                    _ed._jg = _Qf(67).x;
                }
            }
            ;
            if ((((_ed._kg > 300)) && ((abs((_ed.x - _ed._jg)) > 100)) && ((_Vf((_ed._jg - _ed.x)) == _ed._og)) && ((_ed.x > 130)))) {
                {
                    _ed._If = 1 ? 1 : 0;
                    _ed._Mf = _ed._og;
                }
            }
            ;
            if ((_ed._og == _ed._Mf)) {
                {
                }
            } else {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._Lf > 20)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._If == 1)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            if ((((_Qf(67)._tg == 1)) && ((_Qf(67)._ug < 20)) && ((_Qf(67)._ug > 10)) && ((_ed._Jf > 70)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
            if ((_Qf(82)._0g >= 100)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            if ((((_mg(_ed, 67) < 30)) && ((_ed._kg > _ed.y)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            if ((((_mg(_ed, 65) < 10)) && ((_Qf(65)._nf == 0)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            if ((((_Qf(67).y > 300)) && ((abs((_ed.x - _ed._jg)) > 100)) && ((_Vf((_ed._jg - _ed.x)) == _ed._og)) && ((_ed.x > 130)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
            if (_wg(54) > 0.5) {
                {
                    if (((_ed.x + 16) < _ed._jg)) {
                        {
                            _ed._og = 1;
                        }
                    }
                    ;
                    if (((_ed.x + 12) > _ed._jg)) {
                        {
                            _ed._og = (-1);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            if ((_ed.x > 320)) {
                if ((_ed.x > _ed._jg)) {
                    {
                        _ed._ig = 1 ? 1 : 0;
                    }
                }
            }
            ;
            if ((_ed.x > 420)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            if ((((_Qf(67)._rg == 1)) && ((_Qf(67)._sg < (_Qf(82)._0g - 10))))) {
                {
                    _ed._Kf += 1;
                }
            } else {
                {
                    _ed._Kf = 0;
                }
            }
            ;
            if ((_ed._Kf > 5)) {
                {
                    _ed._If = 1 ? 1 : 0;
                }
            }
            ;
            if ((((_Qf(82)._0g < 30)) && ((_ed._Kf < 30)))) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._If == 1)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._jg = _Qf(67)._lg[~~(2 + floor((_mg(_ed,
                67) / 60)))];
            _ed._kg = _Qf(67)._ng[~~(2 + floor((_mg(_ed, 67) / 60)))];
            if ((((_Qf(67)._rg == (-1))) && ((_Qf(67)._sg < 30)) && ((_ed.x > (_ed._jg - 50))))) {
                {
                    _ed._Kf += 1;
                }
            } else {
                {
                    _ed._Kf = 0;
                }
            }
            ;
            if ((_ed._Kf > 5)) {
                {
                    _ed._If = 1 ? 1 : 0;
                }
            }
            ;
            if ((_Qf(82)._0g < 5)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._Lf > 20)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._If == 1)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            if ((((_Qf(67)._rg == (-1))) && ((_ed._jg < (_ed.x - 25))))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "super")) {
        {
            if ((_Qf(67)._vg > 0)) {
                {
                    _ed._jg = _Qf(67)._vg;
                }
            } else {
                {
                    _ed._jg = _Qf(67).x;
                }
            }
            ;
            if ((((_Qf(67).y < 300)) && ((abs((_ed.x - _ed._jg)) > 100)) && ((_Vf((_ed._jg - _ed.x)) == _ed._og)) && ((_ed.x > 130)))) {
                {
                    _ed._If = 1 ? 1 : 0;
                }
            } else {
                {
                    if ((_ed._Lf > 30)) {
                        {
                            _ed._If = 0 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._ig == 1)) {
                {
                    if (((_ed.x + 16) < _ed._jg)) {
                        {
                            _ed._og = 1;
                        }
                    }
                    ;
                    if (((_ed.x + 12) > _ed._jg)) {
                        {
                            _ed._og = (-1);
                        }
                    }
                    ;
                    if ((_ed.y > _ed._kg)) {
                        {
                            _ed._xg = 1 ? 1 : 0;
                        }
                    }
                    ;
                    if ((_ed.y < _ed._kg)) {
                        {
                            _ed._yg = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._If == 1)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            if ((((_Qf(67)._rg == (-1))) && ((_ed._jg < (_ed.x - 25))) && ((_Qf(67)._2c < 2)))) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _i4(_ed, _fd);
            if ((_ed._Jf < 50)) {
                {
                    _ed._og = 1;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _i4(_ed, _fd);
        }
    }
    ;
    if ((_gd == "water")) {
        {
            if ((((_Qf(67)._rg == (-1))) && ((_Qf(67)._sg < 30)) && ((_ed.x > (_ed._jg - 50))))) {
                {
                    _ed._Kf += 1;
                }
            } else {
                {
                    _ed._Kf = 0;
                }
            }
            ;
            if ((_ed._Kf > 5)) {
                {
                    _ed._If = 1 ? 1 : 0;
                }
            }
            ;
            if ((_Qf(82)._0g < 5)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._Lf > 20)) {
                {
                    _ed._If = 0 ? 1 : 0;
                }
            }
            ;
            if ((_ed._If == 1)) {
                {
                    _ed._ig = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._ig == 1)) {
        {
            _ed._Jf = 0;
            _ed._Lf += 1;
        }
    } else {
        {
            _ed._Jf += 1;
            _ed._Lf = 0;
        }
    }
    ;
}

function _e4(_ed, _fd) {
    _ed._zg = random(1);
    _ed._og = 1;
    _ed._Ag = 150;
    _ed._xg = 0 ? 1 : 0;
    _ed._ig = 0 ? 1 : 0;
    _45(_ed, _fd, 0, 0, 90);
}

function _f4(_ed, _fd) {
    _ed._Bg = 0;
    if ((global._Wd == "Very easy")) {
        {
            _ed._Bg = 100;
        }
    }
    ;
    if ((global._Wd == "Easy")) {
        {
            _ed._Bg = 75;
        }
    }
    ;
    if ((global._Wd == "Medium")) {
        {
            _ed._Bg = 50;
        }
    }
    ;
    if ((global._Wd == "Hard")) {
        {
            _ed._Bg = 25;
        }
    }
    ;
    if ((global._Wd == "Very hard")) {
        {
            _ed._Bg = 0;
        }
    }
    ;
    if ((abs(_Qf(67)._2c) < (3 + (_ed._Bg / 50)))) {
        {
            if ((abs((_ed.x + 20 - _Qf(67).x)) < abs((_Qf(65).x - _Qf(67).x)))) {
                {
                    _ed._og = 1;
                }
            }
            ;
        }
    }
    ;
    if (((_Qf(67).x + _ed._Bg) < (_ed.x + 20))) {
        {
            _ed._og = (-1);
        }
    }
    ;
    if ((_Qf(67).y < 300)) {
        {
            if (((abs((_ed.x - _Qf(67)._vg)) - (_Qf(67)._Cg * 2)) < abs((_Qf(65).x - _Qf(67)._vg)))) {
                {
                    if ((_Qf(67)._vg > (_ed.x + 20))) {
                        {
                            _ed._og = 1;
                        }
                    }
                    ;
                    if ((_Qf(67)._vg < (_ed.x + 20))) {
                        {
                            _ed._og = (-1);
                        }
                    }
                    ;
                }
            } else {
                {
                    _ed._og = (-1);
                }
            }
            ;
        }
    }
    ;
    if (((_ed.x + 20) < 100)) {
        {
            _ed._og = 1;
        }
    }
    ;
    if ((_Qf(65).x > _Qf(67).x)) {
        {
            if (((_ed.x + 20) > (360 + (_ed._Bg * 2)))) {
                {
                    _ed._og = (-1);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._uf == 1)) {
        {
            _ed._og = (-1);
        }
    }
    ;_ed._xg = 0 ? 1 : 0;
    _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 90);
    _ed._Dg = (-999);
    _ed._Eg = 0 ? 1 : 0;
    if ((floor((110 - _ed._Bg)) == 0)) {
        {
            _ed._Eg = 1 ? 1 : 0;
        }
    }
    ;
    if ((_ed._Eg == 0)) {
        {
            if ((_ed._Hf == (-999))) {
                {
                }
            } else {
                {
                    _ed._Dg = ((0.0031 * _Fg(_ed._Gf)) - (2.318 * _ed._Gf) + 434);
                    if ((_ed._Dg >= _ed._Hf)) {
                        {
                            _ed._xg = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;_ed._Gg = (_Hg(_ed._Hf) + " / " + _Hg(_ed._Dg));
}

function _g4(_ed, _fd) {
    if ((_Qf(67).x > (_ed.x + 20))) {
        {
            if ((_ed.x < 130)) {
                {
                    _ed._og = 0;
                }
            }
            ;
        }
    }
    ;
    if ((_ed.x > 340)) {
        {
            _ed._og = 0;
        }
    }
    ;
    if ((_Qf(67).x > (_ed.x + 20))) {
        {
            if ((_Qf(67).x > (_ed.x + 20 + _ed._Ag))) {
                {
                    if ((_ed.x < 340)) {
                        {
                            _ed._og = 1;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if ((_Qf(67).x < (_ed.x + 20))) {
        {
            _ed._og = (-1);
        }
    }
    ;
    if ((_ed.x < 130)) {
        {
            if ((_Qf(67).x < (_ed.x + 22))) {
                {
                    if ((_Qf(67).x > (_ed.x + 100 + _ed._Ag))) {
                        {
                            _ed._og = (-1);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if ((_ed.x < 45)) {
        {
            _ed._og = 0;
        }
    }
    ;
    if ((_ed.x > 515)) {
        {
            _ed._og = 0;
        }
    }
    ;_ed._xg = 0 ? 1 : 0;
    _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 90);
    {
        var _Ig = _dg(_ed._Pf);
        for (var _Jg in _Ig) {
            if (!_Ig.hasOwnProperty(_Jg)) continue;
            var _Kg = _Ig[_Jg];
            if (_Kg._gg) continue;
            if (!_Kg._hg) continue;
            {
                if (_Wf(_Kg, _Kg.x, _Kg.y, 67) > 0.5) {
                    {
                        _Qf(66)._xg = 1 ? 1 : 0;
                    }
                }
                ;
            }
        }
    }
    ;
    if ((_ed._og == (-1))) {
        {
            if ((_mg(_ed, 67) > 8)) {
                {
                    if ((_mg(_ed, 67) < 14)) {
                        {
                            _ed._xg = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    } else {
        {
            if ((_mg(_ed,
                67) < 2)) {
                {
                    if ((_Qf(67).y < 350)) {
                        {
                            _ed._xg = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _h4(_ed, _fd) {
    if ((_Qf(67).y < 300)) {
        {
            _j4(_ed, _fd);
        }
    }
    ;
}

function _i4(_ed, _fd) {
    if ((floor(random(1000)) == 0)) {
        {
            _ed._ig = 1 ? 1 : 0;
        }
    }
    ;
    if ((_Qf(82)._0g > 95)) {
        {
            _ed._ig = 1 ? 1 : 0;
        }
    }
    ;
}

function _j4(_ed, _fd) {
    _ed._Lg = abs(((-2) * (sqrt((_Fg(_Qf(67)._3c) + 300 - _Qf(67).y)) - _Qf(67)._3c)));
    _ed._Mg = ((_Qf(67)._2c * _ed._Lg) + _Qf(67).x);
    if ((_ed._Mg < 28)) {
        {
            _ed._Mg = (56 - _ed._Mg);
        }
    }
    ;
    if ((_ed._Mg > 532)) {
        {
            _ed._Mg = (1064 - _ed._Mg);
        }
    }
    ;
}

function _k4(_ed, _fd) {
    if ((((_ed._3c > 0)) && ((_ed.y > 290)))) {
        {
            if ((_ed._vg == (-999))) {
                {
                    _ed._vg = _ed.x;
                    _ed._Cg = _ed._Ng;
                }
            }
            ;
        }
    }
    ;
    if ((_ed.y > 368)) {
        {
            _ed._Sf = 0.2;
        }
    } else {
        {
            if ((abs(_ed._Tb) < 20)) {
                {
                    _ed._Sf = 0.05;
                }
            } else {
                {
                    _ed._Sf = 1;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 69) > 0.5) {
        {
            if ((_ed.x < 280)) {
                {
                    _ed._Uf(abs(_ed._2c));
                }
            }
            ;
            if ((_ed.x > 280)) {
                {
                    _ed._Uf(-abs(_ed._2c));
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 71) > 0.5) {
        {
            _ed._Yf(abs(_ed._3c));
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 79) > 0.5) {
        {
            _Og(_ed, 0);
        }
    }
    ;
    if (_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5) {
        {
            _ed._Tf(370);
            _ed._Yf(-abs((_ed._3c / 1.1)));
            _ed._Zf = 0;
            if ((abs(_ed._3c) < 0.2)) {
                {
                    _ed._Yf(0);
                }
            }
            ;
            if ((_ed.y > 371)) {
                {
                    _ed._Tf(371);
                }
            }
            ;
        }
    } else {
        {
            _ed._Zf = 0.5;
            if ((_ed._Pg == 1)) {
                {
                    _ed._Zf = 0.1665;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 76) > 0.5) {
        {
            _ed._Qg = _Rg(_ed, _ed.x, _ed.y, 76);
            _Sg(_ed, _Qf(_ed._Qg).x, _Qf(_ed._Qg).y, (-_ed._Tb / 1.1));
            _ed._Yf(_ed._3c - 3);
            _ed._Uf(_ed._2c + (_Qf(_ed._Qg)._2c / 1.2));
            if (((_Wf(_ed, _ed.x, _ed.y, 65) > 0.5) && ((_ed._ug == (-999))))) {
                {
                    _ed._tg = 1 ? 1 : 0;
                    _ed._ug = _ed._Ng;
                }
            }
            ;
            if (((_Wf(_ed, _ed.x, _ed.y, 66) > 0.5) && ((_ed._qg == (-999))))) {
                {
                    _ed._pg = 1 ? 1 : 0;
                    _ed._qg = _ed._Ng;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 62) > 0.5) {
        {
            _ed._Qg = _Rg(_ed,
                _ed.x, _ed.y, 62);
            _Sg(_ed, _Qf(_ed._Qg).x, _Qf(_ed._Qg).y, (-_ed._Tb / 1.1));
            _ed._Yf(_ed._3c - 3);
            _ed._Uf(_ed._2c + (_Qf(_ed._Qg)._2c / 1.2));
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 75) > 0.5) {
        {
            if ((_ed.x < 280)) {
                {
                    _ed._rg = (-1);
                    if ((_ed._sg == (-999))) {
                        {
                            _ed._sg = _ed._Ng;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed.x > 280)) {
                {
                    _ed._rg = 1;
                    if ((_ed._sg == (-999))) {
                        {
                            _ed._sg = _ed._Ng;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 90) > 0.5) {
        {
            if (_Tg(66) > 0.5) {
                {
                    if ((_Qf(66)._Ff == (-999))) {
                        {
                            _Qf(66)._Ff = _ed.x;
                            _Qf(66)._Gf = _ed.y;
                            _Qf(66)._Hf = _ed._Ng;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _l4(_ed, _fd) {
    if ((_ed.y > 368)) {
        {
            _ed._Sf = 0.2;
        }
    } else {
        {
            if ((abs(_ed._Tb) < 20)) {
                {
                    _ed._Sf = 0.05;
                }
            } else {
                {
                    _ed._Sf = 1;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 64) > 0.5) {
        {
            _Ug(_ed, 1);
            while (_Wf(_ed, _ed.x, _ed.y, 64) > 0.5) {
                {
                    _ed._1g(_ed.x + _Vg(2, _ed._Wg));
                    _ed._Tf(_ed.y + _Xg(2, _ed._Wg));
                }
            }
            ;
        }
    }
    ;
    if (!(_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5)) {
        {
            _ed._Zf = 0.5;
            if ((_ed._Pg == 1)) {
                {
                    _ed._Zf = 0.1665;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 76) > 0.5) {
        {
            _ed._Yg = 0 ? 1 : 0;
            _Qf(81)._Zg += 0.1;
            _ed._Qg = _Rg(_ed, _ed.x, _ed.y, 76);
            _Sg(_ed, _Qf(_ed._Qg).x, _Qf(_ed._Qg).y, (-_ed._Tb / 1.1));
            _ed._Yf(_ed._3c - 3);
            _ed._Uf(_ed._2c + (_Qf(_ed._Qg)._2c / 1.2));
            if (_Wf(_ed, _ed.x, _ed.y, 65) > 0.5) {
                {
                    _Qf(87).__g = 1;
                }
            }
            ;
            if (_Wf(_ed, _ed.x, _ed.y, 66) > 0.5) {
                {
                    _Qf(87).__g = 2;
                }
            }
            ;
            if ((_ed._0h == 0)) {
                {
                    if (_65(_ed, _fd, 3) > 0.5) {
                        {
                        }
                    } else {
                        {
                            _K4(_ed, _fd, 3);
                            if (!(_ed._1h instanceof Array)) {
                                _ed._1h = [];
                                _ed._1h._B3 = 1584050178
                            } else if (_ed._1h._B3 !== 1584050178) {
                                _ed._1h = _ed._1h.slice(0);
                                _ed._1h._B3 = 1584050178
                            }
                            _ed._1h[~~0] = 5;
                            _ed._0h = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (_Wf(_ed, _ed.x, _ed.y, 62) > 0.5) {
        {
            _Qf(81)._Zg += 0.1;
            _ed._Qg = _Rg(_ed, _ed.x, _ed.y, 62);
            _Sg(_ed, _Qf(_ed._Qg).x, _Qf(_ed._Qg).y, (-_ed._Tb / 1.1));
            _ed._Yf(_ed._3c - 3);
            _ed._Uf(_ed._2c + (_Qf(_ed._Qg)._2c / 1.2));
            if ((_ed._0h == 0)) {
                {
                    if (_65(_ed, _fd, 3) > 0.5) {
                        {
                        }
                    } else {
                        {
                            _K4(_ed, _fd, 3);
                            if (!(_ed._1h instanceof Array)) {
                                _ed._1h = [];
                                _ed._1h._B3 = 1584050178
                            } else if (_ed._1h._B3 !== 1584050178) {
                                _ed._1h = _ed._1h.slice(0);
                                _ed._1h._B3 = 1584050178
                            }
                            _ed._1h[~~0] = 5;
                            _ed._0h = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _m4(_ed, _fd) {
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~1] = 2;
    _ed._2h += 1;
    if ((_ed._2h > 30)) {
        {
            if ((_ed.x < 280)) {
                {
                    _ed._3h(0);
                    _ed._Tf(_ed.y - 30);
                    _ed._1g(_ed.x + 30);
                }
            } else {
                {
                    _ed._3h(0);
                    _ed._Tf(_ed.y - 30);
                    _ed._1g(_ed.x - 30);
                }
            }
            ;
        }
    }
    ;
}

function _n4(_ed, _fd, _gd) {
    _ed._4h = 49;
    if ((_gd == "archer")) {
        {
            _ed._4h = 12;
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._4h = 13;
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._4h = 14;
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._4h = 15;
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._4h = 16;
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._4h = 17;
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._4h = 18;
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._4h = 22;
        }
    }
    ;
    if ((_gd == "australian")) {
        {
            _ed._4h = 23;
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._4h = 24;
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._4h = 25;
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._4h = 26;
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._4h = 27;
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._4h = 28;
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._4h = 29;
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._4h = 30;
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._4h = 31;
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._4h = 32;
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._4h = 33;
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._4h = 34;
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._4h = 35;
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._4h = 36;
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._4h = 37;
        }
    }
    ;
    if ((_gd == "mud")) {
        {
            _ed._4h = 38;
        }
    }
    ;
    if ((_gd == "murder")) {
        {
            _ed._4h = 39;
        }
    }
    ;
    if ((_gd == "music")) {
        {
            _ed._4h = 40;
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._4h = 41;
        }
    }
    ;
    if ((_gd == "retro")) {
        {
            _ed._4h = 42;
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._4h = 43;
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._4h = 44;
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._4h = 45;
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._4h = 46;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._4h = 47;
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._4h = 48;
        }
    }
    ;
    if ((_gd == "random")) {
        {
            _ed._4h = 19;
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._4h = 10;
        }
    }
    ;
    return _ed._4h;
}

function _o4(_ed, _fd, _gd) {
    _ed._5h = "";
    if ((_gd == "archer")) {
        {
            _ed._5h = "Bow and arrows";
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._5h = "Dance move";
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._5h = "Attraction";
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._5h = "Frost beam";
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._5h = "Magnet";
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._5h = "Sprint";
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._5h = "Shrink potion";
        }
    }
    ;
    if ((_gd == "random")) {
        {
            _ed._5h = "???";
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._5h = "No weapon";
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._5h = "Teleport";
        }
    }
    ;
    if ((_gd == "australian")) {
        {
            _ed._5h = "Boomerang";
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._5h = "Basketmode";
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._5h = "Explosion";
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._5h = "Boxing kick";
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._5h = "Brick";
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._5h = "Time stop";
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._5h = "Lasso";
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._5h = "Black Hole";
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._5h = "Harpoon";
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._5h = "Fireball";
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._5h = "Fishinghook";
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._5h = "Invisbility";
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._5h = "Rain dance";
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._5h = "Crazyness";
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._5h = "Telekinisis";
        }
    }
    ;
    if ((_gd == "mud")) {
        {
            _ed._5h = "Mud splat";
        }
    }
    ;
    if ((_gd == "murder")) {
        {
            _ed._5h = "Kill";
        }
    }
    ;
    if ((_gd == "music")) {
        {
            _ed._5h = "Sleep song";
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._5h = "Tree";
        }
    }
    ;
    if ((_gd == "retro")) {
        {
            _ed._5h = "Goal bounce";
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._5h = "Grow";
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._5h = "Super skills";
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._5h = "STOP ball";
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._5h = "Remote control";
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._5h = "Twin slime";
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._5h = "Geiser";
        }
    }
    ;
    return _ed._5h;
}

function _p4(_ed, _fd,
             _gd) {
    _ed._6h = "";
    if ((_gd == "archer")) {
        {
            _ed._6h = "Archer slime";
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._6h = "Disco slime";
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._6h = "Female slime";
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._6h = "Ice slime";
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._6h = "Robot slime";
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._6h = "Runner slime";
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._6h = "Scientist slime";
        }
    }
    ;
    if ((_gd == "random")) {
        {
            _ed._6h = "Random slime";
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._6h = "Classic slime";
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._6h = "Alien slime";
        }
    }
    ;
    if ((_gd == "australian")) {
        {
            _ed._6h = "Australian slime";
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._6h = "Basket slime";
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._6h = "Bomb slime";
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._6h = "Boxer slime";
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._6h = "Builder slime";
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._6h = "Clock slime";
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._6h = "Cowboy slime";
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._6h = "Cosmos slime";
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._6h = "Diver slime";
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._6h = "Fire slime";
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._6h = "Fisher slime";
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._6h = "Ghost slime";
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._6h = "Indian slime";
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._6h = "Maniac slime";
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._6h = "Monk slime";
        }
    }
    ;
    if ((_gd == "mud")) {
        {
            _ed._6h = "Mud slime";
        }
    }
    ;
    if ((_gd == "murder")) {
        {
            _ed._6h = "Murder slime";
        }
    }
    ;
    if ((_gd == "music")) {
        {
            _ed._6h = "Music slime";
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._6h = "Nature slime";
        }
    }
    ;
    if ((_gd == "retro")) {
        {
            _ed._6h = "Retro slime";
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._6h = "Sponge slime";
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._6h = "Super slime";
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._6h = "Traffic slime";
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._6h = "TV slime";
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._6h = "Twin slime";
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._6h = "Water slime";
        }
    }
    ;
    return _ed._6h;
}

function _q4(_ed, _fd, _gd) {
    _ed._7h = 8421504;
    if ((_gd == "random")) {
        {
            _ed._7h = 8421504;
        }
    }
    ;
    if ((_gd == "archer")) {
        {
            _ed._7h = 2641014;
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._7h = 9178837;
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._7h = 11434712;
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._7h = 16246220;
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._7h = 8091767;
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._7h = 5027954;
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._7h = 15592940;
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._7h = 2505150;
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._7h = 4494347;
        }
    }
    ;
    if ((_gd == "australian")) {
        {
            _ed._7h = 6785441;
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._7h = 2903421;
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._7h = 460548;
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._7h = 2564551;
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._7h = 62207;
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._7h = 13421773;
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._7h = 7381960;
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._7h = 9269087;
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._7h = 11301120;
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._7h = 4889070;
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._7h = 9517096;
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._7h = 16250616;
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._7h = 5335198;
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._7h = 14201600;
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._7h = 8032975;
        }
    }
    ;
    if ((_gd == "mud")) {
        {
            _ed._7h = 3889831;
        }
    }
    ;
    if ((_gd == "murder")) {
        {
            _ed._7h = 0;
        }
    }
    ;
    if ((_gd == "music")) {
        {
            _ed._7h = 10259037;
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._7h = 4494132;
        }
    }
    ;
    if ((_gd == "retro")) {
        {
            _ed._7h = 2434084;
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._7h = 4166841;
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._7h = 9253674;
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._7h = 9079434;
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._7h = 12239309;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._7h = 10836619;
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._7h = 14530690;
        }
    }
    ;
    return _ed._7h;
}

function _r4(_ed, _fd, _gd) {
    _ed._8h = 0;
    if ((_gd == "alien")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "australian")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "mud")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "murder")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "music")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "retro")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._8h = 100;
        }
    }
    ;
    return _ed._8h;
}

function _s4(_ed, _fd, _gd) {
    _ed._9h = 0;
    if ((_gd == "archer")) {
        {
            _ed._9h = 35;
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._9h = 45;
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._9h = 35;
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._9h = 45;
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._9h = 40;
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._9h = 40;
        }
    }
    ;
    if ((_gd == "australian")) {
        {
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._9h = 70;
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._9h = 28;
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._9h = 30;
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._9h = 2;
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._9h = 70;
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._9h = 50;
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._9h = 50;
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._9h = 40;
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._9h = 35;
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._9h = 35;
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._9h = 30;
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._9h = 30;
        }
    }
    ;
    if ((_gd == "mud")) {
        {
        }
    }
    ;
    if ((_gd == "murder")) {
        {
        }
    }
    ;
    if ((_gd == "music")) {
        {
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._9h = 90;
        }
    }
    ;
    if ((_gd == "retro")) {
        {
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._9h = 50;
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._9h = 35;
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._9h = 40;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._9h = 40;
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    return _ed._9h;
}

function _t4(_ed, _fd) {
    _ed._ah = "";
    while ((_ed._ah == "")) {
        {
            _ed._zg = floor(random(35));
            if ((_ed._zg == 0)) {
                {
                    _ed._ah = "classic";
                }
            }
            ;
            if ((_ed._zg == 1)) {
                {
                    _ed._ah = "archer";
                }
            }
            ;
            if ((_ed._zg == 2)) {
                {
                    _ed._ah = "disco";
                }
            }
            ;
            if ((_ed._zg == 3)) {
                {
                    _ed._ah = "female";
                }
            }
            ;
            if ((_ed._zg == 4)) {
                {
                    _ed._ah = "ice";
                }
            }
            ;
            if ((_ed._zg == 5)) {
                {
                    _ed._ah = "robot";
                }
            }
            ;
            if ((_ed._zg == 6)) {
                {
                    _ed._ah = "runner";
                }
            }
            ;
            if ((_ed._zg == 7)) {
                {
                    _ed._ah = "scientist";
                }
            }
            ;
            if ((_ed._zg == 8)) {
                {
                    _ed._ah = "alien";
                }
            }
            ;
            if ((_ed._zg == 10)) {
                {
                    _ed._ah = "basket";
                }
            }
            ;
            if ((_ed._zg == 11)) {
                {
                    _ed._ah = "bomb";
                }
            }
            ;
            if ((_ed._zg == 12)) {
                {
                    _ed._ah = "boxer";
                }
            }
            ;
            if ((_ed._zg == 14)) {
                {
                    _ed._ah = "clock";
                }
            }
            ;
            if ((_ed._zg == 16)) {
                {
                    _ed._ah = "cosmos";
                }
            }
            ;
            if ((_ed._zg == 18)) {
                {
                    _ed._ah = "fire";
                }
            }
            ;
            if ((_ed._zg == 19)) {
                {
                    _ed._ah = "fisher";
                }
            }
            ;
            if ((_ed._zg == 20)) {
                {
                    _ed._ah = "ghost";
                }
            }
            ;
            if ((_ed._zg == 21)) {
                {
                    _ed._ah = "indian";
                }
            }
            ;
            if ((_ed._zg == 22)) {
                {
                    _ed._ah = "maniac";
                }
            }
            ;
            if ((_ed._zg == 23)) {
                {
                    _ed._ah = "monk";
                }
            }
            ;
            if ((_ed._zg == 27)) {
                {
                    _ed._ah = "nature";
                }
            }
            ;
            if ((_ed._zg == 29)) {
                {
                    _ed._ah = "sponge";
                }
            }
            ;
            if ((_ed._zg == 30)) {
                {
                    _ed._ah = "super";
                }
            }
            ;
            if ((_ed._zg == 31)) {
                {
                    _ed._ah = "traffic";
                }
            }
            ;
            if ((_ed._zg == 32)) {
                {
                    _ed._ah = "tv";
                }
            }
            ;
            if ((_ed._zg == 33)) {
                {
                    _ed._ah = "twin";
                }
            }
            ;
            if ((_ed._zg == 34)) {
                {
                    _ed._ah = "water";
                }
            }
            ;
            if (_w4(_ed, _fd, _ed._ah) > 0.5) {
                {
                }
            } else {
                {
                    _ed._ah = "";
                }
            }
            ;
            if ((_ed._ah == "classic")) {
                {
                    _ed._ah = "";
                }
            }
            ;
        }
    }
    ;
    return _ed._ah;
}

function _u4(_ed, _fd, _gd) {
    _ed._bh = "";
    if (!(_ed._ch instanceof Array)) {
        _ed._ch = [];
        _ed._ch._B3 = 3186314606
    } else if (_ed._ch._B3 !== 3186314606) {
        _ed._ch = _ed._ch.slice(0);
        _ed._ch._B3 = 3186314606
    }
    _ed._ch[~~1] = "soccerfield";
    _ed._ch[~~2] = "winter";
    _ed._ch[~~3] = "lab";
    _ed._ch[~~4] = "runnertrack";
    _ed._ch[~~5] = "castle";
    _ed._ch[~~6] = "desert";
    _ed._ch[~~7] = "disco";
    _ed._ch[~~8] = "forest";
    _ed._ch[~~9] = "urban";
    _ed._ch[~~10] = "moon";
    _ed._ch[~~11] = "underwater";
    if ((_gd == "archer")) {
        {
            _ed._bh = "castle";
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._bh = "disco";
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._bh = "soccerfield";
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._bh = "winter";
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._bh = "lab";
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._bh = "runnertrack";
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._bh = "lab";
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._bh = "soccerfield";
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._bh = "moon";
        }
    }
    ;
    if ((_gd == "australian")) {
        {
            _ed._bh = "desert";
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._bh = "desert";
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._bh = "moon";
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._bh = "underwater";
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._bh = "desert";
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._bh = "underwater";
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._bh = "castle";
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._bh = "desert";
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._bh = "lab";
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._bh = "castle";
        }
    }
    ;
    if ((_gd == "mud")) {
        {
            _ed._bh = "forest";
        }
    }
    ;
    if ((_gd == "murder")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "music")) {
        {
            _ed._bh = "disco";
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._bh = "forest";
        }
    }
    ;
    if ((_gd == "retro")) {
        {
            _ed._bh = "soccerfield";
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._bh = "underwater";
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._bh = "urban";
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._bh = "lab";
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._bh = "soccerfield";
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._bh = "underwater";
        }
    }
    ;
    return _ed._bh;
}

function _v4(_ed, _fd) {
    if ((global._Ed == 0)) {
        {
            _ed._ah = "traffic";
        }
    }
    ;
    if ((global._Ed == 1)) {
        {
            _ed._ah = "fire";
        }
    }
    ;
    if ((global._Ed == 2)) {
        {
            _ed._ah = "indian";
        }
    }
    ;
    if ((global._Ed == 3)) {
        {
            _ed._ah = "clock";
        }
    }
    ;
    if ((global._Ed == 4)) {
        {
            _ed._ah = "ghost";
        }
    }
    ;
    if ((global._Ed == 5)) {
        {
            _ed._ah = "basket";
        }
    }
    ;
    if ((global._Ed == 6)) {
        {
            _ed._ah = "twin";
        }
    }
    ;
    if ((global._Ed == 7)) {
        {
            _ed._ah = "nature";
        }
    }
    ;
    if ((global._Ed == 8)) {
        {
            _ed._ah = "boxer";
        }
    }
    ;
    if ((global._Ed == 9)) {
        {
            _ed._ah = "alien";
        }
    }
    ;
    if ((global._Ed == 10)) {
        {
            _ed._ah = "cosmos";
        }
    }
    ;
    if ((global._Ed == 11)) {
        {
            _ed._ah = "maniac";
        }
    }
    ;
    if ((global._Ed == 12)) {
        {
            _ed._ah = "monk";
        }
    }
    ;
    if ((global._Ed > 12)) {
        {
            _ed._ah = "";
        }
    }
    ;
    return _ed._ah;
}

function _w4(_ed, _fd, _gd) {
    _ed._9h = 99;
    if ((_gd == "archer")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "classic")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._9h = 0;
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._9h = 1;
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._9h = 2;
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._9h = 3;
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._9h = 4;
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._9h = 5;
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._9h = 6;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._9h = 7;
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._9h = 8;
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._9h = 9;
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._9h = 10;
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._9h = 11;
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._9h = 12;
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._9h = 13;
        }
    }
    ;
    if ((global._Ed >= _ed._9h)) {
        {
            return 1;
        }
    } else {
        {
            return 0;
        }
    }
    ;
}

function _x4(_ed, _fd, _gd) {
    _ed._dh = "No key is set";
    _ed._eh = _fh(_gd);
    if ((((_ed._eh >= 33)) && ((_ed._eh <= 104)))) {
        {
            _ed._dh = _jf(_ed._eh);
        }
    }
    ;
    if ((((_ed._eh >= 96)) && ((_ed._eh <= 105)))) {
        {
            _ed._dh = ("Numpad" + _Hg((_ed._eh - 96)));
        }
    }
    ;
    if ((_ed._eh == 8)) {
        {
            _ed._dh = "Backspace";
        }
    }
    ;
    if ((_ed._eh == 13)) {
        {
            _ed._dh = "Enter";
        }
    }
    ;
    if ((_ed._eh == 16)) {
        {
            _ed._dh = "Shift";
        }
    }
    ;
    if ((_ed._eh == 17)) {
        {
            _ed._dh = "Alt";
        }
    }
    ;
    if ((_ed._eh == 18)) {
        {
            _ed._dh = "Alt";
        }
    }
    ;
    if ((_ed._eh == 20)) {
        {
            _ed._dh = "Caps Lock";
        }
    }
    ;
    if ((_ed._eh == 33)) {
        {
            _ed._dh = "Page Up";
        }
    }
    ;
    if ((_ed._eh == 32)) {
        {
            _ed._dh = "Space";
        }
    }
    ;
    if ((_ed._eh == 34)) {
        {
            _ed._dh = "Page Down";
        }
    }
    ;
    if ((_ed._eh == 36)) {
        {
            _ed._dh = "Home";
        }
    }
    ;
    if ((_ed._eh == 37)) {
        {
            _ed._dh = "Left arrow";
        }
    }
    ;
    if ((_ed._eh == 38)) {
        {
            _ed._dh = "Up arrow";
        }
    }
    ;
    if ((_ed._eh == 39)) {
        {
            _ed._dh = "Right arrow";
        }
    }
    ;
    if ((_ed._eh == 40)) {
        {
            _ed._dh = "Down arrow";
        }
    }
    ;
    if ((_ed._eh == 45)) {
        {
            _ed._dh = "Insert";
        }
    }
    ;
    if ((_ed._eh == 46)) {
        {
            _ed._dh = "Delete";
        }
    }
    ;
    if ((_ed._eh == 111)) {
        {
            _ed._dh = "/";
        }
    }
    ;
    if ((_ed._eh == 145)) {
        {
            _ed._dh = "Scrool Lock";
        }
    }
    ;
    if ((_ed._eh == 188)) {
        {
            _ed._dh = ";";
        }
    }
    ;
    if ((_ed._eh == 189)) {
        {
            _ed._dh = "-";
        }
    }
    ;
    if ((_ed._eh == 190)) {
        {
            _ed._dh = ":";
        }
    }
    ;
    if ((_ed._eh == 220)) {
        {
            _ed._dh = "1/2";
        }
    }
    ;
    if ((_ed._eh == 226)) {
        {
            _ed._dh = "><\\";
        }
    }
    ;
    return _ed._dh;
}

function _y4(_ed,
             _fd, _gd, _hd) {
    if (!(_ed._ch instanceof Array)) {
        _ed._ch = [];
        _ed._ch._B3 = 3186314606
    } else if (_ed._ch._B3 !== 3186314606) {
        _ed._ch = _ed._ch.slice(0);
        _ed._ch._B3 = 3186314606
    }
    _ed._ch[~~0] = "random";
    _ed._ch[~~1] = "soccerfield";
    _ed._ch[~~2] = "winter";
    _ed._ch[~~3] = "lab";
    _ed._ch[~~4] = "runnertrack";
    _ed._ch[~~5] = "castle";
    _ed._ch[~~6] = "desert";
    _ed._ch[~~7] = "disco";
    _ed._ch[~~8] = "forest";
    _ed._ch[~~9] = "urban";
    _ed._ch[~~10] = "moon";
    _ed._ch[~~11] = "underwater";
    _ed._gh = 7;
    for (_ed._Ng = 0; (_ed._Ng <= _ed._gh); _ed._Ng += 1) {
        {
            if ((_ed._ch[~~_ed._Ng] == _gd)) {
                {
                    _ed._hh = _ed._Ng;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._hh == _ed._gh)) {
        {
            _ed._ih = _ed._ch[~~0];
        }
    } else {
        {
            _ed._ih = _ed._ch[~~(_ed._hh + 1)];
        }
    }
    ;
    if ((_ed._hh == 0)) {
        {
            _ed._6h = "Random";
        }
    }
    ;
    if ((_ed._hh == 1)) {
        {
            _ed._6h = "Soccerfield";
        }
    }
    ;
    if ((_ed._hh == 2)) {
        {
            _ed._6h = "Winternight";
        }
    }
    ;
    if ((_ed._hh == 3)) {
        {
            _ed._6h = "Lab";
        }
    }
    ;
    if ((_ed._hh == 4)) {
        {
            _ed._6h = "Running track";
        }
    }
    ;
    if ((_ed._hh == 5)) {
        {
            _ed._6h = "Castle";
        }
    }
    ;
    if ((_ed._hh == 6)) {
        {
            _ed._6h = "Desert";
        }
    }
    ;
    if ((_ed._hh == 7)) {
        {
            _ed._6h = "Discoteque";
        }
    }
    ;
    if ((_ed._hh == 8)) {
        {
            _ed._6h = "Dark Forest";
        }
    }
    ;
    if ((_ed._hh == 9)) {
        {
            _ed._6h = "City";
        }
    }
    ;
    if ((_ed._hh == 10)) {
        {
            _ed._6h = "The moon";
        }
    }
    ;
    if ((_ed._hh == 11)) {
        {
            _ed._6h = "Underwater";
        }
    }
    ;
    if ((_hd == "title")) {
        {
            return _ed._6h;
        }
    }
    ;
    if ((_hd == "next")) {
        {
            return _ed._ih;
        }
    }
    ;
    if ((_hd == "load")) {
        {
            if ((_gd == "random")) {
                {
                    _ed._hh = (1 + floor(random(_ed._gh)));
                }
            }
            ;_X4(_ed, _fd, 0, (_ed._hh - 1), 1);
        }
    }
    ;
}

function _z4(_ed, _fd, _gd, _hd) {
    if (!(_ed._ch instanceof Array)) {
        _ed._ch = [];
        _ed._ch._B3 = 3186314606
    } else if (_ed._ch._B3 !== 3186314606) {
        _ed._ch = _ed._ch.slice(0);
        _ed._ch._B3 = 3186314606
    }
    _ed._ch[~~0] = "random";
    _ed._ch[~~1] = "No cheat";
    _ed._ch[~~2] = "coin";
    _ed._ch[~~3] = "low gravity";
    _ed._ch[~~4] = "high gravity";
    _ed._ch[~~5] = "manamodechange";
    _ed._ch[~~6] = "double ball";
    _ed._ch[~~7] = "nude runner";
    _ed._ch[~~8] = "beachsoccer";
    _ed._ch[~~9] = "american";
    _ed._ch[~~10] = "wind";
    _ed._gh = 10;
    for (_ed._Ng = 0; (_ed._Ng <= _ed._gh); _ed._Ng += 1) {
        {
            if ((_ed._ch[~~_ed._Ng] == _gd)) {
                {
                    _ed._hh = _ed._Ng;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._hh == _ed._gh)) {
        {
            _ed._ih = _ed._ch[~~0];
        }
    } else {
        {
            _ed._ih = _ed._ch[~~(_ed._hh + 1)];
        }
    }
    ;
    if ((_ed._hh == 0)) {
        {
            _ed._6h = "Random";
        }
    }
    ;
    if ((_ed._hh == 1)) {
        {
            _ed._6h = "No cheat";
        }
    }
    ;
    if ((_ed._hh == 2)) {
        {
            _ed._6h = "Coins = mana";
        }
    }
    ;
    if ((_ed._hh == 3)) {
        {
            _ed._6h = "Low gravity";
        }
    }
    ;
    if ((_ed._hh == 4)) {
        {
            _ed._6h = "High gravity";
        }
    }
    ;
    if ((_ed._hh == 5)) {
        {
            _ed._6h = "All Manamodes";
        }
    }
    ;
    if ((_ed._hh == 6)) {
        {
            _ed._6h = "Two balls";
        }
    }
    ;
    if ((_ed._hh == 7)) {
        {
            _ed._6h = "Nuderunner";
        }
    }
    ;
    if ((_ed._hh == 8)) {
        {
            _ed._6h = "Beach soccer";
        }
    }
    ;
    if ((_ed._hh == 9)) {
        {
            _ed._6h = "American";
        }
    }
    ;
    if ((_ed._hh == 10)) {
        {
            _ed._6h = "Wind";
        }
    }
    ;
    if ((_hd == "title")) {
        {
            return _ed._6h;
        }
    }
    ;
    if ((_hd == "next")) {
        {
            return _ed._ih;
        }
    }
    ;
}

function _A4(_ed, _fd, _gd, _hd, _id, _jd, _kd, _jh, _kh, _lh, _mh) {
    _ed._nh = _gd;
    _ed._oh = _hd;
    _ed._ph = _id;
    _ed._qh = _jd;
    _ed._rh = _kd;
    _ed._sh = _jh;
    _ed._th = _kh;
    _ed._uh = _hf(_ed._oh);
    _ed._vh = (_jd - 16);
    _ed._wh = (_kd - 16);
    _ed._xh = _hd;
    _ed._yh = _lh;
    if ((_mh == 1)) {
        {
            _zh(1);
        }
    } else {
        {
            _zh(0);
        }
    }
    ;_Ah(2);
    _Bh(0);
    _Ch((_ed._vh + 1), _ed._wh, _Dh(_ed._xh), 36, _Eh._Fh);
    _Ch(_ed._vh, (_ed._wh + 1), _Dh(_ed._xh), 36, _Eh._Fh);
    _Ch((_ed._vh - 1), _ed._wh, _Dh(_ed._xh), 36, _Eh._Fh);
    _Ch(_ed._vh, (_ed._wh - 1), _Dh(_ed._xh), 36, _Eh._Fh);
    _Bh(32768);
    _Ch(_ed._vh, _ed._wh, _Dh(_ed._xh), 36, _Eh._Fh);
}

function _B4(_ed, _fd, _gd, _hd, _id, _jd) {
    _ed._vh = _gd;
    _ed._wh = _hd;
    _ed._xh = _id;
    _ed._Gh = _jd;
    _Bh(0);
    _Hh((_ed._vh + 1), _ed._wh, _Dh(_ed._xh));
    _Hh(_ed._vh, (_ed._wh + 1), _Dh(_ed._xh));
    _Hh((_ed._vh - 1), _ed._wh, _Dh(_ed._xh));
    _Hh(_ed._vh, (_ed._wh - 1), _Dh(_ed._xh));
    _Bh(_ed._Gh);
    _Hh(_ed._vh, _ed._wh, _Dh(_ed._xh));
}

function _C4(_ed, _fd, _gd, _hd, _id) {
    _ed._Ih = 0 ? 1 : 0;
    if ((_gd == "classic")) {
        {
            _ed._Ih = 1 ? 1 : 0;
        }
    }
    ;
    if ((_gd == "archer")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 23);
        }
    }
    ;
    if ((_gd == "disco")) {
        {
            if ((_ed._rf == 1)) {
                {
                    _ed._Ih = 1 ? 1 : 0;
                }
            } else {
                {
                    _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 37);
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "female")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 24);
        }
    }
    ;
    if ((_gd == "ice")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 40);
        }
    }
    ;
    if ((_gd == "robot")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 48);
        }
    }
    ;
    if ((_gd == "runner")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 55);
        }
    }
    ;
    if ((_gd == "scientist")) {
        {
            _ed._Jh = _hd;
            if ((_Qf(_ed._Jh)._Bf == 1)) {
                {
                    _ed._Ih = 1 ? 1 : 0;
                }
            } else {
                {
                    _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 39);
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "alien")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 59);
        }
    }
    ;
    if ((_gd == "basket")) {
        {
            _ed._Pf = _45(_ed, _fd, _Qf(67).x, _Qf(67).y, 68);
            _Qf(_ed._Pf)._3h(_Qf(67)._Tb);
            _Qf(_ed._Pf)._Kh((_Qf(67)._Wg + 20));
            _Qf(67)._1g(_Qf(67).x + _Vg(15, (_Qf(67)._Wg - 90)));
            _Qf(67)._Tf(_Qf(67).y + _Xg(15, (_Qf(67)._Wg - 90)));
            _Qf(67)._Kh(_Qf(67)._Wg - 20);
            _Qf(67)._1g(_Qf(67).x + _Vg(15, (_Qf(67)._Wg + 90)));
            _Qf(67)._Tf(_Qf(67).y + _Xg(15, (_Qf(67)._Wg + 90)));
        }
    }
    ;
    if ((_gd == "bomb")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 38);
        }
    }
    ;
    if ((_gd == "boxer")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 31);
        }
    }
    ;
    if ((_gd == "builder")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 29);
            _Qf(_ed._Pf)._Uf(((_ed._Df * 2) + (_ed._2c * 1.2)));
            _Qf(_ed._Pf)._Yf((min(0, (_ed._3c / 2)) - 3 - abs((_ed._2c / 2))));
        }
    }
    ;
    if ((_gd == "clock")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 54);
        }
    }
    ;
    if ((_gd == "cosmos")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 32);
        }
    }
    ;
    if ((_gd == "cowboy")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 53);
        }
    }
    ;
    if ((_gd == "diver")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 46);
        }
    }
    ;
    if ((_gd == "fire")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 42);
        }
    }
    ;
    if ((_gd == "fisher")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 41);
        }
    }
    ;
    if ((_gd == "ghost")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 47);
        }
    }
    ;
    if ((_gd == "indian")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 50);
        }
    }
    ;
    if ((_gd == "maniac")) {
        {
            _ed._Pf = _45(_ed,
                _fd, _ed.x, _ed.y, 34);
        }
    }
    ;
    if ((_gd == "monk")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 60);
        }
    }
    ;
    if ((_gd == "nature")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 64);
        }
    }
    ;
    if ((_gd == "super")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 57);
        }
    }
    ;
    if ((_gd == "sponge")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 44);
        }
    }
    ;
    if ((_gd == "traffic")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 56);
        }
    }
    ;
    if ((_gd == "tv")) {
        {
            if ((_ed._zf == 1)) {
                {
                    _ed._Ih = 1 ? 1 : 0;
                }
            } else {
                {
                    _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 52);
                }
            }
            ;
        }
    }
    ;
    if ((_gd == "twin")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 62);
            _Qf(_ed._Pf)._Uf((_ed._Df * 10));
        }
    }
    ;
    if ((_gd == "water")) {
        {
            _ed._Pf = _45(_ed, _fd, _ed.x, _ed.y, 45);
        }
    }
    ;
    if ((_ed._Ih == 0)) {
        {
            _Qf(_ed._Pf)._Lh = _id;
            _Qf(_ed._Pf)._Rf = _ed.id;
            _Qf(_ed._Pf)._Mh = _hd;
            return 1;
        }
    } else {
        {
            return 0;
        }
    }
    ;
}

function _D4(_ed, _fd, _gd) {
    var _Nh;
    _Nh = 1 ? 1 : 0;
    if ((_gd == 1)) {
        {
            if (_Oh(global._Jd) > 0.5) {
                {
                }
            } else {
                {
                    _Nh = 0 ? 1 : 0;
                }
            }
            ;
            if ((_Qf(82).__f < 1)) {
                {
                    _Nh = 0 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    if ((_gd == 2)) {
        {
            if ((global._ud == 1)) {
                {
                    if ((_Qf(66)._ig == 0)) {
                        {
                            _Nh = 0 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
            if ((global._ud == 0)) {
                {
                    if (_Oh(global._Pd) > 0.5) {
                        {
                        }
                    } else {
                        {
                            _Nh = 0 ? 1 : 0;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_Qf(82)._0g < 1)) {
                {
                    _Nh = 0 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
    return _Nh;
}

function _E4(_ed, _fd) {
    _ed._Ph = 1;
    if ((global._Qh == "Low")) {
        {
            _ed._Ph = 0.7;
        }
    }
    ;
    if ((global._Qh == "Medium")) {
        {
            _ed._Ph = 1;
        }
    }
    ;
    if ((global._Qh == "High")) {
        {
            _ed._Ph = 1.4;
        }
    }
    ;_ed._Rh = 0 ? 1 : 0;
    _ed._Sh = 0;
    if (_Tg(66) > 0.5) {
        {
            if ((((_Qf(66).x >= 305)) && ((_Qf(66)._uf == 0)))) {
                {
                    if ((global._Th == "Bonus")) {
                        {
                            _ed._Rh = 1 ? 1 : 0;
                            _ed._Sh = 0.5;
                        }
                    }
                    ;
                    if ((global._Th == "Offensive")) {
                        {
                            _ed._Rh = 1 ? 1 : 0;
                            _ed._Sh = 1;
                        }
                    }
                    ;
                    if ((global._Th == "Plain")) {
                        {
                            _ed._Sh = 0.1;
                        }
                    }
                    ;
                    if ((global._Th == "Round")) {
                        {
                        }
                    }
                    ;
                    if ((global._Th == "Equalize")) {
                        {
                            _ed._Uh = (_ed._Vh - _ed._Wh);
                            if ((_ed._Uh >= 0)) {
                                {
                                    _ed._Sh = min(0.25, (0.1 + (_ed._Uh * 0.05)));
                                }
                            }
                            ;
                            if ((_ed._Uh == (-1))) {
                                {
                                    _ed._Sh = 0.05;
                                }
                            }
                            ;
                            if ((_ed._Uh < (-1))) {
                                {
                                    _ed._Sh = 0.02;
                                }
                            }
                            ;_ed._Ph += 1;
                        }
                    }
                    ;
                }
            } else {
                {
                    if ((global._Th == "Bonus")) {
                        {
                            _ed._Sh = 0.06;
                        }
                    }
                    ;
                    if ((global._Th == "Offensive")) {
                        {
                            _ed._Sh = 0;
                        }
                    }
                    ;
                    if ((global._Th == "Plain")) {
                        {
                            _ed._Sh = 0.1;
                        }
                    }
                    ;
                    if ((global._Th == "Round")) {
                        {
                        }
                    }
                    ;
                    if ((global._Th == "Equalize")) {
                        {
                            _ed._Uh = (_ed._Vh - _ed._Wh);
                            if ((_ed._Uh >= 0)) {
                                {
                                    _ed._Sh = min(0.25, (0.1 + (_ed._Uh * 0.05)));
                                }
                            }
                            ;
                            if ((_ed._Uh == (-1))) {
                                {
                                    _ed._Sh = 0.05;
                                }
                            }
                            ;
                            if ((_ed._Uh < (-1))) {
                                {
                                    _ed._Sh = 0.02;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;_ed._Sh = (_ed._Sh * _ed._Ph);
        }
    }
    ;_ed._Xh = 0 ? 1 : 0;
    _ed._Yh = 0;
    if (_Tg(65) > 0.5) {
        {
            if ((((_Qf(65).x <= 255)) && ((_Qf(65)._uf == 0)))) {
                {
                    if ((global._Th == "Bonus")) {
                        {
                            _ed._Xh = 1 ? 1 : 0;
                            _ed._Yh = 0.5;
                        }
                    }
                    ;
                    if ((global._Th == "Offensive")) {
                        {
                            _ed._Xh = 1 ? 1 : 0;
                            _ed._Yh = 1;
                        }
                    }
                    ;
                    if ((global._Th == "Plain")) {
                        {
                            _ed._Yh = 0.1;
                        }
                    }
                    ;
                    if ((global._Th == "Round")) {
                        {
                        }
                    }
                    ;
                    if ((global._Th == "Equalize")) {
                        {
                            _ed._Uh = (_ed._Wh - _ed._Vh);
                            if ((_ed._Uh >= 0)) {
                                {
                                    _ed._Yh = min(0.25, (0.1 + (_ed._Uh * 0.05)));
                                }
                            }
                            ;
                            if ((_ed._Uh == (-1))) {
                                {
                                    _ed._Yh = 0.05;
                                }
                            }
                            ;
                            if ((_ed._Uh < (-1))) {
                                {
                                    _ed._Yh = 0.02;
                                }
                            }
                            ;_ed._Ph += 1;
                        }
                    }
                    ;
                }
            } else {
                {
                    if ((global._Th == "Bonus")) {
                        {
                            _ed._Yh = 0.06;
                        }
                    }
                    ;
                    if ((global._Th == "Offensive")) {
                        {
                            _ed._Yh = 0;
                        }
                    }
                    ;
                    if ((global._Th == "Plain")) {
                        {
                            _ed._Yh = 0.1;
                        }
                    }
                    ;
                    if ((global._Th == "Round")) {
                        {
                        }
                    }
                    ;
                    if ((global._Th == "Equalize")) {
                        {
                            _ed._Uh = (_ed._Wh - _ed._Vh);
                            if ((_ed._Uh >= 0)) {
                                {
                                    _ed._Yh = min(0.25, (0.1 + (_ed._Uh * 0.05)));
                                }
                            }
                            ;
                            if ((_ed._Uh == (-1))) {
                                {
                                    _ed._Yh = 0.05;
                                }
                            }
                            ;
                            if ((_ed._Uh < (-1))) {
                                {
                                    _ed._Yh = 0.02;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;_ed._Yh = (_ed._Yh * _ed._Ph);
        }
    }
    ;
    if (((_Tg(70) > 0.5) || (_Tg(54) > 0.5))) {
        {
        }
    }
    ;
    {
        _ed.__f += _ed._Yh;
        _ed._0g += _ed._Sh;
    }
    ;
}

function _F4(_ed, _fd, _gd) {
    if ((_gd == "settings")) {
        {
            global._Th = "Bonus";
            global._Qh = "Medium";
            global._Zh = "Very easy";
            global.__h = "soccerfield";
            global._0i = 0;
            global._1i = "No cheat";
            global._rd = "classic";
            return;
        }
    }
    ;_ed._2i = 0;
    if ((_ed._3i == _ed._2i)) {
        {
            if ((_ed._4i == 0)) {
                {
                    _45(_ed, _fd, 400, 370, 65);
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Hello and welcome to#Super Slime Soccer!#Press down after reading!";
            _ed._Rf = 65;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "I am the Classic Slime. I will teach how to play!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Use the arrow keys to move your slime!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            if ((_ed._4i > 300)) {
                {
                    _ed._3i += 1;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "The objective in a soccer match is to score at your opponents goal. Do that by pushing the ball with your slime!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            if ((_ed._4i == 0)) {
                {
                    _45(_ed, _fd, 280, 300, 67);
                    _45(_ed, _fd, 42, 340, 73);
                }
            }
            ;
            if ((_Qf(82)._Vh >= 3)) {
                {
                    _ed._3i = 7;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Good job!#While scoring at your opponents goal, you will of course have to defend your own. Try to defend your goal now!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed._5i = 700;
            if ((_ed._4i == 0)) {
                {
                    {
                        var _6i = _dg(73);
                        for (var _7i in _6i) {
                            if (!_6i.hasOwnProperty(_7i)) continue;
                            var _8i = _6i[_7i];
                            if (_8i._gg) continue;
                            if (!_8i._hg) continue;
                            {
                                _9i(_8i);
                            }
                        }
                    }
                    ;_45(_ed, _fd, 518, 340, 73);
                    global._sd = "classic";
                    _45(_ed, _fd, 100, 370, 66);
                    _ed._ai = _45(_ed, _fd, 280, 200, 89);
                    _Qf(_ed._ai)._5i = _ed._5i;
                }
            }
            ;
            if ((_ed._4i > _ed._5i)) {
                {
                    _ed._3i += 1;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            {
                var _bi = _dg(89);
                for (var _ci in _bi) {
                    if (!_bi.hasOwnProperty(_ci)) continue;
                    var _di = _bi[_ci];
                    if (_di._gg) continue;
                    if (!_di._hg) continue;
                    {
                        _9i(_di);
                    }
                }
            }
            ;
            {
                var _ei = _dg(73);
                for (var _fi in _ei) {
                    if (!_ei.hasOwnProperty(_fi)) continue;
                    var _gi = _ei[_fi];
                    if (_gi._gg) continue;
                    if (!_gi._hg) continue;
                    {
                        _9i(_gi);
                    }
                }
            }
            ;
            {
                var _hi = _dg(66);
                for (var _ii in _hi) {
                    if (!_hi.hasOwnProperty(_ii)) continue;
                    var _ji = _hi[_ii];
                    if (_ji._gg) continue;
                    if (!_ji._hg) continue;
                    {
                        _9i(_ji);
                    }
                }
            }
            ;_ed.__d = "Nice defence!#You have now learned the basic mechanics of Super Slime Soccer!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Now you must learn how to use special abillities. Since I have no such ability, the archer slime will be your teacher from now on!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            global._rd = "archer";
            if ((_ed._4i > 30)) {
                {
                    _ed._3i += 1;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "That's right! I'll teach you the basics of special abilities now!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Each slime has it's own special ability. Fore example, mine is my bow and my arrows!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "I can shoot an arrow towards the ball to push it. I can both use my ability to defend my own goal, and to score at my opponents!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Press space to use my ability!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            if (_Tg(23) > 0.5) {
                {
                    _ed._3i += 1;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            if (_Tg(23) > 0.5) {
                {
                }
            } else {
                {
                    _ed._3i += 1;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Each time I use my ability, it costs me energy. My energybar is at the top of the screen, and if I don't have enough energy, I can not use my ability!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "My energy will regenerate according to the corrent rules of energy regeneration!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "The default setting for energy regeneration is 'Bonus'!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "'Bonus' means that I will regenerate energy over time, but if I cross the middle line, My energybar will begin to glow, and I will regenate much faster!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            if ((_ed._4i > 100)) {
                {
                    _ed._3i += 1;
                }
            }
            ;
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "You have now finished the tutorial. Congratulations!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed.__d = "Your game will be saved automaticly! Goodbye!";
        }
    }
    ;_ed._2i += 1;
    if ((_ed._3i == _ed._2i)) {
        {
            _ed._ki = 1 ? 1 : 0;
        }
    }
    ;_ed._2i += 1;
}

function _G4(_ed, _fd, _gd) {
    if ((_gd == 1)) {
        {
            _ed._ah = "Tutorial";
        }
    }
    ;
    if ((_gd == 2)) {
        {
            _ed._ah = "The challenge";
        }
    }
    ;
    if ((_gd == 3)) {
        {
            _ed._ah = "Help me";
        }
    }
    ;
    if ((_gd == 4)) {
        {
            _ed._ah = "Volleyball?";
        }
    }
    ;
    if ((_gd == 5)) {
        {
            _ed._ah = "Final battle!";
        }
    }
    ;
}

function _H4(_ed, _fd) {
    return 0;
}

function _I4(_ed, _fd, _gd, _hd, _id, _jd, _kd) {
    var _li;
    _li = _gd;
    if (!(_ed._mi instanceof Array)) {
        _ed._mi = [];
        _ed._mi._B3 = 2159895725
    } else if (_ed._mi._B3 !== 2159895725) {
        _ed._mi = _ed._mi.slice(0);
        _ed._mi._B3 = 2159895725
    }
    _ed._mi[~~_li] = 0;
    if (!(_ed._ni instanceof Array)) {
        _ed._ni = [];
        _ed._ni._B3 = 3973281613
    } else if (_ed._ni._B3 !== 3973281613) {
        _ed._ni = _ed._ni.slice(0);
        _ed._ni._B3 = 3973281613
    }
    _ed._ni[~~_li] = _hd;
    if (!(_ed._oi instanceof Array)) {
        _ed._oi = [];
        _ed._oi._B3 = 3362905859
    } else if (_ed._oi._B3 !== 3362905859) {
        _ed._oi = _ed._oi.slice(0);
        _ed._oi._B3 = 3362905859
    }
    _ed._oi[~~_li] = _id;
    if (!(_ed._pi instanceof Array)) {
        _ed._pi = [];
        _ed._pi._B3 = 1086281423
    } else if (_ed._pi._B3 !== 1086281423) {
        _ed._pi = _ed._pi.slice(0);
        _ed._pi._B3 = 1086281423
    }
    _ed._pi[~~_li] = _jd;
    if (!(_ed._qi instanceof Array)) {
        _ed._qi = [];
        _ed._qi._B3 = 2744312202
    } else if (_ed._qi._B3 !== 2744312202) {
        _ed._qi = _ed._qi.slice(0);
        _ed._qi._B3 = 2744312202
    }
    _ed._qi[~~_li] = _kd;
}

function _J4(_ed, _fd, _gd, _hd, _id, _jd, _kd) {
    var _9f, _ri, _si, _ti, _ui, _vi, _li;
    _9f = _gd;
    _ri = _hd;
    _si = _id;
    _li = _kd;
    _vi = 0;
    if ((_jd == 1)) {
        {
            _vi = (-(_wi(_Dh(_9f)) + (_hf(_9f) * _ed._qi[~~_li])) / 2);
        }
    }
    ;
    if ((_jd == 2)) {
        {
            _vi = -(_wi(_Dh(_9f)) + (_hf(_9f) * _ed._qi[~~_li]));
        }
    }
    ;
    if (!(_ed._mi instanceof Array)) {
        _ed._mi = [];
        _ed._mi._B3 = 2159895725
    }
    else if (_ed._mi._B3 !== 2159895725) {
        _ed._mi = _ed._mi.slice(0);
        _ed._mi._B3 = 2159895725
    }
    _ed._mi[~~_li] += _ed._ni[~~_li];
    if ((_ed._mi[~~_li] > 360)) {
        {
            _ed._mi[~~_li] = 0;
        }
    }
    ;
    for (_ed._Ng = 0; (_ed._Ng < _hf(_9f)); _ed._Ng += 1) {
        {
            _ti = (_si + _Xg((_ed._oi[~~_li] / 2), (_ed._mi[~~_li] + (_ed._Ng * _ed._pi[~~_li]))));
            _ri += (_wi(_Dh(_xi(_9f, _ed._Ng, 1))) + _ed._qi[~~_li]);
            _ed._yi = _xi(_9f, (_ed._Ng + 1), 1);
            _Ah(2);
            _Bh(0);
            _Ch((_ri + _vi + 1), _ti, _Dh(_ed._yi), 36, _Eh._Fh);
            _Ch((_ri + _vi), (_ti + 1), _Dh(_ed._yi), 36, _Eh._Fh);
            _Ch((_ri + _vi - 1), _ti, _Dh(_ed._yi),
                36, _Eh._Fh);
            _Ch((_ri + _vi), (_ti - 1), _Dh(_ed._yi), 36, _Eh._Fh);
            _Bh(32768);
            _Ch((_ri + _vi), _si, _Dh(_ed._yi), 36, _Eh._Fh);
        }
    }
    ;
}

function _K4(_ed, _fd, _gd) {
    if ((global._Sd == 1)) {
        {
            _85(_ed, _fd, _gd);
        }
    }
    ;
}

function _L4(_ed, _fd, _gd) {
    if ((global._Sd == 1)) {
        {
            _75(_ed, _fd, _gd);
        }
    }
    ;
}

function _M4(_ed, _fd, _gd) {
    if ((global._Rd == 1)) {
        {
            _75(_ed, _fd, _gd);
        }
    }
    ;
}

function _N4(_ed, _fd, _gd) {
    if ((global._Td == 1)) {
        {
            _K4(_ed, _fd, _gd);
        }
    }
    ;
}

function _O4(_ed, _fd, _gd, _hd) {
    _ed._zi = 0 ? 1 : 0;
    if ((global._0i == 0)) {
        {
        }
    } else {
        {
            if ((((_Qf(82)._Vh >= global._0i)) || ((_Qf(82)._Wh >= global._0i)))) {
                {
                    _ed._zi = 1 ? 1 : 0;
                    global._Ai = _Qf(82)._Wh;
                    global._Bi = _Qf(82)._Vh;
                }
            }
            ;
            if ((_Qf(82)._Vh >= global._0i)) {
                {
                    global._qd = 1;
                }
            }
            ;
            if ((_Qf(82)._Wh >= global._0i)) {
                {
                    global._qd = 2;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._zi == 1)) {
        {
            _Ci(1);
        }
    }
    ;_95(_ed, _fd, 26);
    _95(_ed, _fd, 27);
    _95(_ed, _fd, 22);
    _95(_ed, _fd, 23);
    _ed._Di = "normal";
    if ((abs(_hd) > 15)) {
        {
            _ed._Di = "power goal";
        }
    }
    ;
    if ((((_Qf(87).__g == 1)) && ((_gd == 2)))) {
        {
            _ed._Di = "own goal";
        }
    }
    ;
    if ((((_Qf(87).__g == 2)) && ((_gd == 1)))) {
        {
            _ed._Di = "own goal";
        }
    }
    ;
    if ((_Qf(87)._Ei < 150)) {
        {
            _ed._Di = "speed goal";
        }
    }
    ;
    if ((_Qf(87)._Ei > 1600)) {
        {
            _ed._Di = "finally";
        }
    }
    ;
    if ((((_Qf(65).x < 160)) && ((_gd == 1)))) {
        {
            _ed._Di = "follow";
        }
    }
    ;
    if ((((_Qf(66).x > 380)) && ((_gd == 2)))) {
        {
            _ed._Di = "follow";
        }
    }
    ;
    if ((((_Qf(65).x > 420)) && ((_gd == 1)))) {
        {
            _ed._Di = "camper";
        }
    }
    ;
    if ((((_Qf(66).x < 120)) && ((_gd == 2)))) {
        {
            _ed._Di = "camper";
        }
    }
    ;
    if ((_gd == 1)) {
        {
            _Qf(87)._Fi = max(1, (_Qf(87)._Fi + 1));
        }
    }
    ;
    if ((_gd == 2)) {
        {
            _Qf(87)._Fi = min((-1), (_Qf(87)._Fi - 1));
        }
    }
    ;
    if ((abs(_Qf(87)._Fi) == 3)) {
        {
            _ed._Di = "hattrick";
        }
    }
    ;
    if ((abs(_Qf(87)._Fi) == 6)) {
        {
            _ed._Fi = 0;
            _ed._Di = "humiliation";
        }
    }
    ;
    if ((_ed._Di == "speed goal")) {
        {
            _N4(_ed,
                _fd, 63);
            _Qf(84).__d = "SPEED GOAL";
        }
    }
    ;
    if ((_ed._Di == "own goal")) {
        {
            if ((0 == floor(random(2)))) {
                {
                    _N4(_ed, _fd, 60);
                }
            } else {
                {
                    _N4(_ed, _fd, 61);
                }
            }
            ;_Qf(84).__d = "OWN GOAL";
        }
    }
    ;
    if ((_ed._Di == "power goal")) {
        {
            _N4(_ed, _fd, 62);
            _Qf(84).__d = "POWER GOAL";
        }
    }
    ;
    if ((_ed._Di == "hattrick")) {
        {
            _N4(_ed, _fd, 55);
            _Qf(84).__d = "HATTRICK";
        }
    }
    ;
    if ((_ed._Di == "follow")) {
        {
            _N4(_ed, _fd, 54);
            _Qf(84).__d = "FOLLOWTHROUGH GOAL";
        }
    }
    ;
    if ((_ed._Di == "camper")) {
        {
            _N4(_ed, _fd, 70);
            _Qf(84).__d = "CAMPER GOAL";
        }
    }
    ;
    if ((_ed._Di == "humiliation")) {
        {
            _N4(_ed, _fd, 56);
            _Qf(84).__d = "HUMILIATION";
        }
    }
    ;
    if ((_ed._Di == "finally")) {
        {
            _N4(_ed, _fd, 73);
            _Qf(84).__d = "FINALLY";
        }
    }
    ;
    if ((_ed._Di == "normal")) {
        {
            _ed._Gi = floor(random(8));
            if ((_ed._Gi == 0)) {
                {
                    _N4(_ed, _fd, 64);
                }
            }
            ;
            if ((_ed._Gi == 1)) {
                {
                    _N4(_ed, _fd, 65);
                }
            }
            ;
            if ((_ed._Gi == 2)) {
                {
                    _N4(_ed, _fd, 66);
                }
            }
            ;
            if ((_ed._Gi == 3)) {
                {
                    _N4(_ed, _fd, 67);
                }
            }
            ;
            if ((_ed._Gi == 4)) {
                {
                    _N4(_ed, _fd, 68);
                }
            }
            ;
            if ((_ed._Gi == 5)) {
                {
                    _N4(_ed, _fd, 69);
                }
            }
            ;
            if ((_ed._Gi == 6)) {
                {
                    _N4(_ed, _fd, 71);
                }
            }
            ;
            if ((_ed._Gi == 7)) {
                {
                    _N4(_ed, _fd, 72);
                }
            }
            ;_Qf(84).__d = "GOAL!";
        }
    }
    ;_Qf(87)._Ei = 0;
    if ((global._Th == "Round")) {
        {
            _Qf(82).__f = 100;
            _Qf(82)._0g = 100;
        }
    }
    ;
    {
        var _Hi = _dg(21);
        for (var _Ii in _Hi) {
            if (!_Hi.hasOwnProperty(_Ii)) continue;
            var _Ji = _Hi[_Ii];
            if (_Ji._gg) continue;
            if (!_Ji._hg) continue;
            {
                _9i(_Ji);
            }
        }
    }
    ;_ed._Ki = 0 ? 1 : 0;
    _ed._Li = 0 ? 1 : 0;
    _ed._Mi = 0 ? 1 : 0;
    if (_Tg(67) > 0.5) {
        {
            _ed._Ki = 1 ? 1 : 0;
        }
    }
    ;
    if (_Tg(65) > 0.5) {
        {
            _ed._Li = 1 ? 1 : 0;
        }
    }
    ;
    if (_Tg(66) > 0.5) {
        {
            _ed._Mi = 1 ? 1 : 0;
        }
    }
    ;
    {
        var _Ni = _dg(67);
        for (var _Oi in _Ni) {
            if (!_Ni.hasOwnProperty(_Oi)) continue;
            var _Pi = _Ni[_Oi];
            if (_Pi._gg) continue;
            if (!_Pi._hg) continue;
            {
                _9i(_Pi);
            }
        }
    }
    ;
    {
        var _Qi = _dg(68);
        for (var _Ri in _Qi) {
            if (!_Qi.hasOwnProperty(_Ri)) continue;
            var _Si = _Qi[_Ri];
            if (_Si._gg) continue;
            if (!_Si._hg) continue;
            {
                _9i(_Si);
            }
        }
    }
    ;
    {
        var _Ti = _dg(76);
        for (var _Ui in _Ti) {
            if (!_Ti.hasOwnProperty(_Ui)) continue;
            var _Vi = _Ti[_Ui];
            if (_Vi._gg) continue;
            if (!_Vi._hg) continue;
            {
                _9i(_Vi);
            }
        }
    }
    ;
    {
        var _Wi = _dg(80);
        for (var _Xi in _Wi) {
            if (!_Wi.hasOwnProperty(_Xi)) continue;
            var _Yi = _Wi[_Xi];
            if (_Yi._gg) continue;
            if (!_Yi._hg) continue;
            {
                _9i(_Yi);
            }
        }
    }
    ;
    if ((_ed._Ki == 1)) {
        {
            _45(_ed, _fd, 280, (300 - random(250)), 67);
        }
    }
    ;
    if ((_ed._Li == 1)) {
        {
            _45(_ed, _fd, 460, 320, 65);
        }
    }
    ;
    if ((_ed._Mi == 1)) {
        {
            _45(_ed, _fd, 100, 320, 66);
        }
    }
    ;
}

function _P4(_ed,
             _fd, _gd, _hd) {
    var _Zi = _hd;
    if (!(_Zi > 0.5)) {
        {
            _Og(_ed, _gd);
        }
    } else {
        {
            _Ug(_ed, _gd);
        }
    }
    ;
}

function _Q4(_ed, _fd, _gd, _hd, _id) {
    if (!(_wg(_gd) > 0.5)) {
        {
            __i(("creating instance for non-existent object" + _Hg(_ed.id)));
            return 0;
        }
    }
    ;
    if (global._0j > 0.5) {
        {
            _45(_ed, _fd, (_ed.x + _hd), (_ed.y + _id), _gd);
        }
    } else {
        {
            _45(_ed, _fd, _hd, _id, _gd);
        }
    }
    ;
}

function _R4(_ed, _fd) {
    _9i(_ed);
}

function _S4(_ed, _fd, _gd, _hd, _id) {
    if (_id > 0.5) {
        {
            _1j(_ed, _gd, _hd);
        }
    } else {
        {
            _Xf(_ed, _gd, _hd);
        }
    }
    ;
}

function _T4(_ed, _fd, _gd, _hd) {
    _2j(_ed, _hd, _gd);
}

function _U4(_ed, _fd, _gd, _hd) {
    var _3j = _gd;
    var _4j = _hd;
    if (global._0j > 0.5) {
        {
            _3j += _ed._5j;
            _4j += _ed._Zf;
        }
    }
    ;_ed._Zf = _4j;
    _ed._5j = _3j;
}

function _V4(_ed, _fd, _gd) {
    var _4j = _gd;
    if (global._0j > 0.5) {
        {
            _4j += _ed._3c;
        }
    }
    ;_ed._Yf(_4j);
}

function _W4(_ed, _fd) {
    global._6j = (-1);
    global._7j = [];
    global._0j = 0 ? 1 : 0;
    global._8j = [];
    for (var _Ng = 0; (_Ng <= 15); ++_Ng) {
        {
            if (!(global._8j instanceof Array)) {
                global._8j = [];
                global._8j._B3 = 3964555187
            } else if (global._8j._B3 !== 3964555187) {
                global._8j = global._8j.slice(0);
                global._8j._B3 = 3964555187
            }
            global._8j[~~_Ng] = (-1);
            if (!(global._7j instanceof Array)) {
                global._7j = [];
                global._7j._B3 = 3134195086
            } else if (global._7j._B3 !== 3134195086) {
                global._7j = global._7j.slice(0);
                global._7j._B3 = 3134195086
            }
            global._7j[~~_Ng] = (-1);
        }
    }
    ;
}

function _X4(_ed, _fd, _gd, _hd, _id) {
    var _9j = _gd;
    var _aj = _hd;
    var _bj = _id;
    var _cj = __4(_ed, _fd, _aj);
    _Y4(_ed, _fd, _9j, _aj, _bj, _cj);
    var _dj = _05(_ed, _fd, _9j, _aj, _cj);
    return _dj;
}

function _Y4(_ed, _fd, _gd, _hd, _id, _jd) {
    var _9j = _gd;
    var _aj = _hd;
    var _bj = _id;
    var _cj = _jd;
    if ((_cj[~~0] == (-1))) {
        {
            return (-1);
        }
    }
    ;var _ej = _cj[~~0];
    var _fj = _cj[~~1];
    var _gj = _cj[~~2];
    if ((_9j == 1)) {
        {
            if ((round(_bj) != round(_gj))) {
                {
                    var _hj = _ij(_ej);
                    var _jj = _kj(_ej);
                    var _lj = _mj(_ej);
                    var _nj = _oj(_ej);
                    var _pj = _qj(_ej);
                    var _rj = _sj(_ej);
                    var _tj = _uj(_ej);
                    var _vj = _wj(_ej);
                    var _xj = _yj(_ej);
                    var _zj = _Aj(_fj);
                    var _Bj = _Cj(_fj);
                    var _Dj = _Ej(_fj);
                    var _Fj = _Gj(_fj);
                    _15(_ed, _fd, _aj, _hj, _bj, _jj, _zj, _Bj, _lj, _nj, _vj, _xj, _pj, _Dj, _Fj, _rj, _tj);
                }
            }
            ;
        }
    } else {
        {
            switch (_9j) {
                case 0:
                    _Hj(_ej, _bj);
                    break;
                case 2:
                    _Ij(_ej, _bj);
                    break;
                case 3:
                    _Jj(_fj, _bj);
                    break;
                case 4:
                    _Kj(_fj, _bj);
                    break;
                case 7:
                    _Lj(_ej, _bj);
                    break;
                case 8:
                    _Mj(_ej, _bj);
                    break;
                case 9:
                    _Nj(_ej, _bj);
                    break;
                case 10:
                    _Oj(_ej, _bj);
                    break;
                case 11:
                    _Pj(_fj, _bj);
                    break;
                case 12:
                    _Qj(_fj, _bj);
                    break;
                case 13:
                    _Rj(_ej, _bj);
                    break;
                case 14:
                    _Sj(_ej, _bj);
                    break;
                default :
                    break;
            }
            ;
        }
    }
    ;
    return (-1);
}

function _Z4(_ed, _fd) {
}

function __4(_ed, _fd, _gd) {
    var _aj = _gd;
    var _Tj;
    if (!(_Tj instanceof Array)) {
        _Tj = [];
        _Tj._B3 = -128
    } else if (_Tj._B3 !== -128) {
        _Tj = _Tj.slice(0);
        _Tj._B3 = -128
    }
    _Tj[~~0] = (-1);
    _Tj[~~1] = (-1);
    _Tj[~~2] = (-1);
    var _Uj = "Compatibility_Foreground_";
    var _Vj = "Compatibility_Background_";
    var _Wj = _hf(_Uj);
    var _Xj = _hf(_Vj);
    var _Yj = _Zj();
    var __j = _0k(_Yj);
    var _1k;
    var _fj = (-1);
    var _2k = 0 ? 1 : 0;
    for (_1k = 0; (_1k < __j); _1k++) {
        {
            var _3k = _4k(_Yj[~~_1k]);
            if ((_5k(_Uj, _3k) > 0)) {
                {
                    var _6k = _if(_3k, (_Wj + 1));
                    if ((_6k == "")) {
                        continue
                    }
                    ;var _7k = _fh(_6k);
                    if ((_7k == _aj)) {
                        {
                            _fj = _Yj[~~_1k];
                            _2k = 1 ? 1 : 0;
                            break;
                        }
                    }
                    ;
                }
            } else {
                if ((_5k(_Vj, _3k) > 0)) {
                    {
                        var _6k = _if(_3k, (_Xj + 1));
                        if ((_6k == "")) {
                            continue
                        }
                        ;var _7k = _fh(_6k);
                        if ((_7k == _aj)) {
                            {
                                _fj = _Yj[~~_1k];
                                _2k = 0 ? 1 : 0;
                                break;
                            }
                        }
                        ;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_fj != (-1))) {
        {
            var _8k = _9k(_fj);
            var _ak = _0k(_8k);
            for (_1k = 0; (_1k < _ak); _1k++) {
                {
                    if ((_bk(_8k[~~_1k]) == 1)) {
                        {
                            _Tj[~~0] = _8k[~~_1k];
                            _Tj[~~1] = _fj;
                            _Tj[~~2] = _2k;
                        }
                    }
                    ;
                }
            }
            ;
        }
    } else {
        {
            var _ck = _15(_ed, _fd, _aj, 0, 0, (-1), 0, 0, 1, 1, 1, 1, 1, 0, 0, 16777215, 1);
            _Tj[~~0] = _ck[~~0];
            _Tj[~~1] = _ck[~~1];
            _Tj[~~2] = 0 ? 1 : 0;
        }
    }
    ;
    return _Tj;
}

function _05(_ed, _fd, _gd, _hd, _id) {
    var _9j = _gd;
    var _aj = _hd;
    var _cj = _id;
    if ((((_cj[~~0] == (-1))) || ((_dk(_cj[~~1], _cj[~~0]) == 0)))) {
        {
            _cj = __4(_ed, _fd, _aj);
            if ((_cj[~~0] == (-1))) {
                return (-1)
            }
            ;
        }
    }
    ;var _dj = (-1);
    var _ej = _cj[~~0];
    var _fj = _cj[~~1];
    var _gj = _cj[~~2];
    switch (_9j) {
        case 0:
            _dj = _ij(_ej);
            break;
        case 1:
            _dj = _gj;
            break;
        case 2:
            _dj = _kj(_ej);
            break;
        case 3:
            _dj = _Aj(_fj);
            break;
        case 4:
            _dj = _Cj(_fj);
            break;
        case 5:
            _dj = _ek(_fk(_ej));
            break;
        case 6:
            _dj = _gk(_fk(_ej));
            break;
        case 7:
            _dj = _mj(_ej);
            break;
        case 8:
            _dj = _oj(_ej);
            break;
        case 9:
            _dj = _wj(_ej);
            break;
        case 10:
            _dj = _yj(_ej);
            break;
        case 11:
            _dj = _Ej(_fj);
            break;
        case 12:
            _dj = _Gj(_fj);
            break;
        case 13:
            _dj = _sj(_ej);
            break;
        case 14:
            _dj = _uj(_ej);
            break;
        default :
            break;
    }
    ;
    return _dj;
}

function _15(_ed, _fd, _gd, _hd, _id, _jd, _kd, _jh, _kh, _lh, _mh, _hk, _ik, _jk, _kk, _lk, _mk) {
    var _aj = _gd;
    var _nk = _hd;
    var _ok = _id;
    var _pk = _jd;
    var _zj = _kd;
    var _Bj = _jh;
    var _lj = _kh;
    var _nj = _lh;
    var _vj = _mh;
    var _xj = _hk;
    var _pj = _ik;
    var _Dj = _jk;
    var _Fj = _kk;
    var _rj = _lk;
    var _tj = _mk;
    var _qk = 1000000000;
    var _rk = (-1000000000);
    var _sk = 100;
    var _Tj;
    if (!(_Tj instanceof Array)) {
        _Tj = [];
        _Tj._B3 = -214
    } else if (_Tj._B3 !== -214) {
        _Tj = _Tj.slice(0);
        _Tj._B3 = -214
    }
    _Tj[~~0] = (-1);
    _Tj[~~1] = (-1);
    var _Uj = "Compatibility_Foreground_";
    var _Vj = "Compatibility_Background_";
    var _tk = "Compatibility_Colour";
    var _Wj = _hf(_Uj);
    var _Xj = _hf(_Vj);
    var _Yj = _Zj();
    var __j = _0k(_Yj);
    var _uk = (-1);
    var _vk;
    var _2k;
    var _1k;
    for (_1k = 0; (_1k < 8); _1k++) {
        {
            if (!(_vk instanceof Array)) {
                _vk = [];
                _vk._B3 = -223
            }
            else if (_vk._B3 !== -223) {
                _vk = _vk.slice(0);
                _vk._B3 = -223
            }
            _vk[~~_1k] = (-1);
            if (!(_2k instanceof Array)) {
                _2k = [];
                _2k._B3 = -224
            } else if (_2k._B3 !== -224) {
                _2k = _2k.slice(0);
                _2k._B3 = -224
            }
            _2k[~~_1k] = 0 ? 1 : 0;
        }
    }
    ;
    for (_1k = 0; (_1k < __j); _1k++) {
        {
            var _3k = _4k(_Yj[~~_1k]);
            if ((_5k(_Uj, _3k) > 0)) {
                {
                    var _6k = _if(_3k, (_Wj + 1));
                    if ((_6k == "")) {
                        continue
                    }
                    ;var _7k = _fh(_6k);
                    if (!(_vk instanceof Array)) {
                        _vk = [];
                        _vk._B3 = -223
                    } else if (_vk._B3 !== -223) {
                        _vk = _vk.slice(0);
                        _vk._B3 = -223
                    }
                    _vk[~~_7k] = _Yj[~~_1k];
                    if (!(_2k instanceof Array)) {
                        _2k = [];
                        _2k._B3 = -224
                    } else if (_2k._B3 !== -224) {
                        _2k = _2k.slice(0);
                        _2k._B3 = -224
                    }
                    _2k[~~_7k] = 1 ? 1 : 0;
                }
            } else {
                if ((_5k(_Vj, _3k) > 0)) {
                    {
                        var _6k = _if(_3k, (_Xj + 1));
                        if ((_6k == "")) {
                            continue
                        }
                        ;var _7k = _fh(_6k);
                        if (!(_vk instanceof Array)) {
                            _vk = [];
                            _vk._B3 = -223
                        } else if (_vk._B3 !== -223) {
                            _vk = _vk.slice(0);
                            _vk._B3 = -223
                        }
                        _vk[~~_7k] = _Yj[~~_1k];
                        if (!(_2k instanceof Array)) {
                            _2k = [];
                            _2k._B3 = -224
                        } else if (_2k._B3 !== -224) {
                            _2k = _2k.slice(0);
                            _2k._B3 = -224
                        }
                        _2k[~~_7k] = 0 ? 1 : 0;
                    }
                } else {
                    if ((_5k(_tk, _3k) > 0)) {
                        {
                            _uk = _Yj[~~_1k];
                            _wk(_Yj[~~_1k], _rk);
                        }
                    } else {
                        {
                            var _xk = _yk(_Yj[~~_1k]);
                            if ((_xk < _qk)) {
                                _qk = _xk
                            }
                            ;
                            if ((_xk > _rk)) {
                                _rk = _xk
                            }
                            ;
                        }
                    }
                }
            }
            ;
        }
    }
    ;_rk += (_sk + 1000);
    _qk -= _sk;
    _rk = max(_rk, 2147483600);
    _qk = min(_qk, (-2147482000));
    for (_1k = 0; (_1k < 8); _1k++) {
        {
            if ((_vk[~~_1k] != (-1))) {
                {
                    var _zk = 0;
                    if ((_2k[~~_1k] == 1)) {
                        {
                            _zk = (_qk - (_1k * _sk));
                        }
                    } else {
                        {
                            _zk = ((_rk - _sk) - (_7k * _sk));
                        }
                    }
                    ;_wk(_vk[~~_1k], _zk);
                }
            }
            ;
        }
    }
    ;
    if ((_uk != (-1))) {
        {
            _wk(_uk, _rk);
        }
    }
    ;var _3k;
    var _Ak;
    if ((_aj == (-1))) {
        {
            _3k = _tk;
            _Ak = _rk;
        }
    } else {
        {
            if ((_ok == 1)) {
                {
                    _3k = (_Uj + _Hg(_aj));
                    _Ak = (_qk - (_aj * _sk));
                }
            } else {
                {
                    _3k = (_Vj + _Hg(_aj));
                    _Ak = ((_rk - _sk) - (_aj * _sk));
                }
            }
            ;
        }
    }
    ;var _fj;
    if ((_aj == (-1))) {
        {
            _fj = _uk;
        }
    } else {
        {
            _fj = _vk[~~_aj];
        }
    }
    ;
    if ((_fj != (-1))) {
        {
            _Bk(_fj);
        }
    }
    ;_fj = _Ck(_Ak, _3k);
    _Jj(_fj, _zj);
    _Kj(_fj, _Bj);
    _Pj(_fj, _Dj);
    _Qj(_fj, _Fj);
    var _Dk = _Ek(_fj, _pk);
    _Hj(_Dk, _nk);
    _Lj(_Dk, _lj);
    _Mj(_Dk, _nj);
    _Nj(_Dk, _vj);
    _Oj(_Dk, _xj);
    _Fk(_Dk, _pj);
    _Rj(_Dk, _rj);
    _Sj(_Dk, _tj);
    _Tj[~~0] = _Dk;
    _Tj[~~1] = _fj;
    return _Tj;
}

function _25(_ed, _fd, _gd, _hd, _id, _jd) {
    _Gk(_gd, _hd, _id, _jd);
}

function _35(_ed, _fd) {
    global._Hk = 0 ? 1 : 0;
    global._Ik = 0;
    global._Jk = _Kk();
    global._Lk = (-1);
    global._Mk = (-1);
    global._Nk = _Ok();
    _Pk();
    _Qk();
    _Rk();
    _Sk();
    _Tk();
    global._Uk = _Vk();
    global._Wk = [0];
}

function _45(_ed, _fd, _gd, _hd, _id) {
    var _Xk = _55(_ed, _fd, _id);
    return _Yk(_gd, _hd, _Xk, _id);
}

function _55(_ed, _fd, _gd) {
    var _Zk = _gd;
    var __k = 0;
    if ((((_Zk >= 0)) && ((_Zk < _0k(global._0l))))) {
        {
            __k = global._0l[~~_Zk];
        }
    }
    ;
    return __k;
}

function _65(_ed, _fd, _gd) {
    return _1l(_gd);
}

function _75(_ed, _fd, _gd) {
    _2l(_gd, 10, 1);
}

function _85(_ed, _fd, _gd) {
    _2l(_gd, 10, 0);
}

function _95(_ed, _fd, _gd) {
    _3l(_gd);
}

function _a5(_ed, _fd) {
    _4l();
}

function _b5(_ed, _fd, _gd, _hd) {
    var _9j = _gd;
    var _jj = _hd;
    var _dj = (-1);
    switch (_9j) {
        case 0:
            var _5l = _6l(_jj);
            _dj = _7l(_5l);
            break;
        case 1:
            var _5l = _6l(_jj);
            _dj = _8l(_5l);
            break;
        case 2:
            var _5l = _6l(_jj);
            _dj = _9l(_5l);
            break;
        case 3:
            var _5l = _6l(_jj);
            _dj = _al(_5l);
            break;
        case 4:
            var _5l = _6l(_jj);
            _dj = _bl(_5l);
            break;
        case 5:
            var _5l = _6l(_jj);
            _dj = _cl(_5l);
            break;
        case 6:
            var _5l = _6l(_jj);
            _dj = _dl(_5l);
            break;
        case 7:
            var _5l = _6l(_jj);
            _dj = _el(_5l);
            break;
        case 8:
            var _5l = _6l(_jj);
            _dj = _fl(_5l);
            break;
        case 9:
            var _5l = _6l(_jj);
            _dj = _gl(_5l);
            break;
        case 10:
            _dj = _hl(_jj);
            break;
        case 11:
            _dj = _il(_jj);
            break;
        case 12:
            _dj = _jl(_jj);
            break;
        case 13:
            _dj = _kl(_jj);
            break;
        case 14:
            _dj = _ll(_jj);
            break;
        case 15:
            _dj = _6l(_jj);
            break;
        case 16:
            _dj = _ml(_jj);
            break;
        default :
            break;
    }
    ;
    return _dj;
}

function _c5(_ed, _fd, _gd, _hd, _id) {
    var _9j = _gd;
    var _jj = _hd;
    var _bj = _id;
    _d5(_ed, _fd, _9j, _jj, _bj);
    var _dj = _b5(_ed, _fd, _9j, _jj);
    return _dj;
}

function _d5(_ed, _fd, _gd, _hd, _id) {
    var _9j = _gd;
    var _jj = _hd;
    var _bj = _id;
    switch (_9j) {
        case 0:
            var _5l = _6l(_jj);
            _nl(_5l, _bj, _8l(_5l));
            break;
        case 1:
            var _5l = _6l(_jj);
            _nl(_5l, _7l(_5l), _bj);
            break;
        case 2:
            var _5l = _6l(_jj);
            _ol(_5l, _bj, _al(_5l));
            break;
        case 3:
            var _5l = _6l(_jj);
            _ol(_5l, _9l(_5l), _bj);
            break;
        case 4:
            var _5l = _6l(_jj);
            _pl(_5l, _bj);
            break;
        case 5:
            var _5l = _6l(_jj);
            _ql(_5l, _bj, _dl(_5l));
            break;
        case 6:
            var _5l = _6l(_jj);
            _ql(_5l, _cl(_5l), _bj);
            break;
        case 7:
            var _5l = _6l(_jj);
            _rl(_5l, _bj, _fl(_5l));
            break;
        case 8:
            var _5l = _6l(_jj);
            _rl(_5l, _el(_5l), _bj);
            break;
        case 9:
            var _5l = _6l(_jj);
            _sl(_5l, _bj);
            break;
        case 10:
            _ed._dj = _tl(_jj, _bj);
            break;
        case 11:
            _ed._dj = _ul(_jj, _bj);
            break;
        case 12:
            _ed._dj = _vl(_jj, _bj);
            break;
        case 13:
            _ed._dj = _wl(_jj, _bj);
            break;
        case 14:
            _ed._dj = _xl(_jj, _bj);
            break;
        case 15:
            _ed._dj = _yl(_jj, _bj);
            break;
        case 16:
            _ed._dj = _zl(_jj, _bj);
            break;
        default :
            break;
    }
    ;
    return 0;
}

function _e5(_ed, _fd) {
}

function _f5(_ed, _fd) {
    _Al(1, 0);
    _Bl(0);
}

function _g5(_ed, _fd) {
    if (!(global._Cl instanceof Array)) {
        global._Cl = [];
        global._Cl._B3 = 3346499711
    } else if (global._Cl._B3 !== 3346499711) {
        global._Cl = global._Cl.slice(0);
        global._Cl._B3 = 3346499711
    }
    global._Cl[~~0] = 0;
    global._Cl[~~1] = 0;
    global._Cl[~~2] = 0;
    global._Cl[~~3] = (-9999);
    global._Cl[~~4] = 80;
    global._Cl[~~5] = 0;
    global._Cl[~~6] = 0;
    global._Cl[~~7] = 0;
    global._Cl[~~8] = 0;
    global._Cl[~~9] = 0;
    global._Cl[~~10] = 0;
    global._Cl[~~11] = 0;
    global._Cl[~~12] = 0;
    global._Cl[~~13] = 0;
    global._Cl[~~14] = 0;
    global._Cl[~~15] = 0;
    global._Cl[~~16] = 0;
    global._Cl[~~17] = (-8);
    global._Cl[~~18] = (-8);
    global._Cl[~~19] = 0;
    global._Cl[~~20] = (-8);
    global._Cl[~~21] = 99;
    global._Cl[~~22] = 0;
    global._Cl[~~23] = 0;
    global._Cl[~~24] = (-8);
    global._Cl[~~25] = (-8);
    global._Cl[~~26] = (-8);
    global._Cl[~~27] = 99;
    global._Cl[~~28] = 99;
    global._Cl[~~29] = (-8);
    global._Cl[~~30] = (-4);
    global._Cl[~~31] = 0;
    global._Cl[~~32] = 0;
    global._Cl[~~33] = 0;
    global._Cl[~~34] = (-8);
    global._Cl[~~35] = (-4);
    global._Cl[~~36] = (-11);
    global._Cl[~~37] = (-6);
    global._Cl[~~38] = (-8);
    global._Cl[~~39] = 0;
    global._Cl[~~40] = (-4);
    global._Cl[~~41] = 99;
    global._Cl[~~42] = (-8);
    global._Cl[~~43] = (-8);
    global._Cl[~~44] = (-4);
    global._Cl[~~45] = (-8);
    global._Cl[~~46] = (-8);
    global._Cl[~~47] = (-7);
    global._Cl[~~48] = 0;
    global._Cl[~~49] = (-8);
    global._Cl[~~50] = 0;
    global._Cl[~~51] = 0;
    global._Cl[~~52] = (-11);
    global._Cl[~~53] = (-6);
    global._Cl[~~54] = (-8);
    global._Cl[~~55] = (-8);
    global._Cl[~~56] = 0;
    global._Cl[~~57] = (-8);
    global._Cl[~~58] = (-8);
    global._Cl[~~59] = 0;
    global._Cl[~~60] = 0;
    global._Cl[~~61] = (-5);
    global._Cl[~~62] = (-5);
    global._Cl[~~63] = (-10);
    global._Cl[~~64] = (-10);
    global._Cl[~~65] = 0;
    global._Cl[~~66] = 0;
    global._Cl[~~67] = 0;
    global._Cl[~~68] = 0;
    global._Cl[~~69] = 0;
    global._Cl[~~70] = (-30);
    global._Cl[~~71] = 0;
    global._Cl[~~72] = 0;
    global._Cl[~~73] = 0;
    global._Cl[~~74] = 0;
    global._Cl[~~75] = 0;
    global._Cl[~~76] = 900;
    global._Cl[~~77] = (-1316134911);
    global._Cl[~~78] = 0;
    global._Cl[~~79] = 0;
    global._Cl[~~80] = 0;
    global._Cl[~~81] = 0;
    global._Cl[~~82] = 0;
    global._Cl[~~83] = 0;
    global._Cl[~~84] = 0;
    global._Cl[~~85] = 0;
    global._Cl[~~86] = 0;
    global._Cl[~~87] = 0;
    global._Cl[~~88] = 0;
    if (!(global._Dl instanceof Array)) {
        global._Dl = [];
        global._Dl._B3 = 1201305477
    } else if (global._Dl._B3 !== 1201305477) {
        global._Dl = global._Dl.slice(0);
        global._Dl._B3 = 1201305477
    }
    global._Dl[~~0] = "obj_START";
    global._Dl[~~1] = "obj_menu_slime";
    global._Dl[~~2] = "obj_menu_slimes";
    global._Dl[~~3] = "obj_menu_slimes_choose";
    global._Dl[~~4] = "obj_menu_effects";
    global._Dl[~~5] = "obj_menu_title";
    global._Dl[~~6] = "obj_menu_story";
    global._Dl[~~7] = "obj_menu_championship";
    global._Dl[~~8] = "obj_menu_options";
    global._Dl[~~9] = "obj_menu_controls";
    global._Dl[~~10] = "obj_menu_friendlydefault";
    global._Dl[~~11] = "obj_menu_controls1";
    global._Dl[~~12] = "obj_menu_controls2";
    global._Dl[~~13] = "obj_menu_gameend";
    global._Dl[~~14] = "obj_menu_settings";
    global._Dl[~~15] = "obj_menu_result";
    global._Dl[~~16] = "par_weapon";
    global._Dl[~~17] = "obj_w_TEMPLATE";
    global._Dl[~~18] = "obj_w_arrow";
    global._Dl[~~19] = "obj_w_attaction";
    global._Dl[~~20] = "obj_wp_heart";
    global._Dl[~~21] = "obj_w_basketmode";
    global._Dl[~~22] = "obj_w_goal_basket";
    global._Dl[~~23] = "obj_w_goal_basket_block";
    global._Dl[~~24] = "obj_w_brick";
    global._Dl[~~25] = "obj_w_brick_still";
    global._Dl[~~26] = "obj_w_boxingglove";
    global._Dl[~~27] = "obj_w_blackhole";
    global._Dl[~~28] = "obj_wp_blackhole";
    global._Dl[~~29] = "obj_w_crazyness";
    global._Dl[~~30] = "obj_wp_crazyness";
    global._Dl[~~31] = "obj_wp_crazyness2";
    global._Dl[~~32] = "obj_w_discomove";
    global._Dl[~~33] = "obj_w_explosion";
    global._Dl[~~34] = "obj_w_flask";
    global._Dl[~~35] = "obj_w_frostbeam";
    global._Dl[~~36] = "obj_w_fishinghook";
    global._Dl[~~37] = "obj_w_fireball";
    global._Dl[~~38] = "obj_wp_fireball";
    global._Dl[~~39] = "obj_w_grow";
    global._Dl[~~40] = "obj_w_geyser";
    global._Dl[~~41] = "obj_wp_geyserwater";
    global._Dl[~~42] = "obj_w_harpoon";
    global._Dl[~~43] = "obj_w_invisibility";
    global._Dl[~~44] = "obj_w_magnet";
    global._Dl[~~45] = "obj_wp_poison";
    global._Dl[~~46] = "obj_w_raindance";
    global._Dl[~~47] = "obj_wp_raindrop";
    global._Dl[~~48] = "obj_w_remote";
    global._Dl[~~49] = "obj_w_revolver";
    global._Dl[~~50] = "obj_w_stoptime";
    global._Dl[~~51] = "obj_w_sprint";
    global._Dl[~~52] = "obj_w_stopsign";
    global._Dl[~~53] = "obj_w_super";
    global._Dl[~~54] = "obj_wp_superstar";
    global._Dl[~~55] = "obj_w_tree";
    global._Dl[~~56] = "obj_w_teleport";
    global._Dl[~~57] = "obj_w_telekinesis";
    global._Dl[~~58] = "obj_wp_telekinesis";
    global._Dl[~~59] = "obj_w_twin";
    global._Dl[~~60] = "123456789";
    global._Dl[~~61] = "obj_player1";
    global._Dl[~~62] = "obj_player2";
    global._Dl[~~63] = "obj_ball";
    global._Dl[~~64] = "obj_basketball";
    global._Dl[~~65] = "obj_wall";
    global._Dl[~~66] = "obj_stop";
    global._Dl[~~67] = "obj_ceil";
    global._Dl[~~68] = "obj_ground";
    global._Dl[~~69] = "obj_goal";
    global._Dl[~~70] = "obj_goal_front";
    global._Dl[~~71] = "obj_goal_block";
    global._Dl[~~72] = "par_player";
    global._Dl[~~73] = "obj_ballghost";
    global._Dl[~~74] = "par_block";
    global._Dl[~~75] = "obj_crossbar";
    global._Dl[~~76] = "obj_shadow";
    global._Dl[~~77] = "obj_ctrl";
    global._Dl[~~78] = "obj_hud";
    global._Dl[~~79] = "obj_startup";
    global._Dl[~~80] = "obj_annonce";
    global._Dl[~~81] = "obj_story";
    global._Dl[~~82] = "obj_game_music";
    global._Dl[~~83] = "obj_stats";
    global._Dl[~~84] = "obj_speechbubble";
    global._Dl[~~85] = "obj_watch";
    global._Dl[~~86] = "obj_ai";
    global._Dl[~~87] = "obj_cloud";
    global._Dl[~~88] = "obj_copyright";
    var _El = _0k(global._Cl);
    global._0l = [];
    for (var _Ng = 0; (_Ng < _El); ++_Ng) {
        {
            var _Zk = _Fl(global._Dl[~~_Ng]);
            if ((_Zk >= 0)) {
                {
                    if (!(global._0l instanceof Array)) {
                        global._0l = [];
                        global._0l._B3 = 6718315
                    } else if (global._0l._B3 !== 6718315) {
                        global._0l = global._0l.slice(0);
                        global._0l._B3 = 6718315
                    }
                    global._0l[~~_Zk] = global._Cl[~~_Ng];
                }
            }
            ;
        }
    }
    ;
}

function _h5(_ed, _fd, _gd) {
    _ed._Gl = _gd;
    _ed._Gl = _Hl(_ed._Gl, "\n", "");
    _ed._Gl = _Il(_ed._Gl);
    _ed._Gl = _Jl(_ed._Gl);
    if ((_H4(_ed, _fd) == 1)) {
        {
            __i(_ed._Gl);
        }
    }
    ;global._Cd = _Kl(_ed._Gl, "email");
    global._Dd = _Kl(_ed._Gl, "save_file");
    global._Ed = _Kl(global._Dd, "number_won");
}

function _D5(_ed, _fd) {
    _C3._24[1](_ed, _fd, 0, 0, 0, 0, 0);
    _ed._4i = 0;
    _ed._3i = 0;
    _ed._Ll = 60;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = _ed._Ll;
}

function _F5(_ed, _fd) {
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = _ed._Ll;
    _ed._3i += 1;
    if ((_ed._3i == 4)) {
        {
            _Ml();
        }
    }
    ;
}

function _H5(_ed, _fd) {
    _ed._4i += 1;
    _2g(_ed, 124, 0, 280, 100, 1, 1, 0, (-1), (_ed._3i + (_ed._4i / _ed._Ll)));
    _2g(_ed, 125, 0, 280, 200, 1, 1, 0, (-1), (_ed._3i - 2 + (_ed._4i / _ed._Ll)));
}

function _J5(_ed, _fd) {
    {
        _Ml();
    }
    ;
}

function _L5(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _P5(_ed, _fd) {
    _ed._ri = (10 + ((_ed.x - 40) / 6));
    _ed._si = (1 + ((_ed.y - 205) / 30));
    _ed._Ol = (_ed._ri + _ed._si);
    _ed._Cf = "";
    _ed._Pl(-_ed.y);
    if ((_ed._Ol == 13)) {
        {
            _ed._Ef(20);
            return;
        }
    }
    ;
    if ((_ed._Ol == 56)) {
        {
            _ed._Cf = "boxer";
        }
    }
    ;
    if ((_ed._Ol == 66)) {
        {
            _ed._Cf = "alien";
        }
    }
    ;
    if ((_ed._Ol == 76)) {
        {
            _ed._Cf = "cosmos";
        }
    }
    ;
    if ((_ed._Ol == 84)) {
        {
            _ed._Cf = "clock";
        }
    }
    ;
    if ((_ed._Ol == 83)) {
        {
            _ed._Cf = "indian";
        }
    }
    ;
    if ((_ed._Ol == 23)) {
        {
            _ed._Cf = "traffic";
        }
    }
    ;
    if ((_ed._Ol == 73)) {
        {
            _ed._Cf = "water";
        }
    }
    ;
    if ((_ed._Ol == 24)) {
        {
            _ed._Cf = "fire";
        }
    }
    ;
    if ((_ed._Ol == 25)) {
        {
            _ed._Cf = "ghost";
        }
    }
    ;
    if ((_ed._Ol == 35)) {
        {
            _ed._Cf = "tv";
        }
    }
    ;
    if ((_ed._Ol == 45)) {
        {
            _ed._Cf = "bomb";
        }
    }
    ;
    if ((_ed._Ol == 55)) {
        {
            _ed._Cf = "fisher";
        }
    }
    ;
    if ((_ed._Ol == 65)) {
        {
            _ed._Cf = "super";
        }
    }
    ;
    if ((_ed._Ol == 75)) {
        {
            _ed._Cf = "sponge";
        }
    }
    ;
    if ((_ed._Ol == 85)) {
        {
            _ed._Cf = "monk";
        }
    }
    ;
    if ((_ed._Ol == 26)) {
        {
            _ed._Cf = "basket";
        }
    }
    ;
    if ((_ed._Ol == 36)) {
        {
            _ed._Cf = "twin";
        }
    }
    ;
    if ((_ed._Ol == 46)) {
        {
            _ed._Cf = "nature";
        }
    }
    ;
    if ((_ed._Ol == 86)) {
        {
            _ed._Cf = "maniac";
        }
    }
    ;
    if ((_ed._Ol == 54)) {
        {
            _ed._Cf = "random";
        }
    }
    ;
    if ((_ed._Ol == 44)) {
        {
            _ed._Cf = "classic";
        }
    }
    ;
    if ((_ed._Ol == 64)) {
        {
            _ed._Cf = "archer";
        }
    }
    ;
    if ((_ed._Ol == 34)) {
        {
            _ed._Cf = "female";
        }
    }
    ;
    if ((_ed._Ol == 74)) {
        {
            _ed._Cf = "runner";
        }
    }
    ;
    if ((_ed._Ol == 53)) {
        {
            _ed._Cf = "robot";
        }
    }
    ;
    if ((_ed._Ol == 43)) {
        {
            _ed._Cf = "scientist";
        }
    }
    ;
    if ((_ed._Ol == 33)) {
        {
            _ed._Cf = "disco";
        }
    }
    ;
    if ((_ed._Ol == 63)) {
        {
            _ed._Cf = "ice";
        }
    }
    ;
    if ((((_ed._Cf == "")) || ((_ed._Cf == "random")) || ((_ed._Cf == _v4(_ed, _fd))))) {
        {
        }
    } else {
        {
            if (!(_w4(_ed, _fd, _ed._Cf) > 0.5)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Cf != "")) {
        {
            _ed._Ef(_n4(_ed, _fd, _ed._Cf));
        }
    }
    ;
    if ((_v4(_ed, _fd) == _ed._Cf)) {
        {
            _ed._8g = 0.2;
        }
    }
    ;
    if ((global._vd == "championship")) {
        {
            if ((((global._Dd == "")) || ((_ed._Cf == "")))) {
                {
                }
            } else {
                {
                    if (_Kl(global._Dd, (_ed._Cf + "_won")) > 0.5) {
                        {
                            _ed._8g = 0.1;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _R5(_ed, _fd) {
    if (_Tg(2) > 0.5) {
        {
        }
    } else {
        {
            _9i(_ed);
        }
    }
    ;
}

function _S5(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _T5(_ed,
             _fd) {
    _N4(_ed, _fd, 52);
    _ed._Ql = 0;
    _ed._Rl = 0;
    for (var _Sl = 0, _Tl = ~~(7); _Sl < _Tl; _Sl++) {
        {
            for (var _Ul = 0, _Vl = ~~(9); _Ul < _Vl; _Ul++) {
                {
                    _45(_ed, _fd, (40 + (60 * _ed._Ql)), (205 + (30 * _ed._Rl)), 1);
                    _ed._Ql += 1;
                }
            }
            ;_ed._Rl += 1;
            _ed._Ql = 0;
        }
    }
    ;_ed._Wl = 0;
    _ed._Xl = 0;
    _ed._Yl = 0;
    _ed._Zl = 0;
    _ed.__l = 0;
    if ((global._ud == 1)) {
        {
            _ed._Pf = _45(_ed, _fd, 280, 295, 3);
            if (!(_Qf(_ed._Pf)._1h instanceof Array)) {
                _Qf(_ed._Pf)._1h = [];
                _Qf(_ed._Pf)._1h._B3 = 4219417590
            } else if (_Qf(_ed._Pf)._1h._B3 !== 4219417590) {
                _Qf(_ed._Pf)._1h = _Qf(_ed._Pf)._1h.slice(0);
                _Qf(_ed._Pf)._1h._B3 = 4219417590
            }
            _Qf(_ed._Pf)._1h[~~1] = 1;
        }
    } else {
        {
            _ed._Pf = _45(_ed, _fd, 220, 295, 3);
            if (!(_Qf(_ed._Pf)._1h instanceof Array)) {
                _Qf(_ed._Pf)._1h = [];
                _Qf(_ed._Pf)._1h._B3 = 4219417590
            } else if (_Qf(_ed._Pf)._1h._B3 !== 4219417590) {
                _Qf(_ed._Pf)._1h = _Qf(_ed._Pf)._1h.slice(0);
                _Qf(_ed._Pf)._1h._B3 = 4219417590
            }
            _Qf(_ed._Pf)._1h[~~2] = 1;
            _ed._Pf = _45(_ed, _fd, 340, 295, 3);
            _Qf(_ed._Pf)._1h[~~1] = 1;
        }
    }
    ;_ed._ri = 0;
    if ((global._ud == 1)) {
        {
            _ed._ri = 140;
        }
    }
    ;
}

function _U5(_ed, _fd) {
    if (_Tg(3) > 0.5) {
        {
        }
    } else {
        {
            _ed._Yl += 1;
            if ((((_ed._Yl > 100)) && (_ld(global._Jd) > 0.5))) {
                {
                    _ed._Yl = 150;
                }
            }
            ;
            if ((global._ud == 1)) {
                {
                    if ((_ed._Yl < 30)) {
                        {
                            if ((_ed._Yl > 1)) {
                                {
                                    if (_ld(global._Jd) > 0.5) {
                                        {
                                            _ed._Yl = 100;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;global._sd = "random";
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Yl >= 30)) {
                {
                    if ((global._rd == "random")) {
                        {
                            global._rd = _t4(_ed, _fd, 0);
                        }
                    }
                    ;
                    if ((global._sd == "random")) {
                        {
                            global._sd = _t4(_ed, _fd, global._ud);
                            if ((_H4(_ed, _fd) == 1)) {
                                {
                                    global._sd = global._rd;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;
            if ((global._vd == "championship")) {
                {
                    if ((_ed._Yl < 150)) {
                        {
                            _ed._Yl = 150;
                        }
                    }
                    ;
                }
            }
            ;
            if ((global._ud == 0)) {
                {
                    if ((_ed._Yl < 100)) {
                        {
                            _ed._Yl = 100;
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Yl >= 150)) {
                {
                    if ((global._vd == "friendly")) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 15);
                        }
                    }
                    ;
                    if ((global._vd == "championship")) {
                        {
                            global._sd = _t4(_ed, _fd, global._ud);
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 7);
                        }
                    }
                    ;
                    if ((global._vd == "story")) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 6);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _W5(_ed, _fd) {
    _9i(_ed);
    {
        var _0m = _dg(3);
        for (var _1m in _0m) {
            if (!_0m.hasOwnProperty(_1m)) continue;
            var _2m = _0m[_1m];
            if (_2m._gg) continue;
            if (!_2m._hg) continue;
            {
                _9i(_2m);
            }
        }
    }
    ;
}

function _X5(_ed, _fd) {
    if ((global._vd == "championship")) {
        {
            _ed._ri = 240;
        }
    }
    ;
    if ((_ed._ri > 0)) {
        {
            if ((((global._ud == 1)) && ((global._vd == "friendly")))) {
                {
                    if (_Tg(3) > 0.5) {
                        {
                        }
                    } else {
                        {
                            _ed._ri -= 10;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;_ed._3m = _n4(_ed, _fd, global._rd);
    _ed._4m = _n4(_ed, _fd, global._sd);
    if ((global._rd == "random")) {
        {
            _ed._3m = _n4(_ed, _fd, _t4(_ed, _fd));
        }
    }
    ;
    if ((global._sd == "random")) {
        {
            _ed._4m = _n4(_ed, _fd, _t4(_ed, _fd));
        }
    }
    ;
    if ((global._rd == "shop_info")) {
        {
        }
    } else {
        {
            _2g(_ed, _ed._3m, 0, (430 - _ed._ri), 138, (-3), 3, 0, (-1), 1);
        }
    }
    ;_2g(_ed, _ed._4m, 0, (130 - (_ed._ri * 2)), 138, 3, 3, 0, (-1), 1);
    _5m(_ed, 90, 0, (280 - (_ed._ri * 3)), 100);
    _ed._Zl += 1;
    _ed.__l += 1;
    if ((_v4(_ed, _fd) == global._rd)) {
        {
            _ed._6m = "LOCKED";
            _ed._7m = "";
        }
    } else {
        {
            _ed._6m = _p4(_ed, _fd, global._rd);
            _ed._7m = _o4(_ed, _fd, global._rd);
        }
    }
    ;
    if ((_v4(_ed, _fd) == global._sd)) {
        {
            _ed._8m = "LOCKED";
            _ed._9m = "";
        }
    } else {
        {
            _ed._8m = _p4(_ed, _fd, global._sd);
            _ed._9m = _o4(_ed, _fd, global._sd);
        }
    }
    ;_ed._am = _q4(_ed, _fd, global._rd);
    _ed._bm = _q4(_ed, _fd, global._sd);
    _zh(1);
    _Ah(1);
    _B4(_ed, _fd, (130 - (_ed._ri * 2)), 20, _ed._8m, _ed._bm);
    _B4(_ed, _fd, (430 - _ed._ri), 20, _ed._6m, _ed._am);
    _Ah(0);
    _B4(_ed, _fd, (130 - (_ed._ri * 2)), 160, _ed._9m, _ed._bm);
    _B4(_ed, _fd, (430 - _ed._ri), 160, _ed._7m, _ed._am);
}

function _Y5(_ed,
             _fd) {
    _Nl(_ed, _fd);
}

function _Z5(_ed, _fd) {
    _ed._Cf = 0;
    _ed._cm = 0;
    _ed._dm = 0;
    _ed._em = 0;
    _ed._fm = 0;
    _ed._gm = 0;
    _ed._hm = 0 ? 1 : 0;
    _ed._4i = 0;
    _ed._Lh = "";
    _ed._4h = "";
}

function _06(_ed, _fd) {
    _ed._Cf = 2;
    _ed._cm = global._Kd;
    _ed._dm = global._Md;
    _ed._em = global._Nd;
    _ed._fm = global._Od;
    _ed._gm = global._Pd;
}

function _26(_ed, _fd) {
    _ed._Cf = 1;
    _ed._cm = global._Fd;
    _ed._dm = global._Gd;
    _ed._em = global._Hd;
    _ed._fm = global._Id;
    _ed._gm = global._Jd;
}

function _36(_ed, _fd) {
    _ed._Pl(((-_ed.y * 4) - 10));
    _ed._4i += 1;
    if (_Wf(_ed, _ed.x, _ed.y, 1) > 0.5) {
        {
            _ed._Pf = _Rg(_ed,
                _ed.x, _ed.y, 1);
            if ((_ed._Cf == 1)) {
                {
                    global._rd = _Qf(_ed._Pf)._Cf;
                }
            }
            ;
            if ((_ed._Cf == 2)) {
                {
                    global._sd = _Qf(_ed._Pf)._Cf;
                }
            }
            ;
        }
    }
    ;
    if (((_ld(_ed._fm) > 0.5) && (_Wf(_ed, _ed.x, (_ed.y + 30), 1) > 0.5))) {
        {
            if ((((_ed.y < 355)) && ((_ed.x > 70)))) {
                {
                    _ed._Tf(_ed.y + 30);
                    _K4(_ed, _fd, 5);
                    if ((_ed._Cf == 1)) {
                        {
                            _Qf(2)._Zl = 0;
                        }
                    }
                    ;
                    if ((_ed._Cf == 2)) {
                        {
                            _Qf(2).__l = 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (((_ld(_ed._dm) > 0.5) && (_Wf(_ed, _ed.x, (_ed.y - 30), 1) > 0.5))) {
        {
            if ((_ed.y > 265)) {
                {
                    _ed._Tf(_ed.y - 30);
                    _K4(_ed, _fd, 5);
                    if ((_ed._Cf == 1)) {
                        {
                            _Qf(2)._Zl = 0;
                        }
                    }
                    ;
                    if ((_ed._Cf == 2)) {
                        {
                            _Qf(2).__l = 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (((_ld(_ed._cm) > 0.5) && (_Wf(_ed, (_ed.x + 60), _ed.y, 1) > 0.5))) {
        {
            if ((_ed.x < 460)) {
                {
                    _ed._1g(_ed.x + 60);
                    _K4(_ed, _fd, 5);
                    if ((_ed._Cf == 1)) {
                        {
                            _Qf(2)._Zl = 0;
                        }
                    }
                    ;
                    if ((_ed._Cf == 2)) {
                        {
                            _Qf(2).__l = 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (((_ld(_ed._em) > 0.5) && (_Wf(_ed, (_ed.x - 60), _ed.y, 1) > 0.5))) {
        {
            if ((_ed.x > 40)) {
                {
                    _ed._1g(_ed.x - 60);
                    if ((_ed.x < 70)) {
                        {
                            _ed._Tf(265);
                        }
                    }
                    ;_K4(_ed, _fd, 5);
                    if ((_ed._Cf == 1)) {
                        {
                            _Qf(2)._Zl = 0;
                        }
                    }
                    ;
                    if ((_ed._Cf == 2)) {
                        {
                            _Qf(2).__l = 0;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if (((_ld(_ed._gm) > 0.5) && ((_ed._4i > 1)))) {
        {
            _ed._im = 0 ? 1 : 0;
            if (_Wf(_ed, _ed.x, _ed.y, 1) > 0.5) {
                {
                    _ed._Pf = _Rg(_ed,
                        _ed.x, _ed.y, 1);
                    if ((_Qf(_ed._Pf)._3g == 20)) {
                        {
                            _ed._im = 1 ? 1 : 0;
                            {
                                var _jm = _dg(2);
                                for (var _km in _jm) {
                                    if (!_jm.hasOwnProperty(_km)) continue;
                                    var _lm = _jm[_km];
                                    if (_lm._gg) continue;
                                    if (!_lm._hg) continue;
                                    {
                                        _mm(_lm, _ed, 0);
                                    }
                                }
                            }
                            ;_45(_ed, _fd, 0, 0, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._im == 0)) {
                {
                    if ((((_Qf(_ed._Pf)._Cf == "")) || ((_v4(_ed, _fd) == _Qf(_ed._Pf)._Cf)))) {
                        {
                            _K4(_ed, _fd, 6);
                        }
                    } else {
                        {
                            _K4(_ed, _fd, 4);
                            _9i(_ed);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _46(_ed, _fd) {
    if ((_ed._Cf == 1)) {
        {
            _5m(_ed, 91, 0, _ed.x, (_ed.y - 2));
        }
    }
    ;
    if ((_ed._Cf == 2)) {
        {
            _5m(_ed, 92, 0, _ed.x, (_ed.y - 2));
        }
    }
    ;
}

function _66(_ed,
             _fd) {
    {
        var _nm = _dg(2);
        for (var _om in _nm) {
            if (!_nm.hasOwnProperty(_om)) continue;
            var _pm = _nm[_om];
            if (_pm._gg) continue;
            if (!_pm._hg) continue;
            {
                _mm(_pm, _ed, 0);
            }
        }
    }
    ;_45(_ed, _fd, 0, 0, 5);
}

function _76(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _86(_ed, _fd) {
    _ed._qm = "";
    _ed._rm = 0;
    _ed._Ng = (-100);
    _a5(_ed, _fd);
    _M4(_ed, _fd, 7);
    _ed._nd = "";
    _ed._sm = 0;
}

function _96(_ed, _fd) {
}

function _a6(_ed, _fd) {
    _Ah(4);
    _zh(2);
    _Bh(32768);
    _zh(0);
    _Hh(0, 5, _Dh(_ed._nd));
    _ed._tm = 2;
    _ed._um = 20;
    _ed._rm += _ed._tm;
    _Ah(6);
    _zh(0);
    _ed._sm += 0.02;
    if ((((_ed._rm - _ed._um) - 100) > _wi(_Dh(_ed._qm)))) {
        {
            _ed._rm = 0;
        }
    }
    ;_Bh(32768);
    _vm(0.2);
    _ed._Ng += 1;
    if ((_ed._Ng >= 0)) {
        {
            _ed._Ng = (-100);
        }
    }
    ;_ed._ri = 0;
    _ed._si = 0;
    _ed._Pf = (-1);
    for (var _wm = 0, _xm = ~~(5); _wm < _xm; _wm++) {
        {
            for (var _ym = 0, _zm = ~~(4); _ym < _zm; _ym++) {
                {
                    _Am((_ed._Ng + _ed._ri), (_ed._Ng + _ed._si), (_ed._Ng + 100 + _ed._ri), (_ed._Ng + _ed._si + 100), 0);
                    _ed._ri += 200;
                }
            }
            ;_ed._si += 100;
            _ed._Pf = -_ed._Pf;
            if ((_ed._Pf == 1)) {
                {
                    _ed._ri = 100;
                }
            } else {
                {
                    _ed._ri = 0;
                }
            }
            ;
        }
    }
    ;_vm(1);
}

function _b6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _c6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 1;
    _ed._Cm = 0 ? 1 : 0;
    {
        if ((((global._vd == "friendly")) || ((global._vd == "quick")))) {
            {
                if ((global._qd > 0)) {
                    {
                        _9i(_ed);
                        _45(_ed, _fd, 0, 0, 16);
                    }
                }
                ;
            }
        }
        ;
        if ((global._vd == "championship")) {
            {
                if ((global._qd > 0)) {
                    {
                        if ((global._qd == 1)) {
                            {
                                _9i(_ed);
                                _45(_ed, _fd, 0, 0, 7);
                            }
                        }
                        ;
                        if ((global._qd == 2)) {
                            {
                                _9i(_ed);
                                _45(_ed, _fd, 0, 0, 16);
                            }
                        }
                        ;
                    }
                }
                ;
            }
        }
        ;
    }
    ;_ed._Dm = "https://www.superslimesoccer.io/api/v1/save_file";
    _ed._Em = _Fm(_ed._Dm);
}

function _d6(_ed, _fd) {
    if (!(_ed.__d instanceof Array)) {
        _ed.__d = [];
        _ed.__d._B3 = 636222023
    } else if (_ed.__d._B3 !== 636222023) {
        _ed.__d = _ed.__d.slice(0);
        _ed.__d._B3 = 636222023
    }
    _ed.__d[~~1] = "The Quick Match is a friendly match against the Computer with random slimes.";
    _ed.__d[~~2] = "The 1P Friendly Match is a singleplayer match against the Computer. The default settings for friendly games can be set in the options menu.";
    _ed.__d[~~3] = "The 2P Friendly Match is a multiplayer match for you and a friend on the same computer. The default settings for friendly games can be set in the options menu.";
    _ed.__d[~~4] = "The Championship will allow you to unlock new slimes! You must play to 3 goals in 3 matches against random slimes in order to win.";
    _ed.__d[~~5] = "The Options menu will allow you toggle fullscreen, adjust sound and music and set the keyboard controles of the game.";
    if (_ed._Cm > 0.5) {
        {
            if (_ld(global._Jd) > 0.5) {
                {
                    _ed._Cm = 0 ? 1 : 0;
                }
            }
            ;
        }
    } else {
        {
            if ((_ed._Bm > 0)) {
                {
                    _Qf(4)._qm = _ed.__d[~~_ed._Bm];
                }
            } else {
                {
                    _Qf(4)._qm = "";
                }
            }
            ;
            if (_ld(global._Id) > 0.5) {
                {
                    if ((_ed._Bm < 5)) {
                        {
                            _ed._Bm += 1;
                            _K4(_ed, _fd, 5);
                            _Qf(4)._rm = 0;
                        }
                    }
                    ;
                }
            }
            ;
            if (_ld(global._Gd) > 0.5) {
                {
                    if ((global._Cd == "")) {
                        {
                            _ed._Gm = (-1);
                        }
                    } else {
                        {
                            _ed._Gm = 1;
                        }
                    }
                    ;
                    if ((_ed._Bm > _ed._Gm)) {
                        {
                            _ed._Bm -= 1;
                            _K4(_ed, _fd, 5);
                            _Qf(4)._rm = 0;
                        }
                    }
                    ;
                }
            }
            ;
            if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
                {
                    _Qf(4)._rm = 0;
                    _Qf(4)._qm = "";
                    _K4(_ed, _fd, 4);
                    if ((_ed._Bm == (-1))) {
                        {
                            _Hm("https://www.superslimesoccer.io/profiles/sign_up");
                        }
                    }
                    ;
                    if ((_ed._Bm == 0)) {
                        {
                            _Hm("https://www.superslimesoccer.io/profiles/sign_in");
                        }
                    }
                    ;
                    if ((_ed._Bm == 1)) {
                        {
                            global._ud = 1 ? 1 : 0;
                            global._vd = "quick";
                            global._rd = _t4(_ed, _fd);
                            global._sd = _t4(_ed, _fd);
                            global._Th = "Bonus";
                            global._Qh = "Medium";
                            global._Zh = "Easy";
                            global.__h = "random";
                            global._0i = 3;
                            global._1i = "No cheat";
                            _Ci(2);
                        }
                    }
                    ;
                    if ((_ed._Bm == 2)) {
                        {
                            global._ud = 1 ? 1 : 0;
                            global._vd = "friendly";
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 2);
                        }
                    }
                    ;
                    if ((_ed._Bm == 3)) {
                        {
                            global._ud = 0 ? 1 : 0;
                            global._vd = "friendly";
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 2);
                        }
                    }
                    ;
                    if ((_ed._Bm == 4)) {
                        {
                            if ((global._Cd == "")) {
                                {
                                    _ed._Cm = 1 ? 1 : 0;
                                }
                            } else {
                                {
                                    global._ud = 1 ? 1 : 0;
                                    global._vd = "championship";
                                    global._wd = 0;
                                    _9i(_ed);
                                    _45(_ed, _fd, 0, 0, 2);
                                }
                            }
                            ;
                        }
                    }
                    ;
                    if ((_ed._Bm == 5)) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 8);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _f6(_ed, _fd) {
    _ed._Im = "";
    if ((_Kl(_Eh._Jm(), "id") == _ed._Em)) {
        {
            if ((_Kl(_Eh._Jm(), "status") == 0)) {
                {
                    _ed._Im = _Kl(_Eh._Jm(), "result");
                }
            }
            ;
        }
    }
    ;
    if ((_H4(_ed, _fd) == 1)) {
        {
            __i(_ed._Im);
        }
    }
    ;_ed._Im = _Jl(_ed._Im);
    _ed._Km = _Kl(_ed._Im, "success");
    if ((_ed._Km == 1)) {
        {
            _ed._Lm = _Kl(_ed._Im, "data");
            _h5(_ed, _fd, _ed._Lm);
        }
    }
    ;
}

function _g6(_ed, _fd) {
    _ed._4i += 1;
    if (_ed._Cm > 0.5) {
        {
            _ed.__d = "You must sign in to play#Championship";
            _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
        }
    } else {
        {
            _ed.__d = "Quick Match#1P Friendly Match#2P Friendly Match#Championship#Options";
            if ((_ed._Bm > 0)) {
                {
                    _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36) - 16 - 16), 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;
            if ((_ed._Bm == 0)) {
                {
                    _2g(_ed, 49, 0, 390, 20, 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;
            if ((_ed._Bm == (-1))) {
                {
                    _2g(_ed, 49, 0, 450, 20, 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;_A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
            if (!(_ed._Mm instanceof Array)) {
                _ed._Mm = [];
                _ed._Mm._B3 = 224999548
            } else if (_ed._Mm._B3 !== 224999548) {
                _ed._Mm = _ed._Mm.slice(0);
                _ed._Mm._B3 = 224999548
            }
            _ed._Mm[~~1] = 108;
            _ed._Mm[~~2] = 105;
            _ed._Mm[~~3] = 106;
            _ed._Mm[~~4] = 101;
            _ed._Mm[~~5] = 107;
            if ((_ed._Bm > 0)) {
                {
                    _5m(_ed, _ed._Mm[~~_ed._Bm], 0, 530, 200);
                }
            }
            ;_2g(_ed, 132, 0, 280, 330, 1, 1, 0, 16777215, (_ed._4i / 20));
            if ((global._Cd == "")) {
                {
                    _ed._Nm = "Not signed in";
                }
            } else {
                {
                    _ed._Nm = ("Logged in as: " + global._Cd);
                }
            }
            ;_Ah(3);
            _B4(_ed, _fd, 10, 10, _ed._Nm, 16777215);
            if ((global._Cd == "")) {
                {
                    _B4(_ed, _fd, 400, 10, "Login      Sign up",
                        32768);
                }
            }
            ;
        }
    }
    ;
}

function _i6(_ed, _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            global._Ed += 1;
        }
    }
    ;
}

function _j6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _k6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 1;
}

function _l6(_ed, _fd) {
    if (!(_ed.__d instanceof Array)) {
        _ed.__d = [];
        _ed.__d._B3 = 636222023
    } else if (_ed.__d._B3 !== 636222023) {
        _ed.__d = _ed.__d.slice(0);
        _ed.__d._B3 = 636222023
    }
    _ed.__d[~~0] = "Return to main menu";
    _ed.__d[~~1] = "This turtorial will teach you the basics of the gameplay";
    _ed.__d[~~2] = "This turtorial will teach you the basics of the gamemenu";
    _ed.__d[~~3] = "Your first real match";
    _ed.__d[~~4] = "Touch fight";
    _ed.__d[~~5] = "Inside the lab";
    _ed.__d[~~6] = "Final battle";
    _Qf(4)._qm = _ed.__d[~~_ed._Bm];
    if (_ld(global._Id) > 0.5) {
        {
            if ((_ed._Bm < global._yd)) {
                {
                    _ed._Bm += 1;
                    _K4(_ed, _fd, 5);
                    _Qf(4)._rm = 0;
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Gd) > 0.5) {
        {
            if ((_ed._Bm > 0)) {
                {
                    _ed._Bm -= 1;
                    _K4(_ed, _fd, 5);
                    _Qf(4)._rm = 0;
                }
            }
            ;
        }
    }
    ;
    if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
        {
            _Qf(4)._rm = 0;
            _Qf(4)._qm = "";
            _K4(_ed, _fd, 4);
            if ((_ed._Bm == 0)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 5);
                }
            }
            ;
            if ((_ed._Bm > 0)) {
                {
                    global._vd = "story";
                    global._xd = _ed._Bm;
                    global._zd = 1 ? 1 : 0;
                    _Ci(2);
                }
            }
            ;
        }
    }
    ;
}

function _m6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back";
    if ((global._yd > 0)) {
        {
            _ed.__d = _lf("#Tutorial 1", _ed.__d, 999);
        }
    }
    ;
    if ((global._yd > 1)) {
        {
            _ed.__d = _lf("#Tutorial 2", _ed.__d, 999);
        }
    }
    ;
    if ((global._yd > 2)) {
        {
            _ed.__d = _lf("#First match", _ed.__d, 999);
        }
    }
    ;
    if ((global._yd > 3)) {
        {
            _ed.__d = _lf("#The fight", _ed.__d, 999);
        }
    }
    ;
    if ((global._yd > 4)) {
        {
            _ed.__d = _lf("#The robot", _ed.__d, 999);
        }
    }
    ;
    if ((global._yd > 5)) {
        {
            _ed.__d = _lf("#The rainbow slime", _ed.__d, 999);
        }
    }
    ;_2g(_ed, 49, 0, 50, (100 + (_ed._Bm * 36) - 4 - 36 - 16), 1, 1, (_ed._4i * 8), (-1),
        1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 48, 21, 36, (-1), 0);
}

function _n6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _o6(_ed, _fd) {
    global._wd += 1;
    if ((global._wd == 4)) {
        {
            _9i(_ed);
            _45(_ed, _fd, 0, 0, 16);
        }
    }
    ;global._sd = "random";
    _ed._Yl = 0;
    _ed._Zl = 0;
    _ed.__l = 0;
    _ed._4i = 0;
}

function _p6(_ed, _fd) {
    _ed._4i += 1;
    if ((((_ed._4i < 100)) && (_ld(global._Jd) > 0.5))) {
        {
            _ed._4i = 100;
        }
    }
    ;
    if ((((_ed._4i > 100)) && (_ld(global._Jd) > 0.5))) {
        {
            _ed._4i = 200;
        }
    }
    ;
    if ((_ed._4i >= 200)) {
        {
            global._Th = "Bonus";
            global._Qh = "Medium";
            global._Zh = "Easy";
            global.__h = "random";
            global._0i = 3;
            global._1i = "No cheat";
            _Ci(2);
        }
    }
    ;
    if ((_ed._4i >= 100)) {
        {
            if ((global._sd == "random")) {
                {
                    global._sd = _t4(_ed, _fd);
                }
            }
            ;
            if ((global._rd == "random")) {
                {
                    global._rd = _t4(_ed, _fd);
                }
            }
            ;
        }
    }
    ;_ed._si = 90;
    _ed._ri = 0;
    _ed._3m = _n4(_ed, _fd, global._rd);
    _ed._4m = _n4(_ed, _fd, global._sd);
    if ((global._sd == "random")) {
        {
            _ed._4m = _n4(_ed, _fd, _t4(_ed, _fd));
        }
    }
    ;
    if ((global._rd == "random")) {
        {
            _ed._3m = _n4(_ed, _fd, _t4(_ed, _fd));
        }
    }
    ;_2g(_ed, _ed._3m, 0, (430 - _ed._ri), (130 + _ed._si), (-3), 3, 0, (-1), 1);
    _2g(_ed, _ed._4m, 0, (130 - (_ed._ri * 2)), (130 + _ed._si), 3, 3, 0, (-1),
        1);
    _ed._Zl += 1;
    _ed.__l += 1;
    _ed._6m = _p4(_ed, _fd, global._rd);
    _ed._8m = _p4(_ed, _fd, global._sd);
    _ed._7m = _o4(_ed, _fd, global._rd);
    _ed._9m = _o4(_ed, _fd, global._sd);
    _ed._am = _q4(_ed, _fd, global._rd);
    _ed._bm = _q4(_ed, _fd, global._sd);
    _zh(1);
    _Ah(1);
    _B4(_ed, _fd, (130 - (_ed._ri * 2)), (12 + _ed._si), _ed._8m, _ed._bm);
    _B4(_ed, _fd, (430 - _ed._ri), (12 + _ed._si), _ed._6m, _ed._am);
    _Ah(0);
    _B4(_ed, _fd, (130 - (_ed._ri * 2)), (152 + _ed._si), _ed._9m, _ed._bm);
    _B4(_ed, _fd, (430 - _ed._ri), (152 + _ed._si), _ed._7m, _ed._am);
    _5m(_ed, 90, 0, (280 - (_ed._ri * 3)),
        (100 + _ed._si));
}

function _q6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _r6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 0;
}

function _s6(_ed, _fd) {
    if (_ld(global._Id) > 0.5) {
        {
            if ((_ed._Bm < 7)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm += 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Gd) > 0.5) {
        {
            if ((_ed._Bm > 0)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm -= 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
        {
            _K4(_ed, _fd, 4);
            if ((_ed._Bm == 0)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 5);
                }
            }
            ;
            if ((_ed._Bm == 1)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 9);
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 10);
                }
            }
            ;
            if ((_ed._Bm == 3)) {
                {
                    if ((global._Qd == 0)) {
                        {
                            global._Qd = 1;
                            _Om(1);
                        }
                    } else {
                        {
                            global._Qd = 0;
                            _Om(0);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Bm == 4)) {
                {
                    _Pm("data.ini");
                    if ((global._Rd == 0)) {
                        {
                            global._Rd = 1;
                            _Qm("options", "music", "1");
                            _M4(_ed, _fd, 7);
                        }
                    } else {
                        {
                            global._Rd = 0;
                            _Qm("options", "music", "0");
                            _95(_ed, _fd, 7);
                        }
                    }
                    ;_Rm();
                }
            }
            ;
            if ((_ed._Bm == 5)) {
                {
                    _Pm("data.ini");
                    if ((global._Sd == 0)) {
                        {
                            global._Sd = 1;
                            _Qm("options", "sounds", "1");
                        }
                    } else {
                        {
                            global._Sd = 0;
                            _Qm("options", "sounds", "0");
                        }
                    }
                    ;_Rm();
                }
            }
            ;
            if ((_ed._Bm == 6)) {
                {
                    _Pm("data.ini");
                    if ((global._Td == 0)) {
                        {
                            global._Td = 1;
                            _Qm("options",
                                "comments", "1");
                        }
                    } else {
                        {
                            global._Td = 0;
                            _Qm("options", "comments", "0");
                        }
                    }
                    ;_Rm();
                }
            }
            ;
            if ((_ed._Bm == 7)) {
                {
                    _Pm("data.ini");
                    global._Qd = 0;
                    _Qm("options", "comments", "0");
                    _Om(0);
                    global._Rd = 1;
                    _Qm("options", "comments", "1");
                    global._Sd = 1;
                    _Qm("options", "comments", "1");
                    global._Td = 1;
                    _Qm("options", "comments", "1");
                    _Rm();
                }
            }
            ;
        }
    }
    ;
}

function _t6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back#Custom Controls#Friendly default#Screen:#Crowd/Music:#Sounds:#Comments:#Default";
    _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
    _A4(_ed,
        _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
    if ((global._Qd == 0)) {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 30 - 16), "Window", 52, 222, 208, 21, 36, (-1), 0);
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 30 - 16), "Fullscreen", 52, 222, 208, 21, 36, (-1), 0);
        }
    }
    ;
    if ((global._Rd == 0)) {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 36 - 16 - 6), "Off", 52, 318, 244, 21, 36, (-1), 0);
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 36 - 16 - 6), "On", 52, 318, 244, 21, 36, (-1), 0);
        }
    }
    ;
    if ((global._Sd == 0)) {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 44 - 16 - 6), "Off", 52, 222, 280, 21, 36, (-1), 0);
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 44 - 16 - 6),
                "On", 52, 222, 280, 21, 36, (-1), 0);
        }
    }
    ;
    if ((global._Td == 0)) {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 54 - 16 - 6), "Off", 52, 270, 316, 21, 36, (-1), 0);
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 54 - 16 - 6), "On", 52, 270, 316, 21, 36, (-1), 0);
        }
    }
    ;
}

function _u6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _v6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 0;
}

function _w6(_ed, _fd) {
    if (_ld(global._Id) > 0.5) {
        {
            if ((_ed._Bm < 2)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm += 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Gd) > 0.5) {
        {
            if ((_ed._Bm > 0)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm -= 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
        {
            _K4(_ed, _fd, 4);
            if ((_ed._Bm == 0)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 5);
                }
            }
            ;
            if ((_ed._Bm == 1)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 12);
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 13);
                }
            }
            ;
        }
    }
    ;
}

function _x6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back#Player 1#Player 2";
    _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
}

function _y6(_ed, _fd) {
    _9i(_ed);
    _45(_ed, _fd, 0, 0, 5);
}

function _z6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _A6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 0;
}

function _B6(_ed, _fd) {
    if (_ld(global._Id) > 0.5) {
        {
            if ((_ed._Bm < 7)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm += 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Gd) > 0.5) {
        {
            if ((_ed._Bm > 0)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm -= 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
        {
            _K4(_ed, _fd, 4);
            if ((_ed._Bm == 0)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 8);
                }
            }
            ;
            if ((_ed._Bm == 1)) {
                {
                    _Pm("data.ini");
                    if ((global._Ud == "Bonus")) {
                        {
                            global._Ud = "Offensive";
                            _Qm("options", "fd_manamode", "Offensive");
                        }
                    } else {
                        {
                            if ((global._Ud == "Offensive")) {
                                {
                                    global._Ud = "Plain";
                                    _Qm("options", "fd_manamode", "Plain");
                                }
                            } else {
                                {
                                    if ((global._Ud == "Plain")) {
                                        {
                                            global._Ud = "Round";
                                            _Qm("options", "fd_manamode", "Round");
                                        }
                                    } else {
                                        {
                                            if ((global._Ud == "Round")) {
                                                {
                                                    global._Ud = "Equalize";
                                                    _Qm("options", "fd_manamode", "Equalize");
                                                }
                                            } else {
                                                {
                                                    if ((global._Ud == "Equalize")) {
                                                        {
                                                            global._Ud = "Bonus";
                                                            _Qm("options", "fd_manamode", "Bonus");
                                                        }
                                                    }
                                                    ;
                                                }
                                            }
                                            ;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;_Rm();
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _Pm("data.ini");
                    if ((global._Vd == "Low")) {
                        {
                            global._Vd = "Medium";
                            _Qm("options", "fd_mana", "Medium");
                        }
                    } else {
                        {
                            if ((global._Vd == "Medium")) {
                                {
                                    global._Vd = "Offensive";
                                    _Qm("options", "fd_mana",
                                        "Offensive");
                                }
                            } else {
                                {
                                    if ((global._Vd == "Offensive")) {
                                        {
                                            global._Vd = "High";
                                            _Qm("options", "fd_mana", "High");
                                        }
                                    } else {
                                        {
                                            if ((global._Vd == "High")) {
                                                {
                                                    global._Vd = "Low";
                                                    _Qm("options", "fd_mana", "Low");
                                                }
                                            }
                                            ;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;_Rm();
                }
            }
            ;
            if ((_ed._Bm == 3)) {
                {
                    _Pm("data.ini");
                    if ((global._Wd == "Very easy")) {
                        {
                            global._Wd = "Easy";
                            _Qm("options", "fd_ai", "Easy");
                        }
                    } else {
                        {
                            if ((global._Wd == "Easy")) {
                                {
                                    global._Wd = "Medium";
                                    _Qm("options", "fd_ai", "Medium");
                                }
                            } else {
                                {
                                    if ((global._Wd == "Medium")) {
                                        {
                                            global._Wd = "Hard";
                                            _Qm("options", "fd_ai", "Hard");
                                        }
                                    } else {
                                        {
                                            if ((global._Wd == "Hard")) {
                                                {
                                                    global._Wd = "Very hard";
                                                    _Qm("options", "fd_ai", "Very hard");
                                                }
                                            } else {
                                                {
                                                    if ((global._Wd == "Very hard")) {
                                                        {
                                                            global._Wd = "Very easy";
                                                            _Qm("options", "fd_ai", "Very easy");
                                                        }
                                                    }
                                                    ;
                                                }
                                            }
                                            ;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;_Rm();
                }
            }
            ;
            if ((_ed._Bm == 4)) {
                {
                    _Pm("data.ini");
                    global._Xd = _y4(_ed, _fd, global._Xd, "next");
                    _Qm("options", "fd_area", _Hg(global._Xd));
                    _Rm();
                }
            }
            ;
            if ((_ed._Bm == 5)) {
                {
                    _Pm("data.ini");
                    _ed._Pf = _fh(global._Yd);
                    _ed._Pf += 1;
                    if ((_ed._Pf > 20)) {
                        {
                            _ed._Pf = 1;
                        }
                    }
                    ;global._Yd = _Hg(_ed._Pf);
                    _Qm("options", "fd_playto", _Hg(global._Yd));
                    _Rm();
                }
            }
            ;
            if ((_ed._Bm == 6)) {
                {
                    _Pm("data.ini");
                    global._Zd = _z4(_ed, _fd, global._Zd, "next");
                    _Qm("options", "fd_cheat", _Hg(global._Zd));
                    _Rm();
                }
            }
            ;
        }
    }
    ;
}

function _C6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back#Mana mode:#Mana extent:#AI difficulty:#Area:#Goal limit:#Cheat:#Default";
    _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
    _A4(_ed, _fd, ((_ed._4i * 2) - 10 - 5), global._Ud, 52, 364, 136, 21, 36, (-1), 0);
    _A4(_ed, _fd, ((_ed._4i * 2) - 10 - 5), global._Vd, 52, 364, 172, 21, 36, (-1), 0);
    _A4(_ed, _fd, ((_ed._4i * 2) - 15 - 5 - 10),
        global._Wd, 52, 460, 208, 21, 36, (-1), 0);
    _A4(_ed, _fd, ((_ed._4i * 2) - 21 - 5 - 10), global._Xd, 52, 244, 244, 21, 36, (-1), 0);
    _A4(_ed, _fd, ((_ed._4i * 2) - 32 - 5 - 10), _Hg(global._Yd), 52, 388, 280, 21, 36, (-1), 0);
    _A4(_ed, _fd, ((_ed._4i * 2) - 32 - 5 - 10), _Hg(global._Zd), 52, 388, 280, 21, 36, (-1), 0);
}

function _D6(_ed, _fd) {
    _9i(_ed);
    _45(_ed, _fd, 0, 0, 8);
}

function _E6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _F6(_ed, _fd) {
    _ed._4i = 0;
}

function _G6(_ed, _fd) {
    _ed._4i += 1;
}

function _H6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "You must sign up at:#www.superslimesoccer.io#to play championships#It's 100% free :-)";
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 60, 100, 21, 36, (-1), 0);
}

function _I6(_ed, _fd) {
    if ((_ed._4i > 10)) {
        {
            _9i(_ed);
            _45(_ed, _fd, 0, 0, 5);
        }
    }
    ;
}

function _J6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _K6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 0;
    _ed._Sm = 0;
}

function _L6(_ed, _fd) {
    if ((_ed._Sm == 0)) {
        {
            if (_ld(global._Id) > 0.5) {
                {
                    if ((_ed._Bm < 6)) {
                        {
                            _Qf(4)._rm = 0;
                            _ed._Bm += 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (_ld(global._Gd) > 0.5) {
                {
                    if ((_ed._Bm > 0)) {
                        {
                            _Qf(4)._rm = 0;
                            _ed._Bm -= 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
                {
                    _K4(_ed, _fd, 4);
                    if ((_ed._Bm == 0)) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 9);
                        }
                    }
                    ;
                    if ((_ed._Bm == 1)) {
                        {
                            _ed._Sm = 1;
                        }
                    }
                    ;
                    if ((_ed._Bm == 2)) {
                        {
                            _ed._Sm = 2;
                        }
                    }
                    ;
                    if ((_ed._Bm == 3)) {
                        {
                            _ed._Sm = 3;
                        }
                    }
                    ;
                    if ((_ed._Bm == 4)) {
                        {
                            _ed._Sm = 4;
                        }
                    }
                    ;
                    if ((_ed._Bm == 5)) {
                        {
                            _ed._Sm = 5;
                        }
                    }
                    ;
                    if ((_ed._Bm == 6)) {
                        {
                            global._Fd = 39;
                            global._Gd = 38;
                            global._Hd = 37;
                            global._Id = 40;
                            global._Jd = 32;
                            _Pm("data.ini");
                            _Qm("controls", "KEYRIGHT", "39");
                            _Qm("controls", "KEYUP", "38");
                            _Qm("controls", "KEYLEFT", "37");
                            _Qm("controls", "KEYDOWN", "40");
                            _Qm("controls", "KEYACTION", "32");
                            _Rm();
                        }
                    }
                    ;
                }
            }
            ;
        }
    } else {
        {
            if (_ld(1) > 0.5) {
                {
                    _Pm("data.ini");
                    if ((_ed._Sm == 1)) {
                        {
                            global._Gd = _Eh._Tm;
                            _Qm("controls", "KEYUP", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 2)) {
                        {
                            global._Id = _Eh._Tm;
                            _Qm("controls", "KEYDOWN", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 3)) {
                        {
                            global._Hd = _Eh._Tm;
                            _Qm("controls", "KEYLEFT", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 4)) {
                        {
                            global._Fd = _Eh._Tm;
                            _Qm("controls", "KEYRIGHT", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 5)) {
                        {
                            global._Jd = _Eh._Tm;
                            _Qm("controls", "KEYACTION", _Hg(_Eh._Tm));
                        }
                    }
                    ;_Rm();
                    _ed._Sm = 0;
                }
            }
            ;
        }
    }
    ;
}

function _M6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back#Up:#Down:#Left:#Right:#Action:#Default";
    _2g(_ed, 49,
        0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
    if ((_ed._Sm == 1)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 10), _x4(_ed, _fd, global._Gd), 52, 196, 136, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 2)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 16), _x4(_ed, _fd, global._Id), 52, 244, 172, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 3)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 22), _x4(_ed, _fd, global._Hd), 52, 244, 208, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 4)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 29), _x4(_ed, _fd, global._Fd),
                52, 268, 244, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 5)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 36), _x4(_ed, _fd, global._Jd), 52, 292, 280, 21, 36, (-1), 0);
        }
    }
    ;
}

function _N6(_ed, _fd) {
    _9i(_ed);
    _45(_ed, _fd, 0, 0, 9);
}

function _O6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _P6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 0;
    _ed._Sm = 0;
}

function _Q6(_ed, _fd) {
    if ((_ed._Sm == 0)) {
        {
            if (_ld(global._Od) > 0.5) {
                {
                    if ((_ed._Bm < 6)) {
                        {
                            _Qf(4)._rm = 0;
                            _ed._Bm += 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (_ld(global._Md) > 0.5) {
                {
                    if ((_ed._Bm > 0)) {
                        {
                            _Qf(4)._rm = 0;
                            _ed._Bm -= 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (((_ld(global._Pd) > 0.5) && ((_ed._4i > 1)))) {
                {
                    _K4(_ed, _fd, 4);
                    if ((_ed._Bm == 0)) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 9);
                        }
                    }
                    ;
                    if ((_ed._Bm == 1)) {
                        {
                            _ed._Sm = 1;
                        }
                    }
                    ;
                    if ((_ed._Bm == 2)) {
                        {
                            _ed._Sm = 2;
                        }
                    }
                    ;
                    if ((_ed._Bm == 3)) {
                        {
                            _ed._Sm = 3;
                        }
                    }
                    ;
                    if ((_ed._Bm == 4)) {
                        {
                            _ed._Sm = 4;
                        }
                    }
                    ;
                    if ((_ed._Bm == 5)) {
                        {
                            _ed._Sm = 5;
                        }
                    }
                    ;
                    if ((_ed._Bm == 6)) {
                        {
                            global._Kd = 68;
                            global._Md = 87;
                            global._Nd = 65;
                            global._Od = 83;
                            global._Pd = 49;
                            _Pm("data.ini");
                            _Qm("controls", "KEY2RIGHT", "68");
                            _Qm("controls", "KEY2UP", "87");
                            _Qm("controls", "KEY2LEFT", "65");
                            _Qm("controls", "KEY2DOWN", "83");
                            _Qm("controls", "KEY2ACTION", "49");
                            _Rm();
                        }
                    }
                    ;
                }
            }
            ;
        }
    } else {
        {
            if (_ld(1) > 0.5) {
                {
                    _Pm("data.ini");
                    if ((_ed._Sm == 1)) {
                        {
                            global._Md = _Eh._Tm;
                            _Qm("controls", "KEY2UP", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 2)) {
                        {
                            global._Od = _Eh._Tm;
                            _Qm("controls", "KEY2DOWN", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 3)) {
                        {
                            global._Nd = _Eh._Tm;
                            _Qm("controls", "KEY2LEFT", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 4)) {
                        {
                            global._Kd = _Eh._Tm;
                            _Qm("controls", "KEY2RIGHT", _Hg(_Eh._Tm));
                        }
                    }
                    ;
                    if ((_ed._Sm == 5)) {
                        {
                            global._Pd = _Eh._Tm;
                            _Qm("controls", "KEY2ACTION", _Hg(_Eh._Tm));
                        }
                    }
                    ;_Rm();
                    _ed._Sm = 0;
                }
            }
            ;
        }
    }
    ;
}

function _R6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back#Up:#Down:#Left:#Right:#Action:#Default";
    _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
    if ((_ed._Sm == 1)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 10), _x4(_ed, _fd, global._Md), 52, 196, 136, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 2)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 16), _x4(_ed, _fd, global._Od), 52, 244, 172, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 3)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 22), _x4(_ed, _fd, global._Nd), 52, 244, 208, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 4)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 29), _x4(_ed,
                _fd, global._Kd), 52, 268, 244, 21, 36, (-1), 0);
        }
    }
    ;
    if ((_ed._Sm == 5)) {
        {
        }
    } else {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 36), _x4(_ed, _fd, global._Pd), 52, 292, 280, 21, 36, (-1), 0);
        }
    }
    ;
}

function _S6(_ed, _fd) {
    _9i(_ed);
    _45(_ed, _fd, 0, 0, 9);
}

function _T6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _U6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 3;
}

function _V6(_ed, _fd) {
    if (_ld(global._Id) > 0.5) {
        {
            if ((_ed._Bm < 3)) {
                {
                    _ed._Bm += 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Gd) > 0.5) {
        {
            if ((_ed._Bm > 2)) {
                {
                    _ed._Bm -= 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
        {
            if ((_ed._Bm == 2)) {
                {
                    _Um();
                }
            }
            ;
            if ((_ed._Bm == 3)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 5);
                    _K4(_ed, _fd, 4);
                }
            }
            ;
        }
    }
    ;
}

function _W6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "Are you sure?##Yes#No";
    _2g(_ed, 49, 0, 50, (100 + (_ed._Bm * 36) - 4), 1, 1, (_ed._4i * 8), (-1), 1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
}

function _X6(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Y6(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 2;
    global._Th = global._Ud;
    global._Qh = global._Vd;
    global._Zh = global._Wd;
    global.__h = global._Xd;
    global._0i = _fh(global._Yd);
    global._1i = global._Zd;
    _ed._Vm = 0;
}

function _Z6(_ed,
             _fd) {
    _ed._4i += 1;
    if ((_ed._Vm > 0)) {
        {
            _ed._Vm -= 1;
        }
    }
    ;
    if (_ld(global._Id) > 0.5) {
        {
            if ((_ed._Bm < 2)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm += 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Gd) > 0.5) {
        {
            if ((_ed._Bm > 0)) {
                {
                    _Qf(4)._rm = 0;
                    _ed._Bm -= 1;
                    _K4(_ed, _fd, 5);
                }
            }
            ;
        }
    }
    ;
    if (_ld(global._Jd) > 0.5) {
        {
            _K4(_ed, _fd, 4);
            if ((_ed._Bm == 0)) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 2);
                }
            }
            ;
            if ((_ed._Bm == 1)) {
                {
                    global._0i += 1;
                    if ((global._0i > 20)) {
                        {
                            global._0i = 1;
                        }
                    }
                    ;
                }
            }
            ;
            if ((((_ed._Bm == 2)) && ((_ed._4i > 5)))) {
                {
                    _Ci(2);
                }
            }
            ;
        }
    }
    ;
}

function __6(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = "<Back#Goal limit:#START";
    _2g(_ed,
        49, 0, 67, (200 + (_ed._Bm * 36) - 36), 1, 1, (_ed._4i * 3), (-1), 1);
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 164, 18, 36, (-1), 0);
    if ((_ed._Vm > 0)) {
        {
            _A4(_ed, _fd, ((_ed._4i * 2) - 10 - 5), "Done!", 52, 370, 200, 18, 36, (-1), 0);
        }
    }
    ;_A4(_ed, _fd, ((_ed._4i * 2) - 10 - 5), global._0i, 52, 270, 200, 18, 36, (-1), 0);
}

function _07(_ed, _fd) {
    _9i(_ed);
    _45(_ed, _fd, 0, 0, 2);
}

function _17(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _27(_ed, _fd) {
    _ed._4i = 0;
    _ed.__d = "";
    _N4(_ed, _fd, 53);
    _ed._Wm = global._sd;
    _ed._Xm = global._rd;
    _ed._Ym = global._Ai;
    _ed._Zm = global._Bi;
    _ed._Dm = "https://www.superslimesoccer.io/api/v1/matches";
    _ed._9f = ("left_slime=" + _ed._Wm + "&right_slime=" + _ed._Xm + "&left_goals=" + _Hg(_ed._Ym) + "&right_goals=" + _Hg(_ed._Zm));
    _ed._Em = __m(_ed._Dm, _ed._9f);
    _ed._0n = 1 ? 1 : 0;
}

function _37(_ed, _fd) {
    if (((_ld(1) > 0.5) && ((_ed._4i > 10)))) {
        {
            global._qd = 0;
            if ((global._vd == "quick")) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 5);
                }
            }
            ;
            if ((global._vd == "friendly")) {
                {
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 2);
                }
            }
            ;
            if ((global._vd == "championship")) {
                {
                    _9i(_ed);
                    if ((global._wd == 4)) {
                        {
                            global._wd = 0;
                            if ((((global._Dd != "")) && (_Kl(global._Dd, (global._rd + "_won")) > 0.5))) {
                                {
                                    _45(_ed,
                                        _fd, 0, 0, 5);
                                }
                            } else {
                                {
                                    _45(_ed, _fd, 0, 0, 18);
                                }
                            }
                            ;
                        }
                    } else {
                        {
                            _45(_ed, _fd, 0, 0, 5);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _47(_ed, _fd) {
    _ed._Im = "";
    if (_ed._Em > 0.5) {
        {
            if ((_Kl(_Eh._Jm(), "id") == _ed._Em)) {
                {
                    if ((_Kl(_Eh._Jm(), "status") == 0)) {
                        {
                            _ed._Im = _Kl(_Eh._Jm(), "result");
                        }
                    }
                    ;
                }
            }
            ;
            if ((_H4(_ed, _fd) == 1)) {
                {
                    __i(_ed._Im);
                }
            }
            ;
        }
    }
    ;
}

function _57(_ed, _fd) {
    _ed._4i += 1;
    if ((global._qd == 1)) {
        {
            _2g(_ed, _n4(_ed, _fd, global._rd), 0, 280, 300, (-5), 5, 0, (-1), 1);
            _ed.__d = _Hg(_p4(_ed, _fd, global._rd));
        }
    }
    ;
    if ((global._qd == 2)) {
        {
            _2g(_ed, _n4(_ed, _fd, global._sd), 0, 280, 300, 5, 5, 0,
                (-1), 1);
            _ed.__d = _Hg(_p4(_ed, _fd, global._sd));
        }
    }
    ;_A4(_ed, _fd, _ed._4i, "Congratulations", 52, 280, 50, 24, 36, (-1), 1);
    _A4(_ed, _fd, (_ed._4i - 15), _ed.__d, 52, 280, 90, 24, 36, (-1), 1);
    _A4(_ed, _fd, (_ed._4i - 120), "Press any key to continue", 52, 280, 370, 21, 36, (-1), 1);
}

function _67(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _77(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 1;
    _ed._1n = 0 ? 1 : 0;
    _ed._0n = 0 ? 1 : 0;
    _ed._2n = "";
    _ed._3n = "";
}

function _87(_ed, _fd) {
    _ed._0n = 0 ? 1 : 0;
}

function _97(_ed, _fd) {
    if ((((_ed._1n == 0)) && ((_ed._0n == 0)))) {
        {
            if (_ld(global._Id) > 0.5) {
                {
                    if ((_ed._Bm < 3)) {
                        {
                            _ed._Bm += 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (_ld(global._Gd) > 0.5) {
                {
                    if ((_ed._Bm > 0)) {
                        {
                            _ed._Bm -= 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
                {
                    _K4(_ed, _fd, 4);
                    if ((_ed._Bm == 0)) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 5);
                        }
                    }
                    ;
                    if ((_ed._Bm == 1)) {
                        {
                            _ed._1n = 1 ? 1 : 0;
                            _Eh._4n = _ed._2n;
                        }
                    }
                    ;
                    if ((_ed._Bm == 2)) {
                        {
                            _ed._1n = 1 ? 1 : 0;
                            _Eh._4n = _ed._3n;
                        }
                    }
                    ;
                    if ((_ed._Bm == 3)) {
                        {
                            _ed._Dm = "https://www.superslimesoccer.io/api/v1/sessions";
                            _ed._9f = ("username=" + _ed._2n + "&password=" + _ed._3n);
                            _ed._Em = __m(_ed._Dm, _ed._9f);
                            _ed._0n = 1 ? 1 : 0;
                            if (!(_ed._1h instanceof Array)) {
                                _ed._1h = [];
                                _ed._1h._B3 = 1584050178
                            } else if (_ed._1h._B3 !== 1584050178) {
                                _ed._1h = _ed._1h.slice(0);
                                _ed._1h._B3 = 1584050178
                            }
                            _ed._1h[~~0] = 60;
                        }
                    }
                    ;
                }
            }
            ;
        }
    } else {
        {
            if (_ld(global._Jd) > 0.5) {
                {
                    _ed._1n = 0 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
}

function _b7(_ed, _fd) {
    if ((_ed._1n == 1)) {
        {
            if ((_ed._Bm == 1)) {
                {
                    _ed._2n = _Hl(_Eh._4n, " ", "");
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _ed._3n = _Hl(_Eh._4n, " ", "");
                }
            }
            ;
        }
    }
    ;
}

function _d7(_ed, _fd) {
    _ed._1n = 0 ? 1 : 0;
}

function _e7(_ed, _fd) {
    _ed._Im = "";
    if (_ed._Em > 0.5) {
        {
            if ((_Kl(_Eh._Jm(), "id") == _ed._Em)) {
                {
                    if ((_Kl(_Eh._Jm(), "status") == 0)) {
                        {
                            _ed._Im = _Kl(_Eh._Jm(),
                                "result");
                        }
                    }
                    ;
                }
            }
            ;
            if ((_H4(_ed, _fd) == 1)) {
                {
                    __i(_ed._Im);
                }
            }
            ;_ed._Im = _Jl(_ed._Im);
            _ed._Km = _Kl(_ed._Im, "success");
            if ((_ed._Km == 0)) {
                {
                    _ed._5n = _Kl(_ed._Im, "message");
                }
            } else {
                {
                    _ed._Lm = _Kl(_ed._Im, "data");
                    _h5(_ed, _fd, _ed._Lm);
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0, 5);
                }
            }
            ;
        }
    }
    ;
}

function _f7(_ed, _fd) {
    _ed._4i += 1;
    _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
}

function _g7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _h7(_ed, _fd) {
    _ed._4i = 0;
    _ed._6n = _v4(_ed, _fd);
    if ((_v4(_ed, _fd) != "")) {
        {
            _85(_ed, _fd, 75);
            _ed._Dm = "https://www.superslimesoccer.io/api/v1/save_file";
            _ed._9f = ("won=" + global._rd);
            _ed._Em = __m(_ed._Dm, _ed._9f);
        }
    }
    ;
}

function _i7(_ed, _fd) {
    _ed._Im = "";
    if (_ed._Em > 0.5) {
        {
            if ((_Kl(_Eh._Jm(), "id") == _ed._Em)) {
                {
                    if ((_Kl(_Eh._Jm(), "status") == 0)) {
                        {
                            _ed._Im = _Kl(_Eh._Jm(), "result");
                        }
                    }
                    ;
                }
            }
            ;
            if ((_H4(_ed, _fd) == 1)) {
                {
                    __i(_ed._Im);
                }
            }
            ;_ed._Im = _Jl(_ed._Im);
            _ed._Km = _Kl(_ed._Im, "success");
            if ((_ed._Km == 1)) {
                {
                    _ed._Lm = _Kl(_ed._Im, "data");
                    _h5(_ed, _fd, _ed._Lm);
                }
            } else {
                {
                    __i("Error. Could not save");
                }
            }
            ;
        }
    }
    ;
}

function _j7(_ed, _fd) {
    _ed._4i += 1;
    if ((_v4(_ed, _fd) == "")) {
        {
            _ed.__d = "You won all the slimes!#But I'm working on adding more!Follow my progress on:#www.superslimesoccer.io";
        }
    } else {
        {
            _ed.__d = ("Congratulations!##You have won a new slime:##" + _p4(_ed, _fd, _ed._6n) + "!!!");
            _2g(_ed, _n4(_ed, _fd, _ed._6n), 0, 350, 350, (-3), 3, 0, (-1), 1);
        }
    }
    ;_A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 60, 100, 21, 36, (-1), 0);
}

function _k7(_ed, _fd) {
    if ((_ed._4i > 120)) {
        {
            _9i(_ed);
            _45(_ed, _fd, 0, 0, 5);
        }
    }
    ;
}

function _l7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _m7(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 1;
    _ed._1n = 0 ? 1 : 0;
    _ed._0n = 0 ? 1 : 0;
    _ed._2n = "";
    _ed._3n = "";
}

function _n7(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = ("<Back#Email: " + _ed._2n + " #Password: " + _ed._3n + "#Submit");
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
    if ((_ed._1n == 0)) {
        {
            _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
        }
    } else {
        {
            if ((_ed._Bm == 1)) {
                {
                    _2g(_ed, 49, 0, (200 + _wi(_ed._2n)), (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _2g(_ed, 49, 0, (260 + _wi(_ed._3n)), (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;
        }
    }
    ;
    if ((global._Cd == "")) {
        {
            _ed._Nm = "Not signed in";
        }
    } else {
        {
            _ed._Nm = ("Logged in as: " + global._Cd);
        }
    }
    ;_Ah(3);
    _B4(_ed, _fd, 10, 10, _ed._Nm, 16777215);
}

function _o7(_ed, _fd) {
    _Nl(_ed,
        _fd);
}

function _p7(_ed, _fd) {
    _ed._4i = 0;
    _ed._Bm = 1;
    _ed._1n = 0 ? 1 : 0;
    _ed._0n = 0 ? 1 : 0;
    _ed._2n = "";
    _ed._3n = "";
}

function _q7(_ed, _fd) {
    _ed._0n = 0 ? 1 : 0;
}

function _r7(_ed, _fd) {
    _ed._4i += 1;
    if ((((_ed._1n == 0)) && ((_ed._0n == 0)))) {
        {
            if (_ld(global._Id) > 0.5) {
                {
                    if ((_ed._Bm < 3)) {
                        {
                            _ed._Bm += 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (_ld(global._Gd) > 0.5) {
                {
                    if ((_ed._Bm > 0)) {
                        {
                            _ed._Bm -= 1;
                            _K4(_ed, _fd, 5);
                        }
                    }
                    ;
                }
            }
            ;
            if (((_ld(global._Jd) > 0.5) && ((_ed._4i > 1)))) {
                {
                    _K4(_ed, _fd, 4);
                    if ((_ed._Bm == 0)) {
                        {
                            _9i(_ed);
                            _45(_ed, _fd, 0, 0, 5);
                        }
                    }
                    ;
                    if ((_ed._Bm == 1)) {
                        {
                            _ed._1n = 1 ? 1 : 0;
                            _Eh._4n = _ed._2n;
                        }
                    }
                    ;
                    if ((_ed._Bm == 2)) {
                        {
                            _ed._1n = 1 ? 1 : 0;
                            _Eh._4n = _ed._3n;
                        }
                    }
                    ;
                    if ((_ed._Bm == 3)) {
                        {
                            _ed._Dm = "https://www.superslimesoccer.io/api/v1/sessions";
                            _ed._9f = ("username=" + _ed._2n + "&password=" + _ed._3n);
                            _ed._Em = __m(_ed._Dm, _ed._9f);
                            _ed._0n = 1 ? 1 : 0;
                            if (!(_ed._1h instanceof Array)) {
                                _ed._1h = [];
                                _ed._1h._B3 = 1584050178
                            } else if (_ed._1h._B3 !== 1584050178) {
                                _ed._1h = _ed._1h.slice(0);
                                _ed._1h._B3 = 1584050178
                            }
                            _ed._1h[~~0] = 60;
                        }
                    }
                    ;
                }
            }
            ;
        }
    } else {
        {
            if (_ld(global._Jd) > 0.5) {
                {
                    _ed._1n = 0 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
}

function _s7(_ed, _fd) {
    if ((_ed._1n == 1)) {
        {
            if ((_ed._Bm == 1)) {
                {
                    _ed._2n = _Hl(_Eh._4n, " ", "");
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _ed._3n = _Hl(_Eh._4n, " ", "");
                }
            }
            ;
        }
    }
    ;
}

function _t7(_ed, _fd) {
    _ed._1n = 0 ? 1 : 0;
}

function _u7(_ed, _fd) {
    _ed._Im = "";
    if (_ed._Em > 0.5) {
        {
            if ((_Kl(_Eh._Jm(), "id") == _ed._Em)) {
                {
                    if ((_Kl(_Eh._Jm(), "status") == 0)) {
                        {
                            _ed._Im = _Kl(_Eh._Jm(), "result");
                        }
                    }
                    ;
                }
            }
            ;
            if ((_H4(_ed, _fd) == 1)) {
                {
                    __i(_ed._Im);
                }
            }
            ;_ed._Im = _Jl(_ed._Im);
            _ed._Km = _Kl(_ed._Im, "success");
            if ((_ed._Km == 0)) {
                {
                    _ed._5n = _Kl(_ed._Im, "message");
                }
            } else {
                {
                    _ed._Lm = _Kl(_ed._Im, "data");
                    _h5(_ed, _fd, _ed._Lm);
                    _9i(_ed);
                    _45(_ed, _fd, 0, 0,
                        5);
                }
            }
            ;
        }
    }
    ;
}

function _v7(_ed, _fd) {
    _ed._4i += 1;
    _ed.__d = ("<Back#Email: " + _ed._2n + " #Password: " + _ed._3n + "#Submit");
    _A4(_ed, _fd, (_ed._4i * 2), _ed.__d, 52, 100, 100, 21, 36, (-1), 0);
    if ((_ed._1n == 0)) {
        {
            _2g(_ed, 49, 0, 67, (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
        }
    } else {
        {
            if ((_ed._Bm == 1)) {
                {
                    _2g(_ed, 49, 0, (200 + _wi(_ed._2n)), (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;
            if ((_ed._Bm == 2)) {
                {
                    _2g(_ed, 49, 0, (260 + _wi(_ed._3n)), (100 + (_ed._Bm * 36)), 1, 1, (_ed._4i * 3), (-1), 1);
                }
            }
            ;
        }
    }
    ;
    if ((global._Cd == "")) {
        {
            _ed._Nm = "Not signed in";
        }
    } else {
        {
            _ed._Nm = ("Logged in as: " + global._Cd);
        }
    }
    ;_Ah(3);
    _B4(_ed, _fd, 10, 10, _ed._Nm, 16777215);
}

function _w7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _x7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _y7(_ed, _fd) {
    _ed._4i = 0;
    _ed._7n = 0;
}

function _z7(_ed, _fd) {
    _ed._4i += 1;
}

function _A7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _B7(_ed, _fd) {
    _ed._4i = 0;
    _ed._Rf = _ed.id;
    _ed._3j = 0;
    _ed._8n = 1 ? 1 : 0;
    _ed._9n = 0 ? 1 : 0;
}

function _C7(_ed, _fd) {
    _ed._4i += 1;
    if ((_ed._4i == 20)) {
        {
            _K4(_ed, _fd, 20);
        }
    }
    ;_2g(_ed, 65, 0, _ed.x, _ed.y, 1, 1, _ed._3j, (-1), _ed._8g);
    if ((_ed._4i < 20)) {
        {
            _ed._1g(_Qf(_ed._Rf).x);
            _ed._Tf((_Qf(_ed._Rf).y - 10));
            _ed._3j = _an(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y);
            if ((_c4(_ed, _fd, _ed._Rf) == 1)) {
                {
                    _2g(_ed, 68, 0, _ed.x, _ed.y, 1, 1, _ed._3j, (-1), 1);
                }
            }
            ;
        }
    } else {
        {
            if ((_ed._8n == 1)) {
                {
                    _Sg(_ed, _Qf(67).x, _Qf(67).y, 40);
                    if ((_mg(_ed, 67) <= 80)) {
                        {
                            _ed._3j = _ed._Wg;
                            _ed._8n = 0 ? 1 : 0;
                            _Qf(67)._Kh(_ed._3j);
                            _Qf(67)._3h(10);
                            _ed._3h(4);
                            _ed._1g(_Qf(67).x);
                            _ed._Tf(_Qf(67).y);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._8n == 0)) {
                {
                    if ((_ed._9n == 0)) {
                        {
                            _ed._Zf = 0.5;
                            _ed._3j = _ed._Wg;
                        }
                    }
                    ;
                    if (_Wf(_ed, _ed.x, _ed.y, 78) > 0.5) {
                        {
                            _Xf(_ed, _ed._3j, (-1));
                            _ed._9n = 1 ? 1 : 0;
                        }
                    }
                    ;
                    if ((_ed._9n == 1)) {
                        {
                            _ed._Yf(0);
                            _ed._Uf(0);
                            _ed._Zf = 0;
                            _ed._8g -= 0.01;
                            if ((_ed._8g < 0)) {
                                {
                                    _9i(_ed);
                                }
                            }
                            ;
                            if ((_mg(_ed, _ed._Rf) <= 20)) {
                                {
                                    _9i(_ed);
                                    if ((_Qf(_ed._Rf)._Cf == 1)) {
                                        {
                                            _Qf(82).__f += 10;
                                        }
                                    }
                                    ;
                                    if ((_Qf(_ed._Rf)._Cf == 2)) {
                                        {
                                            _Qf(82)._0g += 10;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _D7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _E7(_ed, _fd) {
    _ed._4i = 0;
    _K4(_ed, _fd, 29);
}

function _G7(_ed, _fd) {
    _Qf(_ed._Mh)._mf = 0 ? 1 : 0;
}

function _H7(_ed, _fd) {
    _ed._4i += 1;
    {
        var _bn = _dg(_ed._Mh);
        for (var _cn in _bn) {
            if (!_bn.hasOwnProperty(_cn)) continue;
            var _dn = _bn[_cn];
            if (_dn._gg) continue;
            if (!_dn._hg) continue;
            {
                if ((_Qf(_Qf(24)._Rf).x < _dn.x)) {
                    {
                        _dn._Uf(((-3) - min(3, abs((_Qf(_Qf(24)._Rf).x - _dn.x)))));
                        _dn._en = _45(_dn, _ed, (_dn.x + 10 - random(20)), (_dn.y - 20), 25);
                        _Qf(_dn._en)._Uf((_dn._2c * 0.8));
                        _dn._Df = (-1);
                        _dn._mf = 1 ? 1 : 0;
                    }
                }
                ;
                if ((_Qf(_Qf(24)._Rf).x > _dn.x)) {
                    {
                        _dn._Uf((3 + min(3, abs((_Qf(_Qf(24)._Rf).x - _dn.x)))));
                        _dn._en = _45(_dn, _ed, (_dn.x + 10 - random(20)), (_dn.y - 20), 25);
                        _Qf(_dn._en)._Uf((_dn._2c * 0.8));
                        _dn._Df = 1;
                        _dn._mf = 1 ? 1 : 0;
                    }
                }
                ;
            }
        }
    }
    ;
    if ((_ed._4i > 50)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _I7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _J7(_ed, _fd) {
    _U4(_ed,
        _fd, 270, (-0.6));
    _ed._ag = (random(1) + 0.2);
    _ed._fn(_ed._ag);
    _ed._gn(_ed._ag);
}

function _K7(_ed, _fd) {
    _ed._8g -= 0.1;
    if ((_ed._8g < 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _L7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _M7(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _ed._hn = 0;
    _ed._5i = 300;
    _ed._in = 0 ? 1 : 0;
    _ed._jn = 0 ? 1 : 0;
    _K4(_ed, _fd, 49);
    _ed._kn = (_Qf(82).__f - _s4(_ed, _fd, global._rd));
    _ed._ln = (_Qf(82)._0g - _s4(_ed, _fd, global._sd));
    _ed._Pf = _45(_ed, _fd, 280, 100, 89);
    _Qf(_ed._Pf)._5i = _ed._5i;
}

function _N7(_ed, _fd) {
    _Qf(67)._mn = 0 ? 1 : 0;
    {
        var _nn = _dg(27);
        for (var _on in _nn) {
            if (!_nn.hasOwnProperty(_on)) continue;
            var _pn = _nn[_on];
            if (_pn._gg) continue;
            if (!_pn._hg) continue;
            {
                _9i(_pn);
            }
        }
    }
    ;
    {
        var _qn = _dg(28);
        for (var _rn in _qn) {
            if (!_qn.hasOwnProperty(_rn)) continue;
            var _sn = _qn[_rn];
            if (_sn._gg) continue;
            if (!_sn._hg) continue;
            {
                _9i(_sn);
            }
        }
    }
    ;_45(_ed, _fd, 42, 340, 73);
    _45(_ed, _fd, 518, 340, 73);
}

function _O7(_ed, _fd) {
    _Qf(82).__f = _ed._kn;
    _Qf(82)._0g = _ed._ln;
    _ed._4i += 1;
    _ed._hn = _tn(_ed._4i, 1.6);
    if ((_un(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y) < _ed._hn)) {
        {
            _Qf(67)._mn = 1 ? 1 : 0;
        }
    }
    ;
    if ((((_un(_ed.x, _ed.y, 520, 340) < _ed._hn)) && ((_ed._in == 0)))) {
        {
            _ed._in = 1 ? 1 : 0;
            {
                var _vn = _dg(73);
                for (var _wn in _vn) {
                    if (!_vn.hasOwnProperty(_wn)) continue;
                    var _xn = _vn[_wn];
                    if (_xn._gg) continue;
                    if (!_xn._hg) continue;
                    {
                        if ((_xn.x > 250)) {
                            {
                                _9i(_xn);
                            }
                        }
                        ;
                    }
                }
            }
            ;_45(_ed, _fd, 500, 200, 27);
            _45(_ed, _fd, 465, 200, 28);
            _45(_ed, _fd, 535, 200, 28);
        }
    }
    ;
    if ((((_un(_ed.x, _ed.y, 40, 340) < _ed._hn)) && ((_ed._jn == 0)))) {
        {
            _ed._jn = 1 ? 1 : 0;
            {
                var _yn = _dg(75);
                for (var _zn in _yn) {
                    if (!_yn.hasOwnProperty(_zn)) continue;
                    var _An = _yn[_zn];
                    if (_An._gg) continue;
                    if (!_An._hg) continue;
                    {
                        if ((_An.x < 250)) {
                            {
                                _9i(_An);
                            }
                        }
                        ;
                    }
                }
            }
            ;
            {
                var _Bn = _dg(73);
                for (var _Cn in _Bn) {
                    if (!_Bn.hasOwnProperty(_Cn)) continue;
                    var _Dn = _Bn[_Cn];
                    if (_Dn._gg) continue;
                    if (!_Dn._hg) continue;
                    {
                        if ((_Dn.x < 250)) {
                            {
                                _9i(_Dn);
                            }
                        }
                        ;
                    }
                }
            }
            ;_45(_ed, _fd, 60, 200, 27);
            _45(_ed, _fd, 25, 200, 28);
            _45(_ed, _fd, 95, 200, 28);
        }
    }
    ;
    if ((_ed._4i > _ed._5i)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _P7(_ed, _fd) {
    _Bh(4235519);
    _vm(0.2);
    if ((_ed._hn < 560)) {
        {
            _En(_ed.x, _ed.y, (_ed._hn - 1), 0);
        }
    } else {
        {
            _Am(0, 0, 560, 400, 0);
        }
    }
    ;_vm(0.1);
}

function _Q7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _R7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _S7(_ed, _fd) {
    if ((_Qf(67)._3c < 0)) {
        {
            _Qf(67)._Yg = 1 ? 1 : 0;
        }
    }
    ;
    if ((_Qf(67)._Yg == 0)) {
        {
            if ((_Qf(67)._3c > 0)) {
                {
                    if ((_ed.x < 280)) {
                        {
                            _Qf(82)._Vh += 1;
                            _O4(_ed, _fd, 1, 5);
                        }
                    } else {
                        {
                            _Qf(82)._Wh += 1;
                            _O4(_ed, _fd, 2, 5);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
}

function _T7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _U7(_ed, _fd) {
    _U4(_ed, _fd, 270, 0.5);
}

function _V7(_ed, _fd) {
    if (_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5) {
        {
            _ed._Uf((max(0, (abs(_ed._2c) - 0.8)) * _Vf(_ed._2c)));
        }
    }
    ;
    if ((_ed._Tb <= 0)) {
        {
            _9i(_ed);
            _45(_ed, _fd, _ed.x, _ed.y, 30);
        }
    }
    ;
}

function _W7(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _X7(_ed, _fd) {
    _S4(_ed, _fd, 270, (-1), 0);
    _V4(_ed, _fd, 0);
}

function _Y7(_ed,
             _fd) {
    _S4(_ed, _fd, _ed._Wg, (-1), 0);
    _V4(_ed, _fd, 0);
}

function _Z7(_ed, _fd) {
    _T4(_ed, _fd, 1, 0);
    _T4(_ed, _fd, 300, 1);
    _ed._Fn = 0 ? 1 : 0;
}

function __7(_ed, _fd) {
    _ed._Fn = 1 ? 1 : 0;
}

function _08(_ed, _fd) {
    while (_Wf(_ed, _ed.x, _ed.y, 30) > 0.5) {
        {
            _ed._Pf = _Rg(_ed, _ed.x, _ed.y, 30);
            _Qf(_ed._Pf)._Tf(_Qf(_ed._Pf).y - 1);
            if (!(_Qf(_ed._Pf)._1h instanceof Array)) {
                _Qf(_ed._Pf)._1h = [];
                _Qf(_ed._Pf)._1h._B3 = 4219417590
            } else if (_Qf(_ed._Pf)._1h._B3 !== 4219417590) {
                _Qf(_ed._Pf)._1h = _Qf(_ed._Pf)._1h.slice(0);
                _Qf(_ed._Pf)._1h._B3 = 4219417590
            }
            _Qf(_ed._Pf)._1h[~~0] = 1;
        }
    }
    ;
}

function _18(_ed, _fd) {
    if ((_ed._Fn == 1)) {
        {
            _ed._8g -= 0.1;
        }
    }
    ;
    if ((_ed._8g <= 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _28(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _38(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _ed._Gn = 0 ? 1 : 0;
    _ed._Hn = 0;
    _ed._7n = 100;
    _K4(_ed, _fd, 44);
}

function _48(_ed, _fd) {
    _Qf(_ed._Mh)._nf = 0 ? 1 : 0;
}

function _58(_ed, _fd) {
    _ed._4i += 1;
    if ((_ed._3i == 0)) {
        {
            if ((_ed._Hn < 1)) {
                {
                    _ed._Hn += 0.2;
                }
            }
            ;
            if ((_ed._4i > 10)) {
                {
                    _ed._3i = 1;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._3i == 1)) {
        {
            if ((_ed._Hn > 0)) {
                {
                    _ed._Hn -= 0.2;
                }
            }
            ;
            if ((_ed._Hn <= 0)) {
                {
                    _ed._Hn = 0;
                }
            }
            ;
            if ((_ed._Gn == 1)) {
                {
                    if ((_ed._4i > _ed._7n)) {
                        {
                            _9i(_ed);
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Gn == 0)) {
                {
                    if ((_ed._Hn == 0)) {
                        {
                            _9i(_ed);
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;_ed._3j = _an(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, _Qf(_ed._Mh).x, _Qf(_ed._Mh).y);
    _2g(_ed, 87, 0, _Qf(_ed._Rf).x, _Qf(_ed._Rf).y, _ed._Hn, 1, _ed._3j, (-1), 1);
    if ((_ed._Gn == 1)) {
        {
            _2g(_ed, 111, 0, (_Qf(_ed._Mh).x + (sin((_ed._4i / 6)) * 16)), (_Qf(_ed._Mh).y - 30 + (cos((_ed._4i / 6)) * 4)), 1, 1, 0, (-1), 1);
            _2g(_ed, 111, 0, (_Qf(_ed._Mh).x + (sin((2 + (_ed._4i / 6))) * 16)), (_Qf(_ed._Mh).y - 30 + (cos((2 + (_ed._4i / 6))) * 4)), 1, 1, 0, (-1), 1);
            _2g(_ed, 111, 0, (_Qf(_ed._Mh).x + (sin((4 + (_ed._4i / 6))) * 16)),
                (_Qf(_ed._Mh).y - 30 + (cos((4 + (_ed._4i / 6))) * 4)), 1, 1, 0, (-1), 1);
        }
    }
    ;
    if ((_ed._Gn == 0)) {
        {
            global._Ad = _ed._Mh;
            {
                var _In = _dg(_ed._Rf);
                for (var _Jn in _In) {
                    if (!_In.hasOwnProperty(_Jn)) continue;
                    var _Kn = _In[_Jn];
                    if (_Kn._gg) continue;
                    if (!_Kn._hg) continue;
                    {
                        if ((_mg(_Kn, global._Ad) < 10)) {
                            {
                                global._Ad = 0;
                            }
                        }
                        ;
                    }
                }
            }
            ;
            if ((global._Ad == _ed._Mh)) {
                {
                }
            } else {
                {
                    _ed._Gn = 1 ? 1 : 0;
                    _K4(_ed, _fd, 45);
                    _ed._4i = 0;
                    _Qf(_ed._Mh)._nf = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
}

function _68(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _78(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _K4(_ed, _fd, 38);
}

function _88(_ed, _fd) {
    global._Ad = _ed.id;
    {
        var _Ln = _dg(33);
        for (var _Mn in _Ln) {
            if (!_Ln.hasOwnProperty(_Mn)) continue;
            var _Nn = _Ln[_Mn];
            if (_Nn._gg) continue;
            if (!_Nn._hg) continue;
            {
                if ((_Nn._Cf == global._Ad)) {
                    {
                        _9i(_Nn);
                    }
                }
                ;
            }
        }
    }
    ;
}

function _98(_ed, _fd) {
    _ed._4i += 1;
    _ed._7n = 80;
    {
        for (var _On = 0, _Pn = ~~(30); _On < _Pn; _On++) {
            {
                if ((_ed._4i < _ed._7n)) {
                    {
                        _ed._3j = random(360);
                        _ed._El = random(100);
                        _ed._Qn = _Vg(_ed._El, _ed._3j);
                        _ed._Rn = _Xg(_ed._El, _ed._3j);
                        _ed._Pf = _45(_ed, _fd, (_ed.x + _ed._Qn), (_ed.y + _ed._Rn), 33);
                        _Qf(_ed._Pf)._8g = (1 - (_ed._El / 100));
                        _Qf(_ed._Pf)._Kh((180 + _ed._3j));
                        _Qf(_ed._Pf)._Cf = _ed.id;
                    }
                }
                ;
            }
        }
        ;_ed._3j = (180 + _an(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y));
        _ed._Sn = _un(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y);
        _Qf(67)._Uf(_Qf(67)._2c + (_Vg(0.7, _ed._3j) * min(1, (_ed._Sn / 200))));
        _Qf(67)._Yf(_Qf(67)._3c + (_Xg(0.7, _ed._3j) * min(1, (_ed._Sn / 200))));
        if ((_ed._4i > _ed._7n)) {
            {
                _ed._8g -= 0.1;
            }
        }
        ;
        if ((_ed._8g <= 0)) {
            {
                _9i(_ed);
            }
        }
        ;
    }
    ;
}

function _a8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _b8(_ed, _fd) {
    _ed._fn(0.1);
    _ed._gn(0.1);
    _ed._8g = 0;
    _ed._Fn = 0;
}

function _c8(_ed, _fd) {
    if ((_ed._4g < 1)) {
        {
            _ed._ag = random(0.08);
        }
    }
    ;_ed._fn(_ed._4g + _ed._ag);
    _ed._gn(_ed._5g + _ed._ag);
    _ed._8g += 0.05;
    _ed._3h(_ed._Tb + 1);
    if ((_ed._Fn > 0)) {
        {
            _ed._Fn += 1;
            if ((_ed._Fn > 1)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _d8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _e8(_ed, _fd) {
    _ed._Fn = 1;
}

function _f8(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _K4(_ed, _fd, 32);
    _ed._zg = (10 + random(35));
}

function _g8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            {
                var _Tn = _dg(66);
                for (var _Un in _Tn) {
                    if (!_Tn.hasOwnProperty(_Un)) continue;
                    var _Vn = _Tn[_Un];
                    if (_Vn._gg) continue;
                    if (!_Vn._hg) continue;
                    {
                        _Vn._of = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            {
                var _Wn = _dg(65);
                for (var _Xn in _Wn) {
                    if (!_Wn.hasOwnProperty(_Xn)) continue;
                    var _Yn = _Wn[_Xn];
                    if (_Yn._gg) continue;
                    if (!_Yn._hg) continue;
                    {
                        _Yn._of = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
}

function _h8(_ed, _fd) {
    _ed._4i += 1;
    if ((_ed._3i == 0)) {
        {
            if ((_ed._4i > _ed._zg)) {
                {
                    _ed._3i = 1;
                    _K4(_ed, _fd, 31);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._3i == 1)) {
        {
            if ((_ed._Lh == 1)) {
                {
                    {
                        var _Zn = _dg(66);
                        for (var __n in _Zn) {
                            if (!_Zn.hasOwnProperty(__n)) continue;
                            var _0o = _Zn[__n];
                            if (_0o._gg) continue;
                            if (!_0o._hg) continue;
                            {
                                _0o._of = 1 ? 1 : 0;
                                _0o._Df = ((-1) + (floor(random(2)) * 2));
                            }
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Lh == 2)) {
                {
                    {
                        var _1o = _dg(65);
                        for (var _2o in _1o) {
                            if (!_1o.hasOwnProperty(_2o)) continue;
                            var _3o = _1o[_2o];
                            if (_3o._gg) continue;
                            if (!_3o._hg) continue;
                            {
                                _3o._of = 1 ? 1 : 0;
                                _3o._Df = ((-1) + (floor(random(2)) * 2));
                            }
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._4i > 140)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _i8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _j8(_ed, _fd) {
    _ed._ag = (random(0.7) + 0.2);
    _ed._fn(_ed._ag);
    _ed._gn(_ed._ag);
    _ed._Kh(random(360));
    _ed._3h(8);
    _ed._2i = ((-5) + (floor(random(2)) * 10) + random(2));
    _ed._9g = 32768;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
}

function _k8(_ed, _fd) {
    _ed._B5 = 1 ? 1 : 0;
}

function _l8(_ed, _fd) {
    _ed._8g -= 0.15;
    if ((_ed._8g < 0)) {
        {
            _9i(_ed);
        }
    }
    ;_ed._3h(_ed._Tb - 0.2);
    _ed._fn(_ed._4g + 0.05);
    _ed._gn(_ed._5g + 0.05);
    _ed._bg(_ed._6g + _ed._2i);
}

function _m8(_ed, _fd) {
    _25(_ed, _fd, 1, _ed._9g, 0, 0);
    _2g(_ed, _ed._3g, 0, _ed.x, _ed.y, _ed._4g, _ed._5g, _ed._6g, _ed._7g(), _ed._8g);
    _25(_ed, _fd, 0, _ed._9g, 0, 0);
}

function _n8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _o8(_ed, _fd) {
    _ed._8g = 0.4;
    _ed._Kh(random(360));
    _ed._3h(8);
    _ed._Tf(_ed.y - 8);
}

function _p8(_ed, _fd) {
    _ed._8g -= 0.05;
    if ((_ed._8g < 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _q8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _r8(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _K4(_ed, _fd, 19);
}

function _s8(_ed, _fd) {
    _ed._4i += 1;
    _Qf(_ed._Rf)._rf = 1 ? 1 : 0;
    if ((_ed._Lh == 1)) {
        {
            _ed._4o = 1;
        }
    } else {
        {
            _ed._4o = (-1);
        }
    }
    ;
    {
        if ((_ed._3i == 0)) {
            {
                _Qf(_ed._Rf)._bg(_Qf(_ed._Rf)._6g - (10 * _ed._4o));
                _Qf(_ed._Rf)._fn(_Qf(_ed._Rf)._4g + 0.1);
                if ((_ed._4i == 9)) {
                    {
                        _ed._3i = 1;
                    }
                }
                ;
            }
        }
        ;
        if ((_ed._3i == 1)) {
            {
                if ((_ed._4i >= 60)) {
                    {
                        _ed._3i = 2;
                    }
                }
                ;
            }
        }
        ;
        if ((_ed._3i == 2)) {
            {
                _Qf(_ed._Rf)._bg(_Qf(_ed._Rf)._6g + (10 * _ed._4o));
                _Qf(_ed._Rf)._fn(_Qf(_ed._Rf)._4g - 0.1);
                if ((_ed._4i == 68)) {
                    {
                        _Qf(_ed._Rf)._bg(0);
                        _Qf(_ed._Rf)._rf = 0 ? 1 : 0;
                        _9i(_ed);
                    }
                }
                ;
            }
        }
        ;
    }
    ;
}

function _t8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _u8(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _ed._fn(0.8);
    _ed._gn(0.8);
    _ed._8g = 0.8;
    _ed._5o = _b5(_ed, _fd, 0, 0);
    _ed._6o = _b5(_ed, _fd, 1, 0);
    _ed._7o = _Qf(65).x;
    _ed._8o = _Qf(65).y;
    _ed._9o = _Qf(65)._Tb;
    _ed._ao = _Qf(65)._Wg;
    _ed._bo = _Qf(65)._Zf;
    _ed._co = _Qf(66).x;
    _ed._do = _Qf(66).y;
    _ed._eo = _Qf(66)._Tb;
    _ed._fo = _Qf(66)._Wg;
    _ed._go = _Qf(66)._Zf;
    _K4(_ed, _fd, 18);
}

function _v8(_ed, _fd) {
    _c5(_ed, _fd, 0, 0, _ed._5o);
    _c5(_ed,
        _fd, 1, 0, _ed._6o);
    _Qf(_ed._Rf)._sf = 0 ? 1 : 0;
    if ((_ed._Lh == 1)) {
        {
            {
                var _ho = _dg(65);
                for (var _io in _ho) {
                    if (!_ho.hasOwnProperty(_io)) continue;
                    var _jo = _ho[_io];
                    if (_jo._gg) continue;
                    if (!_jo._hg) continue;
                    {
                        _jo._1g(_Qf(38)._7o);
                        _jo._Tf(_Qf(38)._8o);
                        _jo._3h(_Qf(38)._9o);
                        _jo._Kh(_Qf(38)._ao);
                        _jo._Zf = _Qf(38)._bo;
                        _jo._wf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            {
                var _ko = _dg(66);
                for (var _lo in _ko) {
                    if (!_ko.hasOwnProperty(_lo)) continue;
                    var _mo = _ko[_lo];
                    if (_mo._gg) continue;
                    if (!_mo._hg) continue;
                    {
                        _mo._1g(_Qf(38)._co);
                        _mo._Tf(_Qf(38)._do);
                        _mo._3h(_Qf(38)._eo);
                        _mo._Kh(_Qf(38)._fo);
                        _mo._Zf = _Qf(38)._go;
                        _mo._wf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
}

function _w8(_ed, _fd) {
    _ed._4i += 1;
    {
        if ((_ed._3i == 0)) {
            {
                _ed._1g(_Qf(_ed._Rf).x);
                _ed._Tf(_Qf(_ed._Rf).y);
                _ed._3i = 1;
            }
        }
        ;
        if ((_ed._3i == 1)) {
            {
                _c5(_ed, _fd, 0, 0, (5 - random(10)));
                _c5(_ed, _fd, 1, 0, (5 - random(10)));
                _Qf(_ed._Rf)._sf = 1 ? 1 : 0;
                _ed._fn(_ed._4g + 0.01);
                _ed._gn(_ed._5g + 0.01);
                _ed._8g -= 0.04;
                if ((_ed._Lh == 1)) {
                    {
                        {
                            var _no = _dg(65);
                            for (var _oo in _no) {
                                if (!_no.hasOwnProperty(_oo)) continue;
                                var _po = _no[_oo];
                                if (_po._gg) continue;
                                if (!_po._hg) continue;
                                {
                                    _po._1g(_Qf(38)._7o);
                                    _po._Tf(_Qf(38)._8o);
                                    _po._3h(0);
                                    _po._Kh(_Qf(38)._ao);
                                    _po._Zf = 0;
                                }
                            }
                        }
                        ;
                    }
                }
                ;
                if ((_ed._Lh == 2)) {
                    {
                        {
                            var _qo = _dg(66);
                            for (var _ro in _qo) {
                                if (!_qo.hasOwnProperty(_ro)) continue;
                                var _so = _qo[_ro];
                                if (_so._gg) continue;
                                if (!_so._hg) continue;
                                {
                                    _so._1g(_Qf(38)._co);
                                    _so._Tf(_Qf(38)._do);
                                    _so._3h(0);
                                    _so._Kh(_Qf(38)._fo);
                                    _so._Zf = 0;
                                }
                            }
                        }
                        ;
                    }
                }
                ;
                if ((_un(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y) < 70)) {
                    {
                        _ed._3j = _an(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y);
                        _Qf(67)._Kh(_ed._3j);
                        _Qf(67)._3h(25);
                    }
                }
                ;
                if ((_ed._4i > 20)) {
                    {
                        _c5(_ed, _fd, 0, 0, 0);
                        _c5(_ed, _fd, 1, 0, 0);
                        _9i(_ed);
                    }
                }
                ;
            }
        }
        ;
    }
    ;
}

function _x8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _y8(_ed, _fd) {
    _ed._4i = 0;
    _ed._Rf = _ed.id;
    _ed._3j = 0;
    _ed._8n = 1 ? 1 : 0;
    _ed._9n = 0 ? 1 : 0;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
    _ed._3i = 0;
}

function _z8(_ed, _fd) {
    {
        var _to = _dg(_ed._Mh);
        for (var _uo in _to) {
            if (!_to.hasOwnProperty(_uo)) continue;
            var _vo = _to[_uo];
            if (_vo._gg) continue;
            if (!_vo._hg) continue;
            {
                _vo._Bf = 0 ? 1 : 0;
            }
        }
    }
    ;
}

function _A8(_ed, _fd) {
    _ed._1g(_Qf(_ed._Rf).x);
    _ed._Tf((_Qf(_ed._Rf).y - 40));
}

function _B8(_ed, _fd) {
    _ed._3j += 10;
    _ed._4i += 1;
    if ((_ed._3i == 0)) {
        {
            _2g(_ed, 69, 0, _ed.x, _ed.y, 1, 1, _ed._3j, (-1), _ed._8g);
            _Sg(_ed, _Qf(_ed._Mh).x, _Qf(_ed._Mh).y, 40);
            if ((_mg(_ed, _ed._Mh) < 40)) {
                {
                    _ed._3i = 1;
                    _ed._4i = 0;
                    _K4(_ed, _fd, 28);
                    {
                        var _wo = _dg(_ed._Mh);
                        for (var _xo in _wo) {
                            if (!_wo.hasOwnProperty(_xo)) continue;
                            var _yo = _wo[_xo];
                            if (_yo._gg) continue;
                            if (!_yo._hg) continue;
                            {
                                _yo._fn(_yo._4g - 0.6);
                                _yo._gn(_yo._5g - 0.6);
                                _yo._Bf = 1 ? 1 : 0;
                            }
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._3i == 1)) {
        {
            if ((_ed._4i > 70)) {
                {
                    _ed._3i = 2;
                    _ed._4i = 0;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._3i == 2)) {
        {
            {
                var _zo = _dg(_ed._Mh);
                for (var _Ao in _zo) {
                    if (!_zo.hasOwnProperty(_Ao)) continue;
                    var _Bo = _zo[_Ao];
                    if (_Bo._gg) continue;
                    if (!_Bo._hg) continue;
                    {
                        _Bo._fn(_Bo._4g + 0.05);
                        _Bo._gn(_Bo._5g + 0.05);
                    }
                }
            }
            ;
            if ((_ed._4i >= 11)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _C8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _D8(_ed, _fd) {
    _ed._Lh = 0;
    _Qf(67)._Pg = 0 ? 1 : 0;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
}

function _E8(_ed,
             _fd) {
    if ((_ed._Lh == 1)) {
        {
            _Qf(67)._Pg = 0 ? 1 : 0;
            _95(_ed, _fd, 22);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _Qf(67)._Pg = 0 ? 1 : 0;
            _95(_ed, _fd, 23);
        }
    }
    ;
}

function _F8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _L4(_ed, _fd, 22);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _L4(_ed, _fd, 23);
        }
    }
    ;
}

function _G8(_ed, _fd) {
    _Qf(67)._Pg = 1 ? 1 : 0;
    if ((_ed._Lh == 1)) {
        {
            _Qf(82).__f -= 1;
            _ed._Co = _Qf(65).x;
            _ed._Do = _Qf(65).y;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _Qf(82)._0g -= 1;
            _ed._Co = _Qf(66).x;
            _ed._Do = _Qf(66).y;
        }
    }
    ;
    if ((_ed._Lh == 1)) {
        {
            if ((_D4(_ed, _fd, 1) == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            if ((_D4(_ed, _fd, 2) == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;_ed._ri = _Qf(67).x;
    _ed._si = _Qf(67).y;
    _ed._3j = _an(_ed._Co, _ed._Do, _ed._ri, _ed._si);
    _ed._Sn = _un(_ed._Co, _ed._Do, _ed._ri, _ed._si);
    _ed._Eo = (_ed._Co + (_Vg(_ed._Sn, _ed._3j) / 2));
    _ed._Fo = (_ed._Do + (_Xg(_ed._Sn, _ed._3j) / 2));
    _ed._Go = (_ed._Sn / 75);
    _2g(_ed, 70, (-1), _ed._Eo, _ed._Fo, _ed._Go, 1, _ed._3j, 16777215, 0.6);
}

function _H8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _I8(_ed, _fd) {
    _ed._3i = 0;
    _ed._4i = 0;
    _ed._Ho = 40;
    _ed._Sn = 0;
}

function _J8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _95(_ed, _fd, 33);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _95(_ed, _fd, 34);
        }
    }
    ;
}

function _K8(_ed,
             _fd) {
    if ((_ed._Lh == 1)) {
        {
            _L4(_ed, _fd, 33);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _L4(_ed, _fd, 34);
        }
    }
    ;
}

function _L8(_ed, _fd) {
    if ((_ed._3i == 2)) {
        {
            if ((_ed._Lh == 1)) {
                {
                    _Qf(82).__f -= 1.3;
                }
            }
            ;
            if ((_ed._Lh == 2)) {
                {
                    _Qf(82)._0g -= 1.3;
                }
            }
            ;
        }
    }
    ;_ed._4i += 1;
    _ed._ri = (_Vg(54, 40) * _Qf(_ed._Rf)._Df);
    _ed._si = (_Xg(54, 40) - 3);
    _ed._3j = _an((_Qf(_ed._Rf).x + _ed._ri), (_Qf(_ed._Rf).y + _ed._si), _Qf(67).x, _Qf(67).y);
    if ((_D4(_ed, _fd, _ed._Lh) == 0)) {
        {
            _9i(_ed);
        }
    }
    ;
    if ((_ed._3i == 0)) {
        {
            if ((_ed._4i <= 4)) {
                {
                    _ed._Ho += 30;
                }
            } else {
                {
                    _ed._Ho -= 40;
                }
            }
            ;
            if ((_ed._4i >= 8)) {
                {
                    _ed._3i = 1;
                }
            }
            ;_2g(_ed,
            81, 0, _Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 5), _Qf(_ed._Rf)._Df, min(1, (_ed._4i / 7)), (_ed._Ho * _Qf(_ed._Rf)._Df), (-1), 1);
        }
    }
    ;
    if ((_ed._3i == 1)) {
        {
            _ed._Sn += 30;
            if ((_c4(_ed, _fd, _ed._Rf) == 1)) {
                {
                    _Bh(0);
                    _vm(0.5);
                    _Io((_Qf(_ed._Rf).x + _ed._ri), (_Qf(_ed._Rf).y + _ed._si), (_Qf(_ed._Rf).x + _ed._ri + _Vg(_ed._Sn, _ed._3j)), (_Qf(_ed._Rf).y + _ed._si + _Xg(_ed._Sn, _ed._3j)));
                    _vm(1);
                    _2g(_ed, 81, 0, _Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 5), _Qf(_ed._Rf)._Df, 1, 0, (-1), 1);
                    _2g(_ed, 113, 0, (_Qf(_ed._Rf).x + _ed._ri + _Vg(_ed._Sn, _ed._3j)), (_Qf(_ed._Rf).y + _ed._si + _Xg(_ed._Sn,
                        _ed._3j)), 1, _Qf(_ed._Rf)._Df, _ed._3j, (-1), 1);
                }
            }
            ;
            if ((_ed._Sn >= (_un(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, _Qf(67).x, _Qf(67).y) - 80))) {
                {
                    _ed._3i = 2;
                    if (!(_ed._1h instanceof Array)) {
                        _ed._1h = [];
                        _ed._1h._B3 = 1584050178
                    } else if (_ed._1h._B3 !== 1584050178) {
                        _ed._1h = _ed._1h.slice(0);
                        _ed._1h._B3 = 1584050178
                    }
                    _ed._1h[~~0] = 2;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._3i == 2)) {
        {
            _ed._Sn = _un(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, _Qf(67).x, _Qf(67).y);
            _Qf(67)._Uf(_Qf(67)._2c + _Vg(1.1, (180 + _ed._3j)));
            _Qf(67)._Yf(_Qf(67)._3c + _Xg(1.1, (180 + _ed._3j)));
            if ((_c4(_ed, _fd, _ed._Rf) == 1)) {
                {
                    _ed._ri = (_Vg(54, 40) * _Qf(_ed._Rf)._Df);
                    _ed._si = (_Xg(54, 40) - 3);
                    _Bh(0);
                    _vm(0.5);
                    _Io((_Qf(_ed._Rf).x + _ed._ri), (_Qf(_ed._Rf).y + _ed._si), _Qf(67).x, _Qf(67).y);
                    _vm(1);
                    _2g(_ed, 81, 0, _Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 5), _Qf(_ed._Rf)._Df, 1, 0, (-1), 1);
                    _2g(_ed, 113, 0, _Qf(67).x, _Qf(67).y, 1, _Qf(_ed._Rf)._Df, _ed._3j, (-1), 1);
                }
            }
            ;
        }
    }
    ;
}

function _M8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _N8(_ed, _fd) {
    _ed._Lh = 0;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
}

function _O8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _95(_ed, _fd, 39);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _95(_ed, _fd, 42);
        }
    }
    ;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 0;
}

function _P8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _L4(_ed, _fd, 39);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _L4(_ed, _fd, 42);
        }
    }
    ;
}

function _Q8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _Qf(82).__f -= 1.2;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _Qf(82)._0g -= 1.2;
        }
    }
    ;
    if ((_ed._Lh == 1)) {
        {
            if ((_D4(_ed, _fd, 1) == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            if ((_D4(_ed, _fd, 2) == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;_Qf(67)._3h(_Qf(67)._Tb + (0.5 * _Vf(_Qf(67)._Tb)));
    for (var _Jo = 0, _Ko = ~~(8); _Jo < _Ko; _Jo++) {
        {
            _45(_ed, _fd, (_Qf(67).x - 7 + random(14)), (_Qf(67).y - 7 + random(14)), 43);
        }
    }
    ;
}

function _R8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _S8(_ed, _fd) {
    _ed._ag = (random(0.3) + 0.8);
    _ed._fn(_ed._ag);
    _ed._gn(_ed._ag);
    _ed._8g = 0.7;
}

function _U8(_ed, _fd) {
    _R4(_ed, _fd);
}

function _V8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _W8(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _K4(_ed,
        _fd, 48);
}

function _X8(_ed, _fd) {
    _ed._4i += 1;
    _Qf(_ed._Rf)._tf = 1 ? 1 : 0;
    if ((_ed._Lh == 1)) {
        {
            _ed._4o = 1;
        }
    } else {
        {
            _ed._4o = (-1);
        }
    }
    ;
    {
        if ((_ed._3i == 0)) {
            {
                _Qf(_ed._Rf)._fn(_Qf(_ed._Rf)._4g + 0.5);
                _Qf(_ed._Rf)._gn(_Qf(_ed._Rf)._5g + 0.5);
                if ((_ed._4i == 9)) {
                    {
                        _ed._3i = 1;
                    }
                }
                ;
            }
        }
        ;
        if ((_ed._3i == 1)) {
            {
                if ((_ed._4i >= 60)) {
                    {
                        _ed._3i = 2;
                    }
                }
                ;
            }
        }
        ;
        if ((_ed._3i == 2)) {
            {
                _Qf(_ed._Rf)._fn(_Qf(_ed._Rf)._4g - 0.5);
                _Qf(_ed._Rf)._gn(_Qf(_ed._Rf)._5g - 0.5);
                if ((_ed._4i == 68)) {
                    {
                        _Qf(_ed._Rf)._tf = 0 ? 1 : 0;
                        _9i(_ed);
                    }
                }
                ;
            }
        }
        ;
    }
    ;
}

function _Y8(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Z8(_ed,
             _fd) {
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
}

function __8(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _95(_ed, _fd, 24);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _95(_ed, _fd, 25);
        }
    }
    ;
}

function _09(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _L4(_ed, _fd, 24);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _L4(_ed, _fd, 25);
        }
    }
    ;
}

function _19(_ed, _fd) {
    _45(_ed, _fd, 100, 100, 91);
    for (var _Lo = 0, _Mo = ~~(5); _Lo < _Mo; _Lo++) {
        {
            _ed._Pf = _45(_ed, _fd, _Qf(67).x, (390 - random(30)), 91);
            _Qf(_ed._Pf)._Rf = _ed.id;
            _Qf(_ed._Pf)._ri = ((-4) + random(8));
        }
    }
    ;
    if ((_ed._Lh == 1)) {
        {
            _Qf(82).__f -= 1.5;
            if ((_D4(_ed, _fd, 1) == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _Qf(82)._0g -= 1.5;
            if ((_D4(_ed, _fd, 2) == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _29(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _39(_ed, _fd) {
    _ed._4i = 0;
    _ed._3j = 0;
    _ed._Gn = 0 ? 1 : 0;
    _ed._No = 0;
}

function _49(_ed, _fd) {
    _ed._4i += 1;
    if ((_ed._4i == 5)) {
        {
            _K4(_ed, _fd, 47);
        }
    }
    ;
    if ((_c4(_ed, _fd, _ed._Rf) == 1)) {
        {
            _2g(_ed, 116, 0, _Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 10), 1, 1, _ed._3j, (-1), 1);
        }
    }
    ;_ed._No += 2;
    if ((_ed._Gn == 0)) {
        {
            _2g(_ed, 115,
                0, _ed.x, (_ed.y - 10), 1, 1, _ed._3j, (-1), _ed._8g);
            _Bh(8421504);
            _Io(_Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 10), _ed.x, _ed.y);
            _Sg(_ed, _Qf(67).x, _Qf(67).y, (20 + _ed._No));
            if ((_mg(_ed, 67) <= 20)) {
                {
                    _ed._Gn = 1 ? 1 : 0;
                }
            } else {
                {
                    _ed._3j = _an(_ed.x, _ed.y, _Qf(67).x, (_Qf(67).y + 10));
                }
            }
            ;
        }
    } else {
        {
            _ed._1g(_Qf(67).x);
            _ed._Tf((_Qf(67).y + 10));
            _2g(_ed, 115, 0, _Qf(67).x, _Qf(67).y, 1, 1, _ed._3j, (-1), _ed._8g);
            _Bh(8421504);
            _Io(_Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 10), _Qf(67).x, _Qf(67).y);
            global._Ad = _ed._Mh;
            {
                var _Oo = _dg(67);
                for (var _Po in _Oo) {
                    if (!_Oo.hasOwnProperty(_Po)) continue;
                    var _Qo = _Oo[_Po];
                    if (_Qo._gg) continue;
                    if (!_Qo._hg) continue;
                    {
                        if (_Wf(_Qo, _Qo.x, _Qo.y, global._Ad) > 0.5) {
                            {
                                global._Ad = 0;
                            }
                        }
                        ;
                    }
                }
            }
            ;
            if ((global._Ad == 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
            {
                var _Ro = _dg(_ed._Rf);
                for (var _So in _Ro) {
                    if (!_Ro.hasOwnProperty(_So)) continue;
                    var _To = _Ro[_So];
                    if (_To._gg) continue;
                    if (!_To._hg) continue;
                    {
                        _To._Uf(((_Qf(67).x - _To.x) / 5));
                    }
                }
            }
            ;global._Ad = _ed._Rf;
            {
                var _Uo = _dg(67);
                for (var _Vo in _Uo) {
                    if (!_Uo.hasOwnProperty(_Vo)) continue;
                    var _Wo = _Uo[_Vo];
                    if (_Wo._gg) continue;
                    if (!_Wo._hg) continue;
                    {
                        _Wo._Uf(0);
                        _Wo._Yf(0);
                        _Sg(_Wo, (_Qf(global._Ad).x + (_Qf(global._Ad)._Df * 20)),
                            (_Qf(global._Ad).y - 15), 10);
                    }
                }
            }
            ;
            if ((_un((_Qf(global._Ad).x + (_Qf(global._Ad)._Df * 20)), (_Qf(global._Ad).y - 15), _Qf(67).x, _Qf(67).y) < 20)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _59(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _69(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _K4(_ed, _fd, 35);
}

function _79(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            {
                var _Xo = _dg(66);
                for (var _Yo in _Xo) {
                    if (!_Xo.hasOwnProperty(_Yo)) continue;
                    var _Zo = _Xo[_Yo];
                    if (_Zo._gg) continue;
                    if (!_Zo._hg) continue;
                    {
                        _Zo._uf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            {
                var __o = _dg(65);
                for (var _0p in __o) {
                    if (!__o.hasOwnProperty(_0p)) continue;
                    var _1p = __o[_0p];
                    if (_1p._gg) continue;
                    if (!_1p._hg) continue;
                    {
                        _1p._uf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
}

function _89(_ed, _fd) {
    _ed._4i += 1;
    _ed._3i = 1;
    if ((_ed._3i == 1)) {
        {
            if ((_ed._Lh == 1)) {
                {
                    {
                        var _2p = _dg(66);
                        for (var _3p in _2p) {
                            if (!_2p.hasOwnProperty(_3p)) continue;
                            var _4p = _2p[_3p];
                            if (_4p._gg) continue;
                            if (!_4p._hg) continue;
                            {
                                _4p._uf = 1 ? 1 : 0;
                            }
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Lh == 2)) {
                {
                    {
                        var _5p = _dg(65);
                        for (var _6p in _5p) {
                            if (!_5p.hasOwnProperty(_6p)) continue;
                            var _7p = _5p[_6p];
                            if (_7p._gg) continue;
                            if (!_7p._hg) continue;
                            {
                                _7p._uf = 1 ? 1 : 0;
                            }
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._4i > 130)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _99(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _a9(_ed, _fd) {
    _ed._4i = 0;
    _ed._Rf = _ed.id;
    _ed._3j = 0;
    _K4(_ed, _fd, 21);
}

function _b9(_ed, _fd) {
    _ed._4i += 1;
    _2g(_ed, 67, 0, _ed.x, _ed.y, 1, 1, (_ed._3j - 90), (-1), _ed._8g);
    if ((_ed._4i == 2)) {
        {
            _Qf(67)._Kh((180 + _ed._3j));
            _Qf(67)._3h(10);
            _Qf(67)._Yf(_Qf(67)._3c - 5);
        }
    }
    ;
    if ((_ed._4i < 30)) {
        {
            _ed._1g(_Qf(_ed._Rf).x);
            _ed._Tf((_Qf(_ed._Rf).y - 10));
            _ed._3j = _an(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y);
        }
    }
    ;
    if ((_ed._4i >= 30)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _c9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _d9(_ed, _fd) {
    _U4(_ed, _fd, 270, (-0.6));
    _ed._ag = (random(1) + 0.2);
    _ed._fn(_ed._ag);
    _ed._gn(_ed._ag);
}

function _e9(_ed, _fd) {
    _ed._8g -= 0.1;
    if ((_ed._8g < 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _f9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _g9(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _ed._8p = 0;
    _K4(_ed, _fd, 36);
}

function _h9(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            {
                var _9p = _dg(66);
                for (var _ap in _9p) {
                    if (!_9p.hasOwnProperty(_ap)) continue;
                    var _bp = _9p[_ap];
                    if (_bp._gg) continue;
                    if (!_bp._hg) continue;
                    {
                        _bp._yf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            {
                var _cp = _dg(65);
                for (var _dp in _cp) {
                    if (!_cp.hasOwnProperty(_dp)) continue;
                    var _ep = _cp[_dp];
                    if (_ep._gg) continue;
                    if (!_ep._hg) continue;
                    {
                        _ep._yf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
}

function _i9(_ed, _fd) {
    _ed._4i += 1;
    {
        if ((_c4(_ed, _fd, _ed._Mh) == 1)) {
            {
                _2g(_ed, 83, 0, _Qf(_ed._Mh).x, (_Qf(_ed._Mh).y - 58), (0.5 + (_ed._8p / 2)), 1, 0, (-1), _ed._8p);
                if ((_ed._3i == 1)) {
                    {
                        _Qf(_ed._Mh)._yf = 1 ? 1 : 0;
                        _ed._Pf = _45(_ed, _fd, (-10), (_Qf(_ed._Mh).y - 58 + random(8) + (_Qf(_ed._Mh)._3c * 2)), 51);
                        _Qf(_ed._Pf)._fp = _ed._Mh;
                        _Qf(_ed._Pf)._ri = ((-25) + random(50));
                    }
                }
                ;
            }
        }
        ;
        if ((_ed._8p < 1)) {
            {
                _ed._8p += 0.05;
            }
        } else {
            {
                _ed._8p = 1;
                _ed._3i = 1;
            }
        }
        ;
        if ((_ed._4i > 110)) {
            {
                _ed._8p -= 0.2;
                if ((_ed._8p <= 0)) {
                    {
                        _9i(_ed);
                    }
                }
                ;
            }
        }
        ;
    }
    ;
}

function _j9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _k9(_ed, _fd) {
    _U4(_ed, _fd, 270, 0.6);
    if ((floor(random(2)) == 0)) {
        {
            _ed._Pl((-9));
        }
    }
    ;
}

function _l9(_ed, _fd) {
    _R4(_ed, _fd);
}

function _m9(_ed, _fd) {
    _ed._1g((_Qf(_ed._fp).x + _ed._ri + _Qf(_ed._fp)._2c));
}

function _o9(_ed, _fd) {
    _R4(_ed, _fd);
}

function _p9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _q9(_ed, _fd) {
    if ((_ed._1h[~~0] < 1)) {
        {
            if (!(_ed._1h instanceof Array)) {
                _ed._1h = [];
                _ed._1h._B3 = 1584050178
            } else if (_ed._1h._B3 !== 1584050178) {
                _ed._1h = _ed._1h.slice(0);
                _ed._1h._B3 = 1584050178
            }
            _ed._1h[~~0] = (1 + random(3));
        }
    }
    ;
}

function _r9(_ed, _fd) {
    _R4(_ed, _fd);
}

function _s9(_ed, _fd) {
    _ed._4i = 0;
    _ed._7n = 50;
    _K4(_ed, _fd, 43);
}

function _t9(_ed, _fd) {
    _Qf(_ed._Rf)._zf = 0 ? 1 : 0;
}

function _u9(_ed, _fd) {
    _ed._4i += 1;
    _Qf(_ed._Rf)._zf = 1 ? 1 : 0;
    if ((_ed._4i >= _ed._7n)) {
        {
            _9i(_ed);
        }
    }
    ;_ed._gp = 0.2;
    if ((_ed._Lh == 1)) {
        {
            if (_Oh(global._Fd) > 0.5) {
                {
                    _Qf(67)._Uf(_Qf(67)._2c + _ed._gp);
                }
            }
            ;
            if (_Oh(global._Gd) > 0.5) {
                {
                    _Qf(67)._Yf(_Qf(67)._3c - (_ed._gp + 0.4));
                }
            }
            ;
            if (_Oh(global._Hd) > 0.5) {
                {
                    _Qf(67)._Uf(_Qf(67)._2c - _ed._gp);
                }
            }
            ;
            if (_Oh(global._Id) > 0.5) {
                {
                    _Qf(67)._Yf(_Qf(67)._3c + _ed._gp);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            if (_Oh(global._Kd) > 0.5) {
                {
                    _Qf(67)._Uf(_Qf(67)._2c + _ed._gp);
                }
            }
            ;
            if (_Oh(global._Md) > 0.5) {
                {
                    _Qf(67)._Yf(_Qf(67)._3c - (_ed._gp + 0.4));
                }
            }
            ;
            if (_Oh(global._Nd) > 0.5) {
                {
                    _Qf(67)._Uf(_Qf(67)._2c - _ed._gp);
                }
            }
            ;
            if (_Oh(global._Od) > 0.5) {
                {
                    _Qf(67)._Yf(_Qf(67)._3c + _ed._gp);
                }
            }
            ;
        }
    }
    ;
}

function _v9(_ed, _fd) {
    _vm(0.5);
    _Bh(16777215);
    _ed._3j = _an(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, _Qf(67).x, _Qf(67).y);
    _ed._Sn = (_un(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, _Qf(67).x, _Qf(67).y) / 2);
    _ed._El = 5;
    _hp(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, (_Qf(_ed._Rf).x + _Vg((_ed._Sn + _ed._El), _ed._3j)), (_Qf(_ed._Rf).y + _Xg((_ed._Sn + _ed._El), _ed._3j)), (_Qf(_ed._Rf).x + _Vg((_ed._Sn + _ed._El), _ed._3j) + _Vg((_ed._El * 2), (_ed._3j - 90))), (_Qf(_ed._Rf).y + _Xg((_ed._Sn + _ed._El), _ed._3j) + _Xg((_ed._El * 2), (_ed._3j - 90))), 0);
    _hp(_Qf(67).x, _Qf(67).y, (_Qf(67).x + _Vg((_ed._Sn + _ed._El), (_ed._3j - 180))), (_Qf(67).y + _Xg((_ed._Sn + _ed._El), (_ed._3j - 180))), (_Qf(67).x + _Vg((_ed._Sn + _ed._El), (_ed._3j - 180)) + _Vg((_ed._El * 2), (_ed._3j - 90 - 180))),
        (_Qf(67).y + _Xg((_ed._Sn + _ed._El), (_ed._3j - 180)) + _Xg((_ed._El * 2), (_ed._3j - 90 - 180))), 0);
    _vm(1);
}

function _w9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _x9(_ed, _fd) {
    _ed._4i = 0;
    _ed._3j = 0;
    _K4(_ed, _fd, 46);
    _ed._Gn = 0 ? 1 : 0;
    _ed._ip = 1;
}

function _y9(_ed, _fd) {
    _ed._4i += 1;
    _jp(2);
    _kp(_Qf(_ed._Rf).x, _Qf(_ed._Rf).y, 0, 0);
    _kp(_ed.x, _ed.y, 0, _ed._ip);
    _lp();
    if ((_ed._4i < 3)) {
        {
            _ed._3j = _an(_ed.x, _ed.y, _Qf(67).x, _Qf(67).y);
        }
    }
    ;
    if ((((_ed._3j > 90)) && ((_ed._3j < 270)))) {
        {
            _ed._mp = (-1);
        }
    } else {
        {
            _ed._mp = 1;
        }
    }
    ;
    if ((_c4(_ed, _fd, _ed._Rf) == 1)) {
        {
            _2g(_ed, 118,
                0, _Qf(_ed._Rf).x, (_Qf(_ed._Rf).y - 10), 1, _ed._mp, _ed._3j, (-1), (0.5 + _ed._ip));
        }
    }
    ;
    if ((_ed._Gn == 1)) {
        {
            _ed._ip -= 0.1;
            if ((_ed._ip <= 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Gn == 0)) {
        {
            _Sg(_ed, _Qf(67).x, _Qf(67).y, 80);
            if ((_mg(_ed, 67) <= 80)) {
                {
                    _Qf(67)._Kh(_ed._3j);
                    _Qf(67)._3h(20);
                    _ed._Gn = 1 ? 1 : 0;
                }
            }
            ;
        }
    }
    ;
}

function _z9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _A9(_ed, _fd) {
    _T4(_ed, _fd, 1, 0);
    _T4(_ed, _fd, 2, 1);
    _ed._4i = 0;
    _ed._3j = 0;
    _ed._El = 0;
    _ed._5i = 150;
}

function _B9(_ed, _fd) {
    if ((_ed._Lh == 2)) {
        {
            {
                var _np = _dg(65);
                for (var _op in _np) {
                    if (!_np.hasOwnProperty(_op)) continue;
                    var _pp = _np[_op];
                    if (_pp._gg) continue;
                    if (!_pp._hg) continue;
                    {
                        _pp._1g(_Qf(54)._7o);
                        _pp._Tf(_Qf(54)._8o);
                        _pp._3h(_Qf(54)._9o);
                        _pp._Kh(_Qf(54)._ao);
                        _pp._Zf = _Qf(54)._bo;
                        _pp._wf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 1)) {
        {
            {
                var _qp = _dg(66);
                for (var _rp in _qp) {
                    if (!_qp.hasOwnProperty(_rp)) continue;
                    var _sp = _qp[_rp];
                    if (_sp._gg) continue;
                    if (!_sp._hg) continue;
                    {
                        _sp._1g(_Qf(54)._co);
                        _sp._Tf(_Qf(54)._do);
                        _sp._3h(_Qf(54)._eo);
                        _sp._Kh(_Qf(54)._fo);
                        _sp._Zf = _Qf(54)._go;
                        _sp._wf = 0 ? 1 : 0;
                    }
                }
            }
            ;
        }
    }
    ;
    {
        var _tp = _dg(67);
        for (var _up in _tp) {
            if (!_tp.hasOwnProperty(_up)) continue;
            var _vp = _tp[_up];
            if (_vp._gg) continue;
            if (!_vp._hg) continue;
            {
                _vp._1g(_Qf(54)._wp);
                _vp._Tf(_Qf(54)._xp);
                _vp._3h(_Qf(54)._yp);
                _vp._Kh(_Qf(54)._zp);
                _vp._Zf = _Qf(54)._Ap;
            }
        }
    }
    ;
}

function _C9(_ed, _fd) {
    _ed._7o = _Qf(65).x;
    _ed._8o = _Qf(65).y;
    _ed._9o = _Qf(65)._Tb;
    _ed._ao = _Qf(65)._Wg;
    _ed._bo = _Qf(65)._Zf;
    _ed._kn = _Qf(82).__f;
    _ed._co = _Qf(66).x;
    _ed._do = _Qf(66).y;
    _ed._eo = _Qf(66)._Tb;
    _ed._fo = _Qf(66)._Wg;
    _ed._go = _Qf(66)._Zf;
    _ed._ln = _Qf(82)._0g;
    _ed._wp = _Qf(67).x;
    _ed._xp = _Qf(67).y;
    _ed._yp = _Qf(67)._Tb;
    _ed._zp = _Qf(67)._Wg;
    _ed._Ap = _Qf(67)._Zf;
    _ed._3j = 0;
    _ed._El = 0;
}

function _D9(_ed, _fd) {
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = ((_ed._5i - _ed._4i + 60) / 20);
    _K4(_ed, _fd, 37);
}

function _E9(_ed, _fd) {
    _ed._4i += 1;
    if ((_ed._4i > 2)) {
        {
            _Qf(82).__f = _ed._kn;
            _Qf(82)._0g = _ed._ln;
            if ((_ed._Lh == 2)) {
                {
                    {
                        var _Bp = _dg(65);
                        for (var _Cp in _Bp) {
                            if (!_Bp.hasOwnProperty(_Cp)) continue;
                            var _Dp = _Bp[_Cp];
                            if (_Dp._gg) continue;
                            if (!_Dp._hg) continue;
                            {
                                _Dp._1g(_Qf(54)._7o);
                                _Dp._Tf(_Qf(54)._8o);
                                _Dp._3h(0);
                                _Dp._Kh(_Qf(54)._ao);
                                _Dp._Zf = 0;
                                _Dp._wf = 1 ? 1 : 0;
                            }
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Lh == 1)) {
                {
                    {
                        var _Ep = _dg(66);
                        for (var _Fp in _Ep) {
                            if (!_Ep.hasOwnProperty(_Fp)) continue;
                            var _Gp = _Ep[_Fp];
                            if (_Gp._gg) continue;
                            if (!_Gp._hg) continue;
                            {
                                _Gp._1g(_Qf(54)._co);
                                _Gp._Tf(_Qf(54)._do);
                                _Gp._3h(0);
                                _Gp._Kh(_Qf(54)._fo);
                                _Gp._Zf = 0;
                                _Gp._wf = 1 ? 1 : 0;
                            }
                        }
                    }
                    ;
                }
            }
            ;
            {
                var _Hp = _dg(67);
                for (var _Ip in _Hp) {
                    if (!_Hp.hasOwnProperty(_Ip)) continue;
                    var _Jp = _Hp[_Ip];
                    if (_Jp._gg) continue;
                    if (!_Jp._hg) continue;
                    {
                        _Jp._1g(_Qf(54)._wp);
                        _Jp._Tf(_Qf(54)._xp);
                        _Jp._3h(0);
                        _Jp._Kh(_Qf(54)._zp);
                        _Jp._Zf = 0;
                        if (_Wf(_Jp, _Jp.x, _Jp.y, 76) > 0.5) {
                            {
                                var _Kp = _dg(54);
                                for (var _Lp in _Kp) {
                                    if (!_Kp.hasOwnProperty(_Lp)) continue;
                                    var _Mp = _Kp[_Lp];
                                    if (_Mp._gg) continue;
                                    if (!_Mp._hg) continue;
                                    {
                                        _9i(_Mp);
                                    }
                                }
                            }
                        }
                        ;
                    }
                }
            }
            ;
            if ((_ed._4i > _ed._5i)) {
                {
                    _c5(_ed, _fd, 4, 0, 0);
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _F9(_ed, _fd) {
    _ed._3j += 5;
    if ((_ed._El < 4)) {
        {
            _ed._El += 0.1;
        }
    }
    ;_2g(_ed, 89, 280, (200 + _Vg(_ed._El, _ed._3j)), (0 + _Xg(_ed._El, _ed._3j)), 1, 1, 0, (-1), 0.2);
    _2g(_ed, 89, 280, (200 + _Vg(_ed._El, _ed._3j)), (0 + _Xg(_ed._El, _ed._3j)), 1, 1, 0, (-1), 0.2);
    _2g(_ed, 89, 280, (200 + _Vg(_ed._El,
        (_ed._3j + 90))), (0 + _Xg(_ed._El, (_ed._3j + 90))), 1, 1, 0, (-1), 0.2);
    _2g(_ed, 89, 280, (200 + _Vg(_ed._El, (_ed._3j + 180))), (0 + _Xg(_ed._El, (_ed._3j + 180))), 1, 1, 0, (-1), 0.2);
    _2g(_ed, 89, 280, (200 + _Vg(_ed._El, (_ed._3j + 270))), (0 + _Xg(_ed._El, (_ed._3j + 270))), 1, 1, 0, (-1), 0.2);
}

function _G9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _H9(_ed, _fd) {
    _ed._Lh = 0;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
}

function _I9(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _L4(_ed, _fd, 26);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _L4(_ed, _fd, 27);
        }
    }
    ;
}

function _J9(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _Qf(82).__f -= 1.5;
            _Qf(65)._xf = 1 ? 1 : 0;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _Qf(82)._0g -= 1.5;
            _Qf(66)._xf = 1 ? 1 : 0;
        }
    }
    ;
    if ((_ed._Lh == 1)) {
        {
            if ((_D4(_ed, _fd, 1) == 0)) {
                {
                    {
                        var _Np = _dg(65);
                        for (var _Op in _Np) {
                            if (!_Np.hasOwnProperty(_Op)) continue;
                            var _Pp = _Np[_Op];
                            if (_Pp._gg) continue;
                            if (!_Pp._hg) continue;
                            {
                                _Pp._xf = 0 ? 1 : 0;
                                _Pp._Uf((min(abs(_Pp._2c), 5) * _Vf(_Pp._2c)));
                            }
                        }
                    }
                    ;_95(_ed, _fd, 26);
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            if ((_D4(_ed,
                _fd, 2) == 0)) {
                {
                    {
                        var _Qp = _dg(66);
                        for (var _Rp in _Qp) {
                            if (!_Qp.hasOwnProperty(_Rp)) continue;
                            var _Sp = _Qp[_Rp];
                            if (_Sp._gg) continue;
                            if (!_Sp._hg) continue;
                            {
                                _Sp._xf = 0 ? 1 : 0;
                                _Sp._Uf((min(abs(_Sp._2c), 5) * _Vf(_Sp._2c)));
                            }
                        }
                    }
                    ;_95(_ed, _fd, 27);
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _K9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _L9(_ed, _fd) {
    _ed._4i = 0;
    _ed._Rf = _ed.id;
    _ed._yi = 3;
    _Qf(67)._3h(0);
    _ed._ri = _Qf(67).x;
    _ed._si = _Qf(67).y;
    _K4(_ed, _fd, 30);
}

function _M9(_ed, _fd) {
    if ((_ed._4i < 10)) {
        {
            _ed._yi -= (_ed._yi * (10 - _ed._4i) / 24);
            _Qf(67)._1g(_ed._ri);
            _Qf(67)._Tf(_ed._si);
            _Qf(67)._3h(0);
            _2g(_ed, 78, 0, _ed._ri, _ed._si, _ed._yi, _ed._yi, 0, (-1), (_ed._4i / 3));
        }
    } else {
        {
            _5m(_ed, 79, 0, _ed._ri, _ed._si);
        }
    }
    ;
    if ((_ed._4i >= 20)) {
        {
            _9i(_ed);
        }
    }
    ;_ed._4i += 1;
}

function _N9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _O9(_ed, _fd) {
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 2;
}

function _P9(_ed, _fd) {
    _Qf(_ed._Rf)._Af = 0 ? 1 : 0;
    _Qf(_ed._Rf)._Uf((max(0, (abs(_ed._2c) - 15)) * _Vf(_ed._2c)));
    _Qf(_ed._Rf)._Yf((max(0,
        (abs(_ed._3c) - 15)) * _Vf(_ed._3c)));
    if ((_ed._Lh == 1)) {
        {
            _95(_ed, _fd, 40);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _95(_ed, _fd, 41);
        }
    }
    ;
}

function _Q9(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _L4(_ed, _fd, 40);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _L4(_ed, _fd, 41);
        }
    }
    ;
}

function _R9(_ed, _fd) {
    if ((_ed._Lh == 1)) {
        {
            _Qf(82).__f -= 0.8;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _Qf(82)._0g -= 0.8;
        }
    }
    ;_Qf(_ed._Rf)._Af = 1 ? 1 : 0;
    if ((_D4(_ed, _fd, _ed._Lh) == 0)) {
        {
            _9i(_ed);
        }
    } else {
        {
            _45(_ed, _fd, (_Qf(_ed._Rf).x - 15 + random(30)), _Qf(_ed._Rf).y, 58);
            _Qf(_ed._Rf)._Zf = 0;
            _Qf(_ed._Rf)._Sf = 1;
            _ed._Tp = 13;
            _ed._gp = 4;
            _ed._Up = 1.5;
            if ((_ed._Lh == 1)) {
                {
                    if (_Oh(global._Fd) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._2c <= 0)) {
                                {
                                    _Qf(_ed._Rf)._Uf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Uf(_Qf(_ed._Rf)._2c + _ed._gp);
                        }
                    }
                    ;
                    if (_Oh(global._Gd) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._3c >= 0)) {
                                {
                                    _Qf(_ed._Rf)._Yf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Yf(_Qf(_ed._Rf)._3c - (_ed._gp / _ed._Up));
                        }
                    }
                    ;
                    if (_Oh(global._Hd) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._2c >= 0)) {
                                {
                                    _Qf(_ed._Rf)._Uf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Uf(_Qf(_ed._Rf)._2c - _ed._gp);
                        }
                    }
                    ;
                    if (_Oh(global._Id) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._3c <= 0)) {
                                {
                                    _Qf(_ed._Rf)._Yf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Yf(_Qf(_ed._Rf)._3c + (_ed._gp / _ed._Up));
                        }
                    }
                    ;
                }
            }
            ;
            if ((_ed._Lh == 2)) {
                {
                    if (_Oh(global._Kd) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._2c <= 0)) {
                                {
                                    _Qf(_ed._Rf)._Uf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Uf(_Qf(_ed._Rf)._2c + _ed._gp);
                        }
                    }
                    ;
                    if (_Oh(global._Md) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._3c >= 0)) {
                                {
                                    _Qf(_ed._Rf)._Yf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Yf(_Qf(_ed._Rf)._3c - (_ed._gp / _ed._Up));
                        }
                    }
                    ;
                    if (_Oh(global._Nd) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._2c >= 0)) {
                                {
                                    _Qf(_ed._Rf)._Uf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Uf(_Qf(_ed._Rf)._2c - _ed._gp);
                        }
                    }
                    ;
                    if (_Oh(global._Od) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._3c <= 0)) {
                                {
                                    _Qf(_ed._Rf)._Yf(0);
                                }
                            }
                            ;_Qf(_ed._Rf)._Yf(_Qf(_ed._Rf)._3c + (_ed._gp / _ed._Up));
                        }
                    }
                    ;
                }
            }
            ;
            if ((abs(_Qf(_ed._Rf)._2c) > _ed._Tp)) {
                {
                    _Qf(_ed._Rf)._Uf((abs((_ed._Tp / _ed._Up)) * _Vf(_Qf(_ed._Rf)._2c)));
                }
            }
            ;
            if ((abs(_Qf(_ed._Rf)._3c) > (_ed._Tp / _ed._Up))) {
                {
                    _Qf(_ed._Rf)._Yf((abs((_ed._Tp / _ed._Up)) * _Vf(_Qf(_ed._Rf)._3c)));
                }
            }
            ;
        }
    }
    ;
}

function _S9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _T9(_ed, _fd) {
    _U4(_ed, _fd, 270, 0.4);
    _ed._ag = (random(1) + 0.2);
    _ed._fn(_ed._ag);
    _ed._gn(_ed._ag);
    _ed._2i = (10 - random(20));
}

function _U9(_ed, _fd) {
    _ed._bg(_ed._6g + _ed._2i);
    _ed._8g -= 0.1;
    if ((_ed._8g < 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _V9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _W9(_ed, _fd) {
    _ed._4i = 0;
    _ed._3i = 0;
    _ed._Vp = 0;
    _ed._5i = 40;
    _K4(_ed, _fd, 17);
}

function _X9(_ed, _fd) {
    _Qf(_ed._Rf)._vf = 0 ? 1 : 0;
}

function _Y9(_ed, _fd) {
    _ed._4i += 1;
    {
        if ((_ed._3i == 0)) {
            {
                _Qf(_ed._Rf)._vf = 1 ? 1 : 0;
                if ((_ed._4i < (_ed._5i / 2))) {
                    {
                        _ed._Vp += 1;
                    }
                }
                ;
                if ((_ed._4i > (_ed._5i / 2))) {
                    {
                        _ed._Vp -= 1;
                    }
                }
                ;
                if ((_ed._4i > _ed._5i)) {
                    {
                        _9i(_ed);
                    }
                }
                ;
                if ((_ed._4i == (_ed._5i / 2))) {
                    {
                        if ((_ed._Lh == 1)) {
                            {
                                _Qf(_ed._Rf)._1g((_Qf(67).x + 20));
                                _Qf(_ed._Rf)._Tf((_Qf(67).y + 10));
                            }
                        }
                        ;
                        if ((_ed._Lh == 2)) {
                            {
                                _Qf(_ed._Rf)._1g((_Qf(67).x - 20));
                                _Qf(_ed._Rf)._Tf((_Qf(67).y + 10));
                            }
                        }
                        ;
                    }
                }
                ;
            }
        }
        ;
    }
    ;
}

function _Z9(_ed, _fd) {
    {
        var _Wp = _dg(_ed._Rf);
        for (var _Xp in _Wp) {
            if (!_Wp.hasOwnProperty(_Xp)) continue;
            var _Yp = _Wp[_Xp];
            if (_Yp._gg) continue;
            if (!_Yp._hg) continue;
            {
                _2g(_Yp, _Yp._3g, 0, (_Yp.x + _Qf(59)._Vp), _Yp.y, (_Yp._4g * _Yp._Df), _Yp._5g, _Yp._6g, _Yp._7g(), ((_Yp._8g / 2) / max(1, (_Qf(59)._Vp / 5))));
                _2g(_Yp, _Yp._3g, 0, (_Yp.x - _Qf(59)._Vp), _Yp.y, (_Yp._4g * _Yp._Df), _Yp._5g, _Yp._6g, _Yp._7g(), ((_Yp._8g / 2) / max(1, (_Qf(59)._Vp / 5))));
            }
        }
    }
    ;
}

function __9(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _0a(_ed, _fd) {
    _K4(_ed, _fd, 15);
}

function _1a(_ed,
             _fd) {
    _2g(_ed, 86, 0, _ed.x, _ed.y, 1, 1, 0, (-1), _ed._8g);
    _Sg(_ed, _Qf(67).x, _Qf(67).y, 40);
    if ((_mg(_ed, 67) <= 80)) {
        {
            _9i(_ed);
            _Qf(67)._Uf(-_Qf(67)._2c);
            _ed._Ng = 0;
            _ed._Zp = 20;
            for (var __p = 0, _0q = ~~(_ed._Zp); __p < _0q; __p++) {
                {
                    _ed._Pf = _45(_ed, _fd, _Qf(67).x, _Qf(67).y, 61);
                    _Qf(_ed._Pf)._Kh(((360 / _ed._Zp) * _ed._Ng));
                    _ed._Ng += 1;
                }
            }
            ;
        }
    }
    ;
}

function _2a(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _3a(_ed, _fd) {
    _ed._ag = (random(0.7) + 0.2);
    _ed._fn(_ed._ag);
    _ed._gn(_ed._ag);
    _ed._3h(5);
}

function _4a(_ed, _fd) {
    _ed._3h(_ed._Tb - 5);
    if ((_ed._Tb <= 1)) {
        {
            _ed._8g -= 0.2;
        }
    }
    ;
    if ((_ed._8g < 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function _5a(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _6a(_ed, _fd) {
    _ed._4i = 0;
    _ed._7n = 230;
    _ed._Pf = _45(_ed, _fd, 0, 0, 80);
    _Qf(_ed._Pf)._Rf = _ed.id;
    _Qf(_ed._Pf)._Cf = "twin";
    _ed._xg = 0 ? 1 : 0;
    _ed._og = 0;
    _ed._Df = 1;
    _K4(_ed, _fd, 51);
}

function _7a(_ed, _fd) {
    _ed._4i += 1;
    if ((_ed._4i >= _ed._7n)) {
        {
            _ed._8g -= 0.1;
        }
    }
    ;
    if ((_ed._8g < 0.1)) {
        {
            _9i(_ed);
        }
    }
    ;_ed._ud = _45(_ed, _fd, _ed.x, _ed.y, 90);
    global._Ad = _ed._Lh;
    {
        var _1q = _dg(_ed._ud);
        for (var _2q in _1q) {
            if (!_1q.hasOwnProperty(_2q)) continue;
            var _3q = _1q[_2q];
            if (_3q._gg) continue;
            if (!_3q._hg) continue;
            {
                if ((global._Ad == 1)) {
                    {
                        _3q._fn((-1));
                    }
                }
                ;
                if (_Wf(_3q, _3q.x, _3q.y, 67) > 0.5) {
                    {
                        global._Ad = 3;
                    }
                }
                ;
            }
        }
    }
    ;
    if ((global._Ad == 3)) {
        {
            _ed._xg = 1 ? 1 : 0;
        }
    } else {
        {
            _ed._xg = 0 ? 1 : 0;
        }
    }
    ;
    if ((_ed.x < (_Qf(_ed._Rf).x + (_Qf(_ed._Rf)._2c * 2)))) {
        {
            _ed._og = (-1);
        }
    }
    ;
    if ((_ed.x > (_Qf(_ed._Rf).x + (_Qf(_ed._Rf)._2c * 2)))) {
        {
            _ed._og = 1;
        }
    }
    ;
    if ((_ed._Lh == 1)) {
        {
            if ((_Qf(67).x > (_ed.x - 20))) {
                {
                    _ed._og = 1;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            if ((_Qf(67).x < (_ed.x + 20))) {
                {
                    _ed._og = (-1);
                }
            }
            ;
        }
    }
    ;_ed._Sf = 0.3;
    while (_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5) {
        {
            _ed._Tf(_ed.y - 1);
        }
    }
    ;
    if (_Wf(_ed, _ed.x, (_ed.y + 5), 72) > 0.5) {
        {
            _Xf(_ed, 270, (-1));
            _ed._Yf(0);
            _ed._Zf = 0;
        }
    } else {
        {
            _ed._Zf = 0.4;
        }
    }
    ;
    if ((_ed._xg == 1)) {
        {
            if (_Wf(_ed, _ed.x, (_ed.y + 1), 72) > 0.5) {
                {
                    _ed._Yf((-9));
                }
            }
            ;
        }
    }
    ;
    if ((_ed._og == (-1))) {
        {
            _ed._Df = (-1);
            if ((_ed._2c > (-5))) {
                {
                    _ed._Uf(_ed._2c + (-0.5));
                }
            }
            ;
        }
    }
    ;
    if ((_ed._og == 1)) {
        {
            _ed._Df = 1;
            if ((_ed._2c < 5)) {
                {
                    _ed._Uf(_ed._2c + 0.5);
                }
            }
            ;
        }
    }
    ;
}

function _8a(_ed, _fd) {
    if ((_ed.x < 75)) {
        {
            _ed._Uf(0);
            _ed._1g(75);
        }
    }
    ;
    if ((_ed.x > 485)) {
        {
            _ed._Uf(0);
            _ed._1g(485);
        }
    }
    ;_2g(_ed, _ed._3g, 0, _ed.x, _ed.y, (_ed._4g * _ed._Df), _ed._5g, _ed._6g,
        _ed._7g(), _ed._8g);
}

function _9a(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _aa(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _ba(_ed, _fd) {
    _ed._4i = 0;
    _ed._7n = 230;
    _ed._3i = 0;
    _ed._gn(0);
    _K4(_ed, _fd, 50);
}

function _ca(_ed, _fd) {
    _ed._4i += 1;
    _ed._Tf(380);
    if ((_ed._Lh == 1)) {
        {
            _ed._1g(500);
        }
    }
    ;
    if ((_ed._Lh == 2)) {
        {
            _ed._1g(60);
        }
    }
    ;
    if ((_ed._3i == 0)) {
        {
            if ((_ed._5g < 1)) {
                {
                    _ed._gn(_ed._5g + 0.015);
                }
            }
            ;_ed._Ef(128);
            _ed._4q(7);
            if ((_ed._5g > 0.75)) {
                {
                    _ed._Ef(129);
                    _ed._4q(_ed._3g);
                }
            }
            ;
            if ((_ed._5g > 0.85)) {
                {
                    _ed._Ef(130);
                    _ed._4q(_ed._3g);
                }
            }
            ;
            if ((_ed._5g > 0.98)) {
                {
                    _ed._Ef(127);
                    _ed._4q(_ed._3g);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._4i > _ed._7n)) {
        {
            _ed._3i = 1;
        }
    }
    ;
    if ((_ed._3i == 1)) {
        {
            _ed._gn(_ed._5g - 0.05);
            if ((_ed._5g <= 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
}

function _da(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _ea(_ed, _fd) {
    _C3._24[6](_ed, _fd, 1, 0, 0, 0, 0);
}

function _fa(_ed, _fd) {
    if (!(_Tg(70) > 0.5)) {
        {
            _ed._Of = 6;
            if ((global._zd == 1)) {
                {
                }
            } else {
                {
                    _a4(_ed, _fd, _Oh(global._Fd), _ld(global._Gd), _Oh(global._Hd), _ld(global._Jd), _Oh(global._Id));
                }
            }
            ;
        }
    }
    ;
}

function _ga(_ed, _fd) {
    _C3._24[8](_ed, _fd, 0, 0, 0, 0, 0);
}

function _ha(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _ia(_ed,
             _fd) {
    _C3._24[6](_ed, _fd, 2, 0, 0, 0, 0);
}

function _ja(_ed, _fd) {
    if ((global._ud == 1)) {
        {
            if (!(_Tg(70) > 0.5)) {
                {
                    _ed._yg = 0 ? 1 : 0;
                    _ed._Of += 1;
                    _f4(_ed, _fd);
                    _d4(_ed, _fd, global._sd);
                    _a4(_ed, _fd, (_ed._og == 1), (_ed._xg == 1), (_ed._og == (-1)), (_ed._ig == 1), (_ed._yg == 1));
                    _Io(_ed.x, _ed.y, _ed._Ff, _ed._Gf);
                }
            }
            ;
        }
    } else {
        {
            if (!(_Tg(70) > 0.5)) {
                {
                    _ed._Of = 6;
                    _a4(_ed, _fd, _Oh(global._Kd), _ld(global._Md), _Oh(global._Nd), _ld(global._Pd), _ld(global._Od));
                }
            }
            ;
        }
    }
    ;
}

function _ka(_ed, _fd) {
    _C3._24[8](_ed, _fd, 0, 0, 0, 0, 0);
}

function _la(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _ma(_ed, _fd) {
    _ed._0h = 0 ? 1 : 0;
    _ed._vg = 0;
    _ed._Pg = 0 ? 1 : 0;
    _ed._5q = 0;
    _ed._6q = 0;
    _ed._mn = 0 ? 1 : 0;
    _ed._Yg = 0 ? 1 : 0;
    _ed._Pf = _45(_ed, _fd, 0, 0, 80);
    _Qf(_ed._Pf)._Rf = _ed.id;
    _Qf(_ed._Pf)._Cf = "ball";
    _ed._7q = 0;
    _ed._2h = 0;
    _ed._vg = 0;
    _ed._Cg = 0;
    _ed._sg = 0;
    _ed._rg = 0;
    _ed._ug = 0;
    _ed._tg = 0;
    _ed._qg = 0;
    _ed._pg = 0;
    for (_ed._Ng = 1; (_ed._Ng <= 100); _ed._Ng += 1) {
        {
            if (!(_ed._lg instanceof Array)) {
                _ed._lg = [];
                _ed._lg._B3 = 3204251034
            } else if (_ed._lg._B3 !== 3204251034) {
                _ed._lg = _ed._lg.slice(0);
                _ed._lg._B3 = 3204251034
            }
            _ed._lg[~~_ed._Ng] = _ed.x;
            if (!(_ed._ng instanceof Array)) {
                _ed._ng = [];
                _ed._ng._B3 = 2816986331
            } else if (_ed._ng._B3 !== 2816986331) {
                _ed._ng = _ed._ng.slice(0);
                _ed._ng._B3 = 2816986331
            }
            _ed._ng[~~_ed._Ng] = _ed.y;
        }
    }
    ;
}

function _na(_ed, _fd) {
    _ed._0h = 0 ? 1 : 0;
}

function _oa(_ed, _fd) {
    _ed._2h = 0;
}

function _qa(_ed, _fd) {
    _ed._Uf(_ed._2c + (abs(_ed._5q) * _Vf(_ed._2c)));
    _ed._5q = 0;
    _ed._Yf(_ed._3c + (abs(_ed._6q) * _Vf(_ed._3c)));
    _ed._6q = 0;
    if ((_ed._Pg == 1)) {
        {
            _ed._5q = ((abs(_ed._2c) - (abs(_ed._2c) / 2)) * _Vf(_ed._2c));
            _ed._Uf(((abs(_ed._2c) / 2) * _Vf(_ed._2c)));
            _ed._6q = ((abs(_ed._3c) - (abs(_ed._3c) / 2)) * _Vf(_ed._3c));
            _ed._Yf(((abs(_ed._3c) / 2) * _Vf(_ed._3c)));
        }
    }
    ;
}

function _ra(_ed, _fd) {
    if ((abs(_ed._Tb) > 13)) {
        {
            _ed._Zp = _45(_ed, _fd, _ed.x, _ed.y, 77);
            _Qf(_ed._Zp)._Ef(_ed._3g);
            _Qf(_ed._Zp)._8g = (_ed._8g / 2);
            _Qf(_ed._Zp)._bg(_ed._7q);
        }
    } else {
        {
            {
                var _8q = _dg(77);
                for (var _9q in _8q) {
                    if (!_8q.hasOwnProperty(_9q)) continue;
                    var _aq = _8q[_9q];
                    if (_aq._gg) continue;
                    if (!_aq._hg) continue;
                    {
                        _aq._8g -= 0.001;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed._mn == 1)) {
        {
            _ed._Ef(74);
        }
    } else {
        {
            _ed._Ef(49);
        }
    }
    ;
    if (!(_Tg(70) > 0.5)) {
        {
            _ed._7q -= _ed._2c;
            _l4(_ed, _fd);
            _ed._bq = _ed.x;
            _ed._cq = _ed.y;
            _ed._dq = _ed._Tb;
            _ed._eq = _ed._Wg;
            _ed._fq = _ed._Sf;
            _ed._gq = _ed._Zf;
            _ed._Ng = 1;
            _ed._vg = (-999);
            _ed._Cg = (-999);
            _ed._sg = (-999);
            _ed._rg = 0;
            _ed._ug = (-999);
            _ed._tg = 0;
            _ed._qg = (-999);
            _ed._pg = 0;
            _Qf(66)._Hf = (-999);
            _Qf(66)._Ff = (-999);
            _Qf(66)._Gf = (-999);
            for (var _hq = 0, _iq = ~~(100); _hq < _iq; _hq++) {
                {
                    _ed._Yf(_ed._3c + _ed._Zf);
                    _ed._3h((max(0, (abs(_ed._Tb) - _ed._Sf)) * _Vf(_ed._Tb)));
                    _ed._1g(_ed.x + _ed._2c);
                    _ed._Tf(_ed.y + _ed._3c);
                    if (!(_ed._lg instanceof Array)) {
                        _ed._lg = [];
                        _ed._lg._B3 = 3204251034
                    } else if (_ed._lg._B3 !== 3204251034) {
                        _ed._lg = _ed._lg.slice(0);
                        _ed._lg._B3 = 3204251034
                    }
                    _ed._lg[~~_ed._Ng] = _ed.x;
                    if (!(_ed._ng instanceof Array)) {
                        _ed._ng = [];
                        _ed._ng._B3 = 2816986331
                    } else if (_ed._ng._B3 !== 2816986331) {
                        _ed._ng = _ed._ng.slice(0);
                        _ed._ng._B3 = 2816986331
                    }
                    _ed._ng[~~_ed._Ng] = _ed.y;
                    _ed._Ng += 1;
                    _k4(_ed, _fd);
                }
            }
            ;_ed._1g(_ed._bq);
            _ed._Tf(_ed._cq);
            _ed._3h(_ed._dq);
            _ed._Kh(_ed._eq);
            _ed._Sf = _ed._fq;
            _ed._Zf = _ed._gq;
        }
    }
    ;
}

function _sa(_ed, _fd) {
    _2g(_ed, _ed._3g, 0, _ed.x, _ed.y, _ed._4g, _ed._5g, _ed._7q, (-1), _ed._8g);
}

function _ta(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _ua(_ed, _fd) {
    _Og(_ed,
        1);
    _85(_ed, _fd, 2);
    if ((_ed.x < 280)) {
        {
            _ed._Uf(_ed._2c + 1);
        }
    } else {
        {
            _ed._Uf(_ed._2c - 1);
        }
    }
    ;_m4(_ed, _fd);
    _Qf(81)._Zg += 0.2;
}

function _va(_ed, _fd) {
    _Og(_ed, 1);
    _85(_ed, _fd, 1);
    _m4(_ed, _fd);
}

function _wa(_ed, _fd) {
    _Og(_ed, 1);
    if ((abs(_ed._3c) > 1)) {
        {
            _K4(_ed, _fd, 0);
        }
    } else {
        {
            _ed._Yf(0);
        }
    }
    ;_ed._Yf(-abs((_ed._3c / 1.1)));
}

function _xa(_ed, _fd) {
    _Og(_ed, 1);
    _85(_ed, _fd, 1);
}

function _ya(_ed, _fd) {
    _K4(_ed, _fd, 49);
    _ed._4i = 0;
    _ed._0h = 0 ? 1 : 0;
    _ed._vg = 0;
    _ed._Pg = 0 ? 1 : 0;
    _ed._5q = 0;
    _ed._6q = 0;
    _ed._mn = 0 ? 1 : 0;
    _ed._Yg = 0 ? 1 : 0;
    _ed._Pf = _45(_ed, _fd, 0,
        0, 80);
    _Qf(_ed._Pf)._Rf = _ed.id;
    _Qf(_ed._Pf)._Cf = "ball";
    _ed._7q = 0;
    _ed._2h = 0;
}

function _za(_ed, _fd) {
    _ed._0h = 0 ? 1 : 0;
}

function _Aa(_ed, _fd) {
    _ed._2h = 0;
}

function _Ba(_ed, _fd) {
    if ((abs(_ed._Tb) > 13)) {
        {
            _ed._Zp = _45(_ed, _fd, _ed.x, _ed.y, 77);
            _Qf(_ed._Zp)._Ef(_ed._3g);
            _Qf(_ed._Zp)._8g = (_ed._8g / 2);
            _Qf(_ed._Zp)._bg(_ed._7q);
        }
    } else {
        {
            {
                var _jq = _dg(77);
                for (var _kq in _jq) {
                    if (!_jq.hasOwnProperty(_kq)) continue;
                    var _lq = _jq[_kq];
                    if (_lq._gg) continue;
                    if (!_lq._hg) continue;
                    {
                        _lq._8g -= 0.001;
                    }
                }
            }
            ;
        }
    }
    ;_ed._7q -= _ed._2c;
    _l4(_ed, _fd);
}

function _Ca(_ed,
             _fd) {
    _2g(_ed, _ed._3g, 0, _ed.x, _ed.y, _ed._4g, _ed._5g, _ed._7q, (-1), _ed._8g);
}

function _Da(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Ea(_ed, _fd) {
    _Og(_ed, 1);
    _85(_ed, _fd, 2);
    if ((_ed.x < 280)) {
        {
            _ed._Uf(_ed._2c + 1);
        }
    } else {
        {
            _ed._Uf(_ed._2c - 1);
        }
    }
    ;_m4(_ed, _fd);
    _Qf(81)._Zg += 0.2;
}

function _Fa(_ed, _fd) {
    _Og(_ed, 1);
    _85(_ed, _fd, 1);
    _m4(_ed, _fd);
}

function _Ga(_ed, _fd) {
    _Og(_ed, 1);
    _85(_ed, _fd, 1);
}

function _Ha(_ed, _fd) {
    _Og(_ed, 1);
    if ((abs(_ed._3c) > 1)) {
        {
            _K4(_ed, _fd, 0);
        }
    } else {
        {
            _ed._Yf(0);
        }
    }
    ;_ed._Yf(-abs((_ed._3c / 1.1)));
}

function _Ja(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Ka(_ed, _fd) {
    _ed._7o = _Qf(65).x;
    _ed._8o = _Qf(65).y;
    _ed._9o = _Qf(65)._Tb;
    _ed._ao = _Qf(65)._Wg;
    _ed._bo = _Qf(65)._Zf;
    _ed._co = _Qf(66).x;
    _ed._do = _Qf(66).y;
    _ed._eo = _Qf(66)._Tb;
    _ed._fo = _Qf(66)._Wg;
    _ed._go = _Qf(66)._Zf;
    _ed._wp = _Qf(67).x;
    _ed._xp = _Qf(67).y;
    _ed._yp = _Qf(67)._Tb;
    _ed._zp = _Qf(67)._Wg;
    _ed._Ap = _Qf(67)._Zf;
}

function _La(_ed, _fd) {
    {
        var _mq = _dg(65);
        for (var _nq in _mq) {
            if (!_mq.hasOwnProperty(_nq)) continue;
            var _oq = _mq[_nq];
            if (_oq._gg) continue;
            if (!_oq._hg) continue;
            {
                _oq._1g(_Qf(70)._7o);
                _oq._Tf(_Qf(70)._8o);
                _oq._3h(_Qf(70)._9o);
                _oq._Kh(_Qf(70)._ao);
                _oq._Zf = _Qf(70)._bo;
            }
        }
    }
    ;
    {
        var _pq = _dg(66);
        for (var _qq in _pq) {
            if (!_pq.hasOwnProperty(_qq)) continue;
            var _rq = _pq[_qq];
            if (_rq._gg) continue;
            if (!_rq._hg) continue;
            {
                _rq._1g(_Qf(70)._co);
                _rq._Tf(_Qf(70)._do);
                _rq._3h(_Qf(70)._eo);
                _rq._Kh(_Qf(70)._fo);
                _rq._Zf = _Qf(70)._go;
            }
        }
    }
    ;
    {
        var _sq = _dg(67);
        for (var _tq in _sq) {
            if (!_sq.hasOwnProperty(_tq)) continue;
            var _uq = _sq[_tq];
            if (_uq._gg) continue;
            if (!_uq._hg) continue;
            {
                _uq._1g(_Qf(70)._wp);
                _uq._Tf(_Qf(70)._xp);
                _uq._3h(_Qf(70)._yp);
                _uq._Kh(_Qf(70)._zp);
                _uq._Zf = _Qf(70)._Ap;
            }
        }
    }
    ;
}

function _Ma(_ed, _fd) {
    _R4(_ed, _fd);
}

function _Na(_ed, _fd) {
    {
        var _vq = _dg(65);
        for (var _wq in _vq) {
            if (!_vq.hasOwnProperty(_wq)) continue;
            var _xq = _vq[_wq];
            if (_xq._gg) continue;
            if (!_xq._hg) continue;
            {
                _xq._1g(_Qf(70)._7o);
                _xq._Tf(_Qf(70)._8o);
                _xq._3h(0);
                _xq._Kh(_Qf(70)._ao);
                _xq._Zf = 0;
            }
        }
    }
    ;
    {
        var _yq = _dg(66);
        for (var _zq in _yq) {
            if (!_yq.hasOwnProperty(_zq)) continue;
            var _Aq = _yq[_zq];
            if (_Aq._gg) continue;
            if (!_Aq._hg) continue;
            {
                _Aq._1g(_Qf(70)._co);
                _Aq._Tf(_Qf(70)._do);
                _Aq._3h(0);
                _Aq._Kh(_Qf(70)._fo);
                _Aq._Zf = 0;
            }
        }
    }
    ;
    {
        var _Bq = _dg(67);
        for (var _Cq in _Bq) {
            if (!_Bq.hasOwnProperty(_Cq)) continue;
            var _Dq = _Bq[_Cq];
            if (_Dq._gg) continue;
            if (!_Dq._hg) continue;
            {
                _Dq._1g(_Qf(70)._wp);
                _Dq._Tf(_Qf(70)._xp);
                _Dq._3h(0);
                _Dq._Kh(_Qf(70)._zp);
                _Dq._Zf = 0;
            }
        }
    }
    ;
}

function _Oa(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Pa(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Qa(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Ra(_ed, _fd) {
    _ed._Eq = _45(_ed, _fd, _ed.x, _ed.y, 74);
    if ((_ed.x < 280)) {
        {
            _ed._1g(42);
            _ed._Tf(340);
            _45(_ed, _fd, 12, 300, 79);
            _45(_ed, _fd, 20, 340, 75);
        }
    } else {
        {
            _ed._1g(518);
            _ed._Tf(340);
            _ed._fn((-1));
            _Qf(_ed._Eq)._fn((-1));
            _45(_ed, _fd, 548, 300, 79);
            _ed._Pf = _45(_ed, _fd, 540, 340, 75);
            _Qf(_ed._Pf)._fn((-1));
        }
    }
    ;
}

function _Sa(_ed, _fd) {
    if ((_ed.x < 250)) {
        {
            {
                var _Fq = _dg(74);
                for (var _Gq in _Fq) {
                    if (!_Fq.hasOwnProperty(_Gq)) continue;
                    var _Hq = _Fq[_Gq];
                    if (_Hq._gg) continue;
                    if (!_Hq._hg) continue;
                    {
                        if ((_Hq.x < 250)) {
                            {
                                _9i(_Hq);
                            }
                        }
                        ;
                    }
                }
            }
            ;
            {
                var _Iq = _dg(75);
                for (var _Jq in _Iq) {
                    if (!_Iq.hasOwnProperty(_Jq)) continue;
                    var _Kq = _Iq[_Jq];
                    if (_Kq._gg) continue;
                    if (!_Kq._hg) continue;
                    {
                        if ((_Kq.x < 250)) {
                            {
                                _9i(_Kq);
                            }
                        }
                        ;
                    }
                }
            }
            ;
            {
                var _Lq = _dg(79);
                for (var _Mq in _Lq) {
                    if (!_Lq.hasOwnProperty(_Mq)) continue;
                    var _Nq = _Lq[_Mq];
                    if (_Nq._gg) continue;
                    if (!_Nq._hg) continue;
                    {
                        if ((_Nq.x < 250)) {
                            {
                                _9i(_Nq);
                            }
                        }
                        ;
                    }
                }
            }
            ;
        }
    }
    ;
    if ((_ed.x > 250)) {
        {
            {
                var _Oq = _dg(74);
                for (var _Pq in _Oq) {
                    if (!_Oq.hasOwnProperty(_Pq)) continue;
                    var _Qq = _Oq[_Pq];
                    if (_Qq._gg) continue;
                    if (!_Qq._hg) continue;
                    {
                        if ((_Qq.x > 250)) {
                            {
                                _9i(_Qq);
                            }
                        }
                        ;
                    }
                }
            }
            ;
            {
                var _Rq = _dg(75);
                for (var _Sq in _Rq) {
                    if (!_Rq.hasOwnProperty(_Sq)) continue;
                    var _Tq = _Rq[_Sq];
                    if (_Tq._gg) continue;
                    if (!_Tq._hg) continue;
                    {
                        if ((_Tq.x > 250)) {
                            {
                                _9i(_Tq);
                            }
                        }
                        ;
                    }
                }
            }
            ;
            {
                var _Uq = _dg(79);
                for (var _Vq in _Uq) {
                    if (!_Uq.hasOwnProperty(_Vq)) continue;
                    var _Wq = _Uq[_Vq];
                    if (_Wq._gg) continue;
                    if (!_Wq._hg) continue;
                    {
                        if ((_Wq.x > 250)) {
                            {
                                _9i(_Wq);
                            }
                        }
                        ;
                    }
                }
            }
            ;
        }
    }
    ;
}

function _Ta(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Ua(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Va(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Wa(_ed, _fd) {
    if ((_ed.x < 280)) {
        {
            _Qf(82)._Vh += 1;
            _O4(_ed, _fd, 1, _fd._Tb);
        }
    } else {
        {
            _Qf(82)._Wh += 1;
            _O4(_ed, _fd, 2, _fd._Tb);
        }
    }
    ;
}

function _Xa(_ed, _fd) {
    if ((_ed.x < 280)) {
        {
            _Qf(82)._Vh += 1;
            _O4(_ed, _fd, 1, _fd._Tb);
        }
    } else {
        {
            _Qf(82)._Wh += 1;
            _O4(_ed, _fd, 2, _fd._Tb);
        }
    }
    ;
}

function _Ya(_ed,
             _fd) {
    _Nl(_ed, _fd);
}

function _Za(_ed, _fd) {
    _ed._8g -= 0.1;
    if ((_ed._8g <= 0)) {
        {
            _9i(_ed);
        }
    }
    ;
}

function __a(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _0b(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _1b(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _2b(_ed, _fd) {
    _ed._Xq = 1;
    _ed._Yq = 0 ? 1 : 0;
    if (_Tg(_ed._Rf) > 0.5) {
        {
            if ((_ed._Cf == "ball")) {
                {
                    _ed._Yq = 1 ? 1 : 0;
                    _ed._Xq = 0.3;
                }
            }
            ;
            if ((_ed._Cf == "twin")) {
                {
                    _ed._Yq = 1 ? 1 : 0;
                }
            }
            ;
            if ((_ed._Cf == "player")) {
                {
                    if (_Tg(_ed._Rf) > 0.5) {
                        {
                            if ((_Qf(_ed._Rf)._B5 == 1)) {
                                {
                                    if ((((_Qf(_ed._Rf)._vf == 0)) && ((_Qf(_ed._Rf)._sf == 0)) && ((_Qf(_ed._Rf)._uf == 0)))) {
                                        {
                                            _ed._Yq = 1 ? 1 : 0;
                                        }
                                    }
                                    ;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Yq == 1)) {
        {
            _2g(_ed, _ed._3g, 0, _Qf(_ed._Rf).x, 374, (_ed._Xq * max(0, (_Qf(_ed._Rf)._4g * (_ed._4g - ((374 - _Qf(_ed._Rf).y) / 100))))), 1, 0, (-1), (_Qf(_ed._Rf)._8g * 0.2));
        }
    } else {
        {
            _9i(_ed);
        }
    }
    ;
}

function _3b(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _4b(_ed, _fd) {
    if ((global._vd == "story")) {
        {
            if ((global._xd == 1)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 2)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 3)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 4)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 5)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 6)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 7)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 8)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
            if ((global._xd == 9)) {
                {
                    _F4(_ed, _fd, "settings");
                }
            }
            ;
        }
    }
    ;_ed._Zq = _Ck(1);
    _ed.__q = _0r(136, 137, 138, 139, 133, 140, 141, 142, 143, 144);
    _Ek(_ed._Zq, _ed.__q);
    _ed._Zg = 0.1;
    _ed._1r = 0;
    _45(_ed, _fd, 0, 0, 82);
    _45(_ed, _fd, 0, 0, 84);
    if ((global._vd == "story")) {
        {
            _45(_ed, _fd, 0, 0, 85);
        }
    } else {
        {
            _45(_ed, _fd, 0, 0, 83);
        }
    }
    ;_Q4(_ed, _fd, 86, 0, 0);
    _Q4(_ed, _fd, 87, 0, 0);
}

function _6b(_ed,
             _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            _ed._2r = _45(_ed, _fd, (36 + random(5)), (280 + random(5)), 68);
            _Qf(_ed._2r)._Uf(((-10) - random(5)));
            _Qf(_ed._2r)._Yf((10 + random(5)));
        }
    }
    ;
}

function _8b(_ed, _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            _45(_ed, _fd, _Eh._3r, _Eh._4r, 68);
        }
    }
    ;
}

function _9b(_ed, _fd) {
    _Bh(0);
    _Am(1, 1, 559, 399, 1);
}

function _bb(_ed, _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            _Qf(82).__f = 100;
            _Qf(82)._0g = 100;
        }
    }
    ;
}

function _db(_ed, _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            if (_Tg(70) > 0.5) {
                {
                    {
                        var _5r = _dg(70);
                        for (var _6r in _5r) {
                            if (!_5r.hasOwnProperty(_6r)) continue;
                            var _7r = _5r[_6r];
                            if (_7r._gg) continue;
                            if (!_7r._hg) continue;
                            {
                                _9i(_7r);
                            }
                        }
                    }
                    ;
                }
            } else {
                {
                    _45(_ed, _fd, 0, 0, 70);
                }
            }
            ;
        }
    }
    ;
}

function _fb(_ed, _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            _Qf(82)._Vh += 1;
        }
    }
    ;
}

function _hb(_ed, _fd) {
    if ((_H4(_ed, _fd) == 1)) {
        {
            _Ci(1);
        }
    }
    ;
}

function _ib(_ed, _fd) {
    _Ci(1);
    global._qd = 0;
}

function _jb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _kb(_ed, _fd) {
    _ed._Vh = 0;
    _ed._Wh = 0;
    _ed.__f = 50;
    _ed._0g = 50;
    if ((global._Th == "Round")) {
        {
            _ed.__f = 100;
            _ed._0g = 100;
        }
    }
    ;_ed._6m = _p4(_ed, _fd, global._rd);
    _ed._8m = _p4(_ed, _fd, global._sd);
    _ed._7m = _o4(_ed, _fd, global._rd);
    _ed._9m = _o4(_ed,
        _fd, global._sd);
    _ed._am = _q4(_ed, _fd, global._rd);
    _ed._bm = _q4(_ed, _fd, global._sd);
    _ed._8r = _s4(_ed, _fd, global._rd);
    _ed._9r = _s4(_ed, _fd, global._sd);
    _ed._4i = 0;
    if ((global._rd == "classic")) {
        {
            _ed.__f = 100;
        }
    }
    ;
    if ((global._sd == "classic")) {
        {
            _ed._0g = 100;
        }
    }
    ;_ed._ar = 100;
}

function _lb(_ed, _fd) {
    if ((global._vd == "story")) {
        {
            _ed._6m = _p4(_ed, _fd, global._rd);
            _ed._8m = _p4(_ed, _fd, global._sd);
            _ed._7m = _o4(_ed, _fd, global._rd);
            _ed._9m = _o4(_ed, _fd, global._sd);
            _ed._am = _q4(_ed, _fd, global._rd);
            _ed._bm = _q4(_ed, _fd, global._sd);
            _ed._8r = _s4(_ed,
                _fd, global._rd);
            _ed._9r = _s4(_ed, _fd, global._sd);
        }
    }
    ;_ed._4i += 1;
    _E4(_ed, _fd);
    _ed._br = 0 ? 1 : 0;
    _ed._cr = 0 ? 1 : 0;
    if ((_s4(_ed, _fd, global._rd) <= _ed.__f)) {
        {
            _ed._br = 1 ? 1 : 0;
        }
    }
    ;
    if ((_s4(_ed, _fd, global._sd) <= _ed._0g)) {
        {
            _ed._cr = 1 ? 1 : 0;
        }
    }
    ;_ed._dr = _ed._am;
    _ed._er = _ed._bm;
    if ((_ed.__f < 0)) {
        {
            _ed.__f = 0;
        }
    }
    ;
    if ((_ed.__f > 100)) {
        {
            _ed.__f = 100;
        }
    }
    ;
    if ((_ed._0g < 0)) {
        {
            _ed._0g = 0;
        }
    }
    ;
    if ((_ed._0g > 100)) {
        {
            _ed._0g = 100;
        }
    }
    ;_ed._fr = (_ed.__f * 2.2);
    _ed._gr = (_ed._0g * 2.2);
    _ed._hr = (_ed._8r * 2.2);
    _ed._ir = (_ed._9r * 2.2);
    _ed._ag = 60;
    _vm(1);
    _Bh(0);
    _Am(0, 0, 560,
        480, 1);
    _ed._jr = 35;
    _ed._kr = 71;
    _Ah(7);
    _zh(0);
    _Bh(0);
    _Hh((_ed._jr - 1), _ed._kr, _ed._Wh);
    _Hh((_ed._jr + 1), _ed._kr, _ed._Wh);
    _Hh(_ed._jr, (_ed._kr - 1), _ed._Wh);
    _Hh(_ed._jr, (_ed._kr + 1), _ed._Wh);
    _Bh(16777215);
    _Hh(_ed._jr, _ed._kr, _ed._Wh);
    _zh(2);
    _ed._jr = 525;
    _ed._kr = 71;
    _Bh(0);
    _Hh((_ed._jr - 1), _ed._kr, _ed._Vh);
    _Hh((_ed._jr + 1), _ed._kr, _ed._Vh);
    _Hh(_ed._jr, (_ed._kr - 1), _ed._Vh);
    _Hh(_ed._jr, (_ed._kr + 1), _ed._Vh);
    _Bh(16777215);
    _Hh(_ed._jr, _ed._kr, _ed._Vh);
    _ed._ag = 18;
    if (_Tg(66) > 0.5) {
        {
            _Bh(_ed._er);
            _Am(232, (21 + _ed._ag), (232 - max(0,
                (_ed._gr - 13))), (43 + _ed._ag), 0);
            _2g(_ed, 97, min(14, _ed._gr), 239, (32 + _ed._ag), 1, 1, 0, _ed._er, 1);
            if ((_ed._Rh == 1)) {
                {
                    _2g(_ed, 99, 0, 135, (32 + _ed._ag), 1, 1, 0, _ed._bm, 1);
                }
            }
            ;_5m(_ed, 96, 0, 135, (32 + _ed._ag));
            if ((_ed._9r > _ed._0g)) {
                {
                    _2g(_ed, _ed._ar, 0, 135, (32 + _ed._ag), 1, 1, 0, (-1), 0.7);
                }
            }
            ;
        }
    }
    ;
    if (_Tg(65) > 0.5) {
        {
            _Bh(_ed._dr);
            _Am(328, (21 + _ed._ag), (328 + max(0, (_ed._fr - 13))), (43 + _ed._ag), 0);
            _2g(_ed, 97, min(14, _ed._fr), 321, (32 + _ed._ag), (-1), 1, 0, _ed._dr, 1);
            if ((_ed._Xh == 1)) {
                {
                    _2g(_ed, 99, 0, 425, (32 + _ed._ag), (-1), 1, 0, _ed._am, 1);
                }
            }
            ;_2g(_ed,
            96, 0, 425, (32 + _ed._ag), (-1), 1, 0, (-1), 1);
            if ((_ed._8r > _ed.__f)) {
                {
                    _2g(_ed, _ed._ar, 0, 425, (32 + _ed._ag), (-1), 1, 0, (-1), 0.7);
                }
            }
            ;
        }
    }
    ;_ed._lr = 28;
    _ed._mr = 7;
    if (_Tg(66) > 0.5) {
        {
            _Ah(0);
            _zh(0);
            _Bh(0);
            _Hh((_ed._lr + 1), _ed._mr, _Dh(_ed._8m));
            _Hh(_ed._lr, (_ed._mr + 1), _Dh(_ed._8m));
            _Hh((_ed._lr - 1), _ed._mr, _Dh(_ed._8m));
            _Hh(_ed._lr, (_ed._mr - 1), _Dh(_ed._8m));
            _Bh(_ed._bm);
            _Hh(_ed._lr, _ed._mr, _Dh(_ed._8m));
        }
    }
    ;
    if (_Tg(65) > 0.5) {
        {
            _Ah(0);
            _zh(2);
            _Bh(0);
            _Hh((560 - _ed._lr + 1), _ed._mr, _Dh(_ed._6m));
            _Hh((560 - _ed._lr), (_ed._mr + 1), _Dh(_ed._6m));
            _Hh((560 - _ed._lr - 1), _ed._mr, _Dh(_ed._6m));
            _Hh((560 - _ed._lr), (_ed._mr - 1), _Dh(_ed._6m));
            _Bh(_ed._am);
            _Hh((560 - _ed._lr), _ed._mr, _Dh(_ed._6m));
        }
    }
    ;_Bh(0);
    _Ah(3);
    _zh(0);
    if (_Tg(66) > 0.5) {
        {
            _Hh(28, 45, _Dh(_ed._9m));
        }
    }
    ;_zh(2);
    if (_Tg(65) > 0.5) {
        {
            _Hh(533, 45, _Dh(_ed._7m));
        }
    }
    ;_zh(1);
    _Bh(16777215);
    _Ah(8);
    if ((global._0i == 0)) {
        {
        }
    } else {
        {
            _Hh(280, 18, global._0i);
        }
    }
    ;
}

function _mb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _nb(_ed, _fd) {
    _ed._3i = 0;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 20;
    _ed._1h[~~2] = 1;
    _45(_ed, _fd, 280, (300 - random(250)), 67);
    _45(_ed, _fd, 100, 320, 66);
    _45(_ed, _fd, 460, 320, 65);
    _45(_ed, _fd, 42, 340, 73);
    _45(_ed, _fd, 518, 340, 73);
}

function _ob(_ed, _fd) {
    _ed._Pf = _45(_ed, _fd, 0, 0, 70);
    _N4(_ed, _fd, 74);
    if (!(_Qf(_ed._Pf)._1h instanceof Array)) {
        _Qf(_ed._Pf)._1h = [];
        _Qf(_ed._Pf)._1h._B3 = 4219417590
    } else if (_Qf(_ed._Pf)._1h._B3 !== 4219417590) {
        _Qf(_ed._Pf)._1h = _Qf(_ed._Pf)._1h.slice(0);
        _Qf(_ed._Pf)._1h._B3 = 4219417590
    }
    _Qf(_ed._Pf)._1h[~~0] = 50;
    if ((_H4(_ed, _fd) == 1)) {
        {
            _Qf(_ed._Pf)._1h[~~0] = 5;
        }
    }
    ;
}

function _pb(_ed, _fd) {
    _9i(_ed);
}

function _qb(_ed, _fd) {
    _ed._3i += 1;
    if (!(_ed._1h instanceof Array)) {
        _ed._1h = [];
        _ed._1h._B3 = 1584050178
    } else if (_ed._1h._B3 !== 1584050178) {
        _ed._1h = _ed._1h.slice(0);
        _ed._1h._B3 = 1584050178
    }
    _ed._1h[~~0] = 30;
    if ((_ed._3i == 3)) {
        {
            _ed._1h[~~1] = 14;
        }
    }
    ;
}

function _rb(_ed, _fd) {
}

function _sb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _tb(_ed, _fd) {
    _ed.__d = "";
    _ed._nr = "";
    _ed._or = 0;
}

function _ub(_ed, _fd) {
    if ((global._Td == 1)) {
        {
            if ((_ed._or > 0)) {
                {
                    _ed._nr = "";
                    _ed._or -= 1;
                }
            }
            ;
        }
    }
    ;
    if (!((_ed.__d == _ed._nr))) {
        {
            _ed._or = 60;
        }
    }
    ;_ed._nr = _ed.__d;
}

function _vb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _wb(_ed, _fd) {
    _ed._4i = 0;
    _ed.__d = "";
    _ed._Rf = 66;
    _ed._ki = 0 ? 1 : 0;
    _ed._3i = 0;
    _ed._pr = 0;
}

function _xb(_ed, _fd) {
    if ((_ed._3i == 0)) {
        {
            if ((_ed._4i > 10)) {
                {
                    _ed._3i = 1;
                }
            }
            ;
        }
    }
    ;_ed.__d = "";
    if ((global._xd == 1)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 2)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 3)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 4)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 5)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 6)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 7)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 8)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((global._xd == 9)) {
        {
            _F4(_ed, _fd, "play");
        }
    }
    ;
    if ((_ed.__d == "")) {
        {
            global._zd = 0 ? 1 : 0;
        }
    } else {
        {
            if (_Tg(88) > 0.5) {
                {
                }
            } else {
                {
                    _ed._Pf = _45(_ed, _fd, 280, 300, 88);
                    _Qf(_ed._Pf)._Rf = _ed._Rf;
                    _Qf(_ed._Pf).__d = _ed.__d;
                }
            }
            ;
        }
    }
    ;_ed._4i += 1;
    if ((_ed._3i == _ed._pr)) {
        {
        }
    } else {
        {
            _ed._4i = 0;
        }
    }
    ;_ed._pr = _ed._3i;
}

function _yb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _zb(_ed, _fd) {
    _a5(_ed, _fd);
    _M4(_ed, _fd, 8);
}

function _Ab(_ed, _fd) {
    _Nl(_ed,
        _fd);
}

function _Bb(_ed, _fd) {
    _ed._Ei = 0;
    _ed.__g = 0;
    _ed._Fi = 0;
}

function _Cb(_ed, _fd) {
    _ed._Ei += 1;
}

function _Db(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Eb(_ed, _fd) {
    _ed._Yq = 0 ? 1 : 0;
    global._zd = 1 ? 1 : 0;
    _T4(_ed, _fd, 2, 0);
}

function _Fb(_ed, _fd) {
    _ed._Yq = 1 ? 1 : 0;
    _Ah(5);
    _ed._ri = _Qf(_ed._Rf).x;
    _ed._si = _Qf(_ed._Rf).y;
    if ((_Qf(_ed._Rf)._Cf == 1)) {
        {
            _ed._7h = _q4(_ed, _fd, global._rd);
        }
    }
    ;
    if ((_Qf(_ed._Rf)._Cf == 2)) {
        {
            _ed._7h = _q4(_ed, _fd, global._sd);
        }
    }
    ;_ed._7h = _qf(_qr(_ed._7h), 80, 255);
    _ed._4i = 0;
    _ed._rr = "";
    _ed._sr = 300;
    _ed.__d = _Hl(_ed.__d, " ", "  ");
    _ed._tr = _ed.__d;
    _ed._ur = 0 ? 1 : 0;
    _ed._im = 0 ? 1 : 0;
    _ed._Fn = 0 ? 1 : 0;
    _ed._Pf = 1;
    _ed._Ng = 1;
    _ed._vr = 0;
    while ((_ed._im == 0)) {
        {
            _ed.__d = _xi(_ed._tr, 0, _ed._Ng);
            if ((_wi(_Dh(_ed.__d)) >= _ed._sr)) {
                {
                    _ed._ur = 1 ? 1 : 0;
                }
            }
            ;
            if ((((_ed._ur == 0)) && ((_ed._Fn == 0)))) {
                {
                    _ed._Ng += 1;
                    if ((_ed._Ng > _hf(_ed._tr))) {
                        {
                            _ed._Fn = 1 ? 1 : 0;
                        }
                    }
                    ;
                }
            } else {
                {
                    if ((((_if(_ed._tr, _ed._Ng) == " ")) || ((_ed._Fn == 1)))) {
                        {
                            if ((_ed._Fn == 1)) {
                                {
                                    _ed._im = 1 ? 1 : 0;
                                }
                            }
                            ;_ed._vr = _ed._Pf;
                            if ((_if(_ed._tr, _ed._Ng) == "_")) {
                                {
                                    _ed.__d = _kf(_ed.__d, _ed._Ng, 1);
                                }
                            }
                            ;
                            if ((_if(_ed._tr, (_ed._Ng - 1)) == "_")) {
                                {
                                    _ed.__d = _kf(_ed.__d, (_ed._Ng - 1), 1);
                                }
                            }
                            ;
                            if (!(_ed._wr instanceof Array)) {
                                _ed._wr = [];
                                _ed._wr._B3 = 3688643569
                            } else if (_ed._wr._B3 !== 3688643569) {
                                _ed._wr = _ed._wr.slice(0);
                                _ed._wr._B3 = 3688643569
                            }
                            _ed._wr[~~_ed._Pf] = _ed.__d;
                            _ed._ur = 0 ? 1 : 0;
                            _ed._tr = _kf(_ed._tr, 1, _ed._Ng);
                            _ed._Ng = 1;
                            _ed._Pf += 1;
                        }
                    } else {
                        {
                            _ed._Ng -= 1;
                            if ((_ed._Ng <= 0)) {
                                {
                                    _ed._im = 1 ? 1 : 0;
                                }
                            }
                            ;
                        }
                    }
                    ;
                }
            }
            ;
        }
    }
    ;_ed._en = 1;
    _ed.__d = "";
    for (var _xr = 0, _yr = ~~(_ed._vr); _xr < _yr; _xr++) {
        {
            _ed.__d = _lf((_ed._wr[~~_ed._en] + "#"), _ed.__d, 999);
            _ed._en += 1;
        }
    }
    ;
}

function _Gb(_ed, _fd) {
    if ((_ed._Yq == 1)) {
        {
            _ed._4i += 1;
            _ed._rr = _xi(_ed.__d, 1, _ed._4i);
            if (_ld(global._Id) > 0.5) {
                {
                    if ((_ed._4i < _hf(_ed.__d))) {
                        {
                            _ed._4i = _hf(_ed.__d);
                        }
                    } else {
                        {
                            _Qf(85)._3i += 1;
                            _9i(_ed);
                        }
                    }
                    ;
                }
            }
            ;_Ah(5);
            if ((((_ed._ri == 140)) || ((_ed._ri == 280)) || ((_ed._ri == 420)))) {
                {
                    _ed._ri += 1;
                }
            }
            ;_ed._Tf((_ed._zr - (_Ar(_Dh(_ed.__d)) / 2)));
            _Bh(_ed._7h);
            _Am((_ed.x - (_wi(_Dh(_ed.__d)) / 2) + 8), (_ed.y - (_Ar(_Dh(_ed.__d)) / 2) + 13), (_ed.x + (_wi(_Dh(_ed.__d)) / 2) - 8), (_ed.y + (_Ar(_Dh(_ed.__d)) / 2) - 13), 0);
            _2g(_ed, 120, 0, (_ed.x - (_wi(_Dh(_ed.__d)) / 2)), (_ed.y - (_Ar(_Dh(_ed.__d)) / 2) + 6),
                1, 1, 0, _ed._7h, 1);
            _2g(_ed, 120, 1, (_ed.x + (_wi(_Dh(_ed.__d)) / 2)), (_ed.y - (_Ar(_Dh(_ed.__d)) / 2) + 6), 1, 1, 270, _ed._7h, 1);
            _2g(_ed, 120, 2, (_ed.x - (_wi(_Dh(_ed.__d)) / 2)), (_ed.y + (_Ar(_Dh(_ed.__d)) / 2) - 4), 1, 1, 90, _ed._7h, 1);
            _2g(_ed, 120, 3, (_ed.x + (_wi(_Dh(_ed.__d)) / 2)), (_ed.y + (_Ar(_Dh(_ed.__d)) / 2) - 4), 1, 1, 180, _ed._7h, 1);
            _2g(_ed, 121, 0, (_ed.x - (_wi(_Dh(_ed.__d)) / 2) - 13 + 26), (_ed.y - (_Ar(_Dh(_ed.__d)) / 2) - 7), ((_wi(_Dh(_ed.__d)) - 26) / 20), 1, 0, _ed._7h, 1);
            if ((((_ed._ri < 140)) || ((((_ed._ri > 280)) && ((_ed._ri < 420)))))) {
                {
                    _2g(_ed, 121, 0,
                        (24 + _ed.x + (_wi(_Dh(_ed.__d)) / 2) - 26 - 13), (_ed.y + 26 + (_Ar(_Dh(_ed.__d)) / 2) - 17), ((_wi(_Dh(_ed.__d)) + 2 - 52) / 20), 1, 180, _ed._7h, 1);
                    _2g(_ed, 122, 0, (_ed.x - (_wi(_Dh(_ed.__d)) / 2) + 26 - _Vf((_ed._ri - 280))), (_ed.y + (_Ar(_Dh(_ed.__d)) / 2) + 7), _Vf((_ed._ri - 280)), 1, 0, _ed._7h, 1);
                }
            }
            ;
            if ((((_ed._ri > 420)) || ((((_ed._ri > 140)) && ((_ed._ri < 280)))))) {
                {
                    _2g(_ed, 121, 0, (2 + _ed.x + (_wi(_Dh(_ed.__d)) / 2) - 26 - 13), (_ed.y + 26 + (_Ar(_Dh(_ed.__d)) / 2) - 17), ((_wi(_Dh(_ed.__d)) - 52) / 20), 1, 180, _ed._7h, 1);
                    _2g(_ed, 122, 0, (_ed.x + (_wi(_Dh(_ed.__d)) / 2) - 26 - _Vf((_ed._ri - 280))),
                        (_ed.y + (_Ar(_Dh(_ed.__d)) / 2) + 7), _Vf((_ed._ri - 280)), 1, 0, _ed._7h, 1);
                }
            }
            ;_2g(_ed, 121, 0, (_ed.x - (_wi(_Dh(_ed.__d)) / 2) - 13), (_ed.y - (_Ar(_Dh(_ed.__d)) / 2) + 19 + (_Ar(_Dh(_ed.__d)) - 36)), ((_Ar(_Dh(_ed.__d)) - 36) / 20), 1, 90, _ed._7h, 1);
            _2g(_ed, 121, 0, (_ed.x + (_wi(_Dh(_ed.__d)) / 2) + 13), (_ed.y - (_Ar(_Dh(_ed.__d)) / 2) + 19), ((_Ar(_Dh(_ed.__d)) - 36) / 20), 1, 270, _ed._7h, 1);
            _zh(1);
            _Bh(0);
            _Ah(5);
            _Hh(_ed.x, (2 + _ed.y - (_Ar(_Dh(_ed.__d)) / 2)), _Dh(_ed._rr));
        }
    }
    ;
}

function _Hb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Ib(_ed, _fd) {
    _ed._4i = 0;
    _ed._5i = 500;
}

function _Jb(_ed, _fd) {
    _5m(_ed, 89, 0, _ed.x, _ed.y);
    _ed._4i += 1;
    _ed._Br = (90 - (_ed._4i / _ed._5i * 360));
    _2g(_ed, 88, 0, _ed.x, _ed.y, 1, 1, _ed._Br, (-1), 1);
}

function _Kb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Lb(_ed, _fd) {
    _T4(_ed, _fd, 2, 0);
    _ed._8g = 0.05;
}

function _Mb(_ed, _fd) {
    _R4(_ed, _fd);
}

function _Nb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Ob(_ed, _fd) {
    _ed._Fn = 0 ? 1 : 0;
    _ed._Yf(((-15) - random(5)));
    _ed._ri = 0;
    _ed._Cr(floor(random(4)));
    _ed._Rf = _ed.id;
}

function _Pb(_ed, _fd) {
    if (_Tg(_ed._Rf) > 0.5) {
        {
        }
    } else {
        {
        }
    }
    ;_ed._8g = 0.5;
    _ed._bg(_ed._Wg);
    if ((((floor(random(200)) == 0)) && ((_ed._Fn == 0)))) {
        {
            _ed._Zf = 0.4;
            _ed._Yf((random(3) - 4));
            _ed._Uf((random(10) - 5));
            _ed._Fn = 1 ? 1 : 0;
        }
    }
    ;
    if ((((_ed.y < _Qf(67).y)) && ((_ed._Fn == 0)))) {
        {
            _ed._Zf = 0.4;
            _ed._Tf(_Qf(67).y);
            _ed._Yf((random(3) - 4));
            _ed._Uf((random(10) - 5));
            _ed._Fn = 1 ? 1 : 0;
            if (_Tg(_ed._Rf) > 0.5) {
                {
                    _Qf(67)._Yf(_Qf(67)._3c - 0.2);
                }
            }
            ;
            if ((floor(random(10)) == 0)) {
                {
                }
            } else {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    }
    ;
    if ((_ed._Fn == 1)) {
        {
            _ed._fn(_ed._4g - 0.05);
            _ed._gn(_ed._5g - 0.05);
            if ((_ed._4g <= 0)) {
                {
                    _9i(_ed);
                }
            }
            ;
        }
    } else {
        {
            _ed._1g((_Qf(67).x + _ed._ri + (_Qf(67)._2c / 2)));
        }
    }
    ;
}

function _Qb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _Rb(_ed, _fd) {
    _Nl(_ed, _fd);
}

function _ad(_ed, _fd) {
    _W4(_ed, _fd);
}

function _bd(_ed, _fd) {
    _35(_ed, _fd);
}

function _cd(_ed, _fd) {
    _f5(_ed, _fd);
}

function _dd(_ed, _fd) {
    _g5(_ed, _fd);
}

function _Dr(_Er) {
    this._Fr = false;
    this._Gr = 0;
    this._Hr = false;
    this._Ir = null;
    this._Jr = null;
    this._Kr = null;
    this._Lr = null;
    this._Mr = null;
    this._Nr = null;
    this._Or = [];
    this._Pr(_Er._Nr)
};_Dr.prototype._Qr = function () {
    var _Rr = new _Dr({_Nr: this._Nr});
    return _Rr
};
_Dr.prototype._Pr = function (_Sr) {
    this._Nr = _Sr;
    this._Ir = new spine._Tr(_Sr);
    this._Mr = new spine._Ur(this._Ir.data);
    this._Lr = new spine._Vr(this._Mr);
    var listener = new Object();
    listener.start = function (_Wr) {
    };
    listener.end = function (_Wr) {
    };
    listener.complete = function (_Wr, _Xr) {
    };
    listener.event = function (_Wr, _Yr) {
        var map = _Zr();
        _Eh.__r = map;
        _0s(map, "name", _Yr.data.name);
        _0s(map, "track", _Wr);
        _0s(map, "integer", _Yr.data._1s);
        _0s(map, "float", _Yr.data._2s);
        _0s(map, "string", _Yr.data._3s ? _Yr.data._3s : "");
        _4s._5s(_6s, 0);
        _7s(map);
        _Eh.__r = -1
    };
    this._Lr._8s(listener);
    if (_Sr.animations.length > 0) {
        this._9s(null)
    }
    this._as(null);
    this._Jr = new spine._bs();
    var _cs = this._Ir._ds();
    this._es = [_cs.scaleX, _cs.scaleY * -1.0];
};
_Dr.prototype._fs = function (_gs) {
    if (_gs == undefined) _gs = 0;
    if (_gs < 0) return 0;
    if (_gs >= this._Lr._hs.length) return 0;
    var _is = _js ? _js._ks() : 30;
    if (_ls) {
        _is = _ms._ns()
    }
    if (this._Lr._hs[_gs] == null) {
        return ~~((_is * this._Kr.duration) + 0.5)
    }
    return ~~((_is * this._Lr._hs[_gs]._os.duration) + 0.5)
};

function _ps(_qs, _rs) {
    if (_rs < 0.0) return _qs;
    var _ss = _qs / _rs;
    var _ts = _ss - Math.floor(_ss);
    var _us = _ts * _rs;
    return _us
}

_Dr.prototype._9s = function (_vs) {
    this._ws(_vs, 0)
};
_Dr.prototype._ws = function (_vs,
                              _gs) {
    var _os = null;
    if (((_vs === null) || (_vs === undefined)) && (_gs === 0)) {
        if (this._Nr.animations.length > 0) {
            _os = this._Nr._xs(this._Nr.animations[0].name)
        }
    } else {
        _os = this._Nr._xs(_vs)
    }
    if (_os !== null && _os !== undefined) {
        if (_gs === 0) {
            this._Gr = 0;
            this._Kr = _os
        }
        this._Lr._ys(_gs, _os.name, true)
    }
};
_Dr.prototype._as = function (_zs) {
    if (_zs === null || _zs === undefined) {
        if (this._Nr._As) {
            this._Ir._Bs(this._Nr._As.name)
        }
    } else {
        this._Ir._Bs(_zs)
    }
    this._Ir._Cs()
};
_Dr.prototype._Ds = function (_Es, _Fs) {
    var slot = this._Ir._Gs(_Es);
    if ((slot !== null) && (slot !== undefined)) {
        if (typeof(_Fs) === 'number') {
            slot._Hs(null)
        } else {
            var _Is = this._Ir._Js(_Es);
            for (var _Ks = 0; _Ks < this._Nr.skins.length; _Ks++) {
                var skin = this._Nr.skins[_Ks];
                var attachment = skin._Ls(_Is, _Fs);
                if (attachment) {
                    slot._Hs(attachment);
                    return
                }
            }
            for (var _Ms = 0; _Ms < this._Or.length; _Ms++) {
                var attachment = this._Or[_Ms].attachment;
                if (attachment.name === _Fs) {
                    slot._Hs(attachment);
                    return
                }
            }
        }
    }
};
_Dr.prototype._Ns = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _Us) {
    var skeleton = this._Ir;
    _cs = this._Ir._ds(), _Vs = this._Gr, _Ws = this._Fr, _Xs = (_Us !== undefined);
    var _Ys = Math.abs(_Rs * this._es[0]);
    var _Zs = Math.abs(_Ss * this._es[1]);
    if ((_Ws == true) || (_Vs !== _Os) || (skeleton.x !== _Ps) || (skeleton.y !== _Qs) || (_cs.scaleX !== _Ys) || (_cs.scaleY !== _Zs) || (_cs.rotation !== _Ts)) {
        var __s = this._fs(0);
        if (__s > 0) {
            var _0t = _Os % __s, _1t = this._Gr % __s, duration = this._Kr.duration, _2t = this._Kr._3t.length;
            if (_1t > _0t) {
                _0t += __s
            }
            var _4t = (_0t - _1t) / __s;
            this._Lr._5t(_4t * duration);
            this._Lr.apply(this._Ir);
        }
        this._Gr = _Os;
        skeleton.x = _Ps;
        skeleton.y = _Qs;
        skeleton._6t = ((_Rs * this._es[0]) < 0) ? 1 : 0;
        skeleton._7t = ((_Ss * this._es[1]) < 0) ? 1 : 0;
        _cs.scaleX = _Ys;
        _cs.scaleY = _Zs;
        _cs.rotation = _Ts;
        _Xs = true;
        this._Fr = false
    }
    if (_Xs) {
        if (_Us) {
            _Us._8t(_9t, 0, _Us, null)
        }
        skeleton._Xs();
        this._Jr._5t(this._Ir, 1)
    }
};
_Dr.prototype._at = function (_bt, _Ps, _Qs, _Rs, _Ss, _Ts) {
    var __s = this._fs(0);
    var _ct = ~~(__s * (_bt / this._Kr.duration) + 0.5);
    this._Ns(_ct, _Ps, _Qs, _Rs, _Ss, _Ts)
};
_Dr.prototype._dt = function (_et, _Os, _Ps, _Qs, _Rs, _Ss, _Ts) {
    var _ft = this._Jr;
    if (_ft._gt.length > 0) {
        this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
        _et.left = ~~(_ft._ht + 0.5);
        _et.right = ~~(_ft._it + 0.5);
        _et.top = ~~(_ft._jt + 0.5);
        _et.bottom = ~~(_ft._kt + 0.5);
        return true
    }
    return false
};
_Dr.prototype._lt = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _mt, _nt, _ot, _pt, _qt, _rt, _st) {
    this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
    _mt._Ns(_nt, _ot, _pt, _qt, _rt, _st);
    for (var _tt = 0; _tt < _mt._Jr._ut.length; _tt++) {
        var _vt = _mt._Jr._ut[_tt];
        var _l5 = _vt.length / 2;
        for (var _wt = 0; _wt < _l5; _wt++) {
            var _xt, _yt, _zt, _At;
            _xt = _vt[(_wt * 2) + 0];
            _yt = _vt[(_wt * 2) + 1];
            if (_wt === (_l5 - 1)) {
                _zt = _vt[0];
                _At = _vt[1]
            } else {
                _zt = _vt[((_wt + 1) * 2) + 0];
                _At = _vt[((_wt + 1) * 2) + 1]
            }
            var _Bt = this._Jr._Ct(_xt, _yt, _zt, _At);
            if (_Bt !== null) {
                return true
            }
        }
    }
    return false
};
_Dr.prototype._Dt = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _Et, _Ft, _nt, _ot, _pt, _qt, _rt, _st) {
    this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
    if (_Et == null) {
        return false
    }
    if (_Et._Gt <= 0) {
        return false;
    }
    if (_Et._Ht.length > 0) {
        _nt = _nt % _Et._Ht.length
    }
    if (_nt < 0) {
        _nt = _nt + _Et._Ht.length
    }
    _qt = 1.0 / _qt;
    _rt = 1.0 / _rt;
    var _ft = this._Jr;
    var _It = _Jt(_ft._ht, _Ft.left);
    var _Kt = _Lt(_ft._it, _Ft.right);
    var _Mt = _Jt(_ft._jt, _Ft.top);
    var _Nt = _Lt(_ft._kt, _Ft.bottom);
    var _Ot = Math.sin(-_st * (_Pt / 180.0));
    var _Qt = Math.cos(-_st * (_Pt / 180.0));
    for (var _t5 = _It; _t5 <= _Kt; _t5++) {
        for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
            var _St = ((_Qt * (_t5 - _ot) + _Ot * (_Rt - _pt)) * _qt + _Et._Tt);
            var _Ut = ((_Qt * (_Rt - _pt) - _Ot * (_t5 - _ot)) * _rt + _Et._Vt);
            if ((_St < 0) || (_St >= _Et._Wt)) {
                continue
            }
            if ((_Ut < 0) || (_Ut >= _Et._Xt)) {
                continue
            }
            if (_Et._Yt) {
                if (!_Et._Ht._Zt[_nt]._Zt[_St + (_Ut * _Et._Wt)]) {
                    continue
                }
            }
            var _Bt = _ft.__t(_t5, _Rt);
            if (_Bt !== null) {
                return true
            }
        }
    }
    return false
};
_Dr.prototype._0u = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _1u, _2u) {
    this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
    var _Bt = this._Jr.__t(_1u, _2u);
    if (_Bt !== null) {
        return true
    }
    return false
};
_Dr.prototype._3u = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _1u, _2u, _ot, _pt) {
    this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
    var _Bt = this._Jr._Ct(_1u, _2u, _ot, _pt);
    if (_Bt !== null) {
        return true
    }
    return false
};
_Dr.prototype._4u = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _1u, _2u, _ot, _pt) {
    this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
    var _Bt = null;
    var _ft = this._Jr;
    var _Bt = _ft._Ct(_1u, _2u, _ot, _pt);
    if (_Bt !== null) {
        return true
    }
    _Bt = _ft._Ct(_1u, _2u, _ot, _2u);
    if (_Bt !== null) {
        return true
    }
    _Bt = _ft._Ct(_ot, _2u, _ot, _pt);
    if (_Bt !== null) {
        return true
    }
    _Bt = _ft._Ct(_ot, _pt, _1u, _pt);
    if (_Bt !== null) {
        return true
    }
    _Bt = _ft._Ct(_1u, _pt, _1u, _2u);
    if (_Bt !== null) {
        return true
    }
    return false
};
_Dr.prototype._5u = function (_Os, _Ps, _Qs, _Rs, _Ss, _Ts, _6u) {
    this._Ns(_Os, _Ps, _Qs, _Rs, _Ss, _Ts);
    var _ft = this._Jr;
    var skeleton = this._Ir;
    var _It = _Jt(_ft._ht, _6u.left);
    var _Kt = _Lt(_ft._it, _6u.right);
    var _Mt = _Jt(_ft._jt, _6u.top);
    var _Nt = _Lt(_ft._kt, _6u.bottom);
    var _7u = ((_6u.right + _6u.left) / 2);
    var _8u = ((_6u.bottom + _6u.top) / 2);
    var _9u = ((_6u.right - _6u.left) / 2);
    var _au = ((_6u.bottom - _6u.top) / 2);
    var _Wt = (_ft._it - _ft._ht);
    var _Xt = (_ft._kt - _ft._jt);
    var _Tt = skeleton.x - _ft._ht;
    var _Vt = skeleton.y - _ft._jt;
    if ((_Rs == 1) && (_Ss == 1) && (Math.abs(_Ts) < 0.0001)) {
        for (var _t5 = _It; _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
                if (_Fg((_t5 - _7u) / _9u) + _Fg((_Rt - _8u) / _au) > 1) continue;
                var _St = _t5 - _Ps + _Tt;
                var _Ut = _Rt - _Qs + _Vt;
                if ((_St < 0) || (_St >= _Wt)) continue;
                if ((_Ut < 0) || (_Ut >= _Xt)) continue;
                var _Bt = _ft.__t(_t5, _Rt);
                if (_Bt !== null) {
                    return true
                }
            }
        }
    } else {
        var _bu = Math.sin(-_Ts * _Pt / 180.0);
        var _cu = Math.cos(-_Ts * _Pt / 180.0);
        for (var _t5 = _It; _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt;
                 _Rt <= _Nt; _Rt++) {
                if (_Fg((_t5 - _7u) / _9u) + _Fg((_Rt - _8u) / _au) > 1) continue;
                var _St = Math.floor((_cu * (_t5 - _Ps) + _bu * (_Rt - _Qs)) / _Rs + _Tt);
                var _Ut = Math.floor((_cu * (_Rt - _Qs) - _bu * (_t5 - _Ps)) / _Ss + _Vt);
                if ((_St < 0) || (_St >= _Wt)) continue;
                if ((_Ut < 0) || (_Ut >= _Xt)) continue;
                var _Bt = _ft.__t(_t5, _Rt);
                if (_Bt !== null) {
                    return true
                }
            }
        }
    }
    return false
};
var _du = null;
;

function _eu() {
    this.width = null;
    this.height = null
}

function _fu() {
    this.name = null;
    this._gu = new _eu();
    this._hu = function () {
        return this._gu
    };
    this._iu = function (_ju, _ku) {
    };
    this._lu = function (_mu,
                         _nu) {
    };
    this._ou = function () {
    };
    this._pu = null;
    this.width = null;
    this.height = null
}

function _qu() {
    this._ru = [];
    this._su = null;
    this._Nr = null;
    this._tu = null;
    if (_uu) {
        this._vu = this._wu;
        this._xu = this._yu
    } else {
        this._vu = this._zu;
        this._xu = this._Au
    }
};_qu.prototype._Bu = function (_vs, _Cu, _Du, _Eu) {
    this._ru[_vs] = {_Fu: [], _Gu: 0, _Hu: 32, _Iu: _Ju[_Eu], x: 0, y: 0, _v5: _Cu, _w5: _Du}
};
_qu.prototype._Ku = function (_Lu, _Mu, _Cu, _Du) {
    var width = _Cu;
    var height = _Du;
    var _Nu = this;
    var _Ou = function (_Pu) {
        var _Qu = new _fu();
        _Qu.name = _Pu;
        _Qu.width = _Qu._gu.width = width;
        _Qu.height = _Qu._gu.height = height;
        var _Ru = _Su(_Tu + _Pu);
        _Qu._pu = _Ru;
        _Ju[_Ru].onload = function (e) {
            _Qu._gu = e._Uu;
            var target = e.target || e.srcElement;
            _Nu._Bu(_Qu.name, target.width, target.height, _Ru)
        };
        _Ju[_Ru].onerror = function (e) {
            var target = e.target || e.srcElement;
            debug("ImageError: " + target.src)
        };
        _Ju[_Ru].URL = _Pu;
        return _Qu
    };
    this._tu = new spine._Vu(_Mu, _Ou);
    this._su = new spine._Wu(new spine._Xu(this._tu));
    this._Nr = this._su._Yu(_Lu)
};
_qu.prototype._Zu = function (__u, _zs, _ct, x, y, _0v, _1v, angle, _2v, alpha) {
    if (this._Nr === null || this._Nr === undefined) return;
    spine._3v._4v = true;
    var _5v = new _Dr(this);
    _5v._9s(__u);
    _5v._as(_zs);
    _5v._Ns(_ct, x, y, _0v, _1v, angle);
    this._6v(_5v._Ir, _2v, alpha)
};
_qu.prototype._7v = function (_ct, x, y, _0v, _1v, angle, _2v, alpha) {
    if (!_du || !_du._8v()) {
        this._Zu(null, null, _ct, x, y, _0v, _1v, angle, _2v, alpha);
    } else {
        spine._3v._4v = true;
        var _9v = _du._8v();
        _9v._Ns(_ct, x, y, _0v, _1v, angle, _du);
        this._6v(_9v._Ir, _2v, alpha);
        if (_9v._Hr) {
            this._av(_9v._Jr)
        }
    }
};
_qu.prototype._6v = function (_bv, color, alpha) {
    var _cv = (color & 0xff) / 255.0, _dv = ((color & 0xff00) >> 8) / 255.0, _ev = ((color & 0xff0000) >> 16) / 255.0;
    for (var _t5 = 0, _tt = _bv.slots.length; _t5 < _tt; _t5++) {
        var slot = _bv._fv[_t5];
        if (!slot.attachment) continue;
        var _Kt = (_cv * 255);
        var _gv = (_dv * 255);
        var _Nt = (_ev * 255);
        var _hv = (alpha * 255);
        if ((slot.skeleton != undefined) && (slot.skeleton._Kt != undefined)) {
            _Kt *= slot.skeleton._Kt;
            _gv *= slot.skeleton._gv;
            _Nt *= slot.skeleton._Nt;
            _hv *= slot.skeleton._hv
        }
        if (slot.color != undefined) {
            _Kt *= slot.color._Kt;
            _gv *= slot.color._gv;
            _Nt *= slot.color._Nt;
            _hv *= slot.color._hv
        }
        var _2v = (_hv << 24) | (_Kt << 0) | (_gv << 8) | (_Nt << 16);
        if (slot.attachment instanceof spine._iv) {
            this._vu(slot, _2v, alpha)
        } else if (slot.attachment instanceof spine._jv) {
            this._xu(slot, _2v, alpha)
        }
    }
};
_qu.prototype._av = function (_kv) {
    _Io(_kv._ht, _kv._jt, _kv._ht, _kv._kt);
    _Io(_kv._ht, _kv._kt, _kv._it, _kv._kt);
    _Io(_kv._it, _kv._kt, _kv._it, _kv._jt);
    _Io(_kv._it, _kv._jt, _kv._ht, _kv._jt);
    for (var _tt = 0; _tt < _kv._ut.length; _tt++) {
        var _vt = _kv._ut[_tt];
        var _l5 = _vt.length / 2;
        for (var _wt = 0; _wt < _l5; _wt++) {
            var _xt, _yt, _zt, _At;
            _xt = _vt[(_wt * 2) + 0];
            _yt = _vt[(_wt * 2) + 1];
            if (_wt == (_l5 - 1)) {
                _zt = _vt[0];
                _At = _vt[1]
            } else {
                _zt = _vt[((_wt + 1) * 2) + 0];
                _At = _vt[((_wt + 1) * 2) + 1]
            }
            _Io(_xt, _yt, _zt, _At)
        }
    }
};
_qu.prototype._zu = function (slot, _2v, alpha) {
    var _lv = slot.attachment, vertices = [];
    var _mv = 0;
    var _nv = 0;
    if (slot.skeleton) {
        _mv = slot.skeleton.x;
        _nv = slot.skeleton.y
    } else if (slot.bone.skeleton) {
        _mv = slot.bone.skeleton.x;
        _nv = slot.bone.skeleton.y
    }
    vertices = _lv._ov(slot, false);
    var _pv = [];
    _pv[0] = {};
    _pv[0].x = vertices[spine._iv._qv];
    _pv[0].y = vertices[spine._iv._rv];
    _pv[0]._sv = vertices[spine._iv._tv];
    _pv[0]._uv = vertices[spine._iv._vv];
    _pv[1] = {};
    _pv[1].x = vertices[spine._iv._wv];
    _pv[1].y = vertices[spine._iv._xv];
    _pv[1]._sv = vertices[spine._iv._yv];
    _pv[1]._uv = vertices[spine._iv._zv];
    _pv[2] = {};
    _pv[2].x = vertices[spine._iv._Av];
    _pv[2].y = vertices[spine._iv._Bv];
    _pv[2]._sv = vertices[spine._iv._Cv];
    _pv[2]._uv = vertices[spine._iv._Dv];
    _pv[3] = {};
    _pv[3].x = vertices[spine._iv._Ev];
    _pv[3].y = vertices[spine._iv._Fv];
    _pv[3]._sv = vertices[spine._iv._Gv];
    _pv[3]._uv = vertices[spine._iv._Hv];
    _Iv.globalAlpha = alpha;
    var _Jv = _lv._lv._Iu;
    var _Ru = _Ju[_lv._lv._Kv._Iu._pu];
    if (!_Ru.complete) return;
    if (_2v != _Lv) {
        if (!this._ru[_lv._lv._Kv._Iu.name]) {
            var _Mv = _lv._lv._Iu;
            this._Bu(_Mv.name, _Mv.width, _Mv.height, _Mv._pu)
        }
        _Ru = _Nv(this._ru[_lv._lv._Iu.name], _2v)
    }
    var _Ov = this._ru[_Jv.name];
    this._Pv(_Iv, _Ru, _pv[0].x, _pv[0].y, _pv[1].x, _pv[1].y, _pv[2].x, _pv[2].y, _pv[0]._sv * _Ov._v5, _pv[0]._uv * _Ov._w5, _pv[1]._sv * _Ov._v5, _pv[1]._uv * _Ov._w5, _pv[2]._sv * _Ov._v5, _pv[2]._uv * _Ov._w5);
    this._Pv(_Iv, _Ru, _pv[2].x, _pv[2].y, _pv[3].x, _pv[3].y, _pv[0].x, _pv[0].y, _pv[2]._sv * _Ov._v5, _pv[2]._uv * _Ov._w5, _pv[3]._sv * _Ov._v5, _pv[3]._uv * _Ov._w5,
        _pv[0]._sv * _Ov._v5, _pv[0]._uv * _Ov._w5)
};
_qu.prototype._Au = function (slot, _2v, alpha) {
    var _Qv = slot.attachment, vertices = [];
    vertices = _Qv._ov(slot, false);
    var _Jv = _Qv._lv;
    var _Ru = _Ju[_Qv._lv._Kv._Iu._pu];
    if (!_Ru.complete) return;
    if (_2v != _Lv) {
        if (!this._ru[_Qv._lv._Kv._Mv.name]) {
            var _Mv = _Qv._lv._Kv._Mv;
            this._Bu(_Mv.name, _Mv.width, _Mv.height, _Qv._lv._Kv._Mv._pu)
        }
        _Ru = _Nv(this._ru[_Qv._lv._Kv._Mv.name], _2v)
    }
    for (var _tt = 0; _tt < _Qv.triangles.length / 3; _tt++) {
        var _Rv = _tt * 3;
        var _Sv = _Qv.triangles[_Rv++] * 8, _Tv = _Qv.triangles[_Rv++] * 8,
            _Uv = _Qv.triangles[_Rv++] * 8;
        var _pv = [];
        _pv[0] = {};
        _pv[0].x = vertices[_Sv];
        _pv[0]._sv = vertices[6 + _Sv++];
        _pv[0].y = vertices[_Sv];
        _pv[0]._uv = vertices[6 + _Sv];
        _pv[1] = {};
        _pv[1].x = vertices[_Tv];
        _pv[1]._sv = vertices[6 + _Tv++];
        _pv[1].y = vertices[_Tv];
        _pv[1]._uv = vertices[6 + _Tv];
        _pv[2] = {};
        _pv[2].x = vertices[_Uv];
        _pv[2]._sv = vertices[6 + _Uv++];
        _pv[2].y = vertices[_Uv];
        _pv[2]._uv = vertices[6 + _Uv];
        var _Ov = this._ru[_Qv._lv._Kv._Mv.name];
        this._Pv(_Iv, _Ru, _pv[0].x, _pv[0].y, _pv[1].x, _pv[1].y, _pv[2].x, _pv[2].y, _pv[0]._sv * _Ov._v5,
            _pv[0]._uv * _Ov._w5, _pv[1]._sv * _Ov._v5, _pv[1]._uv * _Ov._w5, _pv[2]._sv * _Ov._v5, _pv[2]._uv * _Ov._w5);
    }
};
_qu.prototype._Pv = function (_Vv, _Wv, _Xv, _Yv, _xt, _yt, _zt, _At, _Zv, __v, _0w, _1w, _2w, _3w) {
    _Vv.save();
    _Vv.beginPath();
    _Vv.moveTo(_Xv, _Yv);
    _Vv.lineTo(_xt, _yt);
    _Vv.lineTo(_zt, _At);
    _Vv.closePath();
    _Vv.clip();
    var _4w = _Zv * (_3w - _1w) - _0w * _3w + _2w * _1w + (_0w - _2w) * __v;
    if (_4w == 0) {
        return
    }
    var _5w = -(__v * (_zt - _xt) - _1w * _zt + _3w * _xt + (_1w - _3w) * _Xv) / _4w;
    var _6w = (_1w * _At + __v * (_yt - _At) - _3w * _yt + (_3w - _1w) * _Yv) / _4w;
    var _7w = (_Zv * (_zt - _xt) - _0w * _zt + _2w * _xt + (_0w - _2w) * _Xv) / _4w;
    var _8w = -(_0w * _At + _Zv * (_yt - _At) - _2w * _yt + (_2w - _0w) * _Yv) / _4w;
    var _9w = (_Zv * (_3w * _xt - _1w * _zt) + __v * (_0w * _zt - _2w * _xt) + (_2w * _1w - _0w * _3w) * _Xv) / _4w;
    var _aw = (_Zv * (_3w * _yt - _1w * _At) + __v * (_0w * _At - _2w * _yt) + (_2w * _1w - _0w * _3w) * _Yv) / _4w;
    _Vv.transform(_5w, _6w, _7w, _8w, _9w, _aw);
    _Vv.drawImage(_Wv, 0, 0);
    _Vv.restore()
};
_qu.prototype._wu = function (slot, _2v, alpha) {
    var _lv = slot.attachment, vertices = [];
    var _mv = 0;
    var _nv = 0;
    if (slot.skeleton) {
        _mv = slot.skeleton.x;
        _nv = slot.skeleton.y;
    } else if (slot.bone.skeleton) {
        _mv = slot.bone.skeleton.x;
        _nv = slot.bone.skeleton.y
    }
    vertices = _lv._ov(slot, false);
    var _pv = [];
    _pv[0] = {};
    _pv[0].x = vertices[spine._iv._qv];
    _pv[0].y = vertices[spine._iv._rv];
    _pv[0]._sv = vertices[spine._iv._tv];
    _pv[0]._uv = vertices[spine._iv._vv];
    _pv[1] = {};
    _pv[1].x = vertices[spine._iv._wv];
    _pv[1].y = vertices[spine._iv._xv];
    _pv[1]._sv = vertices[spine._iv._yv];
    _pv[1]._uv = vertices[spine._iv._zv];
    _pv[2] = {};
    _pv[2].x = vertices[spine._iv._Av];
    _pv[2].y = vertices[spine._iv._Bv];
    _pv[2]._sv = vertices[spine._iv._Cv];
    _pv[2]._uv = vertices[spine._iv._Dv];
    _pv[3] = {};
    _pv[3].x = vertices[spine._iv._Ev];
    _pv[3].y = vertices[spine._iv._Fv];
    _pv[3]._sv = vertices[spine._iv._Gv];
    _pv[3]._uv = vertices[spine._iv._Hv];
    var _Ru = _Ju[_lv._lv._Kv._Iu._pu];
    if (!_Ru.complete) return;
    if (!_Ru._bw) _cw({_Iu: _Ru});
    var _dw = 6;
    var _ew = _uu._fw(_gw._hw, _Ru._bw, _uu._iw, _dw);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _dw;
    var _mw = _ew._nw;
    var _ow = _ew._pw;
    var _qw = _ew._rw;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    _mw[_sw + 0] = _mw[_xw + 0] = vertices[spine._iv._qv];
    _mw[_sw + 1] = _mw[_xw + 1] = vertices[spine._iv._rv];
    _mw[_tw + 0] = vertices[spine._iv._wv];
    _mw[_tw + 1] = vertices[spine._iv._xv];
    _mw[_uw + 0] = _mw[_vw + 0] = vertices[spine._iv._Av];
    _mw[_uw + 1] = _mw[_vw + 1] = vertices[spine._iv._Bv];
    _mw[_ww + 0] = vertices[spine._iv._Ev];
    _mw[_ww + 1] = vertices[spine._iv._Fv];
    _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
    _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _2v;
    _qw[_sw + 0] = _qw[_xw + 0] = vertices[spine._iv._tv];
    _qw[_sw + 1] = _qw[_xw + 1] = vertices[spine._iv._vv];
    _qw[_tw + 0] = vertices[spine._iv._yv];
    _qw[_tw + 1] = vertices[spine._iv._zv];
    _qw[_uw + 0] = _qw[_vw + 0] = vertices[spine._iv._Cv];
    _qw[_uw + 1] = _qw[_vw + 1] = vertices[spine._iv._Dv];
    _qw[_ww + 0] = vertices[spine._iv._Gv];
    _qw[_ww + 1] = vertices[spine._iv._Hv]
};
_qu.prototype._yu = function (slot, _2v, alpha) {
    var _Qv = slot.attachment, vertices = [];
    var _mv = 0;
    var _nv = 0;
    if (slot.skeleton) {
        _mv = slot.skeleton.x;
        _nv = slot.skeleton.y
    } else if (slot.bone.skeleton) {
        _mv = slot.bone.skeleton.x;
        _nv = slot.bone.skeleton.y
    }
    vertices = _Qv._ov(slot, false);
    var _Ru = _Ju[_Qv._lv._Kv._Iu._pu];
    if (!_Ru.complete) return;
    if (!_Ru._bw) _cw({_Iu: _Ru});
    var _dw = _Qv.triangles.length;
    var _ew = _uu._fw(_gw._hw, _Ru._bw, _uu._iw, _dw);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _dw;
    var _mw = _ew._nw;
    var _ow = _ew._pw;
    var _qw = _ew._rw;
    var _sw = index;
    for (var _tt = 0; _tt < _dw; _tt++, _sw += _jw) {
        var _Sv = _Qv.triangles[_tt];
        _mw[_sw + 0] = vertices[(_Sv * 8) + 0];
        _mw[_sw + 1] = vertices[(_Sv * 8) + 1];
        _mw[_sw + 2] = _yw;
        _ow[_sw + 0] = _ow[_sw + 1] = _2v;
        _qw[_sw + 0] = vertices[(_Sv * 8) + 6];
        _qw[_sw + 1] = vertices[(_Sv * 8) + 7]
    }
};

function _jp(_G3) {
    _zw("draw_primitive_begin()")
}

function _Aw(_G3,
             _Bw) {
    _zw("draw_primitive_begin_texture()")
}

function _Cw(x, y) {
    _zw("draw_vertex()")
}

function _kp(x, y, _2v, alpha) {
    _zw("draw_vertex_color()")
}

var _Dw = _kp;

function _Ew(x, y, _Fw, _Gw) {
    _zw("draw_vertex_texture()")
}

function _Hw(x, y, _Fw, _Gw, _2v, alpha) {
    _zw("draw_vertex_texture_color()")
}

var _Iw = _Hw;

function _lp() {
    _zw("draw_primitive_end()")
}

function _Jw(_G3) {
    _zw("d3d_primitive_begin()")
}

function _Kw(_G3, _Bw) {
    _zw("d3d_primitive_begin_texture()")
}

function _Lw(x, y, _Mw) {
    _zw("d3d_vertex()")
}

function _Nw(x, y, _Mw, _2v, alpha) {
    _zw("d3d_vertex_color()")
}

var _Ow = _Nw;

function _Pw(x, y, _Mw, _Fw, _Gw) {
    _zw("d3d_vertex_texture()")
}

function _Qw(x, y, _Mw, _Fw, _Gw, _2v, alpha) {
    _zw("d3d_vertex_texture_color()")
}

var _Rw = _Qw;

function _Sw(x, y, _Mw, _Tw, _Uw, _Vw) {
    _zw("d3d_vertex_normal()")
}

function _Ww(x, y, _Mw, _Tw, _Uw, _Vw, _2v, alpha) {
    _zw("d3d_vertex_normal_color()");
}

var _Xw = _Ww;

function _Yw(x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw) {
    _zw("d3d_vertex_normal_texture()")
}

function _Zw(x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw, _2v, alpha) {
    _zw("d3d_vertex_normal_texture_color()")
}

var __w = _Zw;

function _0x() {
    _zw("d3d_primitive_end()")
}

var _1x = null;
var _2x = 0, _3x = -1, _4x = null, _5x = null;
var _6x = 1, _7x = 2, _8x = 3, _9x = 4, _ax = 5, _bx = 6, _cx = 7;

function _dx() {
    _jp = _ex;
    _Aw = _fx;
    _Cw = _gx;
    _kp = _hx;
    _Dw = _hx;
    _Ew = _ix;
    _Hw = _jx;
    _Iw = _jx;
    _lp = _kx;
    _Jw = _lx;
    _Kw = _mx;
    _Lw = _nx;
    _Nw = _ox;
    _Ow = _ox;
    _Pw = _px;
    _Qw = _qx;
    _Rw = _qx;
    _Sw = _rx;
    _Ww = _sx;
    _Xw = _sx;
    _Yw = _tx;
    _Zw = _ux;
    __w = _ux;
    _0x = _vx
}

function _wx(_xx) {
    switch (_xx) {
        case _6x:
            return _gw._yx;
        case _7x:
            return _gw._zx;
        case _8x:
            return _gw._Ax;
        case _9x:
            return _gw._hw;
        case _ax:
            return _gw._Bx;
        case _bx:
            return _gw._Cx;
        case _cx:
            return _gw._hw
    }
    return -1
}

function _Dx() {
    _2x = 0;
    _3x = -1;
    _4x = null;
    _5x = null
}

function _ex(_Ex) {
    _fx(_Ex, -1)
}

function _fx(_Ex, _Eu) {
    _2x = _Ex;
    _3x = null;
    _4x = null;
    if (typeof(_Eu) == "object") {
        _3x = _Eu._Fx;
        _4x = _Eu._Gx
    } else if ((_Eu != -1) && _Ju[_Eu]) {
        _3x = _Ju[_Eu]
    }
    if (_3x && !_3x._bw) {
        _cw({_Iu: _3x})
    }
    _5x = new _Hx(_Ix, _uu._Jx(_uu._iw), false)
}

function _gx(_Ps, _Qs) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _yw;
    _5x._rw[index + 0] = 0;
    _5x._rw[index + 1] = 0;
    _5x._pw[index] = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff)
}

function _hx(_Ps,
             _Qs, _Nx, _Ox) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _yw;
    _5x._rw[index + 0] = 0;
    _5x._rw[index + 1] = 0;
    _5x._pw[index] = ((_Ox * 255.0) << 24) | _Px(_Nx)
}

function _ix(_Ps, _Qs, _Qx, _Rx) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _yw;
    var _Sx = _Tx(_Qx, _Rx);
    _5x._rw[index + 0] = _Sx._sv;
    _5x._rw[index + 1] = _Sx._uv;
    _5x._pw[index] = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff)
}

function _jx(_Ps, _Qs, _Qx, _Rx,
             _Nx, _Ox) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _yw;
    var _Sx = _Tx(_Qx, _Rx);
    _5x._rw[index + 0] = _Sx._sv;
    _5x._rw[index + 1] = _Sx._uv;
    _5x._pw[index] = ((_Ox * 255.0) << 24) | _Px(_Nx)
}

function _kx() {
    var _Ux = _wx(_2x);
    if (_Ux == -1) {
        return
    }
    var _Vx = _5x._Wx.subarray(0, _5x._lw * _5x._kw());
    var _Xx = _3x ? _3x._bw : null;
    var _ew = _uu._fw(_Ux, _Xx, _uu._iw, _5x._lw);
    _ew._Wx.set(_Vx, _ew._lw * _ew._kw());
    _ew._lw += _5x._lw
}

function _lx(_G3) {
    _Kw(_G3, -1)
}

function _mx(_Ex, _Eu) {
    _2x = _Ex;
    _3x = null;
    _4x = null;
    if (typeof(_Eu) == "object") {
        _3x = _Eu._Fx;
        _4x = _Eu._Gx
    } else if ((_Eu != -1) && _Ju[_Eu]) {
        _3x = _Ju[_Eu]
    }
    if (_3x && !_3x._bw) {
        _cw({_Iu: _3x})
    }
    _5x = new _Hx(_Ix, _uu._Jx(_uu._Yx), false)
}

function _Tx(_Qx, _Rx) {
    if (_4x && _3x) {
        return ({_sv: (_4x.x + (_Qx * _4x._rc)) / _3x._Zx, _uv: (_4x.y + (_Rx * _4x._sc)) / _3x.__x})
    } else {
        return ({_sv: _Qx, _uv: _Rx})
    }
};

function _nx(_Ps, _Qs, _0y) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = 0;
    _5x._1y[index + 1] = 0;
    _5x._1y[index + 2] = 0;
    _5x._rw[index + 0] = 0;
    _5x._rw[index + 1] = 0;
    _5x._pw[index] = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff);
}

function _ox(_Ps, _Qs, _0y, _2y, _Ox) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = 0;
    _5x._1y[index + 1] = 0;
    _5x._1y[index + 2] = 0;
    _5x._rw[index + 0] = 0;
    _5x._rw[index + 1] = 0;
    _5x._pw[index] = ((_Ox * 255.0) << 24) | _Px(_2y)
}

function _px(_Ps, _Qs, _0y, _3y, _4y) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = 0;
    _5x._1y[index + 1] = 0;
    _5x._1y[index + 2] = 0;
    var _Sx = _Tx(_3y, _4y);
    _5x._rw[index + 0] = _Sx._sv;
    _5x._rw[index + 1] = _Sx._uv;
    _5x._pw[index] = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff)
}

function _qx(_Ps, _Qs, _0y, _3y, _4y, _2y, _Ox) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = 0;
    _5x._1y[index + 1] = 0;
    _5x._1y[index + 2] = 0;
    var _Sx = _Tx(_3y, _4y);
    _5x._rw[index + 0] = _Sx._sv;
    _5x._rw[index + 1] = _Sx._uv;
    _5x._pw[index] = ((_Ox * 255.0) << 24) | _Px(_2y)
}

function _rx(_Ps, _Qs, _0y, _5y, _6y, _7y) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = _5y;
    _5x._1y[index + 1] = _6y;
    _5x._1y[index + 2] = _7y;
    _5x._rw[index + 0] = 0;
    _5x._rw[index + 1] = 0;
    _5x._pw[index] = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff)
}

function _sx(_Ps, _Qs, _0y, _5y, _6y, _7y, _2y, _Ox) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = _5y;
    _5x._1y[index + 1] = _6y;
    _5x._1y[index + 2] = _7y;
    _5x._rw[index + 0] = 0;
    _5x._rw[index + 1] = 0;
    _5x._pw[index] = ((_Ox * 255.0) << 24) | _Px(_2y);
}

function _tx(_Ps, _Qs, _0y, _5y, _6y, _7y, _3y, _4y) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = _5y;
    _5x._1y[index + 1] = _6y;
    _5x._1y[index + 2] = _7y;
    var _Sx = _Tx(_3y, _4y);
    _5x._rw[index + 0] = _Sx._sv;
    _5x._rw[index + 1] = _Sx._uv;
    _5x._pw[index] = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff)
}

function _ux(_Ps, _Qs, _0y, _5y, _6y, _7y, _3y, _4y, _2y, _Ox) {
    var _jw = _5x._kw() >> 2;
    var index = _5x._lw * _jw;
    _5x._Kx(1);
    _5x._nw[index + 0] = _Ps;
    _5x._nw[index + 1] = _Qs;
    _5x._nw[index + 2] = _0y;
    _5x._1y[index + 0] = _5y;
    _5x._1y[index + 1] = _6y;
    _5x._1y[index + 2] = _7y;
    var _Sx = _Tx(_3y, _4y);
    _5x._rw[index + 0] = _Sx._sv;
    _5x._rw[index + 1] = _Sx._uv;
    _5x._pw[index] = ((_Ox * 255.0) << 24) | _Px(_2y)
}

function _vx() {
    var _Ux = _wx(_2x);
    if (_Ux == -1) {
        return
    }
    var _Vx = _5x._Wx.subarray(0, _5x._lw * _5x._kw());
    var _Xx = _3x ? _3x._bw : null;
    var _ew = _uu._fw(_Ux, _Xx, _uu._Yx, _5x._lw);
    _ew._Wx.set(_Vx, _ew._lw * _ew._kw());
    _ew._lw += _5x._lw
}

function _8y(_9y) {
    var _ay = null,
        _by = null, _cy = null, _dy = false, _ey = null, _fy;
    var _gy = 0, _hy = 0, _iy = 0, _jy = 0;
    var _ky = this;
    (function () {
        _ay = new ArrayBuffer(_9y);
        _by = new DataView(_ay)
    })();

    function _ly(_my, _ny) {
        var _oy = false;
        var _py = _ey._qy;
        for (var _t5 = 0; _t5 < _py.length; _t5++) {
            var _ry = _py[_t5];
            if (((_my == -1) || (_ry._sy == _my)) && (_ry.type == _ny)) {
                _oy = true;
                if ((_ry._ty & _gy) === 0) {
                    var _uy = (_jy + _ry.offset);
                    _gy |= _ry._ty;
                    if (_ey._vy === _gy) {
                        _gy = 0;
                        _hy++;
                        _jy += _ey._wy;
                        if ((_jy + _ey._wy) >= _ay.byteLength) {
                            _ky._xy(_ay.byteLength * 2)
                        }
                    }
                    return _uy
                }
            }
        }
        if (_oy) {
            debug("VERTEX BUILDER: element already written, must write the whole vertex first\n\n",
                true);
            return -1
        }
        debug("VERTEX BUILDER: Vertex format does not contain selected type.\n\n", true);
        return -1
    };this._xy = function (_9y) {
        var _yy = new ArrayBuffer(_9y);
        var _zy = new Int8Array(_ay);
        var _Ay = new Int8Array(_yy);
        _Ay.set(_zy);
        _ay = _yy;
        _by = new DataView(_ay)
    };
    this._By = function (_Cy) {
        _gy = 0;
        _hy = 0;
        _iy = 0;
        _jy = 0;
        _fy = _Cy;
        _ey = _uu._Jx(_Cy);
        if (_ey._wy > _ay.byteLength) {
            this._xy(_ey._wy * 36)
        }
    };
    this._Dy = function () {
    };
    this._Ey = function (x, y) {
        var _uy = _ly(_gw._Fy, _gw._Gy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true);
            _by.setFloat32(_uy + 4,
                y, true)
        }
    };
    this._Hy = function (x, y, _Mw) {
        var _uy = _ly(_gw._Fy, _gw._Iy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true);
            _by.setFloat32(_uy + 4, y, true);
            _by.setFloat32(_uy + 8, _Mw, true)
        }
    };
    this._Jy = function (_2y, _Ox) {
        var _uy = _ly(_gw._Ky, _gw._Ly);
        if (_uy >= 0) {
            var _My = ((_Ox * 255.0) << 24) | _Px(_2y);
            _by.setUint32(_uy, _My, true)
        }
    };
    this._Ny = function (_Oy) {
        var _uy = _ly(_gw._Ky, _gw._Ly);
        if (_uy >= 0) {
            var _2v = ((_Oy & 0xff) << 24) | ((_Oy & 0xff00) << 8) | ((_Oy & 0xff0000) >> 8) | ((_Oy & 0xff000000) >> 24);
            _by.setUint32(_uy, _2v, true)
        }
    };
    this._Py = function (_Qy) {
        var _uy = _ly(_gw._Ky,
            _gw._Ly);
        if (_uy >= 0) {
            var _2v = (_Qy & 0xff000000) | ((_Qy & 0xff) << 16) | (_Qy & 0xff00) | ((_Qy & 0xff0000) >> 16);
            _by.setUint32(_uy, _2v, true)
        }
    };
    this._Ry = function (_sv, _uv) {
        var _uy = _ly(_gw._Sy, _gw._Gy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, _sv, true);
            _by.setFloat32(_uy + 4, _uv, true)
        }
    };
    this._Ty = function (x, y, _Mw) {
        var _uy = _ly(_gw._Uy, _gw._Iy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true);
            _by.setFloat32(_uy + 4, y, true);
            _by.setFloat32(_uy + 8, _Mw, true)
        }
    };
    this._Vy = function (x) {
        var _uy = _ly(-1, _gw._Wy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true)
        }
    };
    this._Xy = function (x,
                         y) {
        var _uy = _ly(-1, _gw._Gy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true);
            _by.setFloat32(_uy + 4, y, true)
        }
    };
    this._Yy = function (x, y, _Mw) {
        var _uy = _ly(-1, _gw._Iy);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true);
            _by.setFloat32(_uy + 4, y, true);
            _by.setFloat32(_uy + 8, _Mw, true)
        }
    };
    this._Zy = function (x, y, _Mw, _v5) {
        var _uy = _ly(-1, _gw.__y);
        if (_uy >= 0) {
            _by.setFloat32(_uy, x, true);
            _by.setFloat32(_uy + 4, y, true);
            _by.setFloat32(_uy + 8, _Mw, true);
            _by.setFloat32(_uy + 12, _v5, true)
        }
    };
    this._0z = function (x, y, _Mw, _v5) {
        var _uy = _ly(-1, _gw._1z);
        if (_uy >= 0) {
            _by.setUint8(_uy,
                x, true);
            _by.setUint8(_uy + 1, y, true);
            _by.setUint8(_uy + 2, _Mw, true);
            _by.setUint8(_uy + 3, _v5, true)
        }
    };
    this._2z = function () {
        var _3z = new _Hx(_hy, _ey, false);
        var _4z = _hy * _ey._wy;
        var _5z = new Int8Array(_ay, 0, _4z);
        _3z._Wx.set(_5z);
        _3z._lw += _hy;
        _3z._2z();
        _cy = _3z;
        _dy = true;
        _ay = null;
        _by = null
    };
    this._6z = function (_7z, _8z) {
        if (_dy) {
            if (_8z == -1) {
                _uu._9z(_7z, null, _cy, 0)
            } else _uu._9z(_7z, _8z._Fx._bw, _cy, 0)
        } else {
            var _ew;
            if (_8z == -1) {
                _ew = _uu._fw(_7z, null, _fy, _hy)
            } else {
                _ew = _uu._fw(_7z, _8z._Fx._bw, _fy, _hy)
            }
            var _az = _ew._lw * _ey._wy;
            var _5z = new Int8Array(_ay,
                0, _hy * _ey._wy);
            _ew._Wx.set(_5z, _az);
            _ew._lw += _hy
        }
    };
    this._bz = function (_cz) {
        _hy = _cz;
        _iy = 0;
        _jy = _cz * _ey._wy
    };
    this._dz = function () {
        return _hy
    };
    this._ez = function () {
        return _ay
    }
}

var _fz = null;

function _gz(_hz) {
    var _iz = 0, _jz = 0.5;
    var _kz = _hz;
    var _lz = [];
    var _mz = [];
    var _nz = [];
    var _oz = _iz;
    var _pz = _jz;
    Object.defineProperties(this, {
        _qz: {
            get: function () {
                return _oz
            }, set: function (_rz) {
                _oz = _rz
            }
        }, _sz: {
            get: function () {
                return _pz
            }, set: function (_rz) {
                _pz = _rz
            }
        }
    });
    this._tz = function () {
        _mz = _lz.slice();
        _nz = _kz.axes.slice();
        var _uz = _kz.buttons;
        if (_uz) {
            for (var _Nt in _uz) {
                if (!_uz.hasOwnProperty(_Nt)) continue;
                if (typeof(_uz[_Nt]) === "object") {
                    _lz[_Nt] = _uz[_Nt].value
                } else {
                    _lz[_Nt] = _uz[_Nt]
                }
            }
        }
    };
    this._vz = function () {
        if (_kz) {
            return _kz.id || ""
        }
        return ""
    };
    this._wz = function () {
        if (_lz) {
            return _lz.length
        }
        return 0
    };
    this._xz = function (_yz) {
        var _zz = _lz[_yz];
        var _Az = _mz[_yz];
        if ((_zz !== undefined) && (_Az !== undefined)) {
            return ((_zz >= _pz) && (_Az < _pz))
        }
        return false
    };
    this._Bz = function (_yz) {
        var _zz = _lz[_yz];
        var _Az = _mz[_yz];
        if ((_zz !== undefined) && (_Az !== undefined)) {
            return ((_zz < _pz) && (_Az >= _pz))
        }
        return false
    };
    this._Cz = function (_yz) {
        var _zz;
        if (typeof(_lz[_yz]) === "object") {
            _zz = _lz[_yz].value
        } else {
            _zz = _lz[_yz]
        }
        if (_zz !== undefined) {
            return (_zz >= _pz)
        }
        return false
    };
    this._Dz = function (_yz) {
        var _zz;
        if (typeof(_lz[_yz]) === "object") {
            _zz = _lz[_yz].value
        } else {
            _zz = _lz[_yz]
        }
        return _zz || 0.0
    };
    this._Ez = function () {
        if (_nz) {
            return _nz.length
        }
        return 0
    };
    this._Fz = function (_Gz, _Hz) {
        var _Iz = _nz[_Gz] || 0;
        if (_oz > 0.0) {
            var _Jz = Math.abs(_Iz);
            if (_Jz < _oz) {
                _Iz = 0.0
            } else {
                var _Vf = (_Iz >= 0) ? 1.0 : -1.0;
                _Iz = ((_Jz - _oz) / (_Hz - _oz)) * _Vf
            }
        }
        return _Iz
    }
}

function _Kz() {
    var _Lz = 1.0, _Mz = 1.0;
    var _Nz = 0, _Oz = 1, _Pz = 2;
    var _Qz = 0x8000, _Rz = 0x8001, _Sz = 0x8002, _Tz = 0x8003, _Uz = 0x8004, _Vz = 0x8005, _Wz = 0x8006, _Xz = 0x8007,
        _Yz = 0x8008, _Zz = 0x8009, __z = 0x800A, _0A = 0x800B, _1A = 0x800C, _2A = 0x800D, _3A = 0x800E, _4A = 0x800F,
        _5A = 0x8010, _6A = 0x8011, _7A = 0x8012, _8A = 0x8013, _9A = 0x8014;
    var _aA = 0, _bA = 1, _cA = 2, _dA = 3, _eA = 4, _fA = 5, _gA = 6, _hA = 7, _iA = 8, _jA = 9, _kA = 10, _lA = 11,
        _mA = 12, _nA = 13, _oA = 14, _pA = 15;
    var _qA = 0, _rA = 1, _sA = 2, _tA = 3;

    function _uA() {
        return !!navigator["getGamepads"] || !!navigator["webkitGetGamepads"] || !!navigator["webkitGamepads"]
    }

    var _vA = _uA() ? _Oz : _Nz;
    var _wA = [];

    function _xA() {
        if (navigator["getGamepads"]) {
            return navigator["getGamepads"]()
        }
        if (navigator["webkitGetGamepads"]) {
            return navigator["webkitGetGamepads"]()
        }
        if (navigator["webkitGamepads"]) {
            return navigator["webkitGamepads"]()
        }
        return null
    }

    function _yA() {
        var _t5 = 0;
        for (_t5 = 0; _t5 < _wA.length; _t5++) {
            _wA[_t5]._tz()
        }
    }

    function _zA() {
        var _AA = 0;
        var gamepads = _xA();
        if (gamepads !== null) {
            for (_AA = 0; _AA < gamepads.length; ++_AA) {
                var _BA = gamepads[_AA];
                if (!_BA) {
                    if (_wA[_AA]) {
                        _wA.splice(_AA, 1)
                    }
                } else {
                    if (!_wA[_AA]) {
                        _wA[_AA] = new _gz(_BA)
                    }
                }
            }
        }
    }

    function _CA(_yz) {
        if (_yz < _Qz) {
            return _yz
        }
        switch (_yz) {
            case _Rz:
                return _aA;
            case _Sz:
                return _bA;
            case _Tz:
                return _cA;
            case _Uz:
                return _dA;
            case _Vz:
                return _eA;
            case _Wz:
                return _fA;
            case _Xz:
                return _gA;
            case _Yz:
                return _hA;
            case _Zz:
                return _iA;
            case __z:
                return _jA;
            case _0A:
                return _kA;
            case _1A:
                return _lA;
            case _2A:
                return _mA;
            case _3A:
                return _nA;
            case _4A:
                return _oA;
            case _5A:
                return _pA
        }
        return 0
    }

    function _DA(_Gz) {
        if (_Gz < _Qz) {
            return _Gz
        }
        switch (_Gz) {
            case _6A:
                return _qA;
            case _7A:
                return _rA;
            case _8A:
                return _sA;
            case _9A:
                return _tA
        }
        return 0
    }

    function _Kz() {
    }

    this._EA = function () {
        return _wA.length
    };
    this._FA = function (_GA) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._vz()
        }
        return ""
    };
    this._IA = function () {
        return (_vA !== _Nz)
    };
    this._sz = function (_GA) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._sz
        }
        return 0.0
    };
    this._JA = function (_GA, _KA) {
        var _HA = _wA[_GA];
        if (_HA) {
            if ((_KA >= 0.0) && (_KA <= _Lz)) {
                _HA._sz = _KA
            }
        }
    };
    this._qz = function (_GA) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._qz
        }
        return 0.0
    };
    this._LA = function (_GA, _MA) {
        var _HA = _wA[_GA];
        if (_HA) {
            if ((_MA >= 0.0) && (_MA <= _Mz)) {
                _HA._qz = _MA
            }
        }
    };
    this._NA = function () {
        _wA = []
    };
    this._OA = function () {
        switch (_vA) {
            case _Oz:
                _zA();
                _yA();
                break;
            case _Pz:
                _yA();
                break;
            case _Nz:
            default :
                return
        }
    };
    this._PA = function (_GA) {
        if (_wA[_GA] !== null && _wA[_GA] !== undefined) {
            return true
        }
        return false
    };
    this._wz = function (_GA) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._wz()
        }
        return 0
    };
    this._Ez = function (_GA) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._Ez()
        }
        return 0
    };
    this._Cz = function (_GA, _yz) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._Cz(_CA(_yz), _HA._sz)
        }
        return false
    };
    this._xz = function (_GA, _yz) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._xz(_CA(_yz),
                _HA._sz);
        }
        return false
    };
    this._Bz = function (_GA, _yz) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._Bz(_CA(_yz), _HA._sz)
        }
        return false
    };
    this._Dz = function (_GA, _yz) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._Dz(_CA(_yz))
        }
        return 0
    };
    this._Fz = function (_GA, _Gz) {
        var _HA = _wA[_GA];
        if (_HA) {
            return _HA._Fz(_DA(_Gz), _Mz)
        }
        return 0
    }
};var _QA = [];
var _RA = "None";
var _SA = 0;
var _TA = 0;

function _UA() {
    this.x = 0;
    this.y = 0;
    this._Cz = 0;
    this._xz = 0;
    this._Bz = 0;
    this._VA = 0
};_UA.prototype._NA = function () {
    this._Cz = 0;
    this._xz = 0;
    this._Bz = 0;
    this._VA = 0
};
_UA.prototype._WA = function (_Ps,
                              _Qs) {
    if (_js) {
        var _XA;
        if (!_js._YA) {
            _XA = _ZA
        } else {
            _XA = _js.__A
        }
        for (_uv = 0; _uv < _XA.length; _uv++) {
            _0B = _XA[_uv];
            if (_0B._B5) {
                _1B(canvas, _2B);
                if (((_Ps - _2B.left) >= _0B._3B) && ((_Ps - _2B.left) < _0B._4B) && ((_Qs - _2B.top) >= _0B._5B) && ((_Qs - _2B.top) < _0B._6B)) {
                    this.x = _0B._7B(_Ps, _Qs);
                    this.y = _0B._8B(_Ps, _Qs);
                    return
                }
            }
        }
    }
    this.x = _Ps;
    this.y = _Qs
};

function log(_9B) {
    setTimeout(function () {
        throw new _aB(_9B)
    }, 0)
}

function _bB(_cB) {
    for (var _t5 = 0; _t5 < _QA.length; _t5++) {
        if (_QA[_t5] === _cB) {
            return _t5
        }
    }
    return -1
}

function _dB(_cB) {
    var _eB = -1;
    for (var _t5 = 0;
         _t5 < _QA.length; _t5++) {
        if ((_QA[_t5] === _cB) || (_QA[_t5] === -1)) {
            _eB = _t5;
            break
        }
    }
    if (_eB == -1) {
        _eB = _QA.length
    }
    _QA[_eB] = _cB;
    _fB[_eB] = new _UA();
    return _eB
}

var _gB = !1;

function _hB(event) {
    for (var _iB = 0; _iB < event.changedTouches.length; _iB++) {
        var _jB = event.changedTouches[_iB];
        var type = "";
        var _eB = -1;
        _RA = event.type;
        switch (event.type) {
            case "touchstart":
                _eB = _dB(_jB["identifier"]);
                break;
            case "touchend":
                if (!_gB && (_kB == _lB)) {
                    _mB();
                    _gB = true
                }
                _eB = _bB(_jB["identifier"]);
                _QA[_eB] = -1;
                break;
            case "touchcancel":
                _eB = _bB(_jB["identifier"]);
                _QA[_eB] = -1;
                break;
            case "touchmove":
                _eB = _bB(_jB["identifier"]);
                break;
            default :
                return
        }
        var _nB;
        var _oB;
        _nB = _jB.pageX;
        _oB = _jB.pageY;
        if (_eB == 0) {
            if (_pB != null) {
                _qB = _nB;
                _rB = _oB
            }
            switch (event.type) {
                case "touchstart":
                    _sB = 1;
                    break;
                case "touchmove":
                    _sB = 1;
                    break;
                case "touchcancel":
                case "touchend":
                    _sB = 0;
                    break
            }
        }
        _fB[_eB]._WA(_nB, _oB);
        _tB[_eB].x = _nB;
        _tB[_eB].y = _oB;
        switch (event.type) {
            case "touchstart":
                _fB[_eB]._Cz = 1;
                _tB[_eB]._uB = _vB | _wB | _xB;
                break;
            case "touchcancel":
            case "touchend":
                _fB[_eB]._Cz = 0;
                _tB[_eB]._uB = 0;
                break;
            case "touchmove":
            default :
                break
        }
        event.preventDefault()
    }
}

function _yB() {
    canvas.ontouchstart = _hB;
    canvas.ontouchmove = _hB;
    canvas.ontouchend = _hB;
    canvas.ontouchcancel = _hB
}

var _zB, _AB, _BB, _CB, _DB, _EB, _FB;

function _GB(_HB, _IB) {
    this._JB = [];
    this._Zx = _HB;
    this.__x = _IB;
    var _Mt = _HB * _IB;
    for (var _t5 = 0; _t5 < _Mt; _t5++) {
        this._JB[_t5] = 0
    }
}

_GB.prototype._KB = function (_LB) {
    this._Zx = _LB._Zx;
    this.__x = _LB.__x;
    this._JB = _LB._JB.slice();
};
var _MB = _NB;

function _NB(_OB, _Ps, _Qs, _qs) {
    var _PB = _QB._RB(_OB);
    if (!_PB) {
        _SB("Error: invalid ds_grid ID (ds_grid_set)");
        return
    }
    if (_Ps < 0 || _Ps >= _PB._Zx || _Qs < 0 || _Qs >= _PB.__x) {
        _SB("Error: grid out of bounds(set) - GridID: " + _OB + "  size[" + _PB._Zx + "," + _PB.__x + "]  at  (" + _Ps + "," + _Qs + ")");
        return
    }
    _PB._JB[_Ps + (_Qs * _PB._Zx)] = _qs
}

var _TB = _UB;

function _UB(_OB, _Ps, _Qs, _qs) {
    var _PB = _QB._RB(_OB);
    if (!_PB) {
        _SB("Error: invalid ds_grid ID (ds_grid_set)");
        return _qs
    }
    if (_Ps < 0 || _Ps >= _PB._Zx || _Qs < 0 || _Qs >= _PB.__x) {
        _SB("Error: grid out of bounds(set) - GridID: " + _OB + "  size[" + _PB._Zx + "," + _PB.__x + "]  at  (" + _Ps + "," + _Qs + ")");
        return _qs
    }
    _PB._JB[_Ps + (_Qs * _PB._Zx)] = _qs;
    return _qs
}

var _VB = _WB;

function _WB(_OB,
             _Ps, _Qs, _qs) {
    var _PB = _QB._RB(_OB);
    if (!_PB) {
        _SB("Error: invalid ds_grid ID (ds_grid_set)");
        return _qs
    }
    if (_Ps < 0 || _Ps >= _PB._Zx || _Qs < 0 || _Qs >= _PB.__x) {
        _SB("Error: grid out of bounds(set) - GridID: " + _OB + "  size[" + _PB._Zx + "," + _PB.__x + "]  at  (" + _Ps + "," + _Qs + ")");
        return _qs
    }
    var _XB = _PB._JB[_Ps + (_Qs * _PB._Zx)];
    _PB._JB[_Ps + (_Qs * _PB._Zx)] = _qs;
    return _XB
}

var _YB = _ZB;

function _ZB(_OB, _Ps, _Qs) {
    var _PB = _QB._RB(_OB), x = ~~_Ps, y = ~~_Qs;
    if (!_PB) {
        _SB("Error: invalid ds_grid ID (ds_grid_get)");
        return undefined
    }
    if (x < 0 || x >= _PB._Zx || y < 0 || y >= _PB.__x) {
        _SB("Error: grid out of bounds(get) - GridID: " + _OB + "  size[" + _PB._Zx + "," + _PB.__x + "]  at  (" + x + "," + y + ")");
        return undefined
    }
    return _PB._JB[x + (y * _PB._Zx)]
}

function __B() {
    var _It = new _0C();
    _It._1C = true;
    return _2C._3C(_It)
}

function _4C(_OB) {
    var _5C = _2C._RB(_OB);
    if (_5C) {
        _5C._NA();
        _2C._6C(_OB)
    }
}

function _7C(_OB) {
    var _8C = _2C._RB(_OB);
    if (_8C) return _8C.length;
    _SB("Error: invalid ds_list ID (ds_list_size)");
    return 0
}

function _9C() {
    var _aC = arguments;
    var _bC = arguments.length;
    var _8C = _2C._RB(_aC[0]);
    if (!_8C) {
        _SB("Error: invalid ds_list ID (ds_list_add)");
        return
    }
    for (var _t5 = 1; _t5 < _bC; _t5++) {
        _8C._3C(_aC[_t5])
    }
    return
}

function _cC(_OB, _dC) {
    var _uv, _eC = _fC(_dC), _8C = _2C._RB(_fC(_OB));
    if (_8C) {
        _uv = _8C._gC[_eC];
        if (typeof(_uv) === "object" && _uv.Object !== undefined) {
            return _uv.Object
        } else return _uv
    }
    _SB("Error: invalid ds_list ID (ds_list_find_value)");
    return undefined
}

var _hC = 1, _iC = 2;

function _jC(_ny, _kC) {
    this._lC = _ny;
    this.Object = _kC
}

function _Zr() {
    var _mC = {};
    var id = _nC._3C(_mC);
    return id
}

function _7s(_OB) {
    var _mC = _nC._RB(_OB);
    if (_mC) {
        _oC(_mC);
        _nC._6C(_OB)
    }
}

function _pC(_OB) {
    var _mC = _nC._RB(_OB);
    if (_mC) {
        _oC(_mC);
        var _qC = {};
        _nC._rC(_OB, _qC)
    }
}

function _oC(_sC) {
    for (var _tC in _sC) {
        var _uv = _sC[_tC];
        if (_uv != null && _uv.Object !== undefined) switch (_uv._lC) {
            case _hC:
                _7s(_uv.Object);
                break;
            case _iC:
                _4C(_uv.Object);
                break
        }
    }
}

function _uC(_OB, _vC) {
    var _mC = _nC._RB(_OB);
    if (_mC) {
        return _mC.hasOwnProperty(_vC)
    }
    return false
}

function _0s(_OB, _vC, _qs) {
    var _mC = _nC._RB(_OB);
    if (_mC) {
        if (_mC.hasOwnProperty(_vC)) {
        } else _mC[_vC] = _qs
    }
}

function _Kl(_OB, _vC) {
    var _mC = _nC._RB(_OB);
    if (_mC) {
        var _wC = _mC[_vC];
        if (typeof(_wC) === "object" && _wC.Object !== undefined) {
            return _wC.Object
        } else return _wC
    }
    return undefined
}

function _xC(_OB, _vC) {
    var _yC = false;
    var _mC = _nC._RB(_OB);
    for (var _zC in _mC) {
        if (_mC.hasOwnProperty(_zC)) {
            if (_yC) {
                return _zC
            }
            if (_zC == _vC) {
                _yC = true
            }
        }
    }
    return undefined
}

function _AC(_OB) {
    var _mC = _nC._RB(_OB);
    for (var _zC in _mC) {
        if (_mC.hasOwnProperty(_zC)) {
            return _zC
        }
    }
    return undefined
}

function _BC(_CC, _DC) {
    var _EC = 0x7ff0000000000001;
    var _Vf = (_CC >> 31) * 2 + 1;
    var _FC = (_CC >>> 20) & 0x7FF;
    _CC &= 0xFFFFF;
    if (_FC === 0x7FF) return (_CC + _DC) ? _EC : _Vf / 0;
    _FC ? (_FC -= 1023, _CC |= 0x100000) : _FC = -1022;
    var _GC = _DC + (_CC * 4294967296.0);
    return _Vf * _GC * Math.pow(2, _FC - 52);
}

var _HC = 0;
var _IC = null;

function _JC() {
    var _l5 = _IC.length;
    var _Gu = 64 - 8;
    var _DC = 0;
    var _CC = 0;
    while (_HC < _l5) {
        var _hv;
        var _u5 = _IC[_HC++];
        if (_u5 == ',' || _u5 == ':') {
            _HC--;
            break
        }
        if (_u5 >= 'A') {
            _hv = ((_u5.charCodeAt() - 65) + 10) << 4
        } else {
            _hv = ((_u5.charCodeAt() - 48) << 4)
        }
        _u5 = _IC[_HC++];
        if (_u5 >= 'A') {
            _hv |= (~~(_u5.charCodeAt() - 65)) + 10
        } else {
            _hv |= ~~(_u5.charCodeAt() - 48)
        }
        if (_Gu > 32) {
            _CC |= _hv << (_Gu - 32)
        } else {
            _DC |= _hv << (_Gu - 32)
        }
        _Gu -= 8
    }
    return _BC(_CC, _DC)
}

function _KC() {
    var _l5 = _IC.length;
    var _LC = "";
    while (_HC < _l5) {
        var _hv;
        var _u5 = _IC[_HC++];
        if (_u5 == ',' || _u5 == ':') {
            _HC--;
            break
        }
        if (_u5 >= 'A') {
            _hv = ((_u5.charCodeAt() - 65) + 10) << 4
        } else {
            _hv = ((_u5.charCodeAt() - 48) << 4)
        }
        _u5 = _IC[_HC++];
        if (_u5 >= 'A') {
            _hv |= (_u5.charCodeAt() - 65) + 10
        } else {
            _hv |= (_u5.charCodeAt() - 48)
        }
        _LC += String.fromCharCode(_hv)
    }
    return _LC
}

var _MC = !1;
var _NC = !1;
var _OC = 'Trying to stop non-existing sound.', _PC = 'Trying to draw a non-existing sprite.',
    _QC = 'Trying to draw a non-existing background.', _RC = 'Cannot compare arguments.',
    _SC = 'Trying to replace non-existing resource.',
    _TC = 'File does not exist.', _UC = 'The particle emitter must first be created.';
var _VC = -1, _WC = [], _XC = [];

function _YC(_ZC, _2y, _Ox) {
    _ZC.__C(_fC(_2y));
    _ZC._8g = _Ox
}

var _0D = _YC;

function _1D(_2y) {
    _Bh(_2y)
}

var _2D = _1D;

function _3D(_ny, _4D, _5D, _6D, _7D, _8D) {
    var type = _fC(_ny);
    var _9D = _fC(_4D);
    var _aD = _fC(_5D);
    var _bD = _fC(_6D);
    if (_VC < 0) {
        _VC = _cD()
    }
    if (_WC[type] < 0) {
        _WC[type] = _dD()
    }
    var _eD = _WC[type];
    if (_9D == 0) {
        _fD(_eD, _aD, _bD)
    } else {
        _gD(_eD, _aD, _bD)
    }
    _hD(_eD, _7D, _8D)
}

var _iD = _3D;

function _jD(_kD) {
    var _lD = _mD._nD(_kD);
    if ((_lD === null) || (_lD === undefined)) {
        return false
    }
    return true
}

function _oD(_kD) {
    var _pD = _mD._nD(_kD);
    if (!_pD) return 0;
    if (_pD._qD === undefined) return 0;
    return _pD._qD._tc
}

function _rD(_kD) {
    var _pD = _mD._nD(_kD);
    if (!_pD) return 0;
    if (_pD._qD === undefined) return 0;
    return _pD._qD._uc
}

function _sD(_Ps, _Qs, _HB, _IB, _tD, _uD) {
    var _vD = _wD(_HB, _IB);
    var _xD = _yD._RB(_vD);
    var _zD = _xD.getContext('2d');
    _zD.drawImage(canvas, -_Ps, -_Qs);
    if (_tD) {
        _AD(_zD, _HB, _IB)
    }
    var _BD = new _CD();
    var _DD = new _ED();
    _BD._qD = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _HB;
    _DD._w5 = _IB;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = _vD;
    _DD._Iu = _xD;
    return _mD._FD(_BD)
}

function _GD(_OB, _Ps, _Qs, _HB, _IB, _tD, _uD) {
    var _HD = _yD._RB(_OB);
    var _vD = _wD(_HB, _IB);
    var _xD = _yD._RB(_vD);
    var _zD = _xD.getContext('2d');
    _zD.drawImage(_HD, -_Ps, -_Qs);
    if (_tD) {
        _AD(_zD, _HB, _IB)
    }
    var _BD = new _CD();
    var _DD = new _ED();
    _BD._qD = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _HB;
    _DD._w5 = _IB;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = _vD;
    _DD._Iu = _xD;
    return _mD._FD(_BD)
}

function _ID(_HB,
             _IB, _Nx) {
    var _JD = _wD(_HB, _IB);
    var _KD = _yD._RB(_JD);
    var _zD = _KD.getContext('2d');
    _zD.globalAlpha = 1.0;
    _zD.fillStyle = _LD(_Px(_Nx), 1);
    _zD.fillRect(0, 0, _HB, _IB);
    var _BD = new _CD();
    var _DD = new _ED();
    _BD._qD = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _HB;
    _DD._w5 = _IB;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = _JD;
    _DD._Iu = _KD;
    return _mD._FD(_BD)
}

var _MD = _ID;

function _ND(_Os) {
    var _xD = _mD._nD(_Os);
    if (_xD) {
        return ({_Fx: _xD._qD._Iu, _Gx: _xD._qD})
    }
    return null
}

var _OD = [];
var _PD = 0;

function _QD(_RD,
             _SD, _xt, _yt, _zt, _At, _TD, _UD) {
    var _VD = _TD - _xt;
    var _WD = _zt - _xt;
    var _XD = _RD - _xt;
    var _YD = _UD - _yt;
    var _ZD = _At - _yt;
    var __D = _SD - _yt;
    var _0E = (_VD * _VD) + (_YD * _YD);
    var _1E = (_VD * _WD) + (_YD * _ZD);
    var _2E = (_VD * _XD) + (_YD * __D);
    var _3E = (_WD * _WD) + (_ZD * _ZD);
    var _4E = (_WD * _XD) + (_ZD * __D);
    var _5E = 1.0 / (_0E * _3E - _1E * _1E);
    var _sv = (_3E * _2E - _1E * _4E) * _5E;
    var _uv = (_0E * _4E - _1E * _2E) * _5E;
    return ((_sv >= 0.0) && (_uv >= 0.0) && (_sv + _uv < 1.0))
}

function _6E(_7E, _8E, _9E, _aE, _bE) {
    var _cE = (((_7E - _9E) * (_7E - _9E)) + ((_8E - _aE) * (_8E - _aE)));
    if (_cE <= _bE) return true;
    return false
}

function _dE() {
    _zw("d3d_start()")
}

function _eE() {
    _zw("d3d_end()")
}

function _fE(enable) {
    _zw("d3d_set_hidden()")
}

function _gE(_hE) {
    _zw("d3d_set_culling()")
}

function _iE(_P3) {
    _zw("d3d_set_shading()")
}

function _jE(_kE) {
    _zw("d3d_set_zwriteenable()")
}

function _lE(_1c) {
    _zw("d3d_set_depth()")
}

function _mE(_nE, _oE, _pE, alpha) {
    _zw("draw_set_color_write_enable()")
}

var _qE = _mE;

function _rE(enable) {
    _zw("d3d_set_shading()")
}

function _sE(_tE, _9w, _aw, _uE, _2v) {
    _zw("d3d_light_define_direction()")
}

function _vE(_tE, x, y, _Mw, _wE,
             _2v) {
    _zw("d3d_light_define_point()")
}

function _xE(_tE, enable) {
    _zw("d3d_light_enable()")
}

function _yE(_Ub) {
    _zw("d3d_light_define_ambient()")
}

function _zE(enable, color, start, end) {
    _zw("d3d_set_fog()");
}

function _AE(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE) {
    _zw("d3d_draw_floor()")
}

function _FE(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE, _GE) {
    _zw("d3d_draw_ellipsoid()")
}

function _HE(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE) {
    _zw("d3d_draw_block()")
}

function _IE(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE, _JE, _GE) {
    _zw("d3d_draw_cylinder()")
}

function _KE(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE, _JE, _GE) {
    _zw("d3d_draw_cone()")
}

function _LE(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE) {
    _zw("d3d_draw_wall()")
}

function _ME() {
    _zw("d3d_model_create()");
}

function _NE(_tE) {
    _zw("d3d_model_destroy()")
}

function _OE(_tE) {
    _zw("d3d_model_clear()")
}

function _PE(_tE, _QE) {
    _zw("d3d_model_save()")
}

function _RE(_tE, _QE) {
    _zw("d3d_model_load()")
}

function _SE(_tE, _QE) {
    _zw("d3d_model_save_buffer()")
}

function _TE(_tE, _QE) {
    _zw("d3d_model_load_buffer()")
}

function _UE(_tE, x, y, _Mw, _Bw) {
    _zw("d3d_model_draw()")
}

function _VE(_tE, _G3) {
    _zw("d3d_model_primitive_begin()")
}

function _WE(_tE, x, y, _Mw) {
    _zw("d3d_model_vertex()")
}

function _XE(_tE, x, y, _Mw, _2v, alpha) {
    _zw("d3d_model_vertex_color()");
}

function _YE(_tE, x, y, _Mw, _Fw, _Gw) {
    _zw("d3d_model_vertex_texture()")
}

function _ZE(_tE, x, y, _Mw, _Fw, _Gw, _2v, alpha) {
    _zw("d3d_model_vertex_texture_color()")
}

function __E(_tE, x, y, _Mw, _Tw, _Uw, _Vw) {
    _zw("d3d_model_vertex_normal()")
}

function _0F(_tE, x, y, _Mw, _Tw, _Uw, _Vw, _2v, alpha) {
    _zw("d3d_model_vertex_normal_color()")
}

function _1F(_tE, x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw) {
    _zw("d3d_model_vertex_normal_texture()")
}

function _2F(_tE, x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw, _2v, alpha) {
    _zw("d3d_model_vertex_normal_texture_color()");
}

function _3F(_tE) {
    _zw("d3d_model_primitive_end()")
}

function _4F(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    _zw("d3d_model_block()")
}

function _5F(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE) {
    _zw("d3d_model_cylinder()")
}

function _6F(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE) {
    _zw("d3d_model_cone()")
}

function _7F(_tE, _xt, _yt,
             _BE, _zt, _At, _CE, _DE, _EE, _GE) {
    _zw("d3d_model_ellipsoid()")
}

function _8F(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    _zw("d3d_model_wall()")
}

function _9F(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    _zw("d3d_model_floor()")
}

function _aF(enable) {
    _zw("d3d_set_perspective()")
}

function _bF(_cF, _dF, _eF, _fF, _gF, _hF, _iF, _jF, _kF) {
    _zw("d3d_set_projection()")
}

function _lF(_cF, _dF, _eF, _fF, _gF, _hF, _iF, _jF, _kF, angle, _mF, _nF, _oF) {
    _zw("d3d_set_projection_ext()")
}

function _pF(x, y, _v5, _w5, angle) {
    _zw("d3d_set_projection_ortho()")
}

function _qF(x,
             y, _v5, _w5, angle) {
    _zw("d3d_set_projection_perspective()")
}

function _rF() {
    _zw("d3d_transform_set_identity()")
}

function _sF(_tF, _uF, _vF) {
    _zw("d3d_transform_set_translation()");
}

function _wF(_0v, _1v, _xF) {
    _zw("d3d_transform_set_scaling()")
}

function _yF(angle) {
    _zw("d3d_transform_set_rotation_x()")
}

function _zF(angle) {
    _zw("d3d_transform_set_rotation_y()")
}

function _AF(angle) {
    _zw("d3d_transform_set_rotation_z()")
}

function _BF(_CF, _DF, _EF, angle) {
    _zw("d3d_transform_set_rotation_axis()")
}

function _FF(_tF, _uF, _vF) {
    _zw("d3d_transform_add_translation()")
}

function _GF(_0v, _1v, _xF) {
    _zw("d3d_transform_add_scaling()")
}

function _HF(angle) {
    _zw("d3d_transform_add_rotation_x()")
}

function _IF(angle) {
    _zw("d3d_transform_add_rotation_y()")
}

function _JF(angle) {
    _zw("d3d_transform_add_rotation_axis()")
}

function _KF(_CF, _DF, _EF, angle) {
    _zw("d3d_transform_add_rotation_z()")
}

function _LF(_Ps, _Qs, _0y) {
    _zw("d3d_transform_vertex()")
}

function _MF(_ny) {
    _zw("matrix_get()")
}

function _NF(_ny, _OF) {
    _zw("matrix_set()")
}

var _PF = _QF;
var _RF = _SF;
var _TF = _UF;
var _VF = _WF;
var _XF = _YF;
var _ZF = __F;
var _0G = _1G;
var _2G = _3G;
var _4G = _5G;
var _6G = _7G;
var _8G = _9G;
var _aG = _bG;
var _cG = _dG;
var _eG = _fG;

function _gG() {
    _zw("d3d_transform_stack_clear()")
}

function _hG() {
    _zw("d3d_transform_stack_empty()")
}

function _iG() {
    _zw("d3d_transform_stack_push()")
}

function _jG() {
    _zw("d3d_transform_stack_pop()")
}

function _kG() {
    _zw("d3d_transform_stack_top()")
}

function _lG() {
    _zw("d3d_transform_stack_discard()");
}

function _mG(enable) {
    _zw("gpu_set_blendenable()")
}

function _nG(enable) {
    _zw("gpu_set_ztestenable()")
}

function _oG(_pG) {
    _zw("gpu_set_zfunc()")
}

function _qG(enable) {
    _zw("gpu_set_zwriteenable()")
}

function _Gk(enable, _2v, start, end) {
    _zw("gpu_set_fog()")
}

function _rG(_sG) {
    _zw("gpu_set_cullmode()")
}

function _tG(_uG) {
    _zw("gpu_set_blendmode()")
}

function _vG(src, _wG) {
    _zw("gpu_set_blendmode_ext()");
}

function _xG(src, _wG, _yG, _zG) {
    _zw("gpu_set_blendmode_ext_sepalpha()")
}

function _AG(_nE, _oE, _pE, alpha) {
    _zw("gpu_set_colorwriteenable()")
}

function _BG(_nE, _oE, _pE, alpha) {
    _zw("gpu_set_colourwriteenable()")
}

function _CG(enable) {
    _zw("gpu_set_alphatestenable()")
}

function _DG(value) {
    _zw("gpu_set_alphatestref()")
}

function _EG(_pG) {
    _zw("gpu_set_alphatestfunc()")
}

function _FG(_GG) {
    _zw("gpu_set_texfilter()")
}

function _HG(_IG, _GG) {
    _zw("gpu_set_texfilter_ext()")
}

function _JG(repeat) {
    _zw("gpu_set_texrepeat()")
}

function _KG(_IG, repeat) {
    _zw("gpu_set_texrepeat_ext()")
}

function _LG(_GG) {
    _zw("gpu_set_tex_filter()")
}

function _MG(_IG, _GG) {
    _zw("gpu_set_tex_filter_ext()")
}

function _NG(repeat) {
    _zw("gpu_set_tex_repeat()")
}

function _OG(_IG, repeat) {
    _zw("gpu_set_tex_repeat_ext()");
}

function _PG(_QG) {
    _zw("gpu_set_tex_mip_filter(filter)")
}

function _RG(_IG, _QG) {
    _zw("gpu_set_tex_mip_filter_ext(sampler_id, filter)")
}

function _SG(_TG) {
    _zw("gpu_set_tex_mip_bias(bias)")
}

function _UG(_IG, _TG) {
    _zw("gpu_set_tex_mip_bias_ext(sampler_id, bias)")
}

function _VG(_WG) {
    _zw("gpu_set_tex_min_mip(minmip)")
}

function _XG(_IG, _WG) {
    _zw("gpu_set_tex_min_mip_ext(sampler_id, minmip)")
}

function _YG(_ZG) {
    _zw("gpu_set_tex_max_mip(maxmip)")
}

function __G(_IG, _ZG) {
    _zw("gpu_set_tex_max_mip_ext(sampler_id, maxmip)")
}

function _0H(_1H) {
    _zw("gpu_set_tex_max_aniso(maxaniso)")
}

function _2H(_IG, _1H) {
    _zw("gpu_set_tex_max_aniso_ext(sampler_id, maxaniso)")
}

function _3H(_4H) {
    _zw("gpu_set_tex_mip_enable(setting)")
}

function _5H(_IG, _4H) {
    _zw("gpu_set_tex_mip_enable_ext(sampler_id, setting)")
}

function _6H() {
    _zw("gpu_get_blendenable()")
}

function _7H() {
    _zw("gpu_get_ztestenable()")
}

function _8H() {
    _zw("gpu_get_zfunc()")
}

function _9H() {
    _zw("gpu_get_zwriteenable()")
}

function _aH() {
    _zw("gpu_get_fog()")
}

function _bH() {
    _zw("gpu_get_cullmode()")
}

function _cH() {
    _zw("gpu_get_blendmode()")
}

function _dH() {
    _zw("gpu_get_blendmode_ext()")
}

function _eH() {
    _zw("gpu_get_blendmode_ext_sepalpha()")
}

function _fH() {
    _zw("gpu_get_blendmode_src()")
}

function _gH() {
    _zw("gpu_get_blendmode_dest()")
}

function _hH() {
    _zw("gpu_get_blendmode_srcalpha()")
}

function _iH() {
    _zw("gpu_get_blendmode_destalpha()")
}

function _jH() {
    _zw("gpu_get_colorwriteenable()")
}

function _kH() {
    _zw("gpu_get_colourwriteenable()")
}

function _lH() {
    _zw("gpu_get_alphatestenable()")
}

function _mH() {
    _zw("gpu_get_alphatestref()")
}

function _nH() {
    _zw("gpu_get_alphatestfunc()")
}

function _oH() {
    _zw("gpu_get_texfilter()")
}

function _pH(_IG) {
    _zw("gpu_get_texfilter_ext()")
}

function _qH() {
    _zw("gpu_get_texrepeat()")
}

function _rH(_IG) {
    _zw("gpu_get_texrepeat_ext()")
}

function _sH() {
    _zw("gpu_get_tex_filter()")
}

function _tH(_IG) {
    _zw("gpu_get_tex_filter_ext()")
}

function _uH() {
    _zw("gpu_get_tex_repeat()");
}

function _vH(_IG) {
    _zw("gpu_get_tex_repeat_ext()")
}

function _wH() {
    _zw("gpu_get_tex_mip_filter()")
}

function _xH(_IG) {
    _zw("gpu_get_tex_mip_filter_ext(sampler_id)")
}

function _yH() {
    _zw("gpu_get_tex_mip_bias()")
}

function _zH(_IG) {
    _zw("gpu_get_tex_mip_bias_ext(sampler_id)")
}

function _AH() {
    _zw("gpu_get_tex_min_mip()")
}

function _BH(_IG) {
    _zw("gpu_get_tex_min_mip_ext(sampler_id)");
}

function _CH() {
    _zw("gpu_get_tex_max_mip()")
}

function _DH(_IG) {
    _zw("gpu_get_tex_max_mip_ext(sampler_id)")
}

function _EH() {
    _zw("gpu_get_tex_max_aniso()")
}

function _FH(_IG) {
    _zw("gpu_get_tex_max_aniso_ext(sampler_id)")
}

function _GH() {
    _zw("gpu_get_tex_mip_enable()")
}

function _HH(_IG) {
    _zw("gpu_get_tex_mip_enable_ext(sampler_id)")
}

function _IH() {
    _zw("gpu_push_state()")
}

function _JH() {
    _zw("gpu_pop_state()")
}

function _KH() {
    _zw("gpu_get_state()")
}

function _LH(map) {
    _zw("gpu_set_state()")
}

var _MH = [];
var _NH = 50;
var _OH = 0;
var _PH = new Array(_NH + 1);

function _QH() {
    if (!_uu) {
        return
    }
    _dE = _RH;
    _eE = _SH;
    _gE = _TH;
    _iE = _UH;
    _jE = _VH;
    _lE = _WH;
    _fE = _XH;
    _mE = _YH;
    _qE = _YH;
    _aF = _ZH;
    _bF = __H;
    _lF = _0I;
    _pF = _1I;
    _qF = _2I;
    _rF = _3I;
    _sF = _4I;
    _wF = _5I;
    _yF = _6I;
    _zF = _7I;
    _AF = _8I;
    _BF = _9I;
    _FF = _aI;
    _GF = _bI;
    _HF = _cI;
    _IF = _dI;
    _JF = _eI;
    _KF = _fI;
    _LF = _gI;
    _gG = _hI;
    _hG = _iI;
    _iG = _jI;
    _jG = _kI;
    _kG = _lI;
    _lG = _mI;
    _AE = _nI;
    _FE = _oI;
    _HE = _pI;
    _IE = _qI;
    _KE = _rI;
    _LE = _sI;
    _rE = _tI;
    _sE = _uI;
    _vE = _vI;
    _xE = _wI;
    _yE = _xI;
    _zE = _yI;
    _ME = _zI;
    _NE = _AI;
    _OE = _BI;
    _PE = _CI;
    _RE = _DI;
    _SE = _EI;
    _TE = _FI;
    _UE = _GI;
    _VE = _HI;
    _WE = _II;
    _XE = _JI;
    _KI = _JI;
    _YE = _LI;
    _ZE = _MI;
    _NI = _MI;
    __E = _OI;
    _0F = _PI;
    _1F = _QI;
    _2F = _RI;
    _3F = _SI;
    _4F = _TI;
    _5F = _UI;
    _6F = _VI;
    _7F = _WI;
    _8F = _XI;
    _9F = _YI;
    _MF = _ZI;
    _NF = __I;
    _PF = _QF;
    _RF = _SF;
    _TF = _UF;
    _VF = _WF;
    _XF = _YF;
    _ZF = __F;
    _0G = _1G;
    _2G = _3G;
    _4G = _5G;
    _tG = _0J;
    _mG = _1J;
    _nG = _2J;
    _oG = _3J;
    _qG = _4J;
    _Gk = _5J;
    _rG = _6J;
    _tG = _0J;
    _vG = _7J;
    _xG = _8J;
    _AG = _9J;
    _BG = _aJ;
    _CG = _bJ;
    _DG = _cJ;
    _EG = _dJ;
    _FG = _eJ;
    _HG = _fJ;
    _JG = _gJ;
    _KG = _hJ;
    _LG = _eJ;
    _MG = _fJ;
    _NG = _gJ;
    _OG = _hJ;
    _PG = _iJ;
    _RG = _iJ;
    _SG = _iJ;
    _UG = _iJ;
    _VG = _iJ;
    _XG = _iJ;
    _YG = _iJ;
    __G = _iJ;
    _0H = _iJ;
    _2H = _iJ;
    _3H = _iJ;
    _5H = _iJ;
    _6H = _jJ;
    _7H = _kJ;
    _8H = _lJ;
    _9H = _mJ;
    _aH = _nJ;
    _bH = _oJ;
    _cH = _pJ;
    _dH = _qJ;
    _eH = _rJ;
    _fH = _sJ;
    _gH = _tJ;
    _hH = _uJ;
    _iH = _vJ;
    _jH = _wJ;
    _kH = _xJ;
    _lH = _yJ;
    _mH = _zJ;
    _nH = _AJ;
    _oH = _BJ;
    _pH = _CJ;
    _qH = _DJ;
    _rH = _EJ;
    _sH = _BJ;
    _tH = _CJ;
    _uH = _DJ;
    _vH = _EJ;
    _wH = _iJ;
    _xH = _iJ;
    _yH = _iJ;
    _zH = _iJ;
    _AH = _iJ;
    _BH = _iJ;
    _CH = _iJ;
    _DH = _iJ;
    _EH = _iJ;
    _FH = _iJ;
    _GH = _iJ;
    _HH = _iJ;
    _IH = _FJ;
    _JH = _GJ;
    _KH = _HJ;
    _LH = _IJ;
    _PH[0] = new _JJ()
}

function _RH() {
    _KJ = true;
    _uu._LJ(_MJ);
    _uu._NJ(_OJ);
    _uu._PJ(_QJ);
}

function _SH() {
    _KJ = false;
    _uu._LJ(false);
    _uu._NJ(false);
    _uu._PJ(false)
}

function _TH(_RJ) {
    _QJ = _RJ > 0.5;
    _uu._PJ(_QJ)
}

function _UH(_uD) {
}

function _VH(_SJ) {
    _OJ = (_SJ > 0.5);
    _uu._NJ(_OJ)
}

function _WH(_TJ) {
    if (_KJ || _ls) {
        _yw = Math.min(16000.0, Math.max(-16000.0, _TJ))
    } else {
        _yw = 0.0
    }
}

function _XH(_UJ) {
    _MJ = (_UJ > 0.5);
    _uu._LJ(_MJ)
}

function _YH(_nE, _oE, _pE, alpha) {
    _VJ._nE = (_nE >= 0.5);
    _VJ._oE = (_oE >= 0.5);
    _VJ._pE = (_pE >= 0.5);
    _VJ.alpha = (alpha >= 0.5);
    _uu._WJ(_VJ._nE,
        _VJ._oE, _VJ._pE, _VJ.alpha)
}

function _ZH(_XJ) {
    _YJ = _XJ
}

function _tI(_XJ) {
    if (_ZJ != _XJ) {
        _ZJ = _XJ;
        _uu.__J(_0K())
    }
}

function __H(_cF, _dF, _eF, _fF, _gF, _hF, _iF, _jF, _kF) {
    var _1K = new _JJ();
    var _eC = new _2K(_cF, _dF, _eF);
    var _3K = new _2K(_fF, _gF, _hF);
    var _4K = new _2K(_iF, _jF, _kF);
    _1K._5K(_eC, _3K, _4K);
    _uu._6K(_1K)
}

function _0I(_cF, _dF, _eF, _fF, _gF, _hF, _iF, _jF, _kF, angle, _mF, _7K, _8K) {
    var _1K = new _JJ();
    var _eC = new _2K(_cF, _dF, _eF);
    var _3K = new _2K(_fF, _gF, _hF);
    var _4K = new _2K(_iF, _jF, _kF);
    _1K._5K(_eC, _3K, _4K);
    var _9K = new _JJ();
    _9K._aK(angle,
        _mF, _7K, _8K);
    _9K._wt[_bK] *= _cK;
    _uu._6K(_1K);
    _uu._dK(_9K)
}

function _1I(x, y, _v5, _w5, angle) {
    var _1K = new _JJ();
    var _tw = new _2K(x + (_v5 / 2.0), y + (_w5 / 2.0), -_v5);
    var _uw = new _2K(x + (_v5 / 2.0), y + (_w5 / 2.0), 0.0);
    var _vw = new _2K(Math.sin(-angle * (Math.PI / 180.0)), Math.cos(-angle * (Math.PI / 180.0)), 0.0);
    _1K._5K(_tw, _uw, _vw);
    var _eK = new _JJ();
    _eK._fK(_v5, -_w5 * _cK, 1.0, 32000.0);
    _uu._6K(_1K);
    _uu._dK(_eK)
}

function _2I(x, y, _v5, _w5, angle) {
    var _1K = new _JJ();
    var _tw = new _2K(x + (_v5 / 2.0), y + (_w5 / 2.0), -_v5);
    var _uw = new _2K(x + (_v5 / 2.0), y + (_w5 / 2.0),
        0.0);
    var _vw = new _2K(Math.sin(-angle * (Math.PI / 180.0)), Math.cos(-angle * (Math.PI / 180.0)), 0.0);
    _1K._5K(_tw, _uw, _vw);
    var _9K = new _JJ();
    _9K._gK(1.0, (_w5 / _v5), 1.0, 32000.0);
    _9K._wt[_bK] *= _cK;
    _uu._6K(_1K);
    _uu._dK(_9K)
}

function _nI(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _DE, _EE) {
    var _hK = _iK();
    _jK(true);
    _Kw(_bx, _Bw);
    {
        _Yw(_xt, _yt, _BE, 0, 0, 1, 0, 0);
        _Yw(_xt, _At, _BE, 0, 0, 1, 0, _EE);
        _Yw(_zt, _At, _CE, 0, 0, 1, _DE, _EE);
        _Yw(_zt, _yt, _CE, 0, 0, 1, _DE, 0)
    }
    _0x();
    _jK(_hK)
}

function _oI(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _kK, _lK, _GE) {
    var _hK = _iK();
    _jK(true);
    if (_GE < 3) {
        _GE = 3
    }
    if (_GE > 128) {
        _GE = 128
    }
    var _cu = [];
    var _bu = [];
    for (var _t5 = 0; _t5 <= _GE; _t5++) {
        _cu[_t5] = Math.cos(_t5 * 2.0 * Math.PI / _GE);
        _bu[_t5] = Math.sin(_t5 * 2.0 * Math.PI / _GE)
    }
    var _7u = (_zt + _xt) / 2, _8u = (_At + _yt) / 2, _mK = (_CE + _BE) / 2, _nK = (_zt - _xt) / 2,
        _oK = (_At - _yt) / 2, _pK = (_CE - _BE) / 2;
    var _qK = (_GE + 1) / 2;
    for (var _Rt = 0; _Rt < _qK; _Rt++) {
        var _rK = Math.cos(_Rt * Math.PI / _qK), _sK = Math.sin(_Rt * Math.PI / _qK),
            _tK = Math.cos((_Rt + 1) * Math.PI / _qK), _uK = Math.sin((_Rt + 1) * Math.PI / _qK);
        _Kw(_ax, _Bw);
        for (var _t5 = 0; _t5 <= _GE; _t5++) {
            _Yw(_7u + _nK * _sK * _cu[_t5], _8u + _oK * _sK * _bu[_t5],
                _mK + _pK * _rK, _sK * _cu[_t5], _sK * _bu[_t5], _rK, _kK * _t5 / _GE, _Rt * _lK / _qK);
            _Yw(_7u + _nK * _uK * _cu[_t5], _8u + _oK * _uK * _bu[_t5], _mK + _pK * _tK, _uK * _cu[_t5], _uK * _bu[_t5], _tK, _kK * _t5 / _GE, (_Rt + 1) * _lK / _qK)
        }
        _0x()
    }
    _jK(_hK)
}

function _pI(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _kK, _lK) {
    var _hK = _iK();
    _jK(true);
    _Kw(_9x, _Bw);
    {
        _Yw(_xt, _yt, _BE, 0, 0, -1, 0, 0);
        _Yw(_xt, _At, _BE, 0, 0, -1, 0, _lK);
        _Yw(_zt, _At, _BE, 0, 0, -1, _kK, _lK);
        _Yw(_zt, _At, _BE, 0, 0, -1, _kK, _lK);
        _Yw(_zt, _yt, _BE, 0, 0, -1, _kK, 0);
        _Yw(_xt, _yt, _BE, 0, 0, -1, 0, 0)
    }
    {
        _Yw(_xt, _yt, _CE, 0, 0, 1, 0, 0);
        _Yw(_zt,
            _yt, _CE, 0, 0, 1, _kK, 0);
        _Yw(_zt, _At, _CE, 0, 0, 1, _kK, _lK);
        _Yw(_zt, _At, _CE, 0, 0, 1, _kK, _lK);
        _Yw(_xt, _At, _CE, 0, 0, 1, 0, _lK);
        _Yw(_xt, _yt, _CE, 0, 0, 1, 0, 0)
    }
    {
        _Yw(_xt, _At, _BE, 0, 1, 0, 0, 0);
        _Yw(_xt, _At, _CE, 0, 1, 0, 0, _lK);
        _Yw(_zt, _At, _CE, 0, 1, 0, _kK, _lK);
        _Yw(_zt, _At, _CE, 0, 1, 0, _kK, _lK);
        _Yw(_zt, _At, _BE, 0, 1, 0, _kK, 0);
        _Yw(_xt, _At, _BE, 0, 1, 0, 0, 0)
    }
    {
        _Yw(_zt, _At, _BE, 1, 0, 0, 0, 0);
        _Yw(_zt, _At, _CE, 1, 0, 0, 0, _lK);
        _Yw(_zt, _yt, _CE, 1, 0, 0, _kK, _lK);
        _Yw(_zt, _yt, _CE, 1, 0, 0, _kK, _lK);
        _Yw(_zt, _yt, _BE, 1, 0, 0, _kK, 0);
        _Yw(_zt, _At, _BE, 1, 0, 0, 0, 0)
    }
    {
        _Yw(_zt, _yt,
            _BE, 0, -1, 0, 0, 0);
        _Yw(_zt, _yt, _CE, 0, -1, 0, 0, _lK);
        _Yw(_xt, _yt, _CE, 0, -1, 0, _kK, _lK);
        _Yw(_xt, _yt, _CE, 0, -1, 0, _kK, _lK);
        _Yw(_xt, _yt, _BE, 0, -1, 0, _kK, 0);
        _Yw(_zt, _yt, _BE, 0, -1, 0, 0, 0)
    }
    {
        _Yw(_xt, _yt, _BE, -1, 0, 0, 0, 0);
        _Yw(_xt, _yt, _CE, -1, 0, 0, 0, _lK);
        _Yw(_xt, _At, _CE, -1, 0, 0, _kK, _lK);
        _Yw(_xt, _At, _CE, -1, 0, 0, _kK, _lK);
        _Yw(_xt, _At, _BE, -1, 0, 0, _kK, 0);
        _Yw(_xt, _yt, _BE, -1, 0, 0, 0, 0)
    }
    _0x();
    _jK(_hK)
}

function _qI(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _kK, _lK, _JE, _GE) {
    var _cu = [];
    var _bu = [];
    var _hK = _iK();
    _jK(true);
    if (_GE < 3) {
        _GE = 3
    }
    if (_GE > 128) {
        _GE = 128
    }
    for (var _t5 = 0; _t5 <= _GE; _t5++) {
        _cu[_t5] = Math.cos(_t5 * 2.0 * Math.PI / _GE);
        _bu[_t5] = Math.sin(_t5 * 2.0 * Math.PI / _GE)
    }
    var _7u = (_zt + _xt) / 2.0;
    var _8u = (_At + _yt) / 2.0;
    var _nK = (_zt - _xt) / 2.0;
    var _oK = (_At - _yt) / 2.0;
    if (true == _JE) {
        _Kw(_bx, _Bw);
        _Yw(_7u, _8u, _CE, 0, 0, 1, 0, _lK);
        for (var _t5 = 0; _t5 <= _GE; _t5++) {
            _Yw(_7u + _cu[_t5] * _nK, _8u + _bu[_t5] * _oK, _CE, 0, 0, 1, 0, _lK)
        }
        _0x()
    }
    _Kw(_ax, _Bw);
    for (var _t5 = 0; _t5 <= _GE; _t5++) {
        _Yw(_7u + _cu[_t5] * _nK, _8u + _bu[_t5] * _oK, _CE, _cu[_t5], _bu[_t5], 0, _kK * _t5 / _GE, _lK);
        _Yw(_7u + _cu[_t5] * _nK, _8u + _bu[_t5] * _oK, _BE,
            _cu[_t5], _bu[_t5], 0, _kK * _t5 / _GE, 0)
    }
    _0x();
    if (true == _JE) {
        _Kw(_bx, _Bw);
        _Yw(_7u, _8u, _BE, 0, 0, -1, 0, 0);
        for (var _t5 = _GE; _t5 >= 0; _t5--) {
            _Yw(_7u + _cu[_t5] * _nK, _8u + _bu[_t5] * _oK, _BE, 0, 0, -1, 0, 0)
        }
        _0x();
    }
    _jK(_hK)
}

function _rI(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _kK, _lK, _JE, _GE) {
    var _cu = [];
    var _bu = [];
    var _hK = _iK();
    _jK(true);
    if (_GE < 3) {
        _GE = 3
    }
    if (_GE > 128) {
        _GE = 128
    }
    for (var _t5 = 0; _t5 <= _GE; _t5++) {
        _cu[_t5] = Math.cos(_t5 * 2.0 * Math.PI / _GE);
        _bu[_t5] = Math.sin(_t5 * 2.0 * Math.PI / _GE)
    }
    var _7u = (_zt + _xt) / 2.0;
    var _8u = (_At + _yt) / 2.0;
    var _nK = (_zt - _xt) / 2.0;
    var _oK = (_At - _yt) / 2.0;
    _Kw(_ax, _Bw);
    for (var _t5 = 0; _t5 <= _GE; _t5++) {
        _Yw(_7u, _8u, _CE, 0, 0, 1, _kK * _t5 / _GE, _lK);
        _Yw(_7u + _cu[_t5] * _nK, _8u + _bu[_t5] * _oK, _BE, _cu[_t5], _bu[_t5], 0, _kK * _t5 / _GE, 0)
    }
    _0x();
    if (true == _JE) {
        _Kw(_bx, _Bw);
        _Yw(_7u, _8u, _BE, 0, 0, -1, 0, 0);
        for (var _t5 = _GE; _t5 >= 0; _t5--) {
            _Yw(_7u + _cu[_t5] * _nK, _8u + _bu[_t5] * _oK, _BE, 0, 0, -1, 0, 0)
        }
        _0x()
    }
    _jK(_hK)
}

function _sI(_xt, _yt, _BE, _zt, _At, _CE, _Bw, _kK, _lK) {
    var _hK = _iK();
    _jK(true);
    var _It = Math.sqrt(_vK(_zt - _xt) + _vK(_At - _yt));
    if (_It == 0.0) {
        return
    }
    var _Tw = (_At - _yt) / _It;
    var _Uw = -(_zt - _xt) / _It;
    _Kw(_bx, _Bw);
    {
        _Yw(_xt, _yt, _BE, _Tw, _Uw, 0, 0, 0);
        _Yw(_zt, _At, _BE, _Tw, _Uw, 0, _kK, 0);
        _Yw(_zt, _At, _CE, _Tw, _Uw, 0, _kK, _lK);
        _Yw(_xt, _yt, _CE, _Tw, _Uw, 0, 0, _lK)
    }
    _0x();
    _jK(_hK)
}

function _uI(_tE, _9w, _aw, _uE, _2v) {
    var _wK = new _2K(_9w, _aw, _uE);
    _wK._xK();
    var _yK = _tE * 4;
    _zK[_yK + 0] = _wK._AK;
    _zK[_yK + 1] = _wK._BK;
    _zK[_yK + 2] = _wK._CK;
    _zK[_yK + 3] = 0.0;
    _DK[_yK + 0] = (_2v & 0xff) / 255.0;
    _DK[_yK + 1] = ((_2v >> 8) & 0xff) / 255.0;
    _DK[_yK + 2] = ((_2v >> 16) & 0xff) / 255.0;
    _DK[_yK + 3] = ((_2v >> 24) & 0xff) / 255.0;
    _EK[_yK + 0] = 0;
    _EK[_yK + 1] = 0;
    _EK[_yK + 2] = 0;
    _EK[_yK + 3] = 0;
    _uu._FK(_tE,
        _EK.subarray(_tE * 4, (_tE + 1) * 4), _zK.subarray(_tE * 4, (_tE + 1) * 4), _DK.subarray(_tE * 4, (_tE + 1) * 4))
}

function _vI(_tE, x, y, _Mw, _wE, _2v) {
    var _yK = _tE * 4;
    _EK[_yK + 0] = x;
    _EK[_yK + 1] = y;
    _EK[_yK + 2] = _Mw;
    _EK[_yK + 3] = _wE;
    _DK[_yK + 0] = (_2v & 0xff) / 255.0;
    _DK[_yK + 1] = ((_2v >> 8) & 0xff) / 255.0;
    _DK[_yK + 2] = ((_2v >> 16) & 0xff) / 255.0;
    _DK[_yK + 3] = ((_2v >> 24) & 0xff) / 255.0;
    _zK[_yK + 0] = 0;
    _zK[_yK + 1] = 0;
    _zK[_yK + 2] = 0;
    _zK[_yK + 3] = 0;
    _uu._FK(_tE, _EK.subarray(_tE * 4, (_tE + 1) * 4), _zK.subarray(_tE * 4, (_tE + 1) * 4), _DK.subarray(_tE * 4, (_tE + 1) * 4))
}

function _wI(_tE, enable) {
    _GK[_tE] = enable;
    _uu._HK(_tE, enable, _DK.subarray(_tE * 4, (_tE + 1) * 4))
}

function _xI(_Ub) {
    _IK[0] = (_Ub & 0xff) / 255.0;
    _IK[1] = ((_Ub >> 8) & 0xff) / 255.0;
    _IK[2] = ((_Ub >> 16) & 0xff) / 255.0;
    _IK[3] = ((_Ub >> 24) & 0xff) / 255.0;
    _uu._JK(_IK)
}

function _yI(enable, _Ub, start, end) {
    if (_KK == null) {
        _KK = new Float32Array(8)
    }
    _KK[0] = enable;
    var _wE = end - start;
    _KK[1] = (_wE == 0.0) ? 0.0 : (1.0 / _wE);
    _KK[2] = end;
    _KK[3] = 0.0;
    _KK[4] = (_Ub & 0xff) / 255.0;
    _KK[5] = ((_Ub >> 8) & 0xff) / 255.0;
    _KK[6] = ((_Ub >> 16) & 0xff) / 255.0;
    _KK[7] = ((_Ub >> 24) & 0xff) / 255.0;
    _uu._LK(_KK)
}

function _zI() {
    return (_MH.push(new _MK()) - 1)
}

function _AI(_tE) {
    if (_MH[_tE]) {
        _MH[_tE]._NA();
        _MH[_tE] = null
    }
}

function _BI(_tE) {
    if (_MH[_tE]) {
        _MH[_tE]._NA()
    }
}

function _CI(_tE, _QE) {
    if (_MH[_tE]) {
        _MH[_tE]._NK(_QE);
    }
}

function _EI(_tE, _OK) {
}

function _DI(_tE, _QE) {
    if (_MH[_tE]) {
        _MH[_tE]._Ku(_QE)
    }
}

function _FI(_tE, _OK) {
}

function _GI(_tE, x, y, _Mw, _Bw) {
    if (_MH[_tE]) {
        _MH[_tE]._7v(x, y, _Mw, _Bw)
    }
}

function _HI(_tE, _G3) {
    if (_MH[_tE]) {
        _MH[_tE]._By(_G3)
    }
}

function _II(_tE, x, y, _Mw) {
    if (_MH[_tE]) {
        _MH[_tE]._PK(x, y, _Mw)
    }
}

function _JI(_tE, x, y, _Mw, _2v, alpha) {
    if (_MH[_tE]) {
        _MH[_tE]._QK(x, y, _Mw, _2v, alpha)
    }
}

function _LI(_tE, x, y, _Mw, _Fw, _Gw) {
    if (_MH[_tE]) {
        _MH[_tE]._RK(x, y, _Mw, _Fw, _Gw)
    }
}

function _MI(_tE, x, y, _Mw, _Fw, _Gw, _2v, alpha) {
    if (_MH[_tE]) {
        _MH[_tE]._SK(x, y, _Mw, _Fw, _Gw, _2v, alpha)
    }
}

function _OI(_tE, x, y, _Mw, _Tw, _Uw, _Vw) {
    if (_MH[_tE]) {
        _MH[_tE]._TK(x, y, _Mw, _Tw, _Uw, _Vw)
    }
}

function _PI(_tE, x, y, _Mw, _Tw, _Uw, _Vw, _2v, alpha) {
    if (_MH[_tE]) {
        _MH[_tE]._UK(x, y, _Mw, _Tw, _Uw, _Vw, _2v, alpha)
    }
}

function _QI(_tE, x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw) {
    if (_MH[_tE]) {
        _MH[_tE]._VK(x, y, _Mw, _Tw, _Uw, _Vw,
            _Fw, _Gw)
    }
}

function _RI(_tE, x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw, _2v, alpha) {
    if (_MH[_tE]) {
        _MH[_tE]._WK(x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw, _2v, alpha)
    }
}

function _SI(_tE) {
    if (_MH[_tE]) {
        _MH[_tE]._Dy();
    }
}

function _TI(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    if (_MH[_tE]) {
        _MH[_tE]._XK(_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE)
    }
}

function _UI(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE) {
    if (_MH[_tE]) {
        _MH[_tE]._YK(_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE)
    }
}

function _VI(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE) {
    if (_MH[_tE]) {
        _MH[_tE]._ZK(_xt, _yt,
            _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE)
    }
}

function _WI(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _GE) {
    if (_MH[_tE]) {
        _MH[_tE].__K(_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _GE)
    }
}

function _XI(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    if (_MH[_tE]) {
        _MH[_tE]._0L(_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE)
    }
}

function _YI(_tE, _xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    if (_MH[_tE]) {
        _MH[_tE]._1L(_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE)
    }
}

function _3I() {
    _2L(_3L, new _JJ())
}

function _4I(_tF, _uF, _vF) {
    var _wt = new _JJ();
    _wt._4L(_tF, _uF, _vF);
    _2L(_3L, _wt)
}

function _5I(_0v, _1v, _xF) {
    var _wt = new _JJ();
    _wt._5L(_0v, _1v, _xF);
    _2L(_3L, _wt)
}

function _6I(angle) {
    var _wt = new _JJ();
    _wt._6L(angle);
    _2L(_3L, _wt)
}

function _7I(angle) {
    var _wt = new _JJ();
    _wt._7L(angle);
    _2L(_3L, _wt)
}

function _8I(angle) {
    var _wt = new _JJ();
    _wt._8L(angle);
    _2L(_3L, _wt)
}

function _9I(_CF, _DF, _EF, angle) {
    var _wt = new _JJ();
    _wt._9L(new _2K(_CF, _DF, _EF), -angle);
    _2L(_3L, _wt)
}

function _aI(_tF, _uF, _vF) {
    var _aL = new _JJ();
    _aL._4L(_tF, _uF, _vF);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_bL, _aL);
    _2L(_3L, _wt)
}

function _bI(_0v, _1v, _xF) {
    var _dL = new _JJ();
    _dL._5L(_0v, _1v, _xF);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_bL, _dL);
    _2L(_3L, _wt)
}

function _cI(angle) {
    var _eL = new _JJ();
    _eL._6L(angle);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_bL, _eL);
    _2L(_3L, _wt)
}

function _dI(angle) {
    var _eL = new _JJ();
    _eL._7L(angle);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_bL, _eL);
    _2L(_3L, _wt)
}

function _eI(angle) {
    var _eL = new _JJ();
    _eL._8L(angle);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_bL, _eL);
    _2L(_3L, _wt)
}

function _fI(_CF, _DF, _EF, angle) {
    var _eL = new _JJ();
    _eL._9L(new _2K(_CF,
        _DF, _EF), -angle);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_bL, _eL);
    _2L(_3L, _wt)
}

function _gI(_Ps, _Qs, _0y) {
    var _bL = _cL(_3L);
    var _St = (_bL._wt[_fL] * _Ps) + (_bL._wt[_gL] * _Qs) + (_bL._wt[_hL] * _0y) + _bL._wt[_iL];
    var _Ut = (_bL._wt[_jL] * _Ps) + (_bL._wt[_bK] * _Qs) + (_bL._wt[_kL] * _0y) + _bL._wt[_lL];
    var _mL = (_bL._wt[_nL] * _Ps) + (_bL._wt[_oL] * _Qs) + (_bL._wt[_pL] * _0y) + _bL._wt[_qL];
    var _Kt = [];
    _Kt[0] = _St;
    _Kt[1] = _Ut;
    _Kt[2] = _mL;
    return _Kt
}

function _hI() {
    _rL()
}

function _iI() {
    return _sL()
}

function _jI() {
    var _bL = _cL(_3L);
    return _tL(_bL)
}

function _kI() {
    return _uL()
}

function _lI() {
    return _vL()
}

function _mI() {
    return _wL()
}

function _ZI(_ny) {
    var _wt = [];
    if (_ny < 0 || _ny > 2) {
        _SB('ERROR: Invalid matrix type (matrix_get)');
        for (var _t5 = 0; _t5 < 16; _t5++) {
            _wt[_t5] = 0;
        }
        return _wt
    }
    var _xL = _yL[_ny];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _wt[_t5] = _xL._wt[_t5]
    }
    return _wt
}

function __I(_ny, _OF) {
    var _wt = [];
    if (_ny < 0 || _ny > 2) {
        _SB('ERROR: Invalid matrix type (matrix_get)');
        for (var _t5 = 0; _t5 < 16; _t5++) {
            _wt[_t5] = 0
        }
        return _wt
    }
    var _wt = new _JJ();
    var _xL = _yL[_ny];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _wt._wt[_t5] = _OF[_t5]
    }
    _2L(_ny, _wt)
}

function _7G() {
    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,]
}

function _9G(_cF, _dF, _eF, _fF, _gF, _hF, _iF, _jF, _kF) {
    var _wt = new _JJ();
    var _zL = new _2K(_cF, _dF, _eF);
    var _AL = new _2K(_fF, _gF, _hF);
    var _BL = new _2K(_iF, _jF, _kF);
    _wt._5K(_zL, _AL, _BL);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
}

function _bG(width, height, _7K, _8K) {
    var _wt = new _JJ();
    _wt._fK(width, height, _7K, _8K);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
}

function _dG(width, height, _7K, _8K) {
    var _wt = new _JJ();
    _wt._gK(width, height, _7K, _8K);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
}

function _fG(_CL, width, height, _7K, _8K) {
    var _wt = new _JJ();
    _wt._aK(_CL, width, height, _7K, _8K);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5];
    }
    return _xL
}

function _QF(_Ps, _Qs, _0y, _DL, _EL, _FL, _GL, _HL, _IL) {
    var _wt = new _JJ();
    var _JL = (Math.PI / 180.0);
    _DL = (_JL * -_DL);
    _EL = (_JL * -_EL);
    _FL = (_JL * -_FL);
    _wt._KL(_Ps, _Qs, _0y, _DL, _EL, _FL, _GL, _HL, _IL);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
}

function _SF(_LL, _ML) {
    var _NL = new _JJ();
    var _OL = new _JJ();
    var _PL = new _JJ();
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _NL._wt[_t5] = _LL[_t5];
        _OL._wt[_t5] = _ML[_t5]
    }
    _PL.Multiply(_NL, _OL);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _PL._wt[_t5]
    }
    return _xL
}

function _UF(_QL, _Ps, _Qs, _0y) {
    var _St = (_QL._wt[_fL] * _Ps) + (_QL._wt[_gL] * _Qs) + (_QL._wt[_hL] * _0y) + _QL._wt[_iL];
    var _Ut = (_QL._wt[_jL] * _Ps) + (_QL._wt[_bK] * _Qs) + (_QL._wt[_kL] * _0y) + _QL._wt[_lL];
    var _mL = (_QL._wt[_nL] * _Ps) + (_QL._wt[_oL] * _Qs) + (_QL._wt[_pL] * _0y) + _QL._wt[_qL];
    var _RL = [_St,
        _Ut, _mL];
    return _RL
}

function _WF(_OF) {
    if (_OH >= _NH) {
        return
    }
    _OH++;
    if (arguments.length == 0) {
        _PH[_OH] = new _JJ(_PH[_OH - 1])
    } else {
        var _xL = new _JJ();
        var _t5;
        for (_t5 = 0; _t5 < 16; _t5++) {
            _xL._wt[_t5] = _OF[_t5]
        }
        _PH[_OH] = new _JJ();
        _PH[_OH].Multiply(_xL, _PH[_OH - 1])
    }
}

function _YF() {
    _OH--;
    if (_OH < 0) {
        _1G()
    }
}

function _1G() {
    _OH = 0;
    _PH[0] = new _JJ()
}

function __F(_OF) {
    _PH[_OH] = new _JJ(_OF);
}

function _3G() {
    var _SL = new Array(16);
    var _t5;
    for (_t5 = 0; _t5 < 16; _t5++) {
        _SL[_t5] = _PH[_OH]._wt[_t5]
    }
    return _SL
}

function _5G() {
    if (_OH == 0) return true; else return false
}

function _1J(_XJ) {
    _uu._TL._UL(_gw._VL, _XJ >= 0.5)
}

function _2J(_XJ) {
    _uu._TL._UL(_gw._WL, _XJ >= 0.5)
}

function _3J(_XL) {
    _uu._TL._UL(_gw._YL, _XL)
}

function _4J(_XJ) {
    _uu._TL._UL(_gw._ZL, _XJ >= 0.5)
}

function _5J(_XJ, _2y, __L, _0M) {
    if (Array.isArray(_XJ)) {
        var _1M = _XJ;
        _uu._TL._UL(_gw._2M, _1M[0] >= 0.5);
        _uu._TL._UL(_gw._3M, _1M[1]);
        _uu._TL._UL(_gw._4M, _1M[2]);
        _uu._TL._UL(_gw._5M, _1M[3])
    } else {
        _uu._TL._UL(_gw._2M, _XJ >= 0.5);
        _uu._TL._UL(_gw._3M, _2y);
        _uu._TL._UL(_gw._4M, __L);
        _uu._TL._UL(_gw._5M, _0M)
    }
}

function _6J(_6M) {
    _uu._TL._UL(_gw._7M,
        _6M)
}

function _0J(_8M) {
    switch (_8M) {
        case 1:
            _uu._TL._UL(_gw._9M, _gw._aM);
            _uu._TL._UL(_gw._bM, _gw._cM);
            _uu._TL._UL(_gw._dM, _gw._aM);
            _uu._TL._UL(_gw._eM, _gw._cM);
            _uu._TL._UL(_gw._fM, false);
            break;
        case 2:
            _uu._TL._UL(_gw._9M, _gw._aM);
            _uu._TL._UL(_gw._bM, _gw._gM);
            _uu._TL._UL(_gw._dM, _gw._aM);
            _uu._TL._UL(_gw._eM, _gw._gM);
            _uu._TL._UL(_gw._fM, false);
            break;
        case 3:
            _uu._TL._UL(_gw._9M, _gw._hM);
            _uu._TL._UL(_gw._bM, _gw._gM);
            _uu._TL._UL(_gw._dM, _gw._hM);
            _uu._TL._UL(_gw._eM, _gw._gM);
            _uu._TL._UL(_gw._fM, false);
            break;
        default :
            _uu._TL._UL(_gw._9M,
                _gw._aM);
            _uu._TL._UL(_gw._bM, _gw._iM);
            _uu._TL._UL(_gw._dM, _gw._aM);
            _uu._TL._UL(_gw._eM, _gw._iM);
            _uu._TL._UL(_gw._fM, false);
            break
    }
}

function _7J(_LB, _jM) {
    var _kM, _lM;
    if (Array.isArray(_LB)) {
        _kM = _LB[0];
        _lM = _LB[1]
    } else {
        _kM = _LB;
        _lM = _jM
    }
    _uu._TL._UL(_gw._9M, _kM);
    _uu._TL._UL(_gw._bM, _lM);
    _uu._TL._UL(_gw._dM, _kM);
    _uu._TL._UL(_gw._eM, _lM);
    _uu._TL._UL(_gw._fM, false)
}

function _8J(_LB, _jM, _mM, _nM) {
    var _kM, _lM, _oM, _pM;
    if (Array.isArray(_LB)) {
        _kM = _LB[0];
        _lM = _LB[1];
        _oM = _LB[2];
        _pM = _LB[3]
    } else {
        _kM = _LB;
        _lM = _jM;
        _oM = _mM;
        _pM = _nM
    }
    _uu._TL._UL(_gw._9M, _kM);
    _uu._TL._UL(_gw._bM, _lM);
    _uu._TL._UL(_gw._dM, _oM);
    _uu._TL._UL(_gw._eM, _pM);
    _uu._TL._UL(_gw._fM, true)
}

function _9J(_qM, _rM, _sM, _Ox) {
    var _tM;
    var _uM;
    var _vM;
    var _wM;
    if (Array.isArray(_qM)) {
        var _1M = _qM;
        _tM = (_1M[0] >= 0.5);
        _uM = (_1M[1] >= 0.5);
        _vM = (_1M[2] >= 0.5);
        _wM = (_1M[3] >= 0.5)
    } else {
        _tM = (_qM >= 0.5);
        _uM = (_rM >= 0.5);
        _vM = (_sM >= 0.5);
        _wM = (_Ox >= 0.5)
    }
    var _xM = {_nE: _tM, _oE: _uM, _pE: _vM, alpha: _wM};
    _uu._TL._UL(_gw._yM, _xM)
}

function _aJ(_qM, _rM, _sM, _Ox) {
    _9J(_qM, _rM, _sM, _Ox)
}

function _bJ(_XJ) {
    _uu._TL._UL(_gw._zM,
        _XJ >= 0.5)
}

function _cJ(_AM) {
    _uu._TL._UL(_gw._BM, _AM)
}

function _dJ(_XL) {
    _uu._TL._UL(_gw._CM, _XL)
}

function _eJ(_DM) {
    var _EM = _uu._FM;
    var _t5;
    if (_DM) {
        for (_t5 = 0; _t5 < _EM; _t5++) {
            _uu._TL._GM(_t5, _gw._HM, _gw._IM);
            _uu._TL._GM(_t5, _gw._JM, _gw._IM)
        }
    } else {
        for (_t5 = 0; _t5 < _EM; _t5++) {
            _uu._TL._GM(_t5, _gw._HM, _gw._KM);
            _uu._TL._GM(_t5, _gw._JM, _gw._KM)
        }
    }
}

function _fJ(_LM, _DM) {
    var _IG, _GG;
    if (Array.isArray(_LM)) {
        var _1M = _LM;
        _IG = _1M[0];
        _GG = _1M[1]
    } else {
        _IG = _LM;
        _GG = _DM
    }
    if (_GG) {
        _uu._TL._GM(_IG, _gw._HM, _gw._IM);
        _uu._TL._GM(_IG, _gw._JM,
            _gw._IM)
    } else {
        _uu._TL._GM(_IG, _gw._HM, _gw._KM);
        _uu._TL._GM(_IG, _gw._JM, _gw._KM)
    }
}

function _gJ(_MM) {
    var _EM = _uu._FM;
    var _t5;
    if (_MM) {
        for (_t5 = 0; _t5 < _EM; _t5++) {
            _uu._TL._GM(_t5, _gw._NM, _gw._OM);
            _uu._TL._GM(_t5, _gw._PM, _gw._OM)
        }
    } else {
        for (_t5 = 0; _t5 < _EM; _t5++) {
            _uu._TL._GM(_t5, _gw._NM, _gw._QM);
            _uu._TL._GM(_t5, _gw._PM, _gw._QM)
        }
    }
}

function _hJ(_LM, _MM) {
    var _IG, repeat;
    if (Array.isArray(_LM)) {
        var _1M = _LM;
        _IG = _1M[0];
        repeat = _1M[1]
    } else {
        _IG = _LM;
        repeat = _MM
    }
    if (repeat) {
        _uu._TL._GM(_IG, _gw._NM, _gw._OM);
        _uu._TL._GM(_IG, _gw._PM,
            _gw._OM)
    } else {
        _uu._TL._GM(_IG, _gw._NM, _gw._QM);
        _uu._TL._GM(_IG, _gw._PM, _gw._QM)
    }
}

function _jJ() {
    return _uu._TL._RM(_gw._VL) ? 1.0 : 0.0
}

function _kJ() {
    return _uu._TL._RM(_gw._WL) ? 1.0 : 0.0
}

function _lJ() {
    return _uu._TL._RM(_gw._YL)
}

function _mJ() {
    return _uu._TL._RM(_gw._ZL) ? 1.0 : 0.0
}

function _nJ() {
    var _1M = new Array();
    _1M.push(_uu._TL._RM(_gw._2M) ? 1.0 : 0.0);
    _1M.push(_uu._TL._RM(_gw._3M));
    _1M.push(_uu._TL._RM(_gw._4M));
    _1M.push(_uu._TL._RM(_gw._5M));
    return _1M
}

function _oJ() {
    return _uu._TL._RM(_gw._7M)
}

function _pJ() {
    var _kM = _uu._TL._RM(_gw._9M);
    var _lM = _uu._TL._RM(_gw._bM);
    var _oM = _uu._TL._RM(_gw._dM);
    var _pM = _uu._TL._RM(_gw._eM);
    if ((_kM != _oM) || (_lM != _pM)) {
        return -1
    } else {
        switch (_kM) {
            case _SM: {
                switch (_lM) {
                    case _TM:
                        return 0;
                    case _UM:
                        return 1;
                    case _VM:
                        return 2;
                    default :
                        return -1
                }
            }
            case _WM: {
                if (_lM == _VM) {
                    return 3
                } else {
                    return -1
                }
            }
            default :
                return -1
        }
    }
}

function _qJ() {
    var _1M = new Array();
    _1M[0] = _uu._TL._RM(_gw._9M);
    _1M[1] = _uu._TL._RM(_gw._bM);
    return _1M
}

function _rJ() {
    var _1M = new Array();
    _1M[0] = _uu._TL._RM(_gw._9M);
    _1M[1] = _uu._TL._RM(_gw._bM);
    _1M[2] = _uu._TL._RM(_gw._dM);
    _1M[3] = _uu._TL._RM(_gw._eM);
    return _1M
}

function _sJ() {
    return _uu._TL._RM(_gw._9M)
}

function _tJ() {
    return _uu._TL._RM(_gw._bM)
}

function _uJ() {
    return _uu._TL._RM(_gw._dM)
}

function _vJ() {
    return _uu._TL._RM(_gw._eM)
}

function _wJ() {
    var _rz = _uu._TL._RM(_gw._yM);
    var _XB = new Array();
    _XB.push(_rz._nE ? 1.0 : 0.0);
    _XB.push(_rz._oE ? 1.0 : 0.0);
    _XB.push(_rz._pE ? 1.0 : 0.0);
    _XB.push(_rz.alpha ? 1.0 : 0.0);
    return _XB
}

function _xJ() {
    return _wJ()
}

function _yJ() {
    return _uu._TL._RM(_gw._zM) ? 1.0 : 0.0
}

function _zJ() {
    return _uu._TL._RM(_gw._BM)
}

function _AJ() {
    return _uu._TL._RM(_gw._CM)
}

function _BJ() {
    return _uu._TL._XM(0, _gw._HM) == _gw._IM ? 1.0 : 0.0
}

function _CJ(_LM) {
    return _uu._TL._XM(_LM, _gw._HM) == _gw._IM ? 1.0 : 0.0
}

function _DJ() {
    return _uu._TL._XM(0, _gw._NM) == _gw._OM ? 1.0 : 0.0
}

function _EJ(_LM) {
    return _uu._TL._XM(_LM, _gw._NM) == _gw._OM ? 1.0 : 0.0
}

function _FJ() {
    _uu._TL._YM();
}

function _GJ() {
    _uu._TL._ZM()
}

var __M = undefined;
var _0N = undefined;

function _1N() {
    if (__M == undefined) __M = ["blendenable", _gw._VL, "ztestenable", _gw._WL, "zfunc", _gw._YL, "zwriteenable", _gw._ZL, "fogenable",
        _gw._2M, "fogcolor", _gw._3M, "fogstart", _gw._4M, "fogend", _gw._5M, "cullmode", _gw._7M, "srcblend", _gw._9M, "destblend", _gw._bM, "srcblendalpha", _gw._dM, "destblendalpha", _gw._eM, "sepalphaenable", _gw._fM, "colorwriteenable", _gw._yM, "alphatestenable", _gw._zM, "alphatestref", _gw._BM, "alphatestfunc", _gw._CM]
}

function _2N() {
    if (_0N == undefined) _0N = ["magfilter", _gw._HM, "minfilter", _gw._JM, "addressu", _gw._NM, "addressv", _gw._PM]
}

function _HJ() {
    _1N();
    _2N();
    var map = _Zr();
    var _3N = __M.length / 2;
    var _4N = _0N.length / 2;
    var _t5;
    for (_t5 = 0;
         _t5 < _3N; _t5++) {
        var _rz = _uu._TL._RM(__M[_t5 * 2 + 1]);
        _0s(map, __M[_t5 * 2], _rz)
    }
    var _EM = _uu._FM;
    for (_t5 = 0; _t5 < _4N; _t5++) {
        var _Rt;
        for (_Rt = 0; _Rt < _EM; _Rt++) {
            var name = _0N[_t5 * 2].slice(0) + _Rt;
            var _rz = _uu._TL._XM(_Rt, _0N[_t5 * 2 + 1]);
            _0s(map, name, _rz)
        }
    }
    return map
}

function _IJ(_5N) {
    _1N();
    _2N();
    var _t5;
    var _3N = __M.length / 2;
    var _4N = _0N.length / 2;
    var _6N = _AC(_5N);
    while (_6N != undefined) {
        var _7N = _6N;
        var value = _Kl(_5N, _7N);
        var _8N = false;
        for (_t5 = 0; _t5 < _3N; _t5++) {
            if (_7N == __M[_t5 * 2]) {
                _uu._TL._UL(__M[_t5 * 2 + 1], value);
                _8N = true;
                break
            }
        }
        if (!_8N) {
            for (_t5 = 0; _t5 < _4N; _t5++) {
                var _9N = _0N[_t5 * 2].length;
                var _aN = _7N.substr(0, _9N);
                if (_aN == _0N[_t5 * 2]) {
                    var _bN = _7N.substr(_9N - 1, _7N.length - _9N);
                    var _cN = parseInt(_bN, 10);
                    _uu._TL._GM(_cN, _0N[_t5 * 2 + 1], value);
                    break
                }
            }
        }
        _6N = _xC(_5N, _6N)
    }
}

function _iJ() {
}

var _dN = 1970;
var _eN = 0;
var _fN = 1;
var _gN = 365.25;
var _hN = 30.4375;
var _iN = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var _jN = [];
var _kN = (86400.0);
var _lN = (_kN * 30);
var _mN = !0;
var _nN = 0;
var _oN = 1;

function _pN(_qN) {
    if (_qN < _rN) {
        return _qN * _sN
    } else {
        return (_qN - _rN) * _sN
    }
}

function _tN(_uN) {
    return _uN % 400 == 0 || (_uN % 100 != 0 && _uN % 4 == 0)
}

function _vN(_uN) {
    var _wN = _iN.slice();
    ;
    if (_tN(_uN)) {
        _wN[1] = 29
    }
    return _wN
}

var _sN = 86400000.0;
var _rN = 25569;

function _xN(_yN) {
    return ((_yN < 10) ? "0" : "") + _yN.toString()
}

var _zN = [];
var _AN = [];
var _BN = [];
var _CN = Date.now();
var _DN = 0;
var _EN = 1;
var _FN = 2;
var _GN = 3;
var _HN = function (text) {
    if (!text) return;
    if (_IN) {
        if (!_JN) return;
        var _ry = _JN.document.getElementById('debug_console');
        if (!_ry) return;
        var _KN = String.fromCharCode(0x0a);
        text = text.replace('<b>', '').replace('</b>', '');
        var _LN = Date.now() - _CN;
        if (!_ry) {
            alert(text)
        } else {
            _ry.value += text + _KN;
            var _MN = _ry.textLength
        }
        _CN = Date.now()
    }
    if (_NN != undefined) {
        if (_NN._xc._Qc) console.log(text)
    }
};

function debug() {
    var index;
    for (index = 0; index < arguments.length; ++index) {
        _HN(arguments[index])
    }
}

function _SB(text) {
    var index;
    for (index = 0; index < arguments.length; ++index) {
        _HN(arguments[index])
    }
}

function _ON(_PN) {
    if (!_BN[_PN]) {
        _BN[_PN] = true;
        _QN(_PN)
    }
}

function _zw(_PN) {
    if (!_zN[_PN]) {
        _zN[_PN] = true;
        var _RN = "Error: function " + _PN + " is not supported.";
        debug(_RN)
    }
}

function _SN(_PN) {
    if (!_zN[_PN]) {
        _zN[_PN] = true;
        var _RN = "Error: function " + _PN + " is not yet implemented";
        debug(_RN)
    }
}

function _TN(_PN) {
    if (!_AN[_PN]) {
        _AN[_PN] = true;
        var _RN = "Warning: function " + _PN;
        debug(_RN)
    }
}

function _UN(_VN) {
    var _WN = _XN._YN(_VN, -1);
    var _KN = String.fromCharCode(0x0a);
    var _ZN = "";
    for (var _t5 = 0; _t5 < _WN.length; _t5++) {
        if (_t5 != 0) _ZN = _ZN + _KN;
        _ZN += _WN[_t5]
    }
    return _ZN
}

function __i(_VN) {
    var _9B = _VN;
    if (typeof _VN == "number") {
        _9B = String(_VN)
    }
    if (!_9B) return;
    alert(_UN(_9B))
}

function __N(_0O) {
    var _cs = document.getElementById(_1O);
    var _2O = _cs.parentNode;
    var _3O = document.createElement("div");
    _4O = "gm4html5_login_ID";
    _3O.setAttribute("class", "gm4html5_login");
    _3O.setAttribute("id", _4O);
    _2O.insertBefore(_3O, _cs.nextSibling);
    _3O.innerHTML = "<div class=\"gm4html5_login_header\">Login</div>" + "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_login_label_username_id\">Username:</label></td>" + "<td><input type=\"text\" id=\"gm4html5_login_username_id\" value=\"username\" /></td>" + "</tr>" + "<tr>" + "<td><label for=\"password\" id=\"gm4html5_login_label_password_id\">Password:</label></td>" + "<td><input type=\"password\" id=\"gm4html5_login_password_id\" value=\"password\" /></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"Login\" id=\"gm4html5_login_button_id\"/></div>" + "<div class=\"gm4html5_cancel_button\"><input type=\"button\" value=\"Cancel\" id=\"gm4html5_cancel_button_id\" /></div>";
    _5O();
    _6O = true;
    var login = document.getElementById("gm4html5_login_button_id");
    var _7O = document.getElementById("gm4html5_login_username_id");
    var _8O = document.getElementById("gm4html5_login_password_id");
    _7O.value = _0O._9O[0];
    _8O.value = _0O._9O[1];
    login.onmouseup = function () {
        var _aO = _7O.value;
        var _bO = _8O.value;
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = _aO;
        _cO._bO = _bO;
        _cO.value = 0;
        _cO._eO = "";
        _cO._fO = true;
        _cO._gO = _hO;
        _2O.removeChild(_3O);
        _6O = false;
        _iO();
        _jO(_0O.id)
    };
    var _kO = document.getElementById("gm4html5_cancel_button_id");
    _kO.onmouseup = function () {
        _2O.removeChild(_3O);
        _6O = false;
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = "";
        _cO._bO = "";
        _cO.value = 0;
        _cO._eO = "";
        _cO._fO = true;
        _cO._gO = _lO;
        _iO();
        _jO(_0O.id)
    };
    _mO();
    _nO._3C(_0O.id, null, _oO, _4O)
}

function _pO(_0O) {
    var _cs = document.getElementById(_1O);
    var _2O = _cs.parentNode;
    var _3O = document.createElement("div");
    _4O = "gm4html5_input_ID";
    _3O.setAttribute("class", "gm4html5_login");
    _3O.setAttribute("id", _4O);
    _2O.insertBefore(_3O, _cs.nextSibling);
    _3O.innerHTML = "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_input_message_id\">Message</label></td>" + "</tr>" + "<tr>" + "<td><input type=\"text\" id=\"gm4html5_input_text_id\" value=\"text\" /></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"OK\" id=\"gm4html5_input_ok_button_id\"/></div>" + "<div class=\"gm4html5_cancel_button\"><input type=\"button\" value=\"Cancel\" id=\"gm4html5_input_cancel_button_id\" /></div>";
    _5O();
    _6O = true;
    var _qO = document.getElementById("gm4html5_input_message_id");
    var _rO = document.getElementById("gm4html5_input_text_id");
    _qO.innerHTML = _0O._9O[0];
    _rO.value = _0O._9O[1];
    var _sO = document.getElementById("gm4html5_input_ok_button_id");
    _sO.onmouseup = function () {
        var text = _rO.value;
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = "";
        _cO._bO = "";
        _cO.value = parseFloat(text);
        _cO._eO = text;
        _cO._fO = true;
        _cO._gO = _hO;
        _2O.removeChild(_3O);
        _6O = false;
        _iO();
        _jO(_0O.id)
    };
    var _kO = document.getElementById("gm4html5_input_cancel_button_id");
    _kO.onmouseup = function () {
        _2O.removeChild(_3O);
        _6O = false;
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = "";
        _cO._bO = "";
        _cO.value = 0;
        _cO._eO = "";
        _cO._fO = true;
        _cO._gO = _lO;
        _iO();
        _jO(_0O.id)
    };
    _mO();
    _nO._3C(_0O.id, null, _oO, _4O)
}

function _tO(_0O) {
    var _cs = document.getElementById(_1O);
    var _2O = _cs.parentNode;
    var _3O = document.createElement("div");
    _4O = "gm4html5_question_ID";
    _3O.setAttribute("class", "gm4html5_login");
    _3O.setAttribute("id", _4O);
    _2O.insertBefore(_3O, _cs.nextSibling);
    _3O.innerHTML = "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_question_message_id\">Message</label></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"Yes\" id=\"gm4html5_question_yes_button_id\"/></div>" + "<div class=\"gm4html5_cancel_button\"><input type=\"button\" value=\"No\" id=\"gm4html5_question_no_button_id\" /></div>";
    _5O();
    _6O = true;
    var _uO = document.getElementById("gm4html5_question_message_id");
    _uO.innerHTML = _0O._9O[0];
    var _sO = document.getElementById("gm4html5_question_yes_button_id");
    _sO.onmouseup = function () {
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = "";
        _cO._bO = "";
        _cO.value = 1;
        _cO._eO = "1";
        _cO._fO = true;
        _cO._gO = _hO;
        _2O.removeChild(_3O);
        _6O = false;
        _iO();
        _jO(_0O.id)
    };
    var _kO = document.getElementById("gm4html5_question_no_button_id");
    _kO.onmouseup = function () {
        _2O.removeChild(_3O);
        _6O = false;
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = "";
        _cO._bO = "";
        _cO.value = 0;
        _cO._eO = "0";
        _cO._fO = true;
        _cO._gO = _lO;
        _iO();
        _jO(_0O.id)
    };
    _mO();
    _nO._3C(_0O.id, null, _oO, _4O)
}

function _vO(_0O) {
    var _cs = document.getElementById(_1O);
    var _2O = _cs.parentNode;
    var _3O = document.createElement("div");
    _4O = "gm4html5_message_ID";
    _3O.setAttribute("class", "gm4html5_login");
    _3O.setAttribute("id", _4O);
    _2O.insertBefore(_3O, _cs.nextSibling);
    _3O.innerHTML = "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_message_message_id\">Message</label></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"OK\" id=\"gm4html5_message_ok_button_id\"/></div>";
    _5O();
    _6O = true;
    var _uO = document.getElementById("gm4html5_message_message_id");
    _uO.innerHTML = _0O._9O[0];
    var _sO = document.getElementById("gm4html5_message_ok_button_id");
    _sO.onmouseup = function () {
        var _cO = _dO(_4O);
        if (!_cO) return;
        _cO._aO = "";
        _cO._bO = "";
        _cO.value = 1;
        _cO._eO = "1";
        _cO._fO = true;
        _cO._gO = 1;
        _2O.removeChild(_3O);
        _6O = false;
        _iO();
        _jO(_0O.id)
    };
    _mO();
    _nO._3C(_0O.id, null, _oO, _4O)
}

function _wO() {
    if (_xO.length > 0) {
        switch (_xO[0].type) {
            case _DN:
                __N(_xO[0]);
                break;
            case _EN:
                _pO(_xO[0]);
                break;
            case _FN:
                _tO(_xO[0]);
                break;
            case _GN:
                _vO(_xO[0]);
                break
        }
    }
}

function _jO(_OB) {
    var index = -1;
    for (var _t5 = 0; _t5 < _xO.length; ++_t5) {
        if (_xO[_t5].id == _OB) {
            index = _t5;
            break
        }
    }
    if (index >= 0) {
        _xO.splice(index, 1)
    }
    _wO()
}

function _mO() {
    if (_6O) {
        var login = document.getElementById(_4O);
        var _v5 = login.offsetWidth;
        var _w5 = login.offsetHeight;
        var _St = (canvas.width - _v5) / 2;
        var _Ut = (canvas.height - _w5) / 2;
        _2B = new _yO();
        _1B(canvas, _2B);
        login.style.left = ~~(_St + _2B.left) + "px";
        login.style.top = ~~(_Ut + _2B.top) + "px"
    }
}

function _zO(_AO) {
    return _AO.substr(0, _AO.indexOf("("))
}

function _QN(_BO) {
    var _CO = arguments.callee.caller;
    var _LC = "Error: " + _BO + _jf(13) + "--------------------------------------------------------------------" + _jf(13);
    while (_CO) {
        var name = _jf(9) + _zO(_CO.toString());
        _LC += name + '(';
        for (var _t5 = 0; _t5 < _CO.arguments.length; _t5++) {
            if (_t5 != 0) {
                _LC += ', '
            }
            if (typeof _CO.arguments[_t5] == "string") {
                _LC += '"' + _CO.arguments[_t5].toString() + '"'
            } else if (typeof _CO.arguments[_t5] == "number") {
                _LC += _CO.arguments[_t5].toString()
            } else {
                if (_CO.arguments[_t5] == undefined) {
                    _LC += "[undefined]"
                } else if (_CO.arguments[_t5] == null) {
                    _LC += "[null]"
                } else if (_CO.arguments[_t5].__type) {
                    _LC += _CO.arguments[_t5].__type
                } else {
                    _LC += "[unknown]"
                }
            }
        }
        _LC += ')' + _jf(13);
        _CO = _CO.caller
    }
    debug(_LC)
}

var _DO = 3;
var _EO = -1;
var _FO = "IDLE";
var _GO = "PROCESSING";
var _HO = "AUTHORISED";
var _IO = "FAILED";
var _JO = [];
var _KO;
var _LO = 0;
var g_fbOAuthToken = "";

function _MO() {
    FB.api('/me/permissions', function (response) {
        debug("fbQueryPermissions response:");
        try {
            var text = JSON.stringify(response);
            debug(text)
        } catch (e) {
        }
        _JO = [];
        var data = response["data"];
        if (data != undefined) {
            var length = data.length;
            for (_t5 = 0; _t5 < length; _t5++) {
                var _zC = data[_t5];
                var _NO = _zC["permission"];
                var status = _zC["status"];
                if (_NO != undefined && status == "granted") {
                    _JO.push(_NO)
                }
            }
        }
        debug("current permissions: " + _JO)
    })
}

function _OO(response) {
    try {
        var text = JSON.stringify(response);
        debug("facebook login response:");
        debug(text)
    } catch (e) {
    }
    if (response.status === 'connected') {
        _PO = response.authResponse.userID;
        g_fbOAuthToken = response.authResponse.accessToken;
        _QO = _HO;
        _MO()
    } else if (response.status === 'not_authorized') {
        _QO = 'DENIED'
    } else {
        _QO = _IO
    }
}

var _RO = {appId: 0, status: !0, cookie: !0, xfbml: !0, version: 'v2.8'};

function _SO() {
    _RO.appId = g_fbAppId;
    FB.init(_RO);
    FB._TO._UO();
    FB.getLoginStatus(_OO);
    FB.Canvas.setAutoGrow(100);
    if (_NN._xc && _NN._xc._yc && _NN._xc._VO) {
        _NN._xc._VO()
    }
}

function _WO(_cE) {
    var _XO, id = 'facebook-jssdk', _YO = _cE.getElementsByTagName('script')[0];
    if (_cE.getElementById(id)) {
        return
    }
    _XO = _cE.createElement('script');
    _XO.id = id;
    _XO._ZO = true;
    _XO.src = "//connect.facebook.net/en_US/sdk.js";
    _YO.parentNode.insertBefore(_XO, _YO)
}

function __O(_0P) {
    var _cs = document.getElementById(_1O);
    var _2O = _cs.parentNode;
    var _3O = document.createElement("div");
    _3O.setAttribute("id", "fb-root");
    _2O.insertBefore(_3O, _cs.nextSibling);
    g_fbAppId = _0P;
    window.fbAsyncInit = _SO;
    _WO(document)
}

function _1P(data) {
    _PO = data.id;
    _QO = 'AUTHORISED'
}

function _2P(_3P) {
    if (typeof(FB) == 'undefined') {
        console.log("Facebook initialisation has not completed");
        return
    }
    _QO = _GO;
    var _MN = 0;
    var _4P = '';
    if (_3P >= 0) {
        _MN = _7C(_3P);
        for (var _t5 = 0; _t5 < _MN; _t5++) {
            var _LC = _cC(_3P, _t5);
            _4P += _LC;
            if (_t5 < _MN - 1) {
                _4P += ','
            }
        }
        FB.login(_OO, {scope: _4P})
    } else {
        FB.login(_OO)
    }
}

function _5P(_6P, _7P, _8P, _9P) {
    var _aP = {};
    if (_8P != -1) {
        var _6N = _AC(_8P);
        while (_uC(_8P, _6N)) {
            var _bP = _Kl(_8P, _6N);
            _aP[_6N] = _bP;
            _6N = _xC(_8P, _6N)
        }
    }
    _cP = _9P;
    if (_9P != -1) {
        _pC(_9P)
    }
    FB.api(_6P, _7P, _aP, _dP)
}

function _dP(data) {
    if (_cP != -1) {
        _eP(data, _cP);
        try {
            var text = JSON.stringify(data);
            _0s(_cP, "response_text", text)
        } catch (e) {
        }
    }
    debug("response received from facebook_graph_request")
}

function _fP(_6P, _8P, _9P) {
    var _aP = {};
    _aP.method = _6P;
    if (_8P != -1) {
        var _6N = _AC(_8P);
        while (_uC(_8P, _6N)) {
            var _bP = _Kl(_8P, _6N);
            _aP[_6N] = _bP;
            _6N = _xC(_8P, _6N)
        }
    }
    if (_9P != -1) {
        _pC(_9P)
    }
    FB.ui(_aP, function (response) {
        _gP(response, _9P)
    });
    return 1
}

function _gP(data, _hP) {
    if (_hP != -1) {
        _eP(data, _hP)
    }
    debug("response received from facebook_dialog:");
    try {
        var text = JSON.stringify(data);
        debug(text)
    } catch (e) {
    }
}

function _iP() {
    this._jP = "";
    this._kP = 0;
    this._lP = false;
    this._mP = false;
    this._nP = ""
}

_iP.prototype._oP = function () {
    var _LC;
    var _t5 = this._kP;
    var _ZN = this._jP;
    while (_t5 < _ZN.length) {
        var _u5 = _ZN.charCodeAt(_t5);
        if (_u5 == 0x0d || _u5 == 0x0a) {
            _t5++;
            _u5 = _ZN.charCodeAt(_t5);
            if (_u5 == 0x0d || _u5 == 0x0a) {
                _t5++
            }
            break
        } else {
            _t5++
        }
    }
    this._kP = _t5
};
_iP.prototype._pP = function () {
    var _LC;
    var _t5 = this._kP;
    var _ZN = this._jP;
    while (_t5 < _ZN.length) {
        var _u5 = _ZN.charCodeAt(_t5);
        if (_u5 == 0x0d || _u5 == 0x0a || _u5 == 0x09 || _u5 == 0x20) {
            _t5++
        } else {
            break
        }
    }
    this._kP = _t5
};

function _qP(_rP) {
    var _sP = _tP._RB(_rP);
    if (!_sP) {
        _SB("Error: Illegal file handle");
        return
    }
    if (_sP._nP != null) {
        if (_sP._mP) {
            _uP(_sP._nP, _sP._jP)
        }
    }
    _tP._6C(_rP)
}

function _vP(_wP) {
    _sP = new _iP();
    _sP._nP = _wP;
    _sP._jP = "";
    _sP._kP = 0;
    _sP._xP = true;
    return _tP._3C(_sP)
}

function _yP(_rP, _zP) {
    var _sP = _tP._RB(_rP);
    if (!_sP) {
        _SB("Error: Illegal file handle");
        return
    }
    if (!_sP._xP) {
        _SB("Error: File " + _sP._nP + " has not been opened with WRITE permisions");
        return
    }
    _sP._jP += _zP;
    _sP._mP = true;
    _sP._kP = _sP._jP.length
}

function _AP(_wP) {
    var _BP = _CP(_wP, true);
    if (_BP == true) return true;
    return _CP(_wP, false)
}

function _DP(_EP) {
    var _XB;
    switch (typeof(_EP)) {
        case "object":
            if (_EP instanceof Array) {
                _XB = new _jC(_iC, _FP(_EP))
            } else {
                _XB = new _jC(_hC, _GP(_EP))
            }
            break;
        case "boolean":
            _XB = _EP ? 1 : 0;
            break;
        case "number":
        case "string":
            _XB = _EP;
            break;
        default :
            _XB = _EP.toString();
            break
    }
    return _XB
}

function _FP(_kC) {
    var _XB = __B();
    for (var _t5 = 0; _t5 < _kC.length; ++_t5) {
        var _uv = _DP(_kC[_t5]);
        _9C(_XB, _uv)
    }
    return _XB
}

function _GP(_kC) {
    var _XB = _Zr();
    for (var _HP in _kC) {
        var _hv = _kC[_HP];
        var _uv = _DP(_hv);
        _0s(_XB, _HP, _uv)
    }
    return _XB
}

function _Jl(_IP) {
    var _LC = _IP;
    var _JP = false;
    try {
        for (var _KP = 0; _KP < _LC.length; _KP++) {
            if (_LC.charAt(_KP) == "\"") {
                if (!_JP) {
                    _JP = true
                } else if (_KP == 0 || _LC.charAt(_KP - 1) != "\\") {
                    _JP = false
                }
            }
            if (!_JP && _LC.charAt(_KP) == "#") {
                _LC = _LC.substring(0, _KP) + _LC.substring(_KP + 1,
                    _LC.length);
                _KP--
            }
        }
    } catch (_aB) {
    }
    var _LP = {};
    try {
        _LP = JSON.parse(_LC);
        if (_LP instanceof Array) {
            _LC = "{ \"default\" : " + _LC + "}";
            _LP = JSON.parse(_LC);
        }
    } catch (err) {
        _LC = "{ \"default\" : \"" + _LC.toString() + "\"}";
        try {
            _LP = JSON.parse(_LC)
        } catch (err) {
        }
    }
    return _GP(_LP)
}

function _MP(_EP) {
    var _XB;
    switch (typeof(_EP)) {
        case "object":
            switch (_EP._lC) {
                case _iC:
                    _XB = _NP(_EP.Object);
                    break;
                case _hC:
                    _XB = _OP(_EP.Object);
                    break;
                default :
                    if (_EP.constructor === Array) {
                        return _EP
                    } else {
                        _XB = _EP.toString()
                    }
                    break
            }
            break;
        case "number":
        case "string":
            _XB = _EP;
            break;
        default :
            _XB = _EP.toString();
            break
    }
    return _XB
}

function _NP(_PP) {
    var _XB = [];
    var _5C = _2C._RB(_PP);
    if (_5C) {
        for (var _t5 = 0; _t5 < _5C._gC.length; ++_t5) {
            if (_5C._gC[_t5] != undefined) _XB.push(_MP(_5C._gC[_t5]))
        }
    }
    return _XB
}

function _OP(_5N) {
    var _XB = {};
    var _mC = _nC._RB(_5N);
    if (_mC) {
        for (var _t5 in _mC) {
            if (!_mC.hasOwnProperty(_t5)) continue;
            if (_mC[_t5] != undefined) _XB[_t5] = _MP(_mC[_t5])
        }
    }
    return _XB
}

var _QP = "undefined";

function _zh(_RP) {
    _XN._SP = _RP
}

function _Ah(_TP) {
    _XN._UP = _TP
}

function _Hh(_Ps, _Qs, _PN) {
    if (_PN != undefined) _PN = _PN.toString();
    else _PN = _QP;
    var _u5 = (_Mx & 0xffffff) | (((_Lx * 255.0) << 24) & 0xff000000);
    _XN._VP(_PN, _Ps, _Qs, -1, -1, 0, 1, 1, _u5, _u5, _u5, _u5)
}

var _WP = _XP;

function _XP(_Ps, _Qs, _PN, _YP, _ZP, __P, _0Q, _Ox) {
    if (_PN != undefined) _PN = _PN.toString(); else _PN = _QP;
    if (!_uu) _TN("draw_text_color() only uses the 1st colour");
    var _1Q = _Lx;
    var _2Q = _3Q;
    var _hv = ((_Ox * 255) << 24) & 0xff000000;
    _YP = (_YP & 0xffffff) | _hv;
    _ZP = (_ZP & 0xffffff) | _hv;
    __P = (__P & 0xffffff) | _hv;
    _0Q = (_0Q & 0xffffff) | _hv;
    _XN._VP(_PN, _Ps, _Qs, -1, -1, 0, 1, 1, _YP, _ZP, __P, _0Q);
    _Lx = _1Q;
    _Bh(_2Q)
}

var _4Q = _5Q;

function _5Q(_Ps, _Qs, _PN, _6Q, _HB, _YP, _ZP, __P, _0Q, _Ox) {
    if (_PN != undefined) _PN = _PN.toString(); else _PN = _QP;
    if (!_uu) _TN("draw_text_ext_color() only uses the 1st colour");
    var _1Q = _Lx;
    var _2Q = _3Q;
    var _hv = (_Ox * 255) << 24;
    _YP = (_YP & 0xffffff) | _hv;
    _ZP = (_ZP & 0xffffff) | _hv;
    __P = (__P & 0xffffff) | _hv;
    _0Q = (_0Q & 0xffffff) | _hv;
    _XN._VP(_PN, _Ps, _Qs, _6Q, _HB, 0, 1, 1, _YP, _ZP, __P, _0Q);
    _Lx = _1Q;
    _Bh(_2Q)
}

function _Ch(_Ps, _Qs, _PN, _6Q, _HB) {
    if (_PN != undefined) _PN = _PN.toString(); else _PN = _QP;
    var _u5 = (_Mx & 0xffffff) | (((_Lx * 255.0) << 24) & 0xff000000);
    _XN._VP(_PN, _Ps, _Qs, _6Q, _HB, 0, 1, 1, _u5, _u5, _u5, _u5)
}

function _7Q(_Ps, _Qs, _PN, _GL, _HL, _Ts) {
    if (_PN != undefined) _PN = _PN.toString(); else _PN = _QP;
    var _u5 = (_Mx & 0xffffff) | (((_Lx * 255.0) << 24) & 0xff000000);
    _XN._VP(_PN, _Ps, _Qs, -1, -1, _Ts, _GL, _HL, _u5, _u5, _u5, _u5)
}

var _8Q = _9Q;

function _9Q(_Ps, _Qs, _PN, _6Q, _HB, _GL, _HL, _Ts, _YP, _ZP, __P, _0Q, _Ox) {
    if (!_uu) _TN("draw_text_ext_transformed_color() only uses the 1st colour");
    if (_PN != undefined) _PN = _PN.toString(); else _PN = _QP;
    var _1Q = _Lx;
    var _2Q = _3Q;
    var _hv = ((_Ox * 255) << 24) & 0xff000000;
    _YP = (_YP & 0xffffff) | _hv;
    _ZP = (_ZP & 0xffffff) | _hv;
    __P = (__P & 0xffffff) | _hv;
    _0Q = (_0Q & 0xffffff) | _hv;
    _XN._VP(_PN, _Ps, _Qs, _6Q, _HB, _Ts, _GL, _HL, _YP, _ZP, __P, _0Q);
    _Lx = _1Q;
    _Bh(_2Q)
}

var _aQ = _bQ;

function _bQ(_Ps, _Qs, _PN, _GL, _HL, _Ts, _YP, _ZP, __P, _0Q, _Ox) {
    if (!_uu) _TN("draw_text_transformed_color() only uses the 1st colour");
    if (_PN != undefined) _PN = _PN.toString(); else _PN = _QP;
    var _1Q = _Lx;
    var _2Q = _3Q;
    var _hv = ((_Ox * 255) << 24) & 0xff000000;
    _YP = (_YP & 0xffffff) | _hv;
    _ZP = (_ZP & 0xffffff) | _hv;
    __P = (__P & 0xffffff) | _hv;
    _0Q = (_0Q & 0xffffff) | _hv;
    _XN._VP(_PN, _Ps, _Qs, -1, -1, _Ts, _GL, _HL, _YP, _ZP, __P, _0Q);
    _Lx = _1Q;
    _Bh(_2Q)
}

function _Ar(_PN) {
    if (_PN == undefined || _PN == null) _PN = _QP;
    _XN._cQ();
    var _dQ = _XN._YN(_PN, -1, _XN._eQ);
    if (_dQ == null) return _XN._eQ._fQ(_PN);
    return _XN._eQ._fQ(_PN) * _dQ.length
}

function _wi(_PN) {
    if (_PN == undefined || _PN == null) _PN = _QP;
    _XN._cQ();
    return _XN._eQ._gQ(_PN)
}

function _hQ(_vs, _9y, _iQ, _jQ, _kQ, _lQ, _mQ) {
    var _nQ = new _oQ();
    _nQ._pQ = true;
    _nQ._F3 = "fnt_" + _vs;
    _nQ._qQ = _vs;
    _nQ._l5 = _9y;
    _nQ.bold = _iQ;
    _nQ._m5 = _jQ;
    _nQ._n5 = _kQ;
    _nQ._o5 = _lQ;
    _nQ._rQ = false;
    if (_vs.toLowerCase().lastIndexOf(".ttf") != -1) {
        _nQ._sQ = new _tQ();
        _nQ._sQ.onload = function () {
            _nQ._rQ = true;
        };
        _nQ._sQ.onerror = function (err) {
            alert(err)
        };
        _nQ._sQ.src = _uQ(null, null, _Tu + _vs);
        _nQ._vQ = _9y + "px " + _nQ._sQ._wQ + " "
    } else {
        _nQ._vQ = _9y + "px " + _vs + " ";
        _nQ._rQ = true
    }
    if (_iQ) _nQ._vQ = _nQ._vQ + "bold ";
    if (_jQ) _nQ._vQ = _nQ._vQ + "Italic ";
    if (_mQ) {
        return _XN._xQ(_nQ)
    } else {
        return _nQ
    }
};
;var _yQ = 0, _zQ = 1, _AQ = 2, _BQ = 3, _CQ = 4, _DQ = 5, _EQ = 6, _FQ = 7, _GQ = 8, _HQ = 9;

function _IQ() {
    var _JQ = _KQ("hiscores_data_", true);
    if (_JQ != null) {
        try {
            _LQ = JSON.parse(_JQ);
            var _t5;
            for (_t5 = 0; _t5 < _MQ; _t5++) {
                _NQ[_t5] = _LQ[_t5].name;
                _OQ[_t5] = _LQ[_t5].value
            }
        } catch (_PQ) {
            _SB("Error: reading hiscore JSON")
        }
    }
}

function _QQ() {
    _OQ[0] = _OQ[1] = _OQ[2] = _OQ[3] = _OQ[4] = _OQ[5] = _OQ[6] = _OQ[7] = _OQ[8] = _OQ[9] = 0;
    _NQ[0] = _NQ[1] = _NQ[2] = _NQ[3] = _NQ[4] = _NQ[5] = _NQ[6] = _NQ[7] = _NQ[8] = _NQ[9] = _RQ
}

function _SQ(_TQ, _UQ, _AM) {
    var _VQ, _WQ, _XQ, _YQ, _ZQ, __Q;
    _VQ = (_TQ >> 16) & 0xff;
    _XQ = (_TQ >> 8) & 0xff;
    _ZQ = (_TQ & 0xff);
    _WQ = (_UQ >> 16) & 0xff;
    _YQ = (_UQ >> 8) & 0xff;
    __Q = (_UQ & 0xff);
    var _0R = 1.0 - _AM;
    var _Kt = _fC(_VQ * _0R + _WQ * _AM);
    var _gv = _fC(_XQ * _0R + _YQ * _AM);
    var _Nt = _fC(_ZQ * _0R + __Q * _AM);
    var _2v = ((_Kt & 0xff) << 16) | ((_gv & 0xff) << 8) | (_Nt & 0xff);
    return _2v
}

function _1R(_TQ, _UQ, _AM) {
    return _SQ(_TQ, _UQ, _AM)
}

function _2R(_3R, _4R, _5R, _6R) {
    var _7R = _8R;
    _8R = true;
    var event = _9R(_5R, _6R);
    var _aR = _bR(_5R, _6R);
    _3R._8t(event, _aR, _3R, _4R);
    _8R = _7R
}

function _cR(_3R, _dR, _eR, _fR) {
    var _gR = _hR._RB(_eR);
    if ((_gR != null) && (_gR != undefined)) {
        var _iR = _gR._jR[_fR];
        if ((_iR != null) && (_iR != undefined)) {
            _iR._kR(_3R, _3R)
        }
    }
}

var _lR = !0;

function _mm(_3R, _4R, _6R) {
    if (_6R < 0 || _6R > 15) {
        _SB("Error: illegal user event ID: " + _6R)
    }
    _6R += _mR;
    _2R(_3R, _4R, _nR, _6R)
}

function _Nl(_3R, _4R) {
    _3R._oR(_pR, _qR, _4R)
}

function _rR(data) {
    var _sR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _tR, _uR, _vR, _wR, _xR, _yR, _zR, _AR;
    var _t5 = 0;
    var _BR = 0;
    var _CR = "";
    var _DR = [];
    if (!data) {
        return data
    }
    if (typeof data !== "string") return undefined;
    data = _ER(data);
    do {
        _tR = data.charCodeAt(_t5++);
        _uR = data.charCodeAt(_t5++);
        _vR = data.charCodeAt(_t5++);
        _AR = _tR << 16 | _uR << 8 | _vR;
        _wR = _AR >> 18 & 0x3f;
        _xR = _AR >> 12 & 0x3f;
        _yR = _AR >> 6 & 0x3f;
        _zR = _AR & 0x3f;
        _DR[_BR++] = _sR.charAt(_wR) + _sR.charAt(_xR) + _sR.charAt(_yR) + _sR.charAt(_zR)
    }
    while (_t5 < data.length);
    _CR = _DR.join('');
    var _Kt = data.length % 3;
    return (_Kt ? _CR.slice(0, _Kt - 3) : _CR) + '==='.slice(_Kt || 3)
}

function _FR(_VN) {
    var _RL = "";
    var index = 0;
    while (index < _VN.length) {
        var _uv = 0;
        var _GR = _VN.charCodeAt(index++);
        if ((_GR & 0x80) == 0) {
            _uv = _GR
        } else if ((_GR & 0xe0) == 0xc0) {
            _uv = (_GR & 0x1f) << 6;
            _GR = _VN.charCodeAt(index++);
            _uv |= (_GR & 0x3f)
        } else if ((_GR & 0xf0) == 0xe0) {
            _uv = (_GR & 0x0f) << 12;
            _GR = _VN.charCodeAt(index++);
            _uv |= (_GR & 0x3f) << 6;
            _GR = _VN.charCodeAt(index++);
            _uv |= (_GR & 0x3f)
        } else {
            _uv = (_GR & 0x07) << 18;
            _GR = _VN.charCodeAt(index++);
            _uv |= (_GR & 0x3f) << 12;
            _GR = _VN.charCodeAt(index++);
            _uv |= (_GR & 0x3f) << 6;
            _GR = _VN.charCodeAt(index++);
            _uv |= (_GR & 0x3f)
        }
        if (_uv == 0x00) break;
        var _jf = String.fromCharCode(_uv);
        _RL += _jf
    }
    return _RL
}

function _Il(data) {
    var _sR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _tR, _uR, _vR, _wR, _xR, _yR, _zR, _AR;
    var _t5 = 0;
    var _BR = 0;
    var _HR = "";
    var _DR = [];
    if (!data) {
        return data
    }
    data += '';
    do {
        _wR = _sR.indexOf(data.charAt(_t5++));
        _xR = _sR.indexOf(data.charAt(_t5++));
        _yR = _sR.indexOf(data.charAt(_t5++));
        _zR = _sR.indexOf(data.charAt(_t5++));
        _AR = _wR << 18 | _xR << 12 | _yR << 6 | _zR;
        _tR = _AR >> 16 & 0xff;
        _uR = _AR >> 8 & 0xff;
        _vR = _AR & 0xff;
        if (_yR == 64) {
            _DR[_BR++] = String.fromCharCode(_tR)
        } else if (_zR == 64) {
            _DR[_BR++] = String.fromCharCode(_tR, _uR)
        } else {
            _DR[_BR++] = String.fromCharCode(_tR, _uR, _vR)
        }
    } while (_t5 < data.length);
    _HR = _DR.join('');
    return _FR(_HR)
}

function _IR(data) {
    var _sR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _tR, _uR, _vR, _wR, _xR, _yR, _zR, _AR;
    var _t5 = 0;
    var _BR = 0;
    var _HR = "";
    var _DR = [];
    if (!data) {
        return data
    }
    data += '';
    do {
        _wR = _sR.indexOf(data.charAt(_t5++));
        _xR = _sR.indexOf(data.charAt(_t5++));
        _yR = _sR.indexOf(data.charAt(_t5++));
        _zR = _sR.indexOf(data.charAt(_t5++));
        _AR = _wR << 18 | _xR << 12 | _yR << 6 | _zR;
        _tR = _AR >> 16 & 0xff;
        _uR = _AR >> 8 & 0xff;
        _vR = _AR & 0xff;
        if (_yR == 64) {
            _DR[_BR++] = String.fromCharCode(_tR)
        } else if (_zR == 64) {
            _DR[_BR++] = String.fromCharCode(_tR, _uR)
        } else {
            _DR[_BR++] = String.fromCharCode(_tR, _uR, _vR)
        }
    } while (_t5 < data.length);
    _HR = _DR.join('');
    return _HR
}

function _JR(_Hg) {
    return _KR(_Hg)
}

function _LR(_IP) {
    return _MR(_IP)
}

var _NR = 0;
var _OR = "";

function _KR(_ZN) {
    return _PR(_QR(_RR(_ZN)))
}

function _QR(_ZN) {
    return _SR(_TR(_UR(_ZN), _ZN.length * 8))
}

function _PR(_VR) {
    var _WR = _NR ? "0123456789ABCDEF" : "0123456789abcdef";
    var _XR = "";
    var x;
    for (var _t5 = 0; _t5 < _VR.length; _t5++) {
        x = _VR.charCodeAt(_t5);
        _XR += _WR.charAt((x >>> 4) & 0x0F) + _WR.charAt(x & 0x0F)
    }
    return _XR
}

function _RR(_VR) {
    var _XR = "";
    var _t5 = -1;
    var x, y;
    while (++_t5 < _VR.length) {
        x = _VR.charCodeAt(_t5);
        y = _t5 + 1 < _VR.length ? _VR.charCodeAt(_t5 + 1) : 0;
        if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {
            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
            _t5++
        }
        if (x <= 0x7F) _XR += String.fromCharCode(x);
        else if (x <= 0x7FF) _XR += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F), 0x80 | (x & 0x3F)); else if (x <= 0xFFFF) _XR += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F)); else if (x <= 0x1FFFFF) _XR += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07), 0x80 | ((x >>> 12) & 0x3F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F))
    }
    return _XR
}

function _UR(_VR) {
    var _XR = Array(_VR.length >> 2);
    for (var _t5 = 0; _t5 < _XR.length; _t5++) _XR[_t5] = 0;
    for (var _t5 = 0; _t5 < _VR.length * 8; _t5 += 8) _XR[_t5 >> 5] |= (_VR.charCodeAt(_t5 / 8) & 0xFF) << (_t5 % 32);
    return _XR
}

function _SR(_VR) {
    var _XR = "";
    for (var _t5 = 0; _t5 < _VR.length * 32; _t5 += 8) _XR += String.fromCharCode((_VR[_t5 >> 5] >>> (_t5 % 32)) & 0xFF);
    return _XR
}

function _TR(x, _MN) {
    x[_MN >> 5] |= 0x80 << ((_MN) % 32);
    x[(((_MN + 64) >>> 9) << 4) + 14] = _MN;
    var _hv = 1732584193;
    var _Nt = -271733879;
    var _u5 = -1732584194;
    var _cE = 271733878;
    for (var _t5 = 0; _t5 < x.length; _t5 += 16) {
        var _YR = _hv;
        var _ZR = _Nt;
        var __R = _u5;
        var _0S = _cE;
        _hv = _1S(_hv, _Nt, _u5, _cE, x[_t5 + 0], 7, -680876936);
        _cE = _1S(_cE, _hv, _Nt, _u5, x[_t5 + 1], 12, -389564586);
        _u5 = _1S(_u5, _cE, _hv, _Nt, x[_t5 + 2], 17, 606105819);
        _Nt = _1S(_Nt, _u5,
            _cE, _hv, x[_t5 + 3], 22, -1044525330);
        _hv = _1S(_hv, _Nt, _u5, _cE, x[_t5 + 4], 7, -176418897);
        _cE = _1S(_cE, _hv, _Nt, _u5, x[_t5 + 5], 12, 1200080426);
        _u5 = _1S(_u5, _cE, _hv, _Nt, x[_t5 + 6], 17, -1473231341);
        _Nt = _1S(_Nt, _u5, _cE, _hv, x[_t5 + 7], 22, -45705983);
        _hv = _1S(_hv, _Nt, _u5, _cE, x[_t5 + 8], 7, 1770035416);
        _cE = _1S(_cE, _hv, _Nt, _u5, x[_t5 + 9], 12, -1958414417);
        _u5 = _1S(_u5, _cE, _hv, _Nt, x[_t5 + 10], 17, -42063);
        _Nt = _1S(_Nt, _u5, _cE, _hv, x[_t5 + 11], 22, -1990404162);
        _hv = _1S(_hv, _Nt, _u5, _cE, x[_t5 + 12], 7, 1804603682);
        _cE = _1S(_cE, _hv, _Nt, _u5, x[_t5 + 13], 12,
            -40341101);
        _u5 = _1S(_u5, _cE, _hv, _Nt, x[_t5 + 14], 17, -1502002290);
        _Nt = _1S(_Nt, _u5, _cE, _hv, x[_t5 + 15], 22, 1236535329);
        _hv = _2S(_hv, _Nt, _u5, _cE, x[_t5 + 1], 5, -165796510);
        _cE = _2S(_cE, _hv, _Nt, _u5, x[_t5 + 6], 9, -1069501632);
        _u5 = _2S(_u5, _cE, _hv, _Nt, x[_t5 + 11], 14, 643717713);
        _Nt = _2S(_Nt, _u5, _cE, _hv, x[_t5 + 0], 20, -373897302);
        _hv = _2S(_hv, _Nt, _u5, _cE, x[_t5 + 5], 5, -701558691);
        _cE = _2S(_cE, _hv, _Nt, _u5, x[_t5 + 10], 9, 38016083);
        _u5 = _2S(_u5, _cE, _hv, _Nt, x[_t5 + 15], 14, -660478335);
        _Nt = _2S(_Nt, _u5, _cE, _hv, x[_t5 + 4], 20, -405537848);
        _hv = _2S(_hv,
            _Nt, _u5, _cE, x[_t5 + 9], 5, 568446438);
        _cE = _2S(_cE, _hv, _Nt, _u5, x[_t5 + 14], 9, -1019803690);
        _u5 = _2S(_u5, _cE, _hv, _Nt, x[_t5 + 3], 14, -187363961);
        _Nt = _2S(_Nt, _u5, _cE, _hv, x[_t5 + 8], 20, 1163531501);
        _hv = _2S(_hv, _Nt, _u5, _cE, x[_t5 + 13], 5, -1444681467);
        _cE = _2S(_cE, _hv, _Nt, _u5, x[_t5 + 2], 9, -51403784);
        _u5 = _2S(_u5, _cE, _hv, _Nt, x[_t5 + 7], 14, 1735328473);
        _Nt = _2S(_Nt, _u5, _cE, _hv, x[_t5 + 12], 20, -1926607734);
        _hv = _3S(_hv, _Nt, _u5, _cE, x[_t5 + 5], 4, -378558);
        _cE = _3S(_cE, _hv, _Nt, _u5, x[_t5 + 8], 11, -2022574463);
        _u5 = _3S(_u5, _cE, _hv, _Nt, x[_t5 + 11], 16,
            1839030562);
        _Nt = _3S(_Nt, _u5, _cE, _hv, x[_t5 + 14], 23, -35309556);
        _hv = _3S(_hv, _Nt, _u5, _cE, x[_t5 + 1], 4, -1530992060);
        _cE = _3S(_cE, _hv, _Nt, _u5, x[_t5 + 4], 11, 1272893353);
        _u5 = _3S(_u5, _cE, _hv, _Nt, x[_t5 + 7], 16, -155497632);
        _Nt = _3S(_Nt, _u5, _cE, _hv, x[_t5 + 10], 23, -1094730640);
        _hv = _3S(_hv, _Nt, _u5, _cE, x[_t5 + 13], 4, 681279174);
        _cE = _3S(_cE, _hv, _Nt, _u5, x[_t5 + 0], 11, -358537222);
        _u5 = _3S(_u5, _cE, _hv, _Nt, x[_t5 + 3], 16, -722521979);
        _Nt = _3S(_Nt, _u5, _cE, _hv, x[_t5 + 6], 23, 76029189);
        _hv = _3S(_hv, _Nt, _u5, _cE, x[_t5 + 9], 4, -640364487);
        _cE = _3S(_cE,
            _hv, _Nt, _u5, x[_t5 + 12], 11, -421815835);
        _u5 = _3S(_u5, _cE, _hv, _Nt, x[_t5 + 15], 16, 530742520);
        _Nt = _3S(_Nt, _u5, _cE, _hv, x[_t5 + 2], 23, -995338651);
        _hv = _4S(_hv, _Nt, _u5, _cE, x[_t5 + 0], 6, -198630844);
        _cE = _4S(_cE, _hv, _Nt, _u5, x[_t5 + 7], 10, 1126891415);
        _u5 = _4S(_u5, _cE, _hv, _Nt, x[_t5 + 14], 15, -1416354905);
        _Nt = _4S(_Nt, _u5, _cE, _hv, x[_t5 + 5], 21, -57434055);
        _hv = _4S(_hv, _Nt, _u5, _cE, x[_t5 + 12], 6, 1700485571);
        _cE = _4S(_cE, _hv, _Nt, _u5, x[_t5 + 3], 10, -1894986606);
        _u5 = _4S(_u5, _cE, _hv, _Nt, x[_t5 + 10], 15, -1051523);
        _Nt = _4S(_Nt, _u5, _cE, _hv, x[_t5 + 1],
            21, -2054922799);
        _hv = _4S(_hv, _Nt, _u5, _cE, x[_t5 + 8], 6, 1873313359);
        _cE = _4S(_cE, _hv, _Nt, _u5, x[_t5 + 15], 10, -30611744);
        _u5 = _4S(_u5, _cE, _hv, _Nt, x[_t5 + 6], 15, -1560198380);
        _Nt = _4S(_Nt, _u5, _cE, _hv, x[_t5 + 13], 21, 1309151649);
        _hv = _4S(_hv, _Nt, _u5, _cE, x[_t5 + 4], 6, -145523070);
        _cE = _4S(_cE, _hv, _Nt, _u5, x[_t5 + 11], 10, -1120210379);
        _u5 = _4S(_u5, _cE, _hv, _Nt, x[_t5 + 2], 15, 718787259);
        _Nt = _4S(_Nt, _u5, _cE, _hv, x[_t5 + 9], 21, -343485551);
        _hv = _5S(_hv, _YR);
        _Nt = _5S(_Nt, _ZR);
        _u5 = _5S(_u5, __R);
        _cE = _5S(_cE, _0S)
    }
    return Array(_hv, _Nt, _u5, _cE)
}

function _6S(_7S,
             _hv, _Nt, x, _ZN, _Mt) {
    return _5S(_8S(_5S(_5S(_hv, _7S), _5S(x, _Mt)), _ZN), _Nt)
}

function _1S(_hv, _Nt, _u5, _cE, x, _ZN, _Mt) {
    return _6S((_Nt & _u5) | ((~_Nt) & _cE), _hv, _Nt, x, _ZN, _Mt)
}

function _2S(_hv, _Nt, _u5, _cE, x, _ZN, _Mt) {
    return _6S((_Nt & _cE) | (_u5 & (~_cE)), _hv, _Nt, x, _ZN, _Mt)
}

function _3S(_hv, _Nt, _u5, _cE, x, _ZN, _Mt) {
    return _6S(_Nt ^ _u5 ^ _cE, _hv, _Nt, x, _ZN, _Mt)
}

function _4S(_hv, _Nt, _u5, _cE, x, _ZN, _Mt) {
    return _6S(_u5 ^ (_Nt | (~_cE)), _hv, _Nt, x, _ZN, _Mt)
}

function _5S(x, y) {
    var _9S = (x & 0xFFFF) + (y & 0xFFFF);
    var _aS = (x >> 16) + (y >> 16) + (_9S >> 16);
    return (_aS << 16) | (_9S & 0xFFFF)
}

function _8S(_cN, _bS) {
    return (_cN << _bS) | (_cN >>> (32 - _bS))
}

function _MR(_ZN) {
    return _PR(_cS(_RR(_ZN)))
}

function _cS(_ZN) {
    return _dS(_eS(_fS(_ZN), _ZN.length * 8))
}

function _fS(_VR) {
    var _XR = Array(_VR.length >> 2);
    for (var _t5 = 0; _t5 < _XR.length; _t5++) _XR[_t5] = 0;
    for (var _t5 = 0; _t5 < _VR.length * 8; _t5 += 8) _XR[_t5 >> 5] |= (_VR.charCodeAt(_t5 / 8) & 0xFF) << (24 - _t5 % 32);
    return _XR
}

function _dS(_VR) {
    var _XR = "";
    for (var _t5 = 0; _t5 < _VR.length * 32; _t5 += 8) _XR += String.fromCharCode((_VR[_t5 >> 5] >>> (24 - _t5 % 32)) & 0xFF);
    return _XR
}

function _eS(x, _MN) {
    x[_MN >> 5] |= 0x80 << (24 - _MN % 32);
    x[((_MN + 64 >> 9) << 4) + 15] = _MN;
    var _v5 = Array(80);
    var _hv = 1732584193;
    var _Nt = -271733879;
    var _u5 = -1732584194;
    var _cE = 271733878;
    var e = -1009589776;
    for (var _t5 = 0; _t5 < x.length; _t5 += 16) {
        var _YR = _hv;
        var _ZR = _Nt;
        var __R = _u5;
        var _0S = _cE;
        var _gS = e;
        for (var _Rt = 0; _Rt < 80; _Rt++) {
            if (_Rt < 16) _v5[_Rt] = x[_t5 + _Rt]; else _v5[_Rt] = _8S(_v5[_Rt - 3] ^ _v5[_Rt - 8] ^ _v5[_Rt - 14] ^ _v5[_Rt - 16], 1);
            var _Mt = _5S(_5S(_8S(_hv, 5), _hS(_Rt, _Nt, _u5, _cE)), _5S(_5S(e, _v5[_Rt]), _iS(_Rt)));
            e = _cE;
            _cE = _u5;
            _u5 = _8S(_Nt, 30);
            _Nt = _hv;
            _hv = _Mt
        }
        _hv = _5S(_hv, _YR);
        _Nt = _5S(_Nt, _ZR);
        _u5 = _5S(_u5, __R);
        _cE = _5S(_cE, _0S);
        e = _5S(e, _gS)
    }
    return Array(_hv, _Nt, _u5, _cE, e)
}

function _hS(_Mt, _Nt, _u5, _cE) {
    if (_Mt < 20) return (_Nt & _u5) | ((~_Nt) & _cE);
    if (_Mt < 40) return _Nt ^ _u5 ^ _cE;
    if (_Mt < 60) return (_Nt & _u5) | (_Nt & _cE) | (_u5 & _cE);
    return _Nt ^ _u5 ^ _cE
}

function _iS(_Mt) {
    return (_Mt < 20) ? 1518500249 : (_Mt < 40) ? 1859775393 : (_Mt < 60) ? -1894007588 : -899497514
}

function _jS(_vs, _kS) {
    for (var index = 0; index < _kS.length; index++) {
        var _lS = _kS[index];
        if (_lS._F3 == _vs) {
            return index
        }
    }
    return -1
}

function _mS(_vs, _kS) {
    for (var index = 0; index < _kS.length;
         index++) {
        if (_kS[index] == _vs) {
            return index
        }
    }
    return -1
}

function _Fl(_vs) {
    var _XB = -1;
    if ((_XB = _jS(_vs, _NN._z5)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._Sb)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._N3)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._E3)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._04)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._14)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._k5)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._x5)) >= 0) {
        return _XB
    } else if ((_XB = _mS(_vs, _NN._i5)) >= 0) {
        return _XB
    } else if ((_XB = _jS(_vs, _NN._j5)) >= 0) {
        return _XB
    }
    var _nS = Object.getOwnPropertyNames(_Eh);
    for (var _t5 = 0; _t5 > _nS; _t5++) {
        if (_nS[_t5] == _vs) {
            return _t5
        }
    }
    return -1
}

function _2j(_oS, index, _Gu) {
    _oS._1h[index] = _Gu
};

function _pS() {
    this._qS = 0;
    this._rS = 0;
    this._sS = false;
    this._tS = 0;
    this._uS = 0
};_pS.prototype._vS = function (_wS) {
    this._tS = _wS;
    this._xS()
};
_pS.prototype._yS = function () {
    if (this._tS > 0.0) return true;
    return true
};
_pS.prototype._xS = function () {
    this._qS = 0;
    if (this._tS > 0.0) {
        this._rS = _zS()
    } else {
        this._rS = 0
    }
    this._uS = 0;
    this._sS = false
};
_pS.prototype._OA = function () {
    var current;
    if (this._tS > 0.0) {
        current = this._rS + 1000000.0 / this._tS
    } else current = _zS();
    this._uS = current - this._rS;
    if (!this._sS) this._qS += this._uS;
    this._rS = current
};
_pS.prototype._ns = function () {
    if (this._tS > 0) return this._tS;
    if (this._uS > 0) {
        return 1000000.0 / this._uS
    }
    return 30.0
};
var _ms = new _pS();

function _AS() {
    return _fz._EA()
}

function _BS(_GA) {
    return _fz._PA(_GA)
}

function _CS(_GA) {
    return _fz._wz(_GA)
}

function _DS(_GA) {
    return _fz._Ez(_GA)
}

var _WM = 1, _UM = 2, _ES = 3, _VM = 4, _SM = 5, _TM = 6, _FS = 7, _GS = 8, _HS = 9, _IS = 10, _JS = 11;
var _KS = 0.0;
var _LS = 96;
var _MS = 96;
var _NS = _OS;

function _OS(_2y, _Ox) {
    _Iv._PS();
    var _QS = [];
    _QS[0] = 1;
    _QS[1] = 0;
    _QS[2] = 0;
    _QS[3] = 1;
    _QS[4] = 0;
    _QS[5] = 0;
    _Iv._RS(_QS[0], _QS[1], _QS[2], _QS[3], _QS[4], _QS[5]);
    if (!_Iv.clearRect || _2y != 0 || _Ox != 0) {
        _Iv.globalAlpha = _Ox;
        _Iv.fillStyle = _LD(_Px(_2y), _Ox);
        _Iv.globalCompositeOperation = 'copy';
        _Iv.fillRect(_SS, _TS, _US, _VS)
    } else {
        _Iv.clearRect(_SS, _TS, _US, _VS)
    }
    _Iv._WS()
}

function _XS(_qM, _rM, _sM) {
    return (~~_qM) | (_rM << 8) | (_sM << 16)
}

var _YS = _XS;
var _ZS = _ZS;

function __S(_2y) {
    return (_2y >> 16) & 0xff;
}

var _0T = __S;

function _1T(_2y) {
    return (_2y >> 8) & 0xff
}

var _2T = _1T;

function _3T(_2y) {
    return (_2y & 0xff)
}

var _4T = _3T;

function _5T(_2y) {
    var _6T = 0.0;
    var _7T = 0.0;
    var _8T = 0.0;
    var _au = 0.0;
    var _bu = 0.0;
    var _9T = 0.0;
    var _cE = 0.0;
    var _wt = 0.0;
    _6T = (_2y & 0xff) / 255.0;
    _7T = ((_2y >> 8) & 0xff) / 255.0;
    _8T = ((_2y >> 16) & 0xff) / 255.0;
    _wt = _Lt(_Lt(_6T, _7T), _8T);
    _9T = _Jt(_Jt(_6T, _7T), _8T);
    _cE = _9T - _wt;
    if (_9T == 0) _bu = 0.0; else _bu = 1.0 * _cE / _9T;
    if (_bu == 0) _au = 0.0; else if (_6T == _9T) _au = 60.0 * (_7T - _8T) / _cE; else if (_7T == _9T) _au = 120.0 + 60.0 * (_8T - _6T) / _cE; else _au = 240.0 + 60.0 * (_6T - _7T) / _cE;
    if (_au < 0) _au = _au + 360.0;
    var _uv = (Math.floor(_9T * 255.0) & 0xff) << 16;
    var _ZN = (Math.floor(_bu * 255.0) & 0xff) << 8;
    var _w5 = (Math.floor(_au * 255.0 / 360.0)) & 0xff;
    return (_uv | _ZN | _w5)
}

function _qr(_2y) {
    return _5T(_2y) & 0xff
}

var _aT = _qr;

function _bT(_2y) {
    return (_5T(_2y) >> 8) & 0xff
}

var _cT = _bT;

function _dT(_2y) {
    return (_5T(_2y) >> 16) & 0xff
}

var _eT = _dT;

function _fT(_TQ, _UQ, _gT) {
    var _VQ = (_TQ >> 16) & 0xff;
    var _XQ = (_TQ >> 8) & 0xff;
    var _ZQ = _TQ & 0xff;
    var _WQ = (_UQ >> 16) & 0xff;
    var _YQ = (_UQ >> 8) & 0xff;
    var __Q = _UQ & 0xff;
    var _hT = 1.0 - _gT;
    var _Kt = ~~(_VQ * _hT + _WQ * _gT);
    var _gv = ~~(_XQ * _hT + _YQ * _gT);
    var _Nt = ~~(_ZQ * _hT + __Q * _gT);
    return ((_Kt << 16) & 0xff0000) | ((_gv << 8) & 0xff00) | (_Nt & 0xff)
}

var _iT = _fT;

function _qf(_jT, _kT, _AM) {
    var _6T = 0.0;
    var _7T = 0.0;
    var _8T = 0.0;
    var _au = 0.0;
    var _bu = 0.0;
    var _9T = 0.0;
    var _CO = 0.0;
    var _lT = 0.0;
    var _7S = 0.0;
    var _Mt = 0.0;
    var _t5 = 0;
    var _mT;
    _au = _jT * 360.0 / 255.0;
    if (_au == 360.0) _au = 0.0;
    _bu = _kT / 255.0;
    _9T = _AM / 255.0;
    if (_bu == 0) {
        _6T = _9T;
        _7T = _9T;
        _8T = _9T
    } else {
        _au = _au / 60.0;
        _t5 = Math.floor(_au);
        _CO = _au - _t5;
        _lT = _9T * (1.0 - _bu);
        _7S = _9T * (1.0 - (_bu * _CO));
        _Mt = _9T * (1.0 - (_bu * (1.0 - _CO)));
        switch (_t5) {
            case 0: {
                _6T = _9T;
                _7T = _Mt;
                _8T = _lT
            }
                break;
            case 1: {
                _6T = _7S;
                _7T = _9T;
                _8T = _lT
            }
                break;
            case 2: {
                _6T = _lT;
                _7T = _9T;
                _8T = _Mt
            }
                break;
            case 3: {
                _6T = _lT;
                _7T = _7S;
                _8T = _9T
            }
                break;
            case 4: {
                _6T = _Mt;
                _7T = _lT;
                _8T = _9T
            }
                break;
            default : {
                _6T = _9T;
                _7T = _lT;
                _8T = _7S
            }
        }
    }
    _mT = Math.floor(_6T * 255.0) | (Math.floor(_7T * 255.0) << 8) | (Math.floor(_8T * 255.0) << 16);
    return _mT
}

var _nT = _qf;

function _vm(_Ox) {
    if (_Ox < 0) {
        _Ox = 0
    }
    if (_Ox > 1) {
        _Ox = 1
    }
    _Lx = _Ox;
    _oT = _LD(_Mx, _Lx)
}

function _pT() {
    return _Lx
}

function _qT() {
    return _3Q
}

var _rT = _qT;

function _Bh(_Nx) {
    _3Q = _Nx;
    _Mx = _Px(_Nx);
    _sT = _tT(_Mx);
    _oT = _LD(_Mx, _Lx)
}

var _Bl = _Bh;
;
;
;
;

function _uT(_1u, _2u, _ot, _pt, _TQ, _UQ, _vT) {
    _wT(_1u, _2u, _ot, _pt, 10, 10, _TQ, _UQ, _vT)
}

var _xT = _uT;
var _wT = _yT;
var _zT = _yT;

function _yT(_1u, _2u, _ot, _pt, _AT, _BT, _TQ, _UQ, _vT) {
    if (_KS != 0.0) {
        _1u += _KS;
        _2u += _KS;
        _ot += _KS;
        _pt += _KS
    }
    if (_pt < _2u) {
        var _CT = _2u;
        _2u = _pt;
        _pt = _CT
    }
    if (_ot < _1u) {
        var _CT = _1u;
        _1u = _ot;
        _ot = _CT
    }
    var width = _ot - _1u;
    var height = _pt - _2u;
    _DT = _AT;
    _ET = _BT;
    var _2v = _Iv.globalAlpha = _Lx;
    _Iv.beginPath();
    _Iv.moveTo(_1u + _DT, _2u);
    _Iv.lineTo(_1u + width - _DT, _2u);
    _Iv.quadraticCurveTo(_1u + width,
        _2u, _1u + width, _2u + _ET);
    _Iv.lineTo(_1u + width, _2u + height - _ET);
    _Iv.quadraticCurveTo(_1u + width, _2u + height, _1u + width - _DT, _2u + height);
    _Iv.lineTo(_1u + _DT, _2u + height);
    _Iv.quadraticCurveTo(_1u, _2u + height, _1u, _2u + height - _ET);
    _Iv.lineTo(_1u, _2u + _ET);
    _Iv.quadraticCurveTo(_1u, _2u, _1u + _DT, _2u);
    _Iv.closePath();
    if (_vT) {
        _Iv.strokeStyle = _LD(_Px(_TQ), 1.0);
        _Iv.stroke()
    } else {
        _Iv.fillStyle = _LD(_Px(_TQ), 1.0);
        _Iv.fill()
    }
}

var _Am = _FT;

function _FT(_1u, _2u, _ot, _pt, _vT) {
    _1u = ~~_1u;
    _2u = ~~_2u;
    _ot = ~~_ot;
    _pt = ~~_pt;
    _Iv.globalAlpha = _Lx;
    if (_vT) {
        if (_KS != 0.0) {
            _1u += _KS;
            _2u += _KS;
            _ot += _KS;
            _pt += _KS
        }
        _Iv.lineWidth = 1;
        _Iv.strokeStyle = _oT;
        _Iv._GT(_1u + 0.5, _2u + 0.5, (_ot - _1u), (_pt - _2u))
    } else {
        if (_KS != 0.0) {
            _ot += _KS;
            _pt += _KS
        }
        _Iv.fillStyle = _oT;
        _Iv._HT(_1u, _2u, _ot - _1u + 1, _pt - _2u + 1)
    }
}

var _IT = _JT;
var _KT = _JT;

function _JT(_1u, _2u, _ot, _pt, _TQ, _UQ, _LT, _MT, _vT) {
    var _2v = _LD(_Px(_TQ), 1.0);
    _Iv.globalAlpha = _Lx;
    if (_vT) {
        if (_KS != 0.0) {
            _1u += _KS;
            _2u += _KS;
            _ot += _KS;
            _pt += _KS
        }
        _Iv.lineWidth = 1;
        _Iv.strokeStyle = _2v;
        _Iv._GT(_1u + 0.5, _2u + 0.5, (_ot - _1u), (_pt - _2u))
    } else {
        if (_KS != 0.0) {
            _ot += _KS;
            _pt += _KS
        }
        _Iv.fillStyle = _2v;
        _Iv._HT(_1u + 0.5, _2u + 0.5, (_ot - _1u), (_pt - _2u))
    }
}

var _NT = _OT;

function _OT(_1u, _2u, _ot, _pt, _TQ, _UQ, _PT, _vT) {
    _Iv.globalAlpha = _Lx;
    _Iv.lineWidth = 1;
    var _QT = _LD(_Px(_TQ), 1.0);
    var _RT = _LD(_Px(_UQ), 1.0);
    var _ST;
    if (_PT) {
        _ST = _Iv.createLinearGradient(_1u, _2u, _1u, _pt)
    } else {
        _ST = _Iv.createLinearGradient(_1u, _2u, _ot, _2u)
    }
    _ST.addColorStop(0, _QT);
    _ST.addColorStop(1, _RT);
    if (_vT) {
        if (_KS != 0.0) {
            _1u += _KS;
            _2u += _KS;
            _ot += _KS;
            _pt += _KS
        }
        _Iv.strokeStyle = _ST;
        _Iv._GT(_1u + 0.5, _2u + 0.5, _ot - _1u, _pt - _2u)
    }
    else {
        if (_KS != 0.0) {
            _ot += _KS;
            _pt += _KS
        }
        _Iv.fillStyle = _ST;
        _Iv._HT(_1u + 0.5, _2u + 0.5, _ot - _1u, _pt - _2u)
    }
}

var _TT = _UT;

function _UT(_Ps, _Qs) {
    if (_KS != 0.0) {
        _Ps += _KS;
        _Qs += _KS
    }
    _Iv.globalAlpha = _Lx;
    _Iv.fillStyle = _oT;
    _Iv._HT(_Ps, _Qs, 1, 1)
}

function _VT(_1u, _2u, _ot, _pt, _HB) {
    if (_KS != 0.0) {
        _1u += _KS;
        _2u += _KS;
        _ot += _KS;
        _pt += _KS
    }
    _Iv.globalAlpha = _Lx;
    _Iv.strokeStyle = _sT;
    _Iv.lineWidth = _HB;
    _Iv._WT();
    _Iv._XT(_1u + 0.5, _2u + 0.5);
    _Iv._YT(_ot + 0.5, _pt + 0.5);
    _Iv._ZT();
    _Iv.__T();
    _Iv._HT(_ot, _pt, 1, 1)
}

function _Io(_1u, _2u, _ot, _pt) {
    _VT(_1u, _2u,
        _ot, _pt, 1)
}

var _0U = _1U;
var _2U = _3U;

function _1U(_Ps, _Qs) {
    return _3U(_Ps, _Qs) & 0x00ffffff
}

function _3U(_Ps, _Qs) {
    var _4U = canvas.width / _5U;
    var _6U = canvas.height / _7U;
    var _2v = _8U(canvas, _Ps * _4U, _Qs * _6U);
    return _2v
}

var _hp = _9U;

function _9U(_1u, _2u, _ot, _pt, _aU, _bU, _vT) {
    if (_KS != 0.0) {
        _1u += _KS;
        _2u += _KS;
        _ot += _KS;
        _pt += _KS;
        _aU += _KS;
        _bU += _KS
    }
    _Iv.globalAlpha = _Lx;
    _Iv.lineWidth = 1;
    if (_vT) {
        _Iv.strokeStyle = _oT;
        _Iv._WT();
        _Iv._XT(_1u, _2u);
        _Iv._YT(_ot, _pt);
        _Iv._YT(_aU, _bU);
        _Iv._YT(_1u, _2u);
        _Iv.__T();
        _Iv._ZT()
    } else {
        _Iv.strokeStyle = _oT;
        _Iv.lineJoin = "bevel";
        _Iv.fillStyle = _oT;
        _Iv._WT();
        _Iv._XT(_1u, _2u);
        _Iv._YT(_ot, _pt);
        _Iv._YT(_aU, _bU);
        _Iv._YT(_1u, _2u);
        _Iv._cU();
        _Iv.__T();
        _Iv._ZT();
        _Iv.lineJoin = "miter"
    }
}

var _dU = _eU;
var _fU = _eU;

function _eU(_1u, _2u, _ot, _pt, _aU, _bU, _TQ, _UQ, _LT, _vT) {
    var _QT = _tT(_Px(_TQ) | 0xff000000);
    if (_KS != 0.0) {
        _1u += _KS;
        _2u += _KS;
        _ot += _KS;
        _pt += _KS;
        _aU += _KS;
        _bU += _KS
    }
    _Iv.globalAlpha = _Lx;
    _Iv.lineWidth = 1;
    if (_vT) {
        _Iv.strokeStyle = _QT;
        _Iv._WT();
        _Iv._XT(_1u, _2u);
        _Iv._YT(_ot, _pt);
        _Iv._YT(_aU, _bU);
        _Iv._YT(_1u, _2u);
        _Iv.__T();
        _Iv._ZT()
    }
    else {
        _Iv.strokeStyle = _QT;
        _Iv.lineJoin = "bevel";
        _Iv.fillStyle = _QT;
        _Iv._WT();
        _Iv._XT(_1u, _2u);
        _Iv._YT(_ot, _pt);
        _Iv._YT(_aU, _bU);
        _Iv._YT(_1u, _2u);
        _Iv._cU();
        _Iv.__T();
        _Iv._ZT();
        _Iv.lineJoin = "miter"
    }
}

var _gU = _hU;

function _hU(_1u, _2u, _ot, _pt, _gT, _iU, _jU, _kU, _lU, _mU, _nU, _oU) {
    var _pU;
    var _qU;
    var _rU;
    var _sU;
    var _2v;
    if (_nU) {
        _IT(_1u, _2u, _ot, _pt, _iU, _iU, _iU, _iU, false);
        if (_oU) {
            _IT(_1u, _2u, _ot, _pt, _tU, _tU, _tU, _tU, true)
        }
    }
    if (_gT < 0) {
        _gT = 0
    }
    if (_gT > 100) {
        _gT = 100
    }
    var _uU = _gT / 100;
    switch (_mU) {
        case 0:
            _pU = _1u;
            _rU = _2u;
            _qU = _1u + _uU * (_ot - _1u);
            _sU = _pt;
            break;
        case 1:
            _pU = _ot - _uU * (_ot - _1u);
            _rU = _2u;
            _qU = _ot;
            _sU = _pt;
            break;
        case 2:
            _pU = _1u;
            _rU = _2u;
            _qU = _ot;
            _sU = _2u + _uU * (_pt - _2u);
            break;
        case 3:
            _pU = _1u;
            _rU = _pt - _uU * (_pt - _2u);
            _qU = _ot;
            _sU = _pt;
            break;
        default :
            _pU = _1u;
            _rU = _2u;
            _qU = _1u + _uU * (_ot - _1u);
            _sU = _pt;
            break
    }
    if (_gT > 50) {
        _2v = _SQ(_kU, _lU, (_gT - 50.0) / 50.0)
    } else {
        _2v = _SQ(_jU, _kU, _gT / 50.0)
    }
    _IT(_pU, _rU, _qU, _sU, _2v, _2v, _2v, _2v, false);
    if (_oU) {
        _IT(_pU, _rU, _qU, _sU, _tU, _tU, _tU, _tU, true)
    }
}

var _vU = _wU;

function _wU(_xt, _yt, _zt, _At, _l5) {
    var _xU = Math.sqrt(((_zt - _xt) * (_zt - _xt)) + ((_At - _yt) * (_At - _yt)));
    if (_xU != 0) {
        if (_l5 > _xU) {
            _l5 = _xU
        }
        var _St = _l5 * (_zt - _xt) / _xU;
        var _Ut = _l5 * (_At - _yt) / _xU;
        _Io(_xt, _yt, _zt, _At);
        _hp(_zt - _St - _Ut / 3.0, _At - _Ut + _St / 3.0, _zt, _At, _zt - _St + _Ut / 3.0, _At - _Ut - _St / 3.0, false)
    }
}

function _yU(_1u, _2u, _ot, _pt, _vT) {
    _zU(_1u, _2u, _ot, _pt, _3Q, _3Q, _vT)
}

var _zU = _AU;
var _BU = _AU;

function _AU(x, y, _xt, _yt, _TQ, _UQ, _CU) {
    if (_KS != 0.0) {
        x += _KS;
        y += _KS;
        _xt += _KS;
        _yt += _KS
    }
    var _v5 = _xt - x;
    var _w5 = _yt - y;
    var _DU = 0.5522848;
    _EU = (_v5 / 2) * _DU, _FU = (_w5 / 2) * _DU, _GU = x + _v5, _HU = y + _w5, _IU = x + _v5 / 2, _JU = y + _w5 / 2;
    _Iv.beginPath();
    _Iv.moveTo(x,
        _JU);
    _Iv.bezierCurveTo(x, _JU - _FU, _IU - _EU, y, _IU, y);
    _Iv.bezierCurveTo(_IU + _EU, y, _GU, _JU - _FU, _GU, _JU);
    _Iv.bezierCurveTo(_GU, _JU + _FU, _IU + _EU, _HU, _IU, _HU);
    _Iv.bezierCurveTo(_IU - _EU, _HU, x, _JU + _FU, x, _JU);
    _Iv.closePath();
    var _QT = _LD(_Px(_TQ), 1.0);
    var _RT = _LD(_Px(_UQ), 1.0);
    if (_v5 <= 0) _v5 *= -1;
    if (_w5 <= 0) _w5 *= -1;
    var _ST = _Iv.createRadialGradient(_IU, _JU, 0, _IU, _JU, min(_v5 / 2, _w5 / 2));
    _ST.addColorStop(0, _QT);
    _ST.addColorStop(1, _RT);
    _Iv.globalAlpha = _Lx;
    if (_CU) {
        _Iv.lineWidth = 1;
        _Iv.strokeStyle = _ST;
        _Iv.stroke()
    } else {
        _Iv.fillStyle = _ST;
        _Iv.fill()
    }
}

var _KU = _LU;
var _MU = _LU;

function _LU(_Ps, _Qs, _NU, _TQ, _UQ, _vT) {
    if (_KS != 0.0) {
        _Ps += _KS;
        _Qs += _KS
    }
    _Iv.globalAlpha = _Lx;
    var _QT = _LD(_Px(_TQ), 1.0);
    var _RT = _LD(_Px(_UQ), 1.0);
    var _ST = _Iv.createRadialGradient(_Ps, _Qs, 0, _Ps, _Qs, _NU);
    _ST.addColorStop(0, _QT);
    _ST.addColorStop(1, _RT);
    _Iv._WT();
    if (_vT) {
        _Iv.lineWidth = 1;
        _Iv.strokeStyle = _ST;
        _Iv._OU(_Ps, _Qs, _NU, 0, Math.PI * 2, true);
        _Iv.__T()
    } else {
        _Iv.fillStyle = _ST;
        _Iv._OU(_Ps, _Qs, _NU, 0, Math.PI * 2, false);
        _Iv._cU()
    }
    _Iv._ZT()
}

function _En(_Ps, _Qs, _NU, _vT) {
    _KU(_Ps, _Qs,
        _NU, _3Q, _3Q, _vT)
}

var _PU = _QU;
var _RU = _QU;

function _QU(_Ps, _Qs, _2y) {
    if (_KS != 0.0) {
        _Ps += _KS;
        _Qs += _KS
    }
    var _QT = _LD(_Px(_2y), 1.0);
    _Iv.globalAlpha = _Lx;
    _Iv.fillStyle = _QT;
    _Iv._HT(_Ps, _Qs, 1, 1)
}

var _SU = _TU;
var _UU = _TU;

function _TU(_1u, _2u, _ot, _pt, _HB, _TQ, _UQ) {
    if (_KS != 0.0) {
        _1u += _KS;
        _2u += _KS;
        _ot += _KS;
        _pt += _KS
    }
    _Iv.globalAlpha = _Lx;
    var _QT = _LD(_Px(_TQ), 1.0);
    var _RT = _LD(_Px(_UQ), 1.0);
    var _ST = _Iv.createLinearGradient(_1u, _2u, _ot, _pt);
    _ST.addColorStop(0, _QT);
    _ST.addColorStop(1, _RT);
    _Iv.strokeStyle = _ST;
    _Iv._WT();
    _Iv._XT(_1u + 0.5,
        _2u + 0.5);
    _Iv._YT(_ot + 0.5, _pt + 0.5);
    _Iv.lineWidth = _HB;
    _Iv.__T();
    _Iv._ZT()
}

function _VU(_1u, _2u, _ot, _pt, _TQ, _UQ) {
    _SU(_1u, _2u, _ot, _pt, 1, _TQ, _UQ)
}

var _WU = _VU;

function _XU(x, y, _xt, _yt, _QT, _RT, _CU) {
    _zU(x, y, _xt, _yt, _QT, _RT, _CU)
}

function _YU(_ZU) {
    switch (_ZU) {
        case 1:
            __U(_SM, _UM);
            break;
        case 2:
            __U(_SM, _VM);
            break;
        case 3:
            __U(_WM, _VM);
            break;
        default :
            __U(_SM, _TM);
            break
    }
}

var __U = _0V;

function _0V(src, _wG) {
    _zw("Blend modes only available in WebGL mode.")
};
;
;
;
;
;
;
;
;
;

function _1V(_kc, _lc, _gc, _hc, angle) {
    if (Math.abs(angle) < 0.001) {
        _2V.left = _kc;
        _2V.top = _lc;
        _2V.right = _kc + _gc;
        _2V.bottom = _lc + _hc
    } else {
        var _3V = angle * (Math.PI / 180.0);
        var _ZN = Math.abs(sin(_3V));
        var _u5 = Math.abs(cos(_3V));
        var _PQ = (_u5 * _gc) + (_ZN * _hc);
        var _4V = (_ZN * _gc) + (_u5 * _hc);
        _2V.left = (_kc + (_gc - _PQ) / 2);
        _2V.right = (_kc + (_gc + _PQ) / 2);
        _2V.top = (_lc + (_hc - _4V) / 2);
        _2V.bottom = (_lc + (_hc + _4V) / 2)
    }
};

function _5V() {
    this._6V = 0;
    this._7V = null;
    this._8V = new _0C()
};

function _9V() {
    this._aV = 0;
    this._bV = new _JJ();
    this._cV = new _JJ();
    this._dV = new _JJ();
    this._eV = new _JJ();
    this._fV = new _JJ();
    this._gV = new _JJ();
    this._hV = 0;
    this._iV = 0;
    this._jV = 0;
    this._kV = 0;
    this._lV = 0;
    this._mV = 0;
    this._nV = 0;
    this._oV = 0;
    this._pV = 0;
    this._qV = -1;
    this._rV = -1;
    this._sV = -1;
    this._tV = -1;
    this._uV = true
};_9V.prototype._vV = function () {
    if (this._bV._wt[11] == 0) return true;
    return false
};
_9V.prototype._wV = function () {
    if (this._vV()) {
        if ((this._bV._wt[4] == 0.0) && (this._bV._wt[8] == 0.0) && (this._bV._wt[1] == 0.0) && (this._bV._wt[9] == 0.0) && (this._bV._wt[2] == 0.0) && (this._bV._wt[6] == 0.0)) {
            if ((this._cV._wt[2] == 0.0) && (this._cV._wt[6] == 0.0)) {
                this._uV = true;
                return
            }
        }
    }
    this._uV = false
};
_9V.prototype._xV = function (_yV) {
    this._cV = _yV;
    this._fV._zV(_yV);
    this._dV.Multiply(this._cV, this._bV);
    this._gV._zV(this._dV);
    this._wV()
};
_9V.prototype._AV = function (_yV) {
    this._bV = _yV;
    this._eV._zV(_yV);
    this._dV.Multiply(this._cV, this._bV);
    this._gV._zV(this._dV);
    this._wV()
};
_5V.prototype._BV = function () {
    var _CV = new _9V();
    _CV._aV = this._6V;
    this._6V++;
    this._8V._3C(_CV);
    return _CV._aV
};
_5V.prototype._DV = function (_EV) {
    for (var _t5 = 0; _t5 < this._8V.length; _t5++) {
        if (this._8V._RB(_t5) != null) if (this._8V._RB(_t5)._aV == _EV) return this._8V._RB(_t5);
    }
    return null
};
_5V.prototype._FV = function (_GV) {
    if (_GV == null) return null;
    var _HV = this._BV();
    var _IV = this._DV(_HV);
    if (_IV != null) {
        _IV._JV(_GV._KV);
        _IV._LV(_GV._MV);
        _IV._NV(_GV._OV);
        _IV._PV(_GV._QV);
        _IV._RV(_GV._2c);
        _IV._SV(_GV._3c);
        _IV._TV(_GV._UV);
        _IV._VV(_GV._WV);
        _IV._XV(0.0);
        _IV._YV(_GV._ZV);
        _IV.__V(_IV._0W() + _IV._1W() * 0.5, _IV._2W() + _IV._3W() * 0.5);
    }
    return _IV
};
_5V.prototype._4W = function () {
};
_5V.prototype._5W = function () {
};
_5V.prototype._6W = function () {
    this._7W = 0;
    this._7V = null;
    this._8W = 0;
    this._9W = 0
};
_5V.prototype._aW = function () {
    return this._7V
};
_5V.prototype._bW = function (_wS) {
    if (typeof(_wS) == _9V) {
        this._7V = _wS
    } else {
        this._7V = this._DV(_wS)
    }
};
_9V.prototype._cW = function () {
    return this._qV
};
_9V.prototype._YV = function (_wS) {
    this._qV = _wS
};
_9V.prototype._dW = function () {
    return this._gV
};
_9V.prototype._JV = function (_wS) {
    this._hV = _wS
};
_9V.prototype._0W = function () {
    return this._hV
};
_9V.prototype._LV = function (_wS) {
    this._iV = _wS
};
_9V.prototype._2W = function () {
    return this._iV
};
_9V.prototype._eW = function () {
    return this._aV
};
_9V.prototype._NV = function (_wS) {
    this._jV = _wS
};
_9V.prototype._1W = function () {
    return this._jV
};
_9V.prototype._PV = function (_wS) {
    this._kV = _wS
};
_9V.prototype._3W = function () {
    return this._kV
};
_9V.prototype._RV = function (_wS) {
    this._lV = _wS
};
_9V.prototype._fW = function () {
    return this._lV
};
_9V.prototype._SV = function (_wS) {
    this._mV = _wS
};
_9V.prototype._gW = function () {
    return this._mV
};
_9V.prototype._TV = function (_wS) {
    this._nV = _wS
};
_9V.prototype._hW = function () {
    return this._nV
};
_9V.prototype._VV = function (_wS) {
    this._oV = _wS
};
_9V.prototype._iW = function () {
    return this._oV
}
;_9V.prototype._XV = function (_wS) {
    this._pV = _wS
};
_9V.prototype._jW = function () {
    return this._pV
};
_9V.prototype._By = function () {
    if (this._rV != -1) {
        _C3._24[this._rV](_kW, _kW)
    }
};
_9V.prototype._Dy = function () {
    if (this._sV != -1) {
        _C3._24[this._sV](_kW, _kW)
    }
};
_9V.prototype._lW = function () {
    var _mW = new _2K();
    _mW._AK = -this._cV._wt[_iL];
    _mW._BK = -this._cV._wt[_lL];
    _mW._CK = -this._cV._wt[_qL];
    return _mW
};
_9V.prototype._nW = function () {
    if (this._vV()) {
        var _oW = this._lW();
        var _pW, _qW, _rW, _sW;
        _pW = this._gV._tW(new _2K(-1.0, 0.0, 0.0));
        _qW = this._gV._tW(new _2K(1.0,
            0.0, 0.0));
        _rW = this._gV._tW(new _2K(0.0, 1.0, 0.0));
        _sW = this._gV._tW(new _2K(0.0, -1.0, 0.0));
        var _uW = _qW._vW(_pW);
        var _wW = _rW._vW(_sW);
        _xW = _uW.Length();
        _yW = _wW.Length();
        _zW = _oW._AK - (_xW * 0.5);
        _AW = _oW._BK - (_yW * 0.5);
        var _BW = _wW;
        _BW._xK();
        var angle = Math.acos(_BW._BK);
        if (_BW._AK < 0.0) {
            angle = (2.0 * Math.PI) - angle
        }
        var _CW = (angle / (2.0 * Math.PI)) * 360.0;
        _1V(_zW, _AW, _xW, _yW, _CW)
    } else {
        _zW = 0;
        _AW = 0;
        _xW = _js != null ? _js._DW() : 1;
        _yW = _js != null ? _js._EW() : 1;
        _1V(_zW, _AW, _xW, _yW, 0)
    }
    if (_uu != null) {
        _2L(_FW, this._cV)
    } else {
        _2L(_FW, this._cV);
        var _GW = _US / _xW;
        var _HW = _VS / _yW;
        _IW[0] = this._cV._wt[_fL] * _GW;
        _IW[1] = this._cV._wt[_gL] * _GW;
        _IW[2] = (this._cV._wt[_iL] + (_xW * 0.5)) * _GW + _SS;
        _IW[3] = this._cV._wt[_jL] * _HW;
        _IW[4] = this._cV._wt[_bK] * _HW;
        _IW[5] = (this._cV._wt[_lL] + (_yW * 0.5)) * _HW + _TS;
        _Iv._RS(_IW[0], _IW[3], _IW[1], _IW[4], _IW[2], _IW[5])
    }
    if (_cK == -1) {
        _2L(_JW, this._bV)
    } else {
        var _KW = new _JJ();
        _KW._wt[_bK] = -1;
        var _9K = new _JJ();
        _9K.Multiply(this._bV, _KW);
        _2L(_JW, _9K)
    }
};
_9V.prototype._OA = function () {
    if (this._tV != -1) {
        _C3._24[this._tV](_kW, _kW)
    } else {
        if ((this._qV >= 0) && (this._uV)) {
            var _oS = null;
            if (this._qV < 10000) {
                var _LP = _4s._RB(this._qV);
                var _gC = _LP._LW();
                for (var _MW = 0; _MW < _gC.length; _MW++) {
                    var _NW = _gC[_MW];
                    if (_NW._gg) continue;
                    if (!_NW._hg) continue;
                    _oS = _NW;
                    break
                }
            } else {
                _oS = _OW._RB(this._qV);
                if (_oS != null) {
                    if (_oS._gg || (!_oS._hg)) _oS = null
                }
            }
            if (_oS != null) {
                var _PW = this._jV * 0.5;
                var _QW = this._kV * 0.5;
                var _It, _Mt;
                var _RW, _SW;
                _It = this._hV;
                _Mt = this._iV;
                if (_oS._TW) _oS._UW();
                _RW = Math.floor(_oS.x);
                _SW = Math.floor(_oS.y);
                if (2 * this._nV >= this._jV) {
                    _It = _RW - _PW
                } else if (_RW - this._nV < this._hV) {
                    _It = _RW - this._nV
                }
                else if (_RW + this._nV > (this._hV + this._jV)) {
                    _It = _RW + this._nV - this._jV
                }
                if (2 * this._oV >= this._kV) {
                    _Mt = _SW - _QW
                } else if (_SW - this._oV < this._iV) {
                    _Mt = _SW - this._oV
                } else if (_SW + this._oV > (this._iV + this._kV)) {
                    _Mt = _SW + this._oV - this._kV
                }
                if (_It < 0) _It = 0;
                if (_It + this._jV > _js._DW()) _It = _js._DW() - this._jV;
                if (_Mt < 0) _Mt = 0;
                if (_Mt + this._kV > _js._EW()) _Mt = _js._EW() - this._kV;
                if (this._lV >= 0) {
                    if ((_It < this._hV) && (this._hV - _It > this._lV)) _It = this._hV - this._lV;
                    if ((_It > this._hV) && (_It - this._hV > this._lV)) _It = this._hV + this._lV
                }
                if (this._mV >= 0) {
                    if ((_Mt < this._iV) && (this._iV - _Mt > this._mV)) _Mt = this._iV - this._mV;
                    if ((_Mt > this._iV) && (_Mt - this._iV > this._mV)) _Mt = this._iV + this._mV
                }
                this._hV = _It;
                this._iV = _Mt;
                this.__V(_It + _PW, _Mt + _QW)
            }
        }
    }
};
_9V.prototype.__V = function (_wS, _VW) {
    var _Hv = new _2K();
    var _vv = new _2K();
    var _zv = new _2K();
    _Hv._AK = _wS;
    _Hv._BK = _VW;
    _Hv._CK = -16000.0;
    _vv._AK = _wS;
    _vv._BK = _VW;
    _vv._CK = 0.0;
    _zv._AK = Math.sin(-this._pV * (Math.PI / 180.0));
    _zv._BK = Math.cos(-this._pV * (Math.PI / 180.0));
    _zv._CK = 0.0;
    var _WW = new _JJ();
    _WW._5K(_Hv, _vv, _zv);
    var _XW = new _JJ();
    _XW._fK(this._jV, this._kV, 1, 32000.0);
    this._xV(_WW);
    this._AV(_XW)
};
_9V.prototype._YW = function (_wS, _VW) {
    var _Hv = new _2K();
    var _vv = new _2K();
    var _zv = new _2K();
    _Hv._AK = _wS;
    _Hv._BK = _VW;
    _Hv._CK = -(this._jV);
    _vv._AK = _wS;
    _vv._BK = _VW;
    _vv._CK = 0.0;
    _zv._AK = Math.sin(-this._pV * (Math.PI / 180.0));
    _zv._BK = Math.cos(-this._pV * (Math.PI / 180.0));
    _zv._CK = 0.0;
    var _WW = new _JJ();
    _WW._5K(_Hv, _vv, _zv);
    var _XW = new _JJ();
    _XW._gK(1.0, -(this._kV) / (this._jV), 1, 32000.0);
    this._xV(_WW);
    this._AV(_XW)
};

function _Kk() {
    return _ZW._BV()
};
;
;
;

function _sl(_wS,
             _VW) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        __W._YV(_VW)
    }
};
;
;
;
;

function _nl(_wS, _VW, _0X) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        __W._JV(_VW);
        __W._LV(_0X);
        __W.__V(__W._0W() + __W._1W() * 0.5, __W._2W() + __W._3W() * 0.5)
    }
};

function _ol(_wS, _VW, _0X) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        __W._NV(_VW);
        __W._PV(_0X);
        __W.__V(__W._0W() + __W._1W() * 0.5, __W._2W() + __W._3W() * 0.5)
    }
};

function _rl(_wS, _VW, _0X) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        __W._RV(_VW);
        __W._SV(_0X)
    }
};

function _ql(_wS, _VW, _0X) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        __W._TV(_VW);
        __W._VV(_0X)
    }
};

function _pl(_wS, _VW) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        __W._XV(_VW);
        __W.__V(__W._0W() + __W._1W() * 0.5, __W._2W() + __W._3W() * 0.5)
    }
};
;
;

function _gl(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._cW()
    }
    return -1
};
;
;
;

function _7l(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._0W()
    }
    return -1
};

function _8l(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._2W()
    }
    return -1
};

function _9l(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._1W()
    }
    return -1
};

function _al(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._3W()
    }
    return -1
};

function _el(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._fW()
    }
    return -1
};

function _fl(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._gW()
    }
    return -1
};

function _cl(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._hW()
    }
    return -1
};

function _dl(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._iW();
    }
    return -1
};

function _bl(_wS) {
    var __W = _ZW._DV(_wS);
    if (__W != null) {
        return __W._jW()
    }
    return -1
};

function _1X() {
    _2X = true
};

function _3X() {
    if (_2X) {
        var _4X = new _JJ();
        _4X._zV(_yL[_3L]);
        var _mv = [];
        var _nv = [];
        _mv[0] = _2V.left;
        _mv[1] = _2V.right;
        _mv[2] = _2V.right;
        _mv[3] = _2V.left;
        _nv[0] = _2V.top;
        _nv[1] = _2V.top;
        _nv[2] = _2V.bottom;
        _nv[3] = _2V.bottom;
        _5X.left = Number._6X;
        _5X.top = Number._6X;
        _5X.right = Number._7X;
        _5X.bottom = Number._7X;
        for (var _t5 = 0; _t5 < 4; _t5++) {
            var _8X = ((_mv[_t5] * _4X._wt[0]) + (_nv[_t5] * _4X._wt[4]) + _4X._wt[12]);
            var _9X = ((_mv[_t5] * _4X._wt[1]) + (_nv[_t5] * _4X._wt[5]) + _4X._wt[13]);
            _5X.left = _Lt(_5X.left, _8X);
            _5X.top = _Lt(_5X.top, _9X);
            _5X.right = _Jt(_5X.right, _8X);
            _5X.bottom = _Jt(_5X.bottom, _9X)
        }
        _2X = false
    }
};

function _8G(_wS, _VW, _0X, _aX, _bX, _cX, _dX, _eX, _fX) {
    var _tw = new _2K(_wS, _VW, _0X);
    var _uw = new _2K(_aX, _bX, _cX);
    var _vw = new _2K(_dX, _eX, _fX);
    var _wt = new _JJ();
    _wt._5K(_tw, _uw, _vw);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
};

function _aG(_wS, _VW, _0X, _aX) {
    var _wt = new _JJ();
    _wt._fK(_wS, _VW, _0X, _aX);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
};

function _cG(_wS, _VW, _0X, _aX) {
    var _wt = new _JJ();
    _wt._gK(_wS, _VW, _0X, _aX);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
};

function _eG(_wS, _VW, _0X, _aX) {
    var _wt = new _JJ();
    _wt._aK(_wS, _VW, _0X, _aX);
    var _xL = [];
    for (var _t5 = 0; _t5 < 16; _t5++) {
        _xL[_t5] = _wt._wt[_t5]
    }
    return _xL
};

function _6l(_1K) {
    return _Eh._gX[_1K]
};

function _hl(_1K) {
    return _Eh._hX[_1K]
};

function _il(_1K) {
    return _Eh._iX[_1K]
};

function _jl(_1K) {
    return _Eh._jX[_1K]
};

function _kl(_1K) {
    return _Eh._kX[_1K]
};

function _ll(_1K) {
    return _Eh._lX[_1K]
};

function _ml(_1K) {
    return _Eh._mX[_1K]
};

function _yl(_1K, _nX) {
    _Eh._gX[_1K] = ~~_nX
};

function _tl(_1K, _B5) {
    _Eh._hX[_1K] = ~~_B5;
};

function _ul(_1K,
             _oX) {
    _Eh._iX[_1K] = ~~_oX
};

function _vl(_1K, _pX) {
    _Eh._jX[_1K] = ~~_pX
};

function _wl(_1K, _ic) {
    _Eh._kX[_1K] = ~~_ic
};

function _xl(_1K, _jc) {
    _Eh._lX[_1K] = ~~_jc
};

function _zl(_1K, _qX) {
    _Eh._mX[_1K] = ~~_qX
};
;
;
;
;

function _rX(_sX, _tX) {
    if ((_sX.status < 200) || (_sX.status >= 300)) {
        _tX._gO = _uX;
        _tX._vX = ""
    } else {
        _tX._gO = _wX;
        try {
            _tX._vX = _sX.responseText
        } catch (e) {
            _tX._vX = ""
        }
    }
}

function _xX(_sX, _yX) {
    if (_sX.readyState != 4) return;
    var _sP = _dO(_sX);
    if (_sP) {
        _sP._zX = _sX.status;
        _sP._fO = true;
        _sP._AX = _Zr();
        var _BX = _sX.getAllResponseHeaders().split("\r\n");
        for (var _tt in _BX) {
            if (!_BX.hasOwnProperty(_tt)) continue;
            var _CX = _BX[_tt].split(": ");
            if (_CX.length == 2) {
                _0s(_sP._AX, _CX[0], _CX[1])
            }
        }
        if (_yX) {
            _yX(_sX, _sP)
        }
    }
}

function _DX(_EX) {
    var _FX = {};
    _nO._3C(_GX, _EX, _HX, _FX);
    setTimeout(function () {
        var _sP = _dO(_FX);
        if (_sP) {
            _sP._zX = 404;
            _sP._fO = true;
            _sP._gO = _uX;
            _sP._vX = ""
        }
    }, 500);
    return _GX++
}

function _IX(_ny, _EX, _JX, _KX, _yX, _LX) {
    try {
        var _MX = _NX(_EX, _JX);
        _nO._3C(_GX, _EX, _HX, _MX._OX);
        if (_LX !== undefined) {
            _MX._OX.responseType = _LX
        }
        if (_MX._PX) {
            _QX(_ny, _EX, _JX, _KX, _MX._OX, _MX._RX, _yX)
        }
        else {
            _SX(_ny, _EX, _JX, _KX, _MX._OX, _yX);
        }
    } catch (e) {
        return _DX(_EX)
    }
    return _GX++
}

function _NX(_EX, _JX) {
    var _MX = {_OX: null, _RX: true, _PX: false};
    if ((_EX.substring(0, 7) != "http://") && (_EX.substring(0, 8) != "https://")) {
        _MX._RX = false
    } else {
        var _TX = "";
        if (_EX.substring(0, 7) == "http://") {
            _TX = _EX.substring(7)
        }
        if (_EX.substring(0, 8) == "https://") {
            _TX = _EX.substring(8)
        }
        if (_TX.substring(0, document.domain.length) == document.domain) {
            _MX._RX = false
        }
    }
    if ((_MX._RX) && (window.XDomainRequest)) {
        _MX._OX = new XDomainRequest();
        _MX._RX = true;
        _MX._PX = true
    } else {
        if (window.XMLHttpRequest) {
            _MX._OX = new XMLHttpRequest();
            _MX._RX = false;
            _MX._PX = (_UX == _VX) && (_WX._XX <= 9.0)
        } else if (window.ActiveXObject) {
            if (new ActiveXObject("Microsoft.XMLHTTP")) {
                _MX._OX = new ActiveXObject("Microsoft.XMLHTTP")
            } else {
                _MX._OX = new ActiveXObject("Msxml2.XMLHTTP")
            }
        }
    }
    return _MX
}

function _SX(_ny, _EX, _JX, _KX, _sX, _yX) {
    try {
        _sX.open(_ny, _EX, true);
        if (_JX !== null) {
            for (var _CX in _JX) {
                if (!_JX.hasOwnProperty(_CX)) continue;
                try {
                    _sX.setRequestHeader(_JX[_CX]._7N, _JX[_CX].value)
                } catch (e) {
                    debug("Unable to set request header " + _JX[_CX]._7N + ":" + _JX[_CX].value + " " + e.message);
                }
            }
        } else if (_ny == "POST") {
            _sX.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
        }
        _sX.onreadystatechange = function () {
            _xX(_sX, _yX)
        };
        _sX.send(_KX)
    } catch (e) {
        debug(e.message)
    }
}

function _QX(_ny, _EX, _JX, _KX, _sX, _YX, _yX) {
    _sX.open(_ny, _EX);
    _sX.ontimeout = function (_5R) {
        _ZX(_5R, _sX)
    };
    _sX.onerror = function (_5R) {
        _ZX(_5R, _sX)
    };
    if (_YX) {
        _sX.onload = function (_5R) {
            __X(_5R, _sX, 200)
        }
    } else {
        _sX.onload = function (_5R) {
        };
        _sX.onreadystatechange = function () {
            if (_sX.readyState == 4) {
                __X(null, _sX, _sX.status)
            }
        }
    }
    if (_JX !== null) {
        for (var _CX in _JX) {
            if (!_JX.hasOwnProperty(_CX)) continue;
            try {
                _sX.setRequestHeader(_JX[_CX]._7N, _JX[_CX].value)
            } catch (e) {
                debug("Unable to set request header " + _JX[_CX]._7N + ":" + _JX[_CX].value + " " + e.message)
            }
        }
    }
    _sX._0Y = function () {
    };
    _sX.send(_KX)
}

function __X(_5R, _sX, _1Y) {
    var _sP = _dO(_sX);
    if (_sP) {
        _sP._fO = true;
        if ((_1Y >= 200) && (_1Y < 300)) {
            _sP._gO = _wX;
            _sP._zX = _1Y
        } else {
            _sP._gO = _uX;
            _sP._zX = 404
        }
        _sP._vX = _sX.responseText;
        _sP._AX = -1
    }
}

function _ZX(_5R, _sX) {
    var _sP = _dO(_sX);
    if (_sP) {
        _sP._fO = true;
        _sP._gO = _uX;
        _sP._vX = "";
        _sP._zX = 404;
        _sP._AX = -1
    }
}

function _Fm(_EX) {
    return _IX("GET", _EX, null, "", _rX)
}

function __m(_EX, _IP) {
    if (!_IP) _IP = "";
    return _IX('POST', _EX, null, _IP, _rX)
};var _2Y = -1, _3Y = 0, _4Y = 1, _5Y = 2, _6Y = 3, _7Y = 4;
var _8Y = -3, _9Y = -2, _aY = -1, _bY = 0, _cY = 1, _dY = 2;
var _eY = -2, _fY = -1, _gY = 0, _hY = 1, _iY = 2, _jY = 3;
var _kY = 0, _lY = 1, _mY = 2, _nY = 3, _oY = 4;
var _pY = -1, _qY = 0;
var _rY = [];
var _sY = [];
var _tY = [];
var _uY = [];
var _vY = _eY;

function _wY() {
    _xY({type: _kY, status: _pY})
};

function _yY() {
    _xY({type: _oY, _eO: 0})
};

function _zY() {
    return -1
}

function _AY() {
    return 0
}

function _BY() {
    return 0
}
;

function _CY(_5N) {
    this._DY = "";
    this.title = "";
    this.description = "";
    this._EY = "";
    this.type = "";
    this._FY = _9Y;
    this._GY = false;
    if ((_5N != null) && (_5N != undefined)) {
        var id = _Kl(_5N, "id");
        var title = _Kl(_5N, "title");
        var description = _Kl(_5N, "description");
        var _EY = _Kl(_5N, "price");
        var type = _Kl(_5N, "type");
        if (id) {
            this._DY = id
        }
        if (title) {
            this.title = title
        }
        if (description) {
            this.description = description
        }
        if (_EY) {
            this._EY = _EY
        }
        if (type) {
            this.type = type
        }
    }
};

function _HY() {
    this._IY = "";
    this._DY = "";
    this._JY = "";
    this._KY = "";
    this._LY = "";
    this._MY = 0;
    this._NY = 0;
    this._FY = _9Y
};

function _OY(_PY) {
    switch (_PY.type) {
        case _3Y: {
            _vY = _gY;
            _wY(_rY)
        }
            break;
        case _4Y: {
            _vY = _jY;
            _yY()
        }
            break;
        case _5Y: {
            _vY = _iY;
            _zY(_PY.product, _PY._QY)
        }
            break;
        case _6Y: {
            _vY = _iY;
            _AY(_PY.product)
        }
            break;
        case _7Y: {
            _vY = _iY;
            _BY(_PY.product)
        }
            break;
        default : {
            _vY = _hY
        }
            break
    }
}

function _xY(_5R) {
    _tY.push(_5R);
}

function _RY(_5R) {
    _5R.map = _Zr();
    _0s(_5R.map, "type", _kY);
    _0s(_5R.map, "status", _5R.status)
}

function _SY(_5R) {
    _5R.map = _Zr();
    _0s(_5R.map, "type", _oY);
    _0s(_5R.map, "result", _5R._eO)
}

function _TY(_5R) {
    var product = null;
    var _UY = -1;
    var _VY = JSON.parse(_5R._WY);
    _UY = _XY(_VY["productId"]);
    if (_UY < 0) {
        product = new _CY();
        product._DY = _VY["productId"];
        _rY.push(product);
        _UY = _rY.length - 1
    } else {
        product = _rY[_UY]
    }
    product._GY = true;
    product._FY = _aY;
    if (_VY["title"]) {
        product.title = _VY["title"];
    }
    if (_VY["price"]) {
        product._EY = _VY["price"]
    }
    if (_VY["description"]) {
        product.description = _VY["description"]
    }
    _5R.map = _Zr();
    _0s(_5R.map, "type", _lY);
    _0s(_5R.map, "product", product._DY);
    _0s(_5R.map, "index", _UY)
}

function _YY(_5R) {
    var _VY = JSON.parse(_5R._WY);
    var _QY = -1;
    if ((_VY["purchaseIndex"] != null) && (_VY["purchaseIndex"] != undefined)) {
        _QY = _VY["purchaseIndex"]
    }
    var _ZY = null;
    if (_QY != -1) {
        _ZY = _sY[_QY]
    } else {
        _ZY = new _HY();
        _sY.push(_ZY);
        _QY = _sY.length - 1
    }
    if (_VY["orderId"]) {
        _ZY._IY = _VY["orderId"];
    }
    if (_VY["productId"]) {
        _ZY._DY = _VY["productId"]
    }
    if (_VY["purchaseTime"]) {
        _ZY._NY = _VY["purchaseTime"]
    }
    if ((_VY["purchaseState"] != null) && (_VY["purchaseState"] != undefined)) {
        _ZY._FY = _VY["purchaseState"]
    }
    if (_VY["purchaseToken"]) {
        _ZY._KY = _VY["purchaseToken"]
    }
    if (_VY["response"]) {
        _ZY._MY = _VY["response"]
    }
    if (_VY["receipt"]) {
        _ZY._JY = _VY["receipt"]
    }
    _5R.map = _Zr();
    _0s(_5R.map, "type", _mY);
    _0s(_5R.map, "index", _QY);
    _0s(_5R.map, "response", _ZY._MY)
}

function __Y(_5R) {
    var _VY = JSON.parse(_5R._WY);
    var _0Z = null;
    var _KY = null;
    var _1Z = 0.0;
    if (_VY["productId"]) {
        _0Z = _VY["productId"]
    }
    if (_VY["token"]) {
        _KY = _VY["token"]
    }
    if (_VY["consumed"]) {
        if (typeof(_VY["consumed"]) == "string") {
            _1Z = (_VY["consumed"] == "false") ? 0.0 : 1.0
        } else {
            _1Z = _VY["consumed"]
        }
    }
    if ((_0Z != null) && (_1Z == true)) {
        for (var _tt = 0; _tt < _sY.length; _tt++) {
            var _ZY = _sY[_tt];
            if ((_ZY._0Z == _0Z) && (_ZY._KY == _KY)) {
                _sY[_tt] = null
            }
        }
    }
    _5R.map = _Zr();
    _0s(_5R.map, "type", _nY);
    _0s(_5R.map, "product", _0Z);
    _0s(_5R.map, "consumed", _1Z ? 1.0 : 0.0);
}

function _2Z(_5R) {
    var _3Z = false;
    if ((_5R.type != null) && (_5R.type != undefined)) {
        switch (_5R.type) {
            case _kY: {
                _RY(_5R);
                if (_5R.status == _qY) {
                    _vY = _hY;
                    _3Z = true
                } else {
                    _vY = _fY
                }
            }
                break;
            case _lY: {
                _TY(_5R);
                if (_vY != _gY) {
                    _vY = _hY;
                    _3Z = true
                }
            }
                break;
            case _mY: {
                _YY(_5R);
                if ((_vY != _gY) && (_vY != _jY)) {
                    _vY = _hY;
                    _3Z = true
                }
            }
                break;
            case _nY: {
                __Y(_5R);
                _vY = _hY;
                _3Z = true
            }
                break;
            case _oY: {
                _SY(_5R);
                _vY = _hY;
                _3Z = true
            }
                break
        }
    }
    if (_3Z && (_uY.length != 0)) {
        var _4Z = _uY.shift();
        _OY(_4Z)
    }
}

function _5Z() {
    while (_tY.length > 0) {
        var _6Z = _tY.shift();
        _2Z(_6Z);
        _Eh._7Z = _6Z.map;
        _OW._8t(_8Z, 0);
        _7s(_6Z.map)
    }
}

function _XY(_9Z) {
    var _aZ = -1;
    if (typeof(_9Z) == "string") {
        for (var _tt = 0; _tt < _rY.length; _tt++) {
            var product = _rY[_tt];
            if (product._DY.toLowerCase() == _9Z.toLowerCase()) {
                _aZ = _tt;
                break
            }
        }
    } else {
        _aZ = ~~_9Z
    }
    return _aZ
}

var _bZ = null;

function _Pm(_cZ) {
    if (_bZ) {
        _Rm()
    }
    var _dZ = null;
    if (_eZ) {
        _dZ = _fZ(_cZ, true)
    }
    if (_dZ == null) {
        _dZ = _fZ(_cZ,
            false)
    }
    if (_dZ == null) {
        _dZ = new _gZ(_cZ)
    }
    _bZ = _dZ
}

function _Rm() {
    if (!_bZ) return;
    var _JQ = _bZ._hZ();
    _bZ = null;
    return _JQ
}

function _Qm(_iZ, _vC, _AM) {
    if (!_bZ) return false;
    _bZ._jZ(_iZ, _vC, _AM);
    return true
}

function _Tg(_kC) {
    var _LP = _dg(_kC);
    if (_LP != null && _LP.length > 0) {
        for (var _oS = 0; _oS < _LP.length; _oS++) {
            _NW = _LP[_oS];
            if (!_NW._gg && _NW._hg) return true
        }
    }
    return false
}

function _Rg(_3R, _Ps, _Qs, _kC) {
    var _St = _3R.x;
    var _Ut = _3R.y;
    _3R._Ey(_Ps, _Qs);
    var id = _kZ(null, Math.floor(_kC), false, _lZ, _Ps, _Qs, function (_mZ) {
        if (_mZ._nZ(_3R, true)) {
            return _mZ.id
        }
        else {
            return _lZ
        }
    });
    _3R._Ey(_St, _Ut);
    return id
}

function _9i(_3R, _OB, _oZ) {
    if (_OB === undefined) {
        _3R._8t(_pZ, 0, _3R, _3R);
        _3R._8t(_qZ, 0, _3R, _3R);
        _3R._gg = true
    } else {
        var _LP = _dg(_OB);
        if (_LP != null && _LP.length > 0) {
            for (var _oS = 0; _oS < _LP.length; _oS++) {
                var _NW = _LP[_oS];
                if (!_NW._gg && _NW._hg) {
                    if ((_oZ === undefined) || (_rZ)) {
                        _NW._8t(_pZ, 0, _NW, _NW)
                    }
                    _NW._8t(_qZ, 0, _NW, _NW);
                    _NW._gg = true
                }
            }
        }
    }
}

function _sZ(_ZC, _Ps, _Qs) {
    var _gC = _js._tZ._gC;
    var _8N = [];
    for (var _t5 = 0; _t5 < _gC.length; _t5++) {
        var _NW = _gC[_t5];
        if (_NW._uZ(_Ps, _Qs, true)) {
            _8N.push(_NW)
        }
    }
    for (var _t5 = 0; _t5 < _8N.length; _t5++) {
        _9i(_8N[_t5])
    }
}

function _vZ(_ZC, _wZ, _xZ) {
    if (_xZ) _ZC._8t(_pZ, 0, _ZC, _ZC);
    _ZC._yZ(_wZ, true, false);
    _ZC._zZ(_ZC._AZ._BZ);
    _ZC._CZ(_js);
    if (_xZ) _ZC._8t(_DZ, 0, _ZC, _ZC)
}

function _EZ(_ZC, _wZ, _xZ) {
    if (!_4s._FZ(_wZ)) {
        debug("Error: Trying to change an instance to an nonexistent object type.");
        return
    }
    _vZ(_ZC, _wZ, _xZ)
}

var _GZ = _EZ;

function _HZ(_kC, _IZ) {
    if (_kC._JZ >= 0) {
        var _KZ = _4s._RB(_kC._JZ);
        if (_KZ) {
            if (_KZ._LZ == _IZ) {
                return true;
            } else {
                return _HZ(_KZ, _IZ)
            }
        }
    }
    return false
};

function _MZ(_NZ) {
    with (_pB) {
        switch (_NZ) {
            case 0:
                if (_Cz[0] || _Cz[1] || _Cz[2]) return 0; else return 1;
            case 1:
                if (_Cz[0]) return 1; else return 0;
            case 2:
                if (_Cz[1]) return 1; else return 0;
            case 3:
                if (_Cz[2]) return 1; else return 0;
            case -1:
                if (_Cz[0] || _Cz[1] || _Cz[2]) return 1; else return 0
        }
    }
    return 0
}

function _OZ(_NZ) {
    with (_pB) {
        switch (_NZ) {
            case 0:
                if (_xz[0] || _xz[1] || _xz[2]) return 0; else return 1;
            case 1:
                if (_xz[0]) return 1; else return 0;
            case 2:
                if (_xz[1]) return 1; else return 0;
            case 3:
                if (_xz[2]) return 1; else return 0;
            case -1:
                if (_xz[0] || _xz[1] || _xz[2]) return 1; else return 0
        }
    }
    return 0
}

function _PZ(_NZ) {
    with (_pB) {
        switch (_NZ) {
            case 0:
                if (_Bz[0] || _Bz[1] || _Bz[2]) return 0; else return 1;
            case 1:
                if (_Bz[0]) return 1; else return 0;
            case 2:
                if (_Bz[1]) return 1; else return 0;
            case 3:
                if (_Bz[2]) return 1; else return 0;
            case -1:
                if (_Bz[0] || _Bz[1] || _Bz[2]) return 1; else return 0
        }
        return 0
    }
}

function _Oh(_vC) {
    return _pB._QZ[_vC]
}

function _ld(_vC) {
    return _pB._RZ[_vC]
}

function _Ld(_vC) {
    if ((_vC < 0) || (_vC > _SZ)) return 0;
    return _pB._TZ[_vC]
}

var _UZ = 0, _VZ = 1, _WZ = 2, _XZ = 3, _YZ = 4, _ZZ = 5;
var __Z = 0, _0_ = 1, _1_ = 2, _2_ = 3, _3_ = 4, _4_ = 5, _5_ = 6, _6_ = 7;
var _7_ = 31;
var _8_ = 29;
var _9_ = 28;
var _a_ = 30;
var _b_ = (1 << _7_);
var _c_ = (1 << _8_);
var _d_ = (1 << _9_);
var _e_ = (1 << _a_);
var _f_ = _9_;
var _g_ = (0x7 << _f_);
var _h_ = 0x7;
var _i_ = 0;
var _j_ = (0x7ffff << _i_);
var _k_ = (0x7ffff);

function _l_() {
    this._B5 = true;
    this._m_ = false;
    this.index = 0;
    this._n_ = false;
    this._o_ = false;
    this._p_ = 1.0;
    this._q_ = 1.0;
    this._r_ = false;
    this._s_ = 0;
    this.alpha = 1.0;
    this._V3 = 0;
    this._W3 = 0;
    this._t_ = 0;
    this._u_ = 0
};

function _v_() {
    this._aV = 0;
    this._1c = 0;
    this._w_ = 0;
    this._x_ = 0;
    this._y_ = 0;
    this._z_ = 0;
    this._A_ = true;
    this._B_ = 0;
    this._C_ = "";
    this._D_ = -1;
    this._E_ = -1;
    this._F_ = -1;
    this._G_ = null;
    this._H_ = new _0C()
};
;
;

function _I_() {
    this._J_ = -1;
    this._K_ = null;
    this._L_ = _1_;
    this._M_ = false;
    this._N_ = ""
};

function _O_() {
    this._P_ = null;
    this._L_ = _0_;
    this._M_ = false;
    this._N_ = "";
    this._aV = 0
};

function _Q_() {
    this._L_ = _4_;
    this._R_ = -1;
    this._S_ = 0;
    this._T_ = 0;
    this._U_ = 0;
    this._V_ = 0;
    this._W_ = 0;
    this._X_ = [];
    this._M_ = false;
    this._N_ = "";
    this._aV = 0;
    this._Y_ = ~_b_
};
;

function _Z_() {
    this.___ = -1;
    this._001 = 0;
    this._101 = 0;
    this._201 = 1;
    this._301 = 0;
    this._401 = 1;
    this._501 = 1;
    this._601 = 0;
    this._701 = 0xffffffff;
    this._801 = 1;
    this._S_ = 0;
    this._T_ = 0;
    this._L_ = _3_;
    this._N_ = "";
    this._aV = 0;
    this._M_ = false
};

function _901() {
    this._L_ = _5_;
    this._a01 = -1;
    this._N_ = "";
    this._aV = 0;
    this._M_ = false
};

function _b01() {
    this._A_ = true;
    this._kP = -1;
    this._S_ = 0;
    this._T_ = 0;
    this._c01 = 0;
    this._d01 = 0;
    this._401 = 1.0;
    this._501 = 1.0;
    this._601 = 0.0;
    this._701 = 0xffffffff;
    this._801 = 1.0;
    this._e01 = 0;
    this._f01 = 0;
    this._L_ = _6_;
    this._N_ = "";
    this._aV = 0;
    this._M_ = false
};var _g01 = 32;

function _h01() {
    this._i01 = 0;
    this._j01 = 0;
    this._k01 = 0;
    this._l01 = false;
    this._m01 = 0xffffffff;
    this._n01 = -1;
    this._o01 = false;
    this._p01 = 0
};_h01.prototype._q01 = function () {
    return this._i01;
};
_h01.prototype._r01 = function (_OB) {
    this._s01 = _OB
};
_h01.prototype._t01 = function (_u01) {
    this._o01 = _u01
};
_h01.prototype._v01 = function (_w01) {
    this._p01 = _w01
};
_h01.prototype._x01 = function () {
    return this._o01
};
_h01.prototype._y01 = function () {
    return this._p01
};
_h01.prototype._z01 = function () {
    return this._m01
};
_h01.prototype._A01 = function () {
    if (!this._l01) {
        this._l01 = true
    }
};
_h01.prototype._B01 = function (_C01, _D01) {
    if (_D01._P_ != null) {
        delete(_D01._P_);
        _D01._P_ = null
    }
    _C01._H_._E01(_D01)
};
_h01.prototype._F01 = function (_C01, _D01, _G01) {
    if (_D01._K_) {
        _D01._K_._H01(false)
    }
    if (_G01) {
        if (_D01._J_ >= 0) {
            _9i(_D01._K_)
        }
    }
    _C01._H_._E01(_D01)
};
_h01.prototype._I01 = function (_C01, _D01) {
    _C01._H_._E01(_D01)
};
_h01.prototype._J01 = function (_C01, _D01) {
    _C01._H_._E01(_D01)
};
_h01.prototype._K01 = function (_C01, _D01) {
    _C01._H_._E01(_D01)
};
_h01.prototype._L01 = function (_C01, _D01) {
    _C01._H_._E01(_D01)
};
_h01.prototype._M01 = function (_C01, _D01) {
    _C01._H_._E01(_D01)
};
_h01.prototype._N01 = function (_O01,
                                _P01, _C01, _Q01, _R01) {
    if (_O01 == null) return;
    var _ry = _P01;
    var _S01 = _C01;
    if (_ry === null) return;
    this._T01(_ry);
    switch (_ry._L_) {
        case _0_:
            this._B01(_S01, _ry);
            break;
        case _1_:
            this._F01(_S01, _ry, _R01);
            break;
        case _2_:
            this._I01(_S01, _ry);
            break;
        case _3_:
            this._J01(_S01, _ry);
            break;
        case _4_:
            this._K01(_S01, _ry);
            break;
        case _5_:
            this._L01(_S01, _ry);
            break;
        case _6_:
            this._M01(_S01, _ry);
            break
    }
    ;
    return
};
_h01.prototype._U01 = function (_O01, _V01, _Q01, _R01) {
    if (_O01 == null) return;
    var _ry = null;
    var _S01 = null;
    for (var _t5 = 0; _t5 < _O01._W01.length;
         _t5++) {
        _S01 = _O01._W01._RB(_t5);
        _ry = this._X01(_S01, _V01);
        if (_ry != null) break
    }
    if (_ry === null) return;
    this._T01(_ry);
    switch (_ry._L_) {
        case _0_:
            this._B01(_S01, _ry);
            break;
        case _1_:
            this._F01(_S01, _ry, _R01);
            break;
        case _2_:
            this._I01(_S01, _ry);
            break;
        case _3_:
            this._J01(_S01, _ry);
            break;
        case _4_:
            this._K01(_S01, _ry);
            break;
        case _5_:
            this._L01(_S01, _ry);
            break;
        case _6_:
            this._M01(_S01, _ry);
            break
    }
    ;
    return
};
_h01.prototype._Y01 = function () {
    if (this._n01 == -1) return _js;
    var _Z01 = __01._RB(this._n01);
    if (_Z01 == null) return _js;
    return _Z01
}
;_h01.prototype._011 = function (_O01, _C01, _D01) {
    _D01._M_ = true
};
_h01.prototype._111 = function (_O01, _C01, _D01) {
    var _oS = _OW._RB(_D01._J_);
    if (_oS === null) return;
    _D01._K_ = _oS;
    _oS._211 = _C01._aV;
    _oS._311 = true;
    _oS._1c = _C01._1c;
    _D01._M_ = true
};
_h01.prototype._411 = function (_O01, _C01, _D01) {
    _D01._M_ = true
};
_h01.prototype._511 = function (_O01, _C01, _D01) {
    _D01._M_ = true
};
_h01.prototype._611 = function (_O01, _C01, _D01) {
    _D01._M_ = true
};
_h01.prototype._711 = function (_O01, _C01, _D01) {
    _D01._M_ = true
};
_h01.prototype._811 = function (_O01,
                                _C01, _D01) {
    _D01._M_ = true
};
_h01.prototype._911 = function (_O01, _C01, _D01) {
    if (_O01 === null) return;
    if (_C01 === null) return;
    if (_D01 === null) return;
    switch (_D01._L_) {
        case _0_:
            this._011(_O01, _C01, _D01);
            break;
        case _1_:
            this._111(_O01, _C01, _D01);
            break;
        case _2_:
            this._411(_O01, _C01, _D01);
            break;
        case _3_:
            this._511(_O01, _C01, _D01);
            break;
        case _4_:
            this._611(_O01, _C01, _D01);
            break;
        case _5_:
            this._711(_O01, _C01, _D01);
            break;
        case _6_:
            this._811(_O01, _C01, _D01);
            break;
    }
};
_h01.prototype._r01 = function (_OB) {
    this._i01 = _OB
};
_h01.prototype._a11 = function (_O01) {
    if ((_O01._W01 === null) || (_O01._W01.length === 0)) return;
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _b11 = _O01._W01._RB(_t5);
        _b11._G_ = _zS();
        for (var _Rt = 0; _Rt < _b11._H_.length; _Rt++) {
            var _c11 = _b11._H_._RB(_Rt);
            if (_c11 == null) continue;
            this._911(_O01, _b11, _c11)
        }
    }
};
_h01.prototype._d11 = function (_O01, _C01, _D01, _e11) {
    if (_O01 == null || _C01 == null || _D01 === null) return;
    _D01._aV = this._f11();
    _C01._H_._3C(_D01);
    if (_e11) {
        this._911(_O01, _C01, _D01)
    }
};
_h01.prototype._g11 = function (_O01, _w01, _D01, _e11, _h11) {
    if (_O01 == null || _D01 === null) return -1;
    var _S01 = this._i11(_O01, _w01, _h11);
    if ((_S01 == null) && (_h11)) {
        _S01 = this._j11(_O01, _w01)
    }
    if (_S01 == null) {
        return -1
    }
    return this._d11(_O01, _S01, _D01, _e11)
};
_h01.prototype._k11 = function (_O01, _vs) {
    if (_vs == null) return null;
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _S01 = _O01._W01._RB(_t5);
        if (_S01._C_ === _vs.toLowerCase()) return _S01
    }
    return null
};
_h01.prototype._T01 = function (_D01) {
    if (_D01 == null) return;
    switch (_D01._L_) {
        case _0_: {
            this._l11(_D01)
        }
            break;
        case _1_: {
            this._m11(_D01)
        }
            break;
        case _2_: {
            this._n11(_D01)
        }
            break;
        case _3_: {
            this._o11(_D01)
        }
            break;
        case _4_: {
            this._p11(_D01)
        }
            break;
        case _5_: {
            this._q11(_D01)
        }
            break;
        case _6_: {
            this._r11(_D01)
        }
            break
    }
    _D01._M_ = false
};
_h01.prototype._l11 = function (_s11) {
};
_h01.prototype._m11 = function (_t11) {
    _oS = _OW._RB(_t11._J_);
    if (_oS != null) {
        _oS._H01(false)
    }
    _t11._K_ = null
};
_h01.prototype._n11 = function (_u11) {
};
_h01.prototype._o11 = function (_v11) {
};
_h01.prototype._p11 = function (_u11) {
};
_h01.prototype._q11 = function (_w11) {
};
_h01.prototype._r11 = function (_x11) {
};
_h01.prototype._j11 = function (_O01, _w01) {
    var _y11 = new _v_();
    _y11._aV = _z11._A11();
    _y11._1c = _w01;
    _y11._B_ = true;
    _js._W01._3C(_y11);
    return _y11
};
_h01.prototype._B11 = function (_O01, _ZC) {
    if (_O01 == null || _ZC === null) return;
    if (_ZC._C11() === false) {
        if (_ZC._211 == -1) {
            var _C01 = this._i11(_O01, _ZC._1c, true);
            if (_C01 === null) {
                _C01 = this._j11(_O01, _ZC._1c)
            }
            this._D11(_O01, _C01, _ZC)
        } else {
            var _S01 = this._E11(_O01, _ZC._F11);
            if (_S01 === null) return;
            this._D11(_O01, _S01, _ZC)
        }
    }
};
_h01.prototype._D11 = function (_O01, _C01, _ZC) {
    if (_O01 == null || _C01 == null || _ZC === null) return;
    if (_ZC._C11() === false) {
        var _G11 = new _I_();
        _G11._J_ = _ZC.id;
        _G11._K_ = _ZC;
        _ZC._H11(_C01._aV);
        _ZC._H01(true);
        _G11._M_ = true;
        _C01._H_._3C(_G11)
    }
};
_h01.prototype._I11 = function (_O01, _C01, _ZC) {
    if (_O01 == null || _C01 == null || _ZC === null) return;
    if (_ZC._C11() === true) {
        for (var _t5 = 0; _t5 < _C01._H_.length; _t5++) {
            var _c11 = _C01._H_._RB(_t5);
            if (_c11 != null) {
                if (_c11._L_ == _1_) {
                    if (_c11._K_ == _ZC) {
                        this._N01(_O01, _c11, _C01, true, false);
                        _ZC._H01(false);
                        _ZC._211 = -1
                    }
                }
            }
        }
    }
};
_h01.prototype._J11 = function (_O01, _K11, _R01) {
    var _S01 = this._E11(_O01, _K11);
    if (_S01 != null) {
        for (var _t5 = 0; _t5 < _S01._H_.length;
             _t5++) {
            var _c11 = _S01._H_._RB(_t5);
            if (_c11 != null) {
                this._N01(_O01, _c11, _S01, false, true);
            }
        }
        _O01._W01._L11(_S01)
    }
};
_h01.prototype._M11 = function (_O01, _C01, _N11, _O11) {
    if (_O01 == null) return;
    if (_C01 == null) return;
    if (_N11 == _C01._1c) return;
    var _P11 = _C01._1c;
    _C01._1c = _N11;
    _O01._W01._L11(_C01);
    _O01._W01._3C(_C01);
    if (_C01._B_ && _O11) {
        var _Q11 = [];
        var _R11 = 0;
        var _S11 = _O01._W01._T11(_C01);
        if (_S11 != -1) {
            var _U11 = _S11 - 1;
            while (_U11 >= 0) {
                var _V11 = _O01._W01._RB(_U11);
                if ((_V11 == null) || (_V11._1c == _C01._1c)) {
                    if (_V11 != null) {
                        if (_V11._B_) {
                            _Q11[_R11++] = _V11
                        }
                    }
                    _U11--
                } else {
                    break
                }
            }
            ;_U11 = _S11 + 1;
            while (_U11 < _O01._W01.length) {
                var _V11 = _O01._W01._RB(_U11);
                if ((_V11 == null) || (_V11._1c == _C01._1c)) {
                    if (_V11 != null) {
                        if (_V11._B_) {
                            _Q11[_R11++] = _V11
                        }
                    }
                    _U11++
                } else {
                    break
                }
            }
            ;
            for (var _t5 = 0; _t5 < _R11; _t5++) {
                var _W11 = _Q11[_t5];
                for (var _Rt = 0; _Rt < _W11._H_.length; _Rt++) {
                    var _c11 = _W11._H_._RB(_Rt);
                    if (_c11 == null) continue;
                    if (_c11._L_ == _1_) {
                        if (_c11._K_ != null) {
                            _c11._K_._211 = _C01._aV
                        }
                    }
                    _C01._H_._3C(_c11)
                }
                _W11._H_._NA();
                _z11._J11(_O01, _W11._aV, false)
            }
        }
    }
};
_h01.prototype._i11 = function (_O01,
                                _w01, _X11) {
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _S01 = _O01._W01._RB(_t5);
        if ((_S01._1c === _w01) && (!_X11 || (_S01._B_))) return _S01
    }
    return null
};
_h01.prototype._E11 = function (_O01, _OB) {
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _S01 = _O01._W01._RB(_t5);
        if (_S01._aV === _OB) return _S01
    }
    return null
};
_h01.prototype._A11 = function () {
    if (this._j01 < this._i01) this._j01 = this._i01;
    this._j01++;
    return this._j01
};
_h01.prototype._f11 = function () {
    return this._k01++
};
_h01.prototype._Y11 = function (_O01, _Z11) {
    if (_O01 == null) return null;
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _S01 = _O01._W01._RB(_t5);
        var _ry = _z11._X01(_S01, _Z11);
        if (_ry != null) return _ry
    }
    return null
};
_h01.prototype.__11 = function (_O01, _Z11) {
    if (_O01 == null) return null;
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _S01 = _O01._W01._RB(_t5);
        var _ry = _z11._X01(_S01, _Z11);
        if (_ry != null) {
            var _021 = new _121();
            _021._ry = _ry;
            _021._S01 = _S01;
            return _021
        }
    }
    return null
};
_h01.prototype._X01 = function (_C01, _221) {
    if (_C01 == null) return null;
    for (var _t5 = 0; _t5 < _C01._H_.length; _t5++) {
        var _c11 = _C01._H_._RB(_t5);
        if (_c11 == null) continue;
        if (_c11._aV === _221) {
            return _c11
        }
    }
    return null
};
_h01.prototype._321 = function (_O01, _421) {
    if (_O01 == null) return null;
    for (var _t5 = 0; _t5 < _O01._W01.length; _t5++) {
        var _S01 = _O01._W01._RB(_t5);
        if (_S01 != null) {
            for (var _Rt = 0; _Rt < _S01._H_.length; _Rt++) {
                var _c11 = _S01._H_._RB(_Rt);
                if (_c11 != null) {
                    if (_c11._L_ == _1_) {
                        if (_c11._J_ == _421) {
                            var _021 = new _121();
                            _021._ry = _c11;
                            _021._S01 = _S01;
                            return _021
                        }
                    }
                }
            }
        }
    }
    return null
};
_h01.prototype._521 = function () {
    if (_js._W01 === null || _js._W01.length === 0) return;
    var _621 = _js._W01.length;
    var time = _zS();
    for (var _t5 = 0; _t5 < _621; _t5++) {
        var _S01 = _js._W01._RB(_t5);
        var _721 = time - _S01._G_;
        if (_721 > 2000000) _721 = 0;
        _S01._w_ += _S01._y_;
        _S01._x_ += _S01._z_;
        for (var _Rt = 0; _Rt < _S01._H_.length; _Rt++) {
            var _c11 = _S01._H_._RB(_Rt);
            if (_c11 == null) continue;
            var type = _c11._L_;
            if (type == _0_) {
                var _pD = _c11._P_;
                if (_pD != null) {
                    if (_pD._V3 == 1) {
                        _pD._u_ += _pD._t_ * _pD._W3
                    } else {
                        var _821 = _ms._ns();
                        _pD._u_ += _pD._t_ * _pD._W3 / _821
                    }
                }
            } else if (type == _3_) {
                if (_c11._001 == 1) {
                    _c11._301 += _c11._201 * _c11._101
                } else {
                    var _821 = _ms._ns();
                    _c11._301 += _c11._201 * _c11._101 / _821
                }
            } else if (type == _4_) {
                var _921 = _mD._nD(_c11._R_);
                if (_921 != null) {
                    if (_921._a21 > 0) _c11._W_ = Math.floor((time / _921._a21) % _921.frames); else _c11._W_ = (_c11._W_ + 1) % _921.frames
                }
            }
        }
        _S01._G_ = _zS()
    }
};
_h01.prototype._b21 = function (_O01, _c21) {
    if (_O01 === null) return;
    if (_c21 === null) return;
    if (!this._l01) this._A01();
    var _d21 = _O01._e21;
    var _f21 = _O01._g21;
    var _621 = _c21.length;
    {
        var _h21;
        for (var _Rt = _621 - 1; _Rt >= 0; _Rt--) {
            _h21 = _c21[_Rt];
            var _y11 = new _v_();
            if (_h21._F3 != undefined) _y11._C_ = _h21._F3.toLowerCase();
            if (_h21.id != undefined) _y11._aV = _h21.id;
            if (_h21._1c != undefined) _y11._1c = _h21._1c;
            if (_h21.x != undefined) _y11._w_ = _h21.x;
            if (_h21.y != undefined) _y11._x_ = _h21.y;
            if (_h21._2c != undefined) _y11._y_ = _h21._2c;
            if (_h21._3c != undefined) _y11._z_ = _h21._3c;
            if (_h21._B5 != undefined) _y11._A_ = _h21._B5;
            if (_h21.type === _VZ) {
                var _i21 = new _O_();
                _i21._P_ = new _l_();
                var _j21;
                _i21._P_._t_ = 1.0;
                if (_h21._6c != undefined) _i21._P_._B5 = _h21._6c;
                if (_h21._7c != undefined) _i21._P_._m_ = _h21._7c;
                if (_h21._8c != undefined) _i21._P_.index = _h21._8c;
                if (_h21._9c != undefined) _i21._P_._n_ = _h21._9c;
                if (_h21._ac != undefined) _i21._P_._o_ = _h21._ac;
                if (_h21._cc != undefined) {
                    _i21._P_._s_ = _Px(_h21._cc);
                    _i21._P_.alpha = ((_h21._cc >> 24) & 0xff) / 255.0
                }
                if (_h21._V3 != undefined) _i21._P_._V3 = _h21._V3;
                if (_h21._ec != undefined) _i21._P_._W3 = _h21._ec;
                if (_h21._F3 != undefined) _i21._N_ = _h21._F3.toLowerCase();
                if ((_h21._bc != undefined)) {
                    _i21._P_._r_ = _h21._bc
                }
                if ((_h21._bc != undefined) && (_h21._bc == true) && (_k21(_i21._P_.index))) {
                    var value = _ek(_i21._P_.index);
                    if (value > 0) _i21._P_._p_ = _d21 / value;
                    value = _gk(_i21._P_.index);
                    if (value > 0) _i21._P_._q_ = _f21 / value
                }
                this._d11(_O01, _y11, _i21)
            } else if (_h21.type === _WZ) {
                var _l21 = 0;
                if (_h21._4c != undefined) _l21 = _h21._4c;
                for (var _t5 = 0; _t5 < _l21; _t5++) {
                    var _G11 = new _I_();
                    _G11._J_ = _h21._5c[_t5];
                    this._d11(_O01, _y11, _G11, false)
                }
            } else if (_h21.type === _XZ) {
                var _m21 = 0;
                if (_h21._n21 != undefined) _m21 = _h21._n21;
                if (_m21 > 0) {
                    var _t5;
                    for (_t5 = 0; _t5 < _m21; _t5++) {
                        var _o21 = new _b01();
                        if (_h21._p21[_t5]._q21 != undefined) _o21._S_ = _h21._p21[_t5]._q21;
                        if (_h21._p21[_t5]._r21 != undefined) _o21._T_ = _h21._p21[_t5]._r21;
                        if (_h21._p21[_t5]._s21 != undefined) _o21._kP = _h21._p21[_t5]._s21;
                        if (_h21._p21[_t5]._t21 != undefined) _o21._e01 = _h21._p21[_t5]._t21;
                        if (_h21._p21[_t5]._u21 != undefined) _o21._f01 = _h21._p21[_t5]._u21;
                        if (_h21._p21[_t5]._v21 != undefined) _o21._c01 = _h21._p21[_t5]._v21;
                        if (_h21._p21[_t5]._w21 != undefined) _o21._d01 = _h21._p21[_t5]._w21;
                        if (_h21._p21[_t5]._x21 != undefined) _o21._y21 = _h21._p21[_t5]._x21;
                        if (_h21._p21[_t5]._z21 != undefined) _o21._A21 = _h21._p21[_t5]._z21;
                        if (_h21._p21[_t5]._B21 != undefined) {
                            _o21._C21 = _h21._p21[_t5]._B21 & 0xffffff;
                            _o21._D21 = ((_h21._p21[_t5]._B21 >> 24) & 0xff) / 255.0
                        }
                        this._d11(_O01, _y11, _o21, false)
                    }
                }
                var _E21 = 0;
                if (_h21._F21 != undefined) _E21 = _h21._F21;
                if (_E21 > 0) {
                    for (var _t5 = 0; _t5 < _E21; _t5++) {
                        var _G21 = new _Z_();
                        _G21._001 = 0;
                        _G21.___ = _h21._H21[_t5]._I21;
                        _G21._301 = _h21._H21[_t5]._J21;
                        _G21._201 = 1.0;
                        if (_h21._H21[_t5]._K21 != undefined) _G21._001 = _h21._H21[_t5]._K21;
                        _G21._101 = _h21._H21[_t5]._L21;
                        _G21._401 = _h21._H21[_t5]._M21;
                        _G21._501 = _h21._H21[_t5]._N21;
                        _G21._601 = _h21._H21[_t5]._O21;
                        _G21._701 = _Px(_h21._H21[_t5]._P21 & 0xffffff);
                        _G21._801 = ((_h21._H21[_t5]._P21 >> 24) & 0xff) / 255.0;
                        _G21._S_ = _h21._H21[_t5]._Q21;
                        _G21._T_ = _h21._H21[_t5]._R21;
                        _G21._N_ = _h21._H21[_t5]._S21;
                        this._d11(_O01, _y11, _G21, false)
                    }
                }
            } else if (_h21.type === _YZ) {
                var _T21 = new _Q_();
                _T21._R_ = _h21._U21;
                _T21._U_ = _h21._V21;
                _T21._V_ = _h21._W21;
                _T21._X_ = [];
                var _m21 = 0;
                if (_h21._X21 != undefined) _m21 = _h21._X21;
                for (var _t5 = 0; _t5 < _m21; _t5++) {
                    _T21._X_[_t5] = _h21._Y21[_t5]
                }
                if (_h21._F3 != undefined) _T21._N_ = _h21._F3.toLowerCase();
                this._d11(_O01, _y11, _T21, false)
            }
            _O01._W01._3C(_y11);
            this._r01(_Jt(this._q01(), _y11._aV))
        }
    }
};
;

function _yk(_OB) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return -1
    }
    if (_Z01 == null) return -1;
    var _h21 = null;
    if ((typeof(_OB) === "string")) _h21 = _z11._k11(_Z01, _OB.toLowerCase()); else _h21 = _z11._E11(_Z01, _OB);
    if (_h21 != null) {
        return _h21._1c
    }
    return -1
};

function _Ck(_w01, _vs) {
    var _y11 = new _v_();
    _y11._aV = _z11._A11();
    _y11._1c = _w01;
    if (_vs !== null && _vs !== undefined) {
        if ((typeof(_vs) === "string")) {
            _vs = _vs.toLowerCase()
        }
    }
    _y11._C_ = _vs;
    _y11._B_ = false;
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return -1
    }
    _Z01._W01._3C(_y11);
    return _y11._aV
};

function _Bk(_VW) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return -1
    }
    var _h21 = null;
    if ((typeof(_VW) === "string")) _h21 = _z11._k11(_Z01, _VW.toLowerCase()); else _h21 = _z11._E11(_Z01, _VW);
    if (_h21 != null) _z11._J11(_Z01, _VW)
};
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;

function _dk(_VW, _0X) {
    var _S01 = null;
    if ((typeof(_VW) === "string")) _S01 = _z11._k11(_js, _VW.toLowerCase()); else _S01 = _z11._E11(_js, _VW);
    if (_S01 === null) return 0;
    var _c11 = _z11._X01(_S01, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return 1
    }
    return 0
};

function _Ek(_VW, _0X) {
    var _S01 = null;
    if ((typeof(_VW) === "string")) _S01 = _z11._k11(_js,
        _VW.toLowerCase()); else _S01 = _z11._E11(_js, _VW);
    if (_S01 != null) {
        var _i21 = new _O_();
        _i21._P_ = new _l_();
        var _j21;
        _i21._P_._B5 = true;
        _i21._P_._m_ = false;
        _i21._P_.index = _0X;
        _i21._P_._n_ = false;
        _i21._P_._o_ = false;
        _i21._P_._s_ = 0xffffffff;
        _i21._P_.alpha = 1;
        _i21._P_._u_ = 0;
        _i21._P_._t_ = 1;
        _z11._d11(_js, _S01, _i21);
        return _i21._aV;
    }
    return -1
};
;

function _Hj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._B5 = _0X
    }
};

function _Ij(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_.index = _0X
    }
};

function _Lj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._n_ = _0X
    }
};

function _Mj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._o_ = _0X
    }
};

function _Nj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._p_ = _0X
    }
};

function _Oj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._q_ = _0X
    }
}
;

function _Fk(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._r_ = _0X;
    }
};

function _Rj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_._s_ = _Px(_0X)
    }
};

function _Sj(_VW, _0X) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        _c11._P_.alpha = _0X
    }
};
;
;
;

function _ij(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._B5
    }
    return 1
};

function _kj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_.index
    }
    return -1
};

function _mj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._n_
    }
    return 0
};

function _oj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._o_
    }
    return 0
};

function _qj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._r_
    }
    return 0
};

function _wj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._p_;
    }
    return 1
};

function _yj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._q_
    }
    return 1
};

function _sj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _Px(_c11._P_._s_)
    }
    return 0
};

function _uj(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_.alpha
    }
    return 0
};

function _fk(_VW) {
    var _c11 = _z11._Y11(_js, _VW);
    if ((_c11 != null) && (_c11._L_ === _0_) && (_c11._P_ != null)) {
        return _c11._P_._u_
    }
    return -1
};
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;

function _Jj(_VW, _0X) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_VW) === "string")) _S01 = _z11._k11(_Z01, _VW.toLowerCase()); else _S01 = _z11._E11(_Z01, _VW);
    if (_S01 != null) {
        _S01._w_ = _0X
    }
};

function _Kj(_VW, _0X) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_VW) === "string")) _S01 = _z11._k11(_Z01, _VW.toLowerCase()); else _S01 = _z11._E11(_Z01,
        _VW);
    if (_S01 != null) {
        _S01._x_ = _0X
    }
};

function _Aj(_VW) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_VW) === "string")) _S01 = _z11._k11(_Z01, _VW.toLowerCase()); else _S01 = _z11._E11(_Z01, _VW);
    if (_S01 != null) {
        return _S01._w_
    }
    return 0
};

function _Cj(_VW) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_VW) === "string")) _S01 = _z11._k11(_Z01, _VW.toLowerCase()); else _S01 = _z11._E11(_Z01, _VW);
    if (_S01 != null) {
        return _S01._x_
    }
    return 0
};

function _Pj(_Z21, _Tb) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_Z21) === "string")) _S01 = _z11._k11(_Z01, _Z21.toLowerCase()); else _S01 = _z11._E11(_Z01, _Z21);
    if (_S01 != null) {
        _S01._y_ = _Tb
    }
    return 0
};

function _Qj(_Z21, _Tb) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_Z21) === "string")) _S01 = _z11._k11(_Z01, _Z21.toLowerCase()); else _S01 = _z11._E11(_Z01, _Z21);
    if (_S01 != null) {
        _S01._z_ = _Tb
    }
    return 0
};

function _Ej(_Z21) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_Z21) === "string")) _S01 = _z11._k11(_Z01, _Z21.toLowerCase());
    else _S01 = _z11._E11(_Z01, _Z21);
    if (_S01 != null) {
        return _S01._y_
    }
    return 0
};

function _Gj(_Z21) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return 0
    }
    var _S01 = null;
    if ((typeof(_Z21) === "string")) _S01 = _z11._k11(_Z01, _Z21.toLowerCase()); else _S01 = _z11._E11(_Z01, _Z21);
    if (_S01 != null) {
        return _S01._z_
    }
    return 0
};
;
;
;
;

function _121() {
    this._ry = -1;
    this._S01 = -1
};
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;

function _Yk(_Ps, _Qs, _w01, __21) {
    var _HP = _4s._RB(__21);
    if (!_HP) {
        _SB("Error: Trying to create an instance using non-existent object type (" + __21 + ")");
        return _lZ
    }
    var _oS = _js._031(_Ps, _Qs, _w01, __21);
    if (_oS != null) {
        _oS._8t(_131, 0, _oS, _oS);
        _oS._8t(_DZ, 0, _oS, _oS);
        return _oS.id
    }
    return _lZ
};
;

function _Zj() {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return -1
    }
    var _Zt = [];
    var _621 = 0;
    for (var _t5 = 0; _t5 < _Z01._W01.length; _t5++) {
        var _S01 = _Z01._W01._RB(_t5);
        if (_S01 != null) {
            if (_S01._B_ == false) {
                _Zt[_621++] = _S01._aV;
            }
        }
    }
    return _Zt
};

function _9k(_231) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return -1
    }
    var _S01 = null;
    if (typeof(_231) == "string") _S01 = _z11._k11(_Z01, _231.toLowerCase()); else _S01 = _z11._E11(_Z01,
        _231);
    var _Zt = [];
    var _331 = 0;
    if (_S01 != null) {
        for (var _t5 = 0; _t5 < _S01._H_.length; _t5++) {
            var _c11 = _S01._H_._RB(_t5);
            if (_c11 != null) {
                _Zt[_331++] = _c11._aV
            }
        }
    }
    return _Zt
};

function _4k(_231) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return ""
    }
    var _S01 = null;
    if (typeof(_231) == "string") _S01 = _z11._k11(_Z01, _231.toLowerCase()); else _S01 = _z11._E11(_Z01, _231);
    if (_S01 != null) {
        if (_S01._C_ == null) {
            return ""
        } else {
            return _S01._C_.slice(0)
        }
    }
    return ""
};

function _wk(_231, _w01) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return
    }
    var _S01 = null;
    if (typeof(_231) == "string") _S01 = _z11._k11(_Z01,
        _231.toLowerCase()); else _S01 = _z11._E11(_Z01, _231);
    if (_S01 != null) {
        if (_S01._1c == _w01) {
            return
        }
        _z11._M11(_Z01, _S01, _w01, false)
    }
};
;

function _bk(_V01) {
    var _Z01 = _z11._Y01();
    if (_Z01 == null) {
        return -1
    }
    var _c11 = _z11._Y11(_Z01, _V01);
    if (_c11 != null) {
        return _c11._L_
    }
    return -1
};
;

function _Al(_u01, _w01) {
    _z11._t01(_u01);
    _z11._v01(_w01)
};
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;var _431 = 0x7fff;
var floor = Math.floor;

function _531(_631) {
    if (_631 < 0) {
        var _t5 = ~~_631;
        var _CO = _631 - _t5;
        if ((_t5 & 1) == 1) {
            if (_CO <= -0.5) {
                return _t5 - 1
            } else {
                return _t5
            }
        } else {
            if (_CO >= -0.5) {
                return _t5
            } else {
                return _t5 - 1
            }
        }
    } else {
        var _t5 = ~~_631;
        var _CO = _631 - _t5;
        if ((_t5 & 1) == 1) {
            if (_CO >= 0.5) {
                return _t5 + 1
            } else {
                return _t5
            }
        } else {
            if (_CO <= 0.5) {
                return _t5
            } else {
                return _t5 + 1
            }
        }
    }
}

var round = _531;
var _fC = _531;
var abs = Math.abs;

function cos(_631) {
    var _Ps = Math.cos(_631);
    var _Mt = ~~(_Ps * 0x1000000);
    _Ps = _Mt / 0x1000000;
    return _Ps
}

function sin(_631) {
    var _Ps = Math.sin(_631);
    var _Mt = ~~(_Ps * 0x1000000);
    _Ps = _Mt / 0x1000000;
    return _Ps
}

function tan(_631) {
    var _Ps = Math.tan(_631);
    var _Mt = ~~(_Ps * 0x1000000);
    _Ps = _Mt / 0x1000000;
    return _Ps
}

function _Vg(_731,
             _831) {
    var _uv = (_731 * Math.cos(_831 * _Pt / 180.0));
    var _931 = Math.round(_uv);
    var _ts = _uv - _931;
    if (Math.abs(_ts) < 0.0001) return _931;
    return _uv
}

function _Xg(_731, _831) {
    var _uv = -(_731 * Math.sin(_831 * _Pt / 180.0));
    var _931 = Math.round(_uv);
    var _ts = _uv - _931;
    if (Math.abs(_ts) < 0.0001) return _931;
    return _uv
}

function _an(_1u, _2u, _ot, _pt) {
    var x = _ot - _1u;
    var y = _pt - _2u;
    if (x === 0) {
        if (y > 0) return 270.0; else if (y < 0) return 90.0; else return 0.0
    } else {
        var _xU = 180.0 * Math.atan2(y, x) / _Pt;
        _xU = (~~round(_xU * 1000000)) / 1000000.0;
        if (_xU <= 0.0) {
            return -_xU
        } else {
            return (360.0 - _xU)
        }
    }
}

function _a31(_1u, _2u, _ot, _pt) {
    return _an(_1u, _2u, _ot, _pt)
}

function _un(_1u, _2u, _ot, _pt) {
    var _9w = _ot - _1u;
    var _aw = _pt - _2u;
    return Math.sqrt(_9w * _9w + _aw * _aw)
}

function _Lt(_631, _b31) {
    if (_631 < _b31) return _631; else return _b31
}

function _Jt(_631, _b31) {
    if (_631 > _b31) return _631; else return _b31
}

var max = Math.max;
var min = Math.min;
var _c31 = [];
var _d31 = 0;
var _e31 = _f31(0);
var _g31 = 0xDA442D24;

function _f31(_h31) {
    var _ZN = _h31;
    for (_t5 = 0; _t5 < 16; _t5++) {
        _ZN = (((_ZN * 214013 + 2531011) >> 16) & 0x7fffffff) | 0;
        _c31[_t5] = ~~_ZN
    }
    _d31 = 0;
    _e31 = _h31;
    return _e31
}

function _i31() {
    var _hv, _Nt, _u5, _cE;
    _hv = _c31[_d31];
    _u5 = _c31[(_d31 + 13) & 15];
    _Nt = _hv ^ _u5 ^ (_hv << 16) ^ (_u5 << 15);
    _u5 = _c31[(_d31 + 9) & 15];
    _u5 ^= (_u5 >> 11);
    _hv = _c31[_d31] = _Nt ^ _u5;
    _cE = _hv ^ ((_hv << 5) & _g31);
    _d31 = (_d31 + 15) & 15;
    _hv = _c31[_d31];
    _c31[_d31] = _hv ^ _Nt ^ _cE ^ (_hv << 2) ^ (_Nt << 18) ^ (_u5 << 28);
    return ((_c31[_d31] & 0x7fffffff) / 2147483647.0)
}

function random(_Rx) {
    var _Kt = _i31();
    return _Kt * _Rx
}

function _pd() {
    var _cE = new Date();
    var _Mt = _cE.getMilliseconds();
    _Mt = (_Mt & 0xffffffff) ^ ((_Mt >> 16) & 0xffff) ^ ((_Mt << 16) & 0xffff0000);
    _f31(_Mt)
}

var _j31 = _pd;

function _0r() {
    var _aC = arguments;
    var _bC = arguments.length;
    var index = Math.floor(random(_bC));
    return _aC[index]
}

function _Vf(_Ps) {
    if (_Ps == 0) return 0;
    if (_Ps < 0) return -1;
    return 1
}

var ceil = Math.ceil;

function _ts(_Ps) {
    return _Ps - ~~_Ps
}

function sqrt(_Ps) {
    if (_Ps >= 0) return Math.sqrt(_Ps); else _SB("Cannot apply sqrt to negative number.")
}

function _Fg(_Ps) {
    return _Ps * _Ps
}

var _tn = Math.pow;
var exp = Math.exp;
var _k31 = Math.log;
var _l31 = Math.asin;
var _m31 = Math.acos;
var _n31 = Math.atan;
var _o31 = Math.atan2;

function _p31() {
    var _aC = _p31.arguments;
    var _bC = _p31.arguments.length;
    var _wt = _aC[0];
    for (var _t5 = 1; _t5 < _bC; _t5++) {
        _wt += _aC[_t5]
    }
    return (_wt / _bC)
}

function _q31(_1u, _2u, _ot, _pt) {
    var _r31 = Math.sqrt(_1u * _1u + _2u * _2u);
    var _s31 = Math.sqrt(_ot * _ot + _pt * _pt);
    return (_1u * _ot + _2u * _pt) / (_r31 * _s31)
}

var _t31 = _q31;

function _u31(_1u, _2u, _v31, _ot, _pt, _w31) {
    var _r31 = Math.sqrt(_1u * _1u + _2u * _2u + _v31 * _v31);
    var _s31 = Math.sqrt(_ot * _ot + _pt * _pt + _w31 * _w31);
    return (_1u * _ot + _2u * _pt + _v31 * _w31) / (_r31 * _s31)
}

var _x31 = _u31;

function _0k(_Ps) {
    var _XB = 0;
    if (_Ps instanceof Array) {
        if (_Ps._y31 !== undefined && _Ps._y31 == 2) {
            return _Ps[0].length
        }
        _XB = _Ps.length;
    }
    return _XB
}

function _z31(_AM, _A31, _B31) {
    if (_AM < _A31) _AM = _A31; else if (_AM > _B31) _AM = _B31;
    return _AM
}

var _C31 = 30, _D31 = 10, _E31 = 3, _F31 = !0;

function _G31(_H31, _I31) {
    var _mT = 0.0;
    while (_H31 <= 0.0) {
        _H31 = _H31 + 360
    }
    while (_H31 >= 360.0) {
        _H31 = _H31 - 360
    }
    while (_I31 < 0.0) {
        _I31 = _I31 + 360
    }
    while (_I31 >= 360.) {
        _I31 = _I31 - 360
    }
    _mT = _I31 - _H31;
    if (_mT < 0) {
        _mT = -_mT
    }
    if (_mT > 180) {
        _mT = 360 - _mT
    }
    return _mT
}

function _J31(_3R, _Ps, _Qs, __21, _K31) {
    if (__21 == _L31) {
        if (_K31) {
            return _M31(_3R,
                _Ps, _Qs)
        } else {
            return _N31(_3R, _Ps, _Qs)
        }
    } else {
        return (_Rg(_3R, _Ps, _Qs, __21) == _lZ)
    }
}

function _O31(_3R, _Ps, _Qs, _P31, __21, _K31) {
    var _mT = false;
    var _Q31 = 0.0;
    var _R31 = 0.0;
    var _S31 = 0.0;
    if ((_3R.x == _Ps) && (_3R.y == _Qs)) return true;
    _Q31 = sqrt(_vK(_3R.x - _Ps) + _vK(_3R.y - _Qs));
    if (_Q31 <= _P31) {
        _R31 = _Ps;
        _S31 = _Qs;
        _mT = true
    } else {
        _R31 = _3R.x + _P31 * (_Ps - _3R.x) / _Q31;
        _S31 = _3R.y + _P31 * (_Qs - _3R.y) / _Q31;
        _mT = false
    }
    if (!_J31(_3R, _R31, _S31, __21, _K31)) {
        return _mT
    }
    _3R._Kh(_an(_3R.x, _3R.y, _R31, _S31));
    _3R._Ey(_R31, _S31);
    return _mT;
}

function _T31(_3R,
              _Ps, _Qs, _P31, _K31) {
    return _O31(_3R, _Ps, _Qs, _P31, _L31, _K31)
}

function _U31(_831, _3R, _V31, __21, _K31) {
    var _mT = false;
    var _W31 = 0.0;
    var _X31 = 0.0;
    if (_G31(_831, _3R._Wg) > _C31) {
        return _mT
    }
    _W31 = _3R.x + _V31 * _E31 * cos(_Pt * _831 / 180);
    _X31 = _3R.y - _V31 * _E31 * sin(_Pt * _831 / 180);
    if (true != _J31(_3R, _W31, _X31, __21, _K31)) {
        return _mT
    }
    _W31 = _3R.x + _V31 * cos(_Pt * _831 / 180);
    _X31 = _3R.y - _V31 * sin(_Pt * _831 / 180);
    if (true != _J31(_3R, _W31, _X31, __21, _K31)) {
        return _mT;
    }
    _3R._Kh(_831);
    _3R._Ey(_W31, _X31);
    _mT = true;
    return _mT
}

function _Y31(_3R, _Ps, _Qs, _P31,
              _wZ, _K31) {
    var _mT = false;
    var _Q31 = 0.0;
    var _Z31 = 0.0;
    var __31 = 0.0;
    if ((_3R.x == _Ps) && (_3R.y == _Qs)) {
        _mT = true;
        return _mT
    }
    _Q31 = sqrt(_vK(_3R.x - _Ps) + _vK(_3R.y - _Qs));
    if (_Q31 <= _P31) {
        if (_J31(_3R, _Ps, _Qs, _wZ, _K31)) {
            _3R._Kh(_a31(_3R.x, _3R.y, _Ps, _Qs));
            _3R._Ey(_Ps, _Qs)
        }
        _mT = true;
        return _mT
    }
    _Z31 = _a31(_3R.x, _3R.y, _Ps, _Qs);
    __31 = 0;
    _mT = false;
    while (__31 < 180) {
        if (_U31(_Z31 - __31, _3R, _P31, _wZ, _K31)) {
            return _mT
        }
        if (_U31(_Z31 + __31, _3R, _P31, _wZ, _K31)) {
            return _mT;
        }
        __31 = __31 + _D31
    }
    if (_F31) {
        _3R._Kh(_3R._Wg + _C31)
    }
    return _mT
}

function _041(_3R,
              _Ps, _Qs, _P31, _K31) {
    return _Y31(_3R, _Ps, _Qs, _P31, _L31, _K31)
}

function _141(_241, _341, _441, _541, _641, _741) {
    this._841 = _241;
    this._941 = _341;
    this._a41 = ~~_441;
    this._b41 = ~~_541;
    this._c41 = _641;
    this._d41 = _741;
    this._e41 = [];
    this._NA()
};_141.prototype._NA = function () {
    var _f41 = this._a41 * this._b41;
    for (var _t5 = 0; _t5 < _f41; _t5++) {
        this._e41[_t5] = 0
    }
};
var _g41 = _h41;

function _h41(_OB) {
    var _i41 = _j41._RB(_OB);
    if (_i41) {
        _Iv.globalAlpha = _Lx;
        var _nE = _LD(0xff0000, 1.0);
        var _oE = _LD(0x00ff00, 1.0);
        for (var x = 0; x < _i41._a41; x++) {
            for (var y = 0; y < _i41._b41;
                 y++) {
                var _2v = _oE;
                if (_i41._e41[x * _i41._b41 + y] < 0) {
                    _2v = _nE
                }
                _Iv.fillStyle = _2v;
                _Iv._HT((_i41._841 + x * _i41._c41), (_i41._941 + y * _i41._d41), _i41._c41, _i41._d41)
            }
        }
        return
    }
    _SB("Error: invalid mp_grid ID (mp_grid_draw)")
}

function _N31(_3R, _Ps, _Qs) {
    var _St, _Ut, _mT, _k41;
    _mT = true;
    _St = _3R.x;
    _Ut = _3R.y;
    _3R._Ey(_Ps, _Qs);
    var _gC = _js._l41();
    for (var _oS = 0; _oS < _gC.length; _oS++) {
        _k41 = _gC[_oS];
        if (_k41._Ia) {
            if (_3R._nZ(_k41, true)) {
                _mT = false;
                break
            }
        }
    }
    _3R._Ey(_St, _Ut);
    return _mT
}

function _M31(_3R, _Ps, _Qs) {
    var _St, _Ut, _mT, _k41;
    _mT = true;
    _St = _3R.x;
    _Ut = _3R.y;
    _3R._Ey(_Ps, _Qs);
    var _gC = _js._l41();
    for (var _oS = 0; _oS < _gC.length; _oS++) {
        _k41 = _gC[_oS];
        if (_3R._nZ(_k41, true)) {
            _mT = false;
            break
        }
    }
    _3R._Ey(_St, _Ut);
    return _mT
}

function _Wf(_3R, _Ps, _Qs, _kC) {
    var _St, _Ut, _mT, _k41;
    _mT = false;
    _St = _3R.x;
    _Ut = _3R.y;
    _3R._Ey(_Ps, _Qs);
    var _gC = _dg(_kC);
    for (var _oS = 0; _oS < _gC.length; _oS++) {
        _k41 = _gC[_oS];
        if (_3R._nZ(_k41, true)) {
            _mT = true;
            break
        }
    }
    _3R._Ey(_St, _Ut);
    return _mT
}

function _Sg(_3R, _Ps, _Qs, _V31) {
    _3R._Uf(_Ps - _3R.x);
    _3R._Yf(_Qs - _3R.y);
    _3R._3h(_V31)
}

function _m41(_3R, _Ps,
              _Qs, _n41) {
    if (_n41) {
        return _M31(_3R, _Ps, _Qs)
    } else {
        return _N31(_3R, _Ps, _Qs)
    }
}

function _o41(_3R, _p41, _n41) {
    var _t5, _tt;
    var _St, _Ut, _q41, _r41, _s41, _t41, _u41;
    var _v41, _w41, _x41, _y41;
    _y41 = false;
    if (_m41(_3R, _3R.x, _3R.y, _n41) == false) {
        _3R._Ey(_3R._z41, _3R._A41);
        _y41 = true
    }
    _St = _3R.x;
    _Ut = _3R.y;
    if (_p41) {
        _tt = 18;
        _u41 = 10.0 * Math.round(_3R._Wg / 10.0);
        _s41 = _u41;
        _t41 = _u41;
        for (_t5 = 1; _t5 < 2 * _tt; _t5++) {
            _s41 = _s41 - 180 / _tt;
            _q41 = _St + _3R._Tb * Math.cos(_s41 * _Pt / 180);
            _r41 = _Ut - _3R._Tb * Math.sin(_s41 * _Pt / 180);
            if (_m41(_3R, _q41, _r41, _n41)) {
                break
            } else {
                _y41 = true
            }
        }
        for (_t5 = 1; _t5 < 2 * _tt; _t5++) {
            _t41 = _t41 + 180 / _tt;
            _q41 = _St + _3R._Tb * Math.cos(_t41 * _Pt / 180);
            _r41 = _Ut - _3R._Tb * Math.sin(_t41 * _Pt / 180);
            if (_m41(_3R, _q41, _r41, _n41)) {
                break
            } else {
                _y41 = true
            }
        }
        if (_y41 == true) {
            _3R._Kh(180 + (_s41 + _t41) - _u41)
        }
    } else {
        _v41 = _m41(_3R, _3R.x + _3R._2c, _3R.y, _n41);
        _w41 = _m41(_3R, _3R.x, _3R.y + _3R._3c, _n41);
        _x41 = _m41(_3R, _3R.x + _3R._2c, _3R.y + _3R._3c, _n41);
        if ((_v41 == false) && (_w41 == false)) {
            _3R._Uf(-_3R._2c);
            _3R._Yf(-_3R._3c)
        } else if ((_v41 == true) && (_w41 == true) && (_x41 == false)) {
            _3R._Uf(-_3R._2c);
            _3R._Yf(-_3R._3c)
        } else if (_v41 == false) _3R._Uf(-_3R._2c); else if (_w41 == false) _3R._Yf(-_3R._3c)
    }
}

function _Og(_3R, _B41) {
    _o41(_3R, _B41, false)
}

function _Ug(_3R, _B41) {
    _o41(_3R, _B41, true)
}

function _C41(_ZC, _Ps, _Qs, _n41) {
    if (_n41) return _M31(_ZC, _Ps, _Qs); else return _N31(_ZC, _Ps, _Qs)
}

function _D41(_ZC, _831, _E41, _n41) {
    var _GE;
    if (_E41 <= 0) _GE = 1000; else _GE = _fC(_E41);
    _9w = Math.cos(_831 * Math.PI / 180);
    _aw = -Math.sin(_831 * Math.PI / 180);
    if (_C41(_ZC, _ZC.x, _ZC.y, _n41) == false) return;
    for (var _t5 = 1; _t5 <= _GE; _t5++) {
        if (_C41(_ZC, _ZC.x + _9w,
            _ZC.y + _aw, _n41)) _ZC._Ey(_ZC.x + _9w, _ZC.y + _aw); else return
    }
}

function _Xf(_3R, _831, _E41) {
    _D41(_3R, _831, _E41, false)
}

function _1j(_ZC, _831, _E41) {
    _D41(_ZC, _831, _E41, true)
}

function _mg(_ZC, _kC) {
    var _Q31 = 10000000000;
    var _t5 = 0;
    var _Q31 = _F41(_ZC, Math.floor(_kC), false, _Q31, function (_mZ) {
        if (_ZC._TW) _ZC._UW();
        if (_mZ._TW) _mZ._UW();
        var _Kt = _mZ._G41;
        var _ZN = _ZC._G41;
        var _H41 = 0, _I41 = 0;
        if (_Kt.left > _ZN.right) _H41 = _Kt.left - _ZN.right;
        if (_Kt.right < _ZN.left) _H41 = _Kt.right - _ZN.left;
        if (_Kt.top > _ZN.bottom) _I41 = _Kt.top - _ZN.bottom;
        if (_Kt.bottom < _ZN.top) _I41 = _Kt.bottom - _ZN.top;
        return Math.sqrt(_H41 * _H41 + _I41 * _I41)
    });
    return _Q31
}

var _J41 = 1;
var _K41 = 2;
var _L41 = 3;
var _M41 = 4;
var _N41 = window._O41;
var _P41 = null;
try {
    _P41 = require("ws")._Q41
} catch (_R41) {
}

function _S41(_T41, _U41) {
    this._V41 = _T41;
    this._U41 = _U41
}

_S41.prototype = {_V41: null, _U41: !1, _W41: !1, index: -1};
var _X41 = "GM:Studio-Connect";
var _Y41 = 0xCAFEBABE;
var _Z41 = 0xDEADB00B;
var __41 = 0xDEAFBEAD;
var _051 = 0xF00DBEEB;
var _151 = 0xDEADC0DE;
var _251 = [];
var _351 = [];

function _451(_551) {
    var _t5 = _351.shift();
    if (_t5 == null) _t5 = _251.length;
    _251[_t5] = _551;
    _551.index = _t5;
    return _t5
}

function _651(e) {
    var _JQ = _nO._3C(e.id, null, _751, e);
    _JQ._fO = true
}

function _851(_1K, offset, length) {
    var _951 = new Uint8Array(_1K.buffer);
    var _a51 = _1K._b51 + offset;
    var index = _c51(length, _d51, 1);
    var _e51 = new Uint8Array(_f51._RB(index)._g51);
    for (var _t5 = 0; _t5 < length; _t5++) _e51[_t5] = _951[_a51 + _t5];
    return index
}

function _wg(_Os) {
    if (!_4s._RB(_Os)) return false;
    return true;
}

var _h51 = _cD;
var _i51 = _j51;
var _k51 = _l51;
var _m51 = _n51;
var _o51 = _p51;
var _q51 = _r51;
var _s51 = _t51;
var _u51 = _v51;
var _w51 = _x51;
var _y51 = _z51;
var _A51 = _B51;
var _C51 = _D51;
var _E51 = _F51;
var _G51 = _F51;
var _H51 = _I51;
var _J51 = _K51;
var _L51 = _dD;
var _M51 = _N51;
var _O51 = _P51;
var _Q51 = _R51;
var _S51 = _T51;
var _U51 = _V51;
var _W51 = _X51;
var _Y51 = _Z51;
var __51 = _061;
var _161 = _261;
var _361 = _261;
var _461 = _gD;
var _561 = _gD;
var _661 = _761;
var _861 = _761;
var _961 = _761;
var _a61 = _761;
var _b61 = _fD;
var _c61 = _fD;
var _d61 = _e61;
var _f61 = _e61;
var _g61 = _h61;
var _i61 = _h61;
var _j61 = _k61;
var _l61 = _hD;
var _m61 = _n61;
var _o61 = _p61;
var _q61 = _r61;
var _s61 = _t61;
var _u61 = _v61;
var _w61 = _x61;
var _y61 = _z61;
var _A61 = _B61;
var _C61 = _D61;
var _E61 = _F61;
var _G61 = _H61;
var _I61 = _J61;
var _K61 = _L61;
var _M61 = _N61;
var _O61 = _P61;
var _Q61 = _R61;

function _S61(_ZC) {
    _ZC._T61(-1, 0, 1, 0, false, 0)
}

var _U61 = _V61;

function _V61(_OB, _W61, _X61, _Y61) {
    var _Z61 = __61._14[_OB];
    if (!_Z61) return;
    _Iv.globalAlpha = _Lx;
    _Iv.strokeStyle = _oT;
    var _St, _Ut, _071;
    var _171 = 0;
    var _271 = _Z61._371(0);
    if (!_Y61) {
        _W61 = _W61 - _271.x;
        _X61 = _X61 - _271.y
    } else {
        _W61 = 0;
        _X61 = 0
    }
    _171 = _fC(_Z61.length / 4.0);
    if (_171 == 0) return;
    var _n5 = true;
    _Iv._WT();
    for (var _t5 = 0; _t5 <= _171; _t5++) {
        _271 = _Z61._371(_t5 / _171);
        if (_n5) {
            _Iv._XT(_W61 + _271.x,
                _X61 + _271.y);
            _n5 = false
        } else {
            _Iv._YT(_W61 + _271.x, _X61 + _271.y)
        }
    }
    _Iv.__T();
    _Iv._ZT()
}

var _471 = new _571();
var _671 = new _571();
var _771 = new _571();

function _871() {
    var _971 = _471._3C(new _a71(_971));
    return _971
}

function _b71(_c71) {
    var _d71 = _471._RB(_c71);
    _d71._e71()
}

function _f71(_c71, _g71) {
    var _d71 = _471._RB(_c71);
    _d71._h71(_g71)
}

function _i71(_c71, _j71) {
    var _d71 = _471._RB(_c71);
    _d71._k71(_j71)
}

function _l71(_c71, _m71) {
    var _d71 = _471._RB(_c71);
    _d71._n71(_m71)
}

function _o71(_c71, _p71) {
    var _d71 = _471._RB(_c71);
    _d71._q71(_p71)
}

function _r71(_c71, _s71) {
    var _d71 = _471._RB(_c71);
    _d71._t71((_s71 > 0.5) ? true : false)
}

function _u71(_c71, _v71) {
    var _d71 = _471._RB(_c71);
    _d71._w71(_v71)
}

function _x71(_c71, _v71) {
    var _d71 = _471._RB(_c71);
    _d71._y71(_v71)
}

function _z71(_c71, _A71) {
    var _d71 = _471._RB(_c71);
    _d71._B71(_A71)
}

function _C71(_c71, _D71) {
    var _d71 = _471._RB(_c71);
    _d71._E71(_D71 * _js._F71._G71)
}

function _H71(_c71) {
    var _d71 = _471._RB(_c71);
    _d71._I71()
}

function _J71(_c71, _K71, _L71) {
    var _d71 = _471._RB(_c71);
    var scale = _js._F71._G71;
    _d71._M71(_K71 * scale, _L71 * scale)
}

function _N71(_ZC, _c71, _OB, _O71, _P71) {
    var _Q71 = -1;
    var _d71 = _471._RB(_c71);
    var _kC = Math.floor(_OB);
    if (_kC == _R71) {
        _kC = _ZC.id
    }
    if (_kC == _L31) {
        var _gC = _OW._l41();
        for (var _oS = 0; _oS < _gC.length; _oS++) {
            var _NW = _gC[_oS];
            if (_NW._S71) continue;
            _Q71 = _js._F71._T71(_d71, _NW, _O71, _P71)
        }
    } else if (_kC < 100000) {
        var _LP = _4s._RB(_kC);
        if (_LP === null) {
            return _U71
        }
        var _gC = _LP._LW();
        for (var _oS = 0; _oS < _gC.length; _oS++) {
            var _NW = _gC[_oS];
            if (_NW._S71) continue;
            _Q71 = _js._F71._T71(_d71, _NW, _O71, _P71)
        }
    } else {
        var _NW = _OW._RB(_kC);
        _Q71 = _js._F71._T71(_d71,
            _NW, _O71, _P71)
    }
    return _Q71
}

function _V71(_ZC, _c71, _OB, _W71, _X71) {
    if (_W71 !== undefined && _X71 !== undefined) {
        return _N71(_ZC, _c71, _OB, _W71, _X71)
    } else {
        return _N71(_ZC, _c71, _OB, 0.0, 0.0)
    }
}

function _Y71(_Os, _Nx, _Z71) {
    var __71 = __01._RB(_Os);
    if (__71 === null) return;
    var _081 = __71._181;
    _081._Ub = _Nx;
    _081._Wb = _Z71
}

var _281 = _Y71;
;
;
;
;
;
;
;
;
;
;
;
;
;

function _Ml() {
    if ((_js._381 + 1) >= __01._481.length) return;
    _581 = __01._681(_js._381 + 1).id
};
;

function _Ci(_O01) {
    var _781 = __01._RB(_O01);
    if ((_781 == null) || (_781 == undefined)) {
        _ON("Error: Room " + _O01 + " is not a valid room index")
    }
    else {
        _581 = _O01
    }
};
;
;
;

function _Um() {
    _581 = _881
}

var _981 = function () {
    _zw("yy_texture_get_texel_width()")
};
var _a81 = function () {
    _zw("yy_texture_get_texel_height()")
};
var _b81 = function () {
    _zw("texture_set_stage()")
};
var _c81 = function () {
    _zw("shader_is_compiled()")
};
var _d81 = function () {
    _zw("shader_set()")
};
var _e81 = function () {
    _zw("shader_get_uniform()")
};
var _f81 = function () {
    _zw("shader_set_uniform_i()")
};
var _g81 = function () {
    _zw("shader_set_uniform_f()");
};
var _h81 = function () {
    _zw("shader_set_uniform_matrix()")
};
var _i81 = function () {
    _zw("shader_set_uniform_matrix()")
};
var _j81 = function () {
    _zw("shader_enable_corner_id()")
};
var _k81 = function () {
    _zw("shader_set_uniform_array_i()")
};
var _l81 = function () {
    _zw("shader_set_uniform_array_f()")
};
var _m81 = function () {
    _zw("shader_set_uniform_matrix_array()")
};
var _n81 = -1;

function _o81() {
    return 0
}

function _p81(_q81) {
    _n81 = _q81;
    _d81(_q81)
}

function _r81() {
    _n81 = -1;
    _d81(-1)
}

var _s81 = [];
var _t81 = 300000;
var _u81 = _t81;
var _v81 = [];
var _w81 = 0;
var audio_sampledata = [];
var _x81 = !1;
var _y81 = 0;
var _z81 = 128;
var _A81 = 100000;
var _B81 = [];
var _C81 = [];
var _D81 = 0;
var _E81 = 200000;
var _F81 = [];
var _G81 = [];
var _H81 = 0;
var _I81 = 0;
var _J81 = [];
var _K81 = {_L81: 0, _M81: 1, _N81: 2, _O81: 3, _P81: 4, _Q81: 5, _R81: 6};
var _S81 = {_T81: 0, _U81: 1, _V81: 2};
var _W81 = 0;
var _X81 = 1.0;
var _Y81 = 0;

function _Z81() {
    if (_kB != _lB) return;
    _y81++
}

var __81;

function _091() {
    _191.disconnect();
    _191 = g_WebAudioContext.createGain();
    _191.connect(g_WebAudioContext.destination);
    g_WebAudioContext.listener._eC = new _2K(0, 0, 0);
    g_WebAudioContext.listener._291 = new _2K(0, 0, 0);
    g_WebAudioContext.listener._391 = new Array(0,
        0, 0, 0, 0, 0)
}

function _491() {
    if (_kB != _lB) {
        return
    }
    _191 = g_WebAudioContext.createGain();
    _191.connect(g_WebAudioContext.destination);
    _591(_K81._M81);
    var _691;
    if (typeof document.hidden !== "undefined") {
        __81 = "hidden";
        _691 = "visibilitychange"
    } else if (typeof document.mozHidden !== "undefined") {
        __81 = "mozHidden";
        _691 = "mozvisibilitychange"
    } else if (typeof document.msHidden !== "undefined") {
        __81 = "msHidden";
        _691 = "msvisibilitychange"
    } else if (typeof document.webkitHidden !== "undefined") {
        __81 = "webkitHidden";
        _691 = "webkitvisibilitychange";
    }
    document.addEventListener(_691, _791, false);
    g_WebAudioContext.listener._eC = new _2K(0, 0, 0);
    g_WebAudioContext.listener._291 = new _2K(0, 0, 0);
    g_WebAudioContext.listener._391 = new Array(0, 0, 0, 0, 0, 0);
    _891(0, 0, 0);
    _991(0, 0, 1.0, 0, 1.0, 0.0);
    _a91();
    _b91()
}

function _c91() {
    this.buffer = null;
    this.gain = 1.0;
    this._d91 = 1.0;
    this._e91 = 1.0;
    this.duration = 0.0;
    this._f91 = 0.0;
    this._L3 = 0;
    this._G3 = 0
}

function _g91(_h91, _i91, _j91) {
    this._k91 = g_WebAudioContext.createGain();
    this._l91 = null;
    this._1P = 0;
    this._A01(_h91, _i91, _j91)
}

_g91.prototype._A01 = function (_h91,
                                _i91, _j91) {
    this._m91 = false;
    this._n91 = g_WebAudioContext.currentTime;
    this.playbackpoint = 0;
    this._o91 = null;
    this._k91.disconnect();
    this.gain = 1.0;
    this._k91.gain.value = 1;
    if (this._l91 != null) {
        this._l91.disconnect();
        this._l91 = null
    }
    this.paused = false;
    this._p91 = _h91;
    this._q91 = _j91;
    this._r91 = false;
    this._s91 = _i91;
    this._t91 = false;
    this._u91 = false;
    this._v91 = false;
    this._w91 = null;
    this._x91 = null;
    if (_h91 >= 0) {
        this._t91 = _y91(_h91);
        this._u91 = _z91(_h91);
        this._v91 = _A91(_h91);
        if (!this._u91 && !this._v91) {
            this._k91.gain.value = audio_sampledata[_h91].gain;
            if (this._1P >= _t81) {
                _J81[this._1P - _t81] = null
            }
            this._1P = _u81;
            _J81[_u81 - _t81] = this;
            ++_u81
        }
    }
};

function _B91(_C91) {
    if (_C91 < _t81 || _C91 >= _u81) {
        debug("Error: invalid sound handle " + _C91);
        return null
    }
    var _D91 = _J81[_C91 - _t81];
    if (_D91 == undefined) {
        return null
    }
    return _D91
}

function _y91(_p91) {
    if (_p91 >= 0 && _p91 < _NN._E3.length) {
        if (_NN._E3[_p91]._G3 == 1) {
            return true
        }
    } else if (_p91 < _A81) {
        debug("IsSoundStreamed - Error: soundid " + _p91 + " not found")
    }
    return false
}

function _z91(_p91) {
    if (_p91 >= _A81 && _p91 < _E81) {
        return true
    }
    return false
}

function _A91(_p91) {
    if (_p91 >= _E81 && _p91 < _t81) {
        return true
    }
    return false
}

function _E91(_h91) {
    var _D91 = _NN._E3[_h91];
    var _F91 = _Tu + _D91._I3;
    var _G91 = _D91._H3;
    _F91 = _H91(_F91);
    var index = _F91.indexOf(_G91);
    if (index > 0) {
        _F91 = _F91.substr(0, index)
    }
    if (_I91) {
        _G91 = "ogg"
    } else if (_J91) {
        _G91 = "mp3"
    } else {
        _G91 = "ogg"
    }
    _F91 = _F91 + "." + _G91;
    return _F91
}

function _K91(_L91, _h91, _M91) {
    var _N91 = _O91(_h91);
    var _P91 = _N91._f91;
    if (_N91._c31 == 'loading') {
        _N91._Q91.push(["Audio_Play", _L91, _h91, _M91]);
        return
    }
    if (_L91._t91) _R91(_L91, _h91, _M91, _P91);
    else _S91(_L91, _h91, _M91, _P91);
    _L91._m91 = true
}

function _R91(_L91, _h91, _M91, _T91) {
    var _U91 = _E91(_h91);
    try {
        if (_L91._w91 != null) {
            document.body.removeChild(_L91._w91)
        }
        _L91._w91 = new Audio();
        var _w91 = _L91._w91;
        _w91.controls = false;
        _w91.autoplay = true;
        _w91.preload = "none";
        _w91.loop = (_M91) != 0 ? true : false;
        _w91.src = _uQ(null, null, _U91);
        document.body.appendChild(_w91);
        if (_T91 > 0) {
            _w91.addEventListener('loadedmetadata', function () {
                _L91._w91.currentTime = _T91
            }, false)
        }
        _w91.load();
        try {
            var _V91 = _w91.play();
            if (_V91 !== undefined) {
                _V91._W91(function () {
                    console.log("playback started")
                }).catch(function (error) {
                    console.log("playback failed ", error)
                })
            }
        } catch (_X91) {
            debug("audio_tag.play() exception: " + _X91)
        }
        _L91._p91 = _h91;
        _L91._x91 = g_WebAudioContext.createMediaElementSource(_w91);
        _L91._x91.connect(_L91._k91)
    } catch (_X91) {
        debug("Audio_PlayStreamed exception: " + _X91)
    }
}

function _mB() {
    var _D91 = g_WebAudioContext.createBufferSource();
    var gain = g_WebAudioContext.createGain();
    _D91.connect(gain);
    gain.connect(g_WebAudioContext.destination);
    gain.gain.value = 0;
    _D91.start(0);
    if (g_WebAudioContext.sampleRate === 48000) {
        if (_Y91 == _Z91) {
            debug("Recreating audiocontext to fix sample rate");
            try {
                g_WebAudioContext = new AudioContext()
            } catch (e) {
                try {
                    g_WebAudioContext = new webkitAudioContext()
                } catch (e) {
                    debug('Web Audio API not supported in this browser');
                    _kB = __91
                }
            }
            _D91 = g_WebAudioContext.createBufferSource();
            gain = g_WebAudioContext.createGain();
            _D91.connect(gain);
            gain.connect(g_WebAudioContext.destination);
            gain.gain.value = 0;
            _D91.start(0);
            _091();
            for (_t5 = 0; _t5 < _I81; ++_t5) {
                _s81[_t5]._k91 = g_WebAudioContext.createGain()
            }
            debug("Sample rate now " + g_WebAudioContext.sampleRate)
        }
    }
}

function _S91(_L91, _h91, _0a1, _T91) {
    _L91._p91 = _h91;
    try {
        var _1a1 = null;
        var _2a1 = false;
        if (_h91 >= _E81 && _h91 < (_E81 + _H81)) {
            _2a1 = true;
            var _3a1 = _h91 - _E81;
            _F81[_3a1]._4a1.connect(_L91._k91);
            _F81[_3a1].gainnode = _L91._k91;
            _1a1 = _F81[_3a1]._4a1
        } else {
            var _N91 = _O91(_h91);
            var _e91 = _N91._e91;
            if (_L91._l91 != null) {
                _e91 *= _L91._l91._e91
            }
            _L91._o91 = g_WebAudioContext.createBufferSource();
            _L91._o91.playbackRate.value = _e91;
            _L91._o91.loop = _0a1;
            _L91._o91.buffer = _N91.buffer;
            _L91._o91.connect(_L91._k91);
            _1a1 = _L91._o91
        }
        _L91._n91 = g_WebAudioContext.currentTime;
        _1a1.onended = function (event) {
            _L91._m91 = false;
            if (true === _L91._o91.loop) _S91(_L91, _h91, _0a1, _T91)
        };
        if (!_2a1) {
            if (_T91 != undefined) {
                if (!_1a1.start) _1a1.noteOn(_T91); else _1a1.start(0, _T91);
                _L91.playbackpoint = _T91
            } else {
                _1a1.start(0);
                _L91.playbackpoint = 0
            }
        }
    } catch (_X91) {
        debug("Audio_PlayUnstreamed exception: " + _X91)
    }
}

function _5a1(_L91) {
    if (_L91._m91) {
        if (_L91._t91) _6a1(_L91); else _7a1(_L91);
        _L91._p91 = -1;
        _L91._m91 = false
    }
}

function _6a1(_L91) {
    if (_L91._w91 != null) {
        try {
            _L91._w91.pause();
            _L91._x91.disconnect();
            if (_L91._k91 != null) _L91._k91.disconnect();
            if (_L91._l91 != null) {
                _L91._l91.disconnect();
                _L91._l91 = null
            }
        } catch (_X91) {
            debug("Audio_StopStreamed exception: " + _X91);
        }
    }
}

function _7a1(_L91) {
    try {
        if (_L91._p91 >= _E81 && _L91._p91 < (_E81 + _H81)) {
            var _8a1 = _L91._p91 - _E81;
            _F81[_8a1]._4a1.onended = null;
            _F81[_8a1]._4a1.disconnect()
        } else if (_L91._o91 != null) {
            _L91._o91.onended = null;
            _L91._o91.loop = false;
            _L91._o91.stop(0);
            _L91._o91.disconnect()
        }
        if (_L91._k91 != null) _L91._k91.disconnect();
        if (_L91._l91 != null) {
            _L91._l91.disconnect();
            _L91._l91 = null
        }
    } catch (_X91) {
        debug("Audio_StopUnstreamed exception: " + _X91)
    }
}

function _9a1(_L91) {
    if (!_L91.paused) {
        if (_L91._t91) _aa1(_L91); else _ba1(_L91);
        _L91.paused = true
    }
}

function _aa1(_L91) {
    try {
        _L91._w91.pause();
    } catch (_X91) {
        debug("Audio_PauseStreamed exception: " + _X91)
    }
}

function _ba1(_L91) {
    try {
        if (_L91._p91 >= _E81 && _L91._p91 < (_E81 + _H81)) {
            var _8a1 = _L91._p91 - _E81;
            _F81[_8a1]._4a1.disconnect(0);
            _F81[_8a1]._4a1.onended = null
        } else {
            _L91._o91.onended = null;
            _L91._o91.stop(0);
            _L91.playbackpoint += g_WebAudioContext.currentTime - _L91._n91
        }
    } catch (_X91) {
        debug("Audio_PauseUnstreamed exception: " + _X91)
    }
}

function _ca1(_L91) {
    if (_L91.paused) {
        if (_L91._t91) _da1(_L91); else _ea1(_L91);
        _L91.paused = false
    }
}

function _da1(_L91) {
    if (_L91.paused) {
        try {
            _L91._w91.play()
        } catch (_X91) {
            debug("Audio_ResumeStreamed exception: " + _X91);
        }
    }
}

function _ea1(_L91) {
    try {
        if (_L91._p91 >= _E81 && _L91._p91 < (_E81 + _H81)) {
            var _8a1 = _L91._p91 - _E81;
            _F81[_8a1]._4a1.connect(_L91._k91);
            _F81[_8a1]._4a1.onended = function (event) {
                _L91._m91 = false
            }
        } else {
            _L91._o91 = g_WebAudioContext.createBufferSource();
            _L91._n91 = g_WebAudioContext.currentTime;
            _L91._k91 = g_WebAudioContext.createGain();
            var _fa1 = _O91(_L91._p91);
            _L91._k91.gain.value = _L91.gain * _fa1.gain;
            _L91._o91.connect(_L91._k91);
            _L91._o91.onended = function (event) {
                _L91._m91 = false
            };
            if (_L91._l91 != null) {
                _L91._k91.connect(_L91._l91)
            } else {
                _L91._k91.connect(_191)
            }
            _L91._o91.buffer = _fa1.buffer;
            if (_L91._q91 > 0) _L91._o91.loop = true;
            {
                var _ga1 = Math.floor(_L91.playbackpoint / _L91._o91.buffer.duration);
                var _ha1 = _L91.playbackpoint - _ga1 * _L91._o91.buffer.duration;
                _L91._o91.start(0, _ha1)
            }
        }
    } catch (_X91) {
        debug("Audio_ResumeUnstreamed exception: " + _X91)
    }
}

function _ia1(_L91) {
    var _ja1 = false;
    if (_L91._m91) {
        return _L91.paused
    }
    return false
}

function _ka1(_L91) {
    var _la1 = false;
    if (_L91._m91) {
        if (_L91._t91) _la1 = _ma1(_L91); else _la1 = _na1(_L91)
    }
    return _la1
}

function _na1(_L91) {
    if (_L91._o91 != null) {
        if ((_L91._o91.playbackState == undefined || _L91._o91.playbackState != _L91._o91.FINISHED_STATE) || _L91.paused) {
            return true
        }
    }
    return false
}

function _ma1(_L91) {
    if (_L91._w91 != null) {
        if (!_L91._w91.ended) {
            return true
        }
    }
    return false
}

function _oa1(_h91, _i91, _j91) {
    if (_kB != _lB) return null;
    var _t5;
    var _D91;
    for (_t5 = 0; _t5 < _I81; ++_t5) {
        _D91 = _s81[_t5];
        if (!_D91._m91) {
            _D91._A01(_h91, _i91, _j91);
            return _D91
        } else {
            var _pa1 = false;
            if (_D91._t91 && _D91._w91 != null) {
                _pa1 = _D91._w91.ended
            } else {
                _pa1 = ((_D91._o91.playbackState != undefined && _D91._o91.playbackState == _D91._o91.FINISHED_STATE) && !_D91.paused)
            }
            if (_pa1) {
                _D91._A01(_h91, _i91, _j91);
                return _D91
            }
        }
    }
    if (_I81 < _z81) {
        var _qa1 = new _g91(_h91, _i91, _j91);
        _s81[_I81] = _qa1;
        ++_I81;
        return _qa1
    }
    var _ra1 = _i91;
    var _sa1 = -1;
    for (_t5 = 0; _t5 < _I81; ++_t5) {
        _D91 = _s81[_t5];
        if (_D91._s91 < _ra1) {
            _sa1 = _t5;
            _ra1 = _D91._s91
        }
    }
    if (_sa1 >= 0) {
        debug("killing sound on channel " + _sa1);
        var _ta1 = _s81[_sa1];
        _5a1(_ta1);
        _ta1._A01(_h91, _i91, _j91);
        return _ta1
    }
    debug("reached max sounds and no lower priority");
    return null
}

function _O91(_p91) {
    var _N91 = null;
    if (_p91 >= 0 && _p91 <= audio_sampledata.length) {
        _N91 = audio_sampledata[_p91]
    } else {
        var _ua1 = _p91 - _A81;
        if (_ua1 >= 0 && _ua1 < _D81) {
            _N91 = _C81[_ua1]
        } else {
            var _8a1 = _p91 - _E81;
            if (_8a1 >= 0 && _8a1 < _H81) {
                _N91 = _G81[_8a1]
            }
        }
    }
    return _N91;
}

function _2l(_p91, _s91, _q91) {
    var _N91 = _O91(_p91);
    if (_N91 == null) {
        debug("audio_play_sound - invalid sound index: " + _p91);
        return -1
    }
    var _L3 = _N91._L3;
    if (!_va1(_L3)) {
        debug(_wa1(_p91) + ": Audio Group " + _L3 + " is not loaded");
        return -1
    }
    var _qa1 = _oa1(_p91, _s91, _q91);
    if (_qa1 == null) return -1;
    _qa1._k91.connect(_191);
    _K91(_qa1, _p91, (_q91 > 0));
    return _qa1._1P
}

function _3l(_h91) {
    if (_kB != _lB) return;
    var _D91;
    if (_h91 >= _t81) {
        _D91 = _B91(_h91);
        if (_D91 != null) {
            _5a1(_D91)
        }
    } else {
        for (_t5 = 0; _t5 < _I81; ++_t5) {
            _D91 = _s81[_t5];
            if (_D91._p91 == _h91) _5a1(_D91)
        }
    }
}

function _791() {
    if (_kB == _lB) {
        if (document[__81] == true) {
            if (!_x81) {
                _x81 = true;
                _xa1(true)
            }
        } else if (document[__81] == false) {
            if (_x81) {
                _ya1(true);
                _x81 = false
            }
        }
    }
}

function _wa1(_za1) {
    if (_kB == _lB) {
        var _Aa1 = -1;
        if (_za1 >= _t81) {
            var _D91 = _B91(_za1);
            if (_D91 != null) {
                _Aa1 = _D91._p91
            }
        } else {
            _Aa1 = _za1
        }
        if (_Aa1 >= 0 && _Aa1 < _NN._E3.length) {
            var name = _NN._E3[_Aa1]._F3;
            return name
        }
    }
    return "<undefined>";
}

var _Ba1;

function _591(_Ca1) {
    if (_kB != _lB) {
        return
    }
    var _Da1 = g_WebAudioContext.createPanner();
    _Ba1 = _Da1.INVERSE_DISTANCE;
    if (_Ba1 == undefined) _Ba1 = "inverse";
    switch (_Ca1) {
        case _K81._L81:
            debug("Audio_falloff_none not supported in html5\n");
            break;
        case _K81._M81:
            _Ba1 = _Da1.INVERSE_DISTANCE;
            if (_Ba1 == undefined) _Ba1 = "inverse";
            break;
        case _K81._N81:
            debug("Audio_falloff_inverse_distance_clamped not supported in html5\n");
            break;
        case _K81._O81:
            _Ba1 = _Da1.LINEAR_DISTANCE;
            if (_Ba1 == undefined) _Ba1 = "linear";
            break;
        case _K81._P81:
            debug("Audio_falloff_linear_distance_clamped not supported in html5\n");
            break;
        case _K81._Q81:
            _Ba1 = _Da1.EXPONENTIAL_DISTANCE;
            if (_Ba1 == undefined) _Ba1 = "exponential";
            break;
        case _K81._R81:
            debug("Audio_falloff_exponent_distance_clamped not supported in html5\n");
            break;
        default :
            debug("Attempting to set audio falloff to unknown model\n");
            break
    }
}

function _xa1(_Ea1) {
    for (_t5 = 0; _t5 < _I81; ++_t5) {
        var _D91 = _s81[_t5];
        if (_D91._m91) {
            if (!_D91.paused) {
                _9a1(_D91);
                if (_Ea1) _D91._r91 = true
            }
        }
    }
}

function _4l() {
    for (_t5 = 0; _t5 < _I81; ++_t5) {
        var _D91 = _s81[_t5];
        if (_D91._m91) {
            _5a1(_D91)
        }
    }
}

function _Fa1(_Ga1) {
    for (_t5 = 0; _t5 < _I81; ++_t5) {
        var _D91 = _s81[_t5];
        if (_D91._m91) {
            var _L3 = audio_sampledata[_D91._p91]._L3;
            if (_L3 == _Ga1) {
                _5a1(_D91)
            }
        }
    }
}

function _ya1(_Ea1) {
    for (_t5 = 0; _t5 < _I81; ++_t5) {
        var _D91 = _s81[_t5];
        if (_D91._m91) {
            if (_D91.paused) {
                if (_Ea1) {
                    if (_D91._r91) {
                        _ca1(_D91);
                        _D91._r91 = false
                    }
                } else {
                    _ca1(_D91)
                }
            }
        }
    }
}

function _1l(_h91) {
    if (_kB !== _lB) return false;
    if (_h91 >= _t81) {
        var _D91 = _B91(_h91);
        if (_D91 != null) {
            if (_ka1(_D91)) {
                return true
            }
        }
    } else {
        for (_t5 = 0; _t5 < _I81; ++_t5) {
            _D91 = _s81[_t5];
            if (_D91._p91 == _h91) {
                if (_D91._m91) {
                    if (_ka1(_D91)) {
                        return true
                    }
                }
            }
        }
    }
    return false
}

function _891(_Ha1, _Ia1, _Ja1) {
    if (_kB == _lB) {
        var _Ka1 = g_WebAudioContext.listener;
        _Ka1.setPosition(_Ha1, _Ia1, _Ja1);
        _Ka1._eC._AK = _Ha1;
        _Ka1._eC._BK = _Ia1;
        _Ka1._eC._CK = _Ja1
    }
}

function _991(_Ha1, _Ia1, _Ja1, _La1, _Ma1, _Na1) {
    if (_kB == _lB) {
        var _Ka1 = g_WebAudioContext.listener;
        _Ka1.setOrientation(_Ha1, _Ia1, _Ja1, _La1, _Ma1, _Na1);
        _Ka1._391[0] = _Ha1;
        _Ka1._391[1] = _Ia1;
        _Ka1._391[2] = _Ja1;
        _Ka1._391[3] = _La1;
        _Ka1._391[4] = _Ma1;
        _Ka1._391[5] = _Na1
    }
}

function _Oa1(e) {
    if (_kB != _lB) return;
    var targetid = e.target.targetid;
    debug("error loading sound" + targetid);
    if (targetid == undefined) {
    } else {
        debug("AudioError: " + this.URL);
        this.completed = false;
        _Pa1++;
        ClearEventListeners(this)
    }
}

function _Qa1(e) {
    if (_kB != _lB) return;
    var targetid = e.target.targetid;
    if (_Ra1) debug("sound loaded" + targetid);
    if (targetid == undefined) {
    } else {
        this.completed = true;
        ClearEventListeners(this);
        try {
            g_WebAudioContext.decodeAudioData(e.target.response, function (buffer) {
                var _fa1 = audio_sampledata[targetid];
                _fa1.buffer = buffer;
                _Pa1++
            }, function (err) {
                debug("error decoding audio data:" + err);
                _Pa1++
            })
        } catch (_PQ) {
            debug("error decoding audio data: " + _PQ.message);
            _Pa1++;
        }
    }
}

function _Sa1(_EX, _OB, _Ta1) {
    var _fa1 = audio_sampledata[_OB];
    _fa1.buffer = null
}

function _Ua1(e) {
    var targetid = e.target.targetid;
    debug("Audio_SoundReadyStateChange:targetid/readyState/status:" + targetid + '/' + e.target.readyState + '/' + e.target.status)
}

function _Va1(e) {
    var targetid = e.target.targetid;
    debug("Audio_SoundProgress:targetid/loaded/total:" + targetid + '/' + e._rQ + '/' + e._Wa1)
}

function _Xa1(_EX, _OB, _Ta1, _Ya1) {
    _EX = _H91(_EX);
    if ((_kB != _lB) || (_Za1 == false)) {
        return undefined
    }
    var _G91;
    var index;
    index = _EX.indexOf(_Ta1);
    if (index > 0) {
        _EX = _EX.substr(0, index)
    }
    if (_I91) {
        _Ta1 = "ogg"
    } else if (_J91) {
        _Ta1 = "mp3"
    } else {
        _Ta1 = "ogg"
    }
    _EX = _EX + "." + _Ta1;
    var _4Z = new XMLHttpRequest();
    _4Z.open('GET', _EX, true);
    _4Z.responseType = 'arraybuffer';
    _4Z.targetid = _OB;
    _4Z.URL = _EX;
    _4Z.completed = false;
    if (_Ya1 != undefined) {
        _4Z.targetid = {__a1: _Ya1, _Aa1: _OB};
        _4Z.onload = _0b1;
        _4Z.onerror = _1b1
    } else {
        _4Z.onload = _Qa1;
        _4Z.onerror = _Oa1;
        _4Z.ontimeout = _Oa1;
        _4Z._0Y = _Va1;
        _4Z.onreadystatechange = _Ua1
    }
    _4Z.send();
    _2b1[_OB] = _4Z;
    return _OB
}

var _3b1 = "Unloaded";
var _4b1 = "Loading";
var _5b1 = "Loaded";
var _6b1 = "Unloading";
var _7b1 = 0;
var _8b1 = [];

function _9b1(_Ga1) {
    this._L3 = _Ga1;
    this._ab1 = _3b1;
    this._bb1 = 0;
    this._cb1 = 0;
    this._db1 = []
}

_9b1.prototype._eb1 = function (_fb1) {
    this._db1.push(_fb1)
};
_9b1.prototype._gb1 = function (_hb1) {
    if (this._ab1 != _hb1) {
        this._ab1 = _hb1;
        debug("Audio Group " + this._L3 + "-> " + this._ab1);
        if (_hb1 == _5b1) {
            var map = _Zr();
            _Eh._ib1 = map;
            _0s(map, "type", "audiogroup_load");
            _0s(map, "group_id", this._L3);
            _4s._5s(_jb1, 0)
        }
    }
};

function _0b1(e) {
    var targetid = this.targetid._Aa1;
    var _kb1 = this.targetid.__a1;
    if (_Ra1) debug("sound loaded " + targetid);
    if (targetid != undefined) {
        e.target.completed = true;
        ClearEventListeners(this);
        try {
            g_WebAudioContext.decodeAudioData(e.target.response, function (buffer) {
                var _fa1 = audio_sampledata[targetid];
                _fa1.buffer = buffer;
                _kb1._lb1()
            }, function (err) {
                debug("error decoding audio data:" + err);
                _kb1._lb1()
            })
        } catch (_PQ) {
            debug("error decoding audio data: " + _PQ.message);
            _kb1._lb1()
        }
    }
}

function _1b1(e) {
    var targetid = this.targetid._Aa1;
    var _kb1 = this.targetid.__a1;
    debug("error loading sound" + targetid);
    if (targetid != undefined) {
        debug("AudioError: " + this.URL);
        this.completed = false;
        ClearEventListeners(this);
        _kb1._lb1()
    }
}

_9b1.prototype._lb1 = function () {
    this._bb1--;
    if (this._db1.length > 0) {
        this._cb1 = ((this._db1.length - this._bb1) * 100) / (this._db1.length)
    }
    if (this._bb1 <= 0) {
        this._gb1(_5b1)
    }
};
_9b1.prototype._Ku = function () {
    if (this._ab1 != _3b1) {
        return 0
    }
    if (this._db1.length == 0) {
        return 0
    }
    this._gb1(_4b1);
    this._bb1 = this._db1.length;
    this._cb1 = 0;
    var _t5;
    for (_t5 = 0; _t5 < this._db1.length; ++_t5) {
        var index = this._db1[_t5];
        if (_NN._E3[index]._G3 == 0) {
            var id = _Xa1(_Tu + _NN._E3[index]._I3, index, _NN._E3[index]._H3, this);
            if (id === undefined) this._lb1()
        } else {
            this._lb1()
        }
    }
};
_9b1.prototype._mb1 = function () {
    if (this._ab1 == _5b1) {
        return 1
    }
    return 0
};

function _a91() {
    var index;
    var _nb1 = 1;
    for (index = 0; index < _NN._E3.length; index++) {
        if (_NN._E3[index] !== null) {
            var _fa1 = new _c91();
            audio_sampledata[index] = _fa1;
            _fa1.buffer = null;
            var _ob1 = _NN._E3[index].volume;
            _fa1.gain = _ob1;
            _fa1._d91 = _ob1;
            _fa1._e91 = 1.0;
            _fa1._G3 = _NN._E3[index]._G3;
            if (_NN._E3[index].duration != undefined) {
                _fa1.duration = _NN._E3[index].duration
            }
            _fa1._L3 = 0;
            var _L3 = _NN._E3[index]._L3;
            if (_L3 != undefined) {
                _fa1._L3 = _L3
            }
        }
    }
}

function _b91() {
    if (_NN._M3) {
        var _t5;
        _7b1 = _NN._M3.length;
        for (_t5 = 0; _t5 < _7b1; ++_t5) {
            _8b1[_t5] = new _9b1(_t5)
        }
        for (_t5 = 0; _t5 < audio_sampledata.length; ++_t5) {
            var _D91 = audio_sampledata[_t5];
            if (_D91 != undefined) {
                _L3 = _D91._L3;
                if (_8b1[_L3] != undefined) {
                    _8b1[_L3]._eb1(_t5)
                }
            }
        }
    }
}

function _va1(_Ga1) {
    if (_Ga1 == 0) {
        return 1
    }
    if (_Ga1 > 0 && _Ga1 < _7b1) {
        var _kb1 = _8b1[_Ga1];
        var _eO = _kb1._mb1();
        return _eO
    }
    return 0
}

function _pb1(_qb1) {
    return _qb1
}

function _rb1(_qb1) {
    return _qb1
}

navigator._sb1 = (navigator._sb1 || navigator._tb1 || navigator._ub1 || navigator._vb1);
var _wb1 = !1;
var _xb1 = undefined;
var _yb1 = 0, _zb1 = 1, _Ab1 = 2, _Bb1 = 3;

function _k21(_za1) {
    if (_Cb1._RB(_za1) == null) return false;
    return true
}

function _ek(_za1) {
    var _Db1 = _Cb1._RB(_za1);
    if (_Db1 == null) return 0;
    return _Db1.width
}

function _gk(_za1) {
    var _Db1 = _Cb1._RB(_za1);
    if (_Db1 == null) return 0;
    return _Db1.height
}

var _Eb1 = _Fb1;

function _Fb1(_Os, _Ps, _Qs, _HB, _IB, _tD, _uD) {
    var _Gb1 = document.createElement(_1O);
    var _Hb1 = _Gb1.getContext('2d');
    _Ib1(_Hb1);
    _Jb1 = _Cb1._RB(_Os);
    _Jb1._Gt++;
    _Gb1.width = _Jb1.width;
    _Gb1.height = _Jb1.height;
    _Hb1._Kb1(canvas, _Ps, _Qs, _HB, _IB, 0, 0, _Gb1.width, _Gb1.height);
    if (_tD) {
        _Gb1.complete = _AD(_Hb1, _HB, _IB)
    } else {
        _Gb1.complete = true
    }
    _Jb1._Gt++;
    var _DD = new _ED();
    _Jb1._Lb1[_Jb1._Lb1.length] = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _Jb1.width;
    _DD._w5 = _Jb1.height;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = _Mb1(_Gb1);
    _DD._Iu = _Ju[_DD._vc];
    return _Os
}

var _Nb1 = _Ob1;

function _Ob1(_OB, _Ps, _Qs, _HB, _IB, _tD, _uD, _Pb1, _Qb1) {
    var _Gb1 = document.createElement(_1O);
    var _Hb1 = _Gb1.getContext('2d');
    _Ib1(_Hb1);
    _Gb1.width = _yD._RB(_OB).width;
    _Gb1.height = _yD._RB(_OB).height;
    _Hb1._Kb1(_yD._RB(_OB), 0, 0);
    if (_tD) {
        _Gb1.complete = _AD(_Hb1, _HB, _IB)
    } else {
        _Gb1.complete = true
    }
    var _Jb1 = new _Rb1();
    var _Sb1 = _Cb1._Tb1(_Jb1);
    _Jb1._F3 = "surface.copy";
    _Jb1.width = _HB;
    _Jb1.height = _IB;
    _Jb1._G41 = new _yO();
    _Jb1._G41.right = _Jb1.width;
    _Jb1._G41.bottom = _Jb1.height;
    _Jb1._O3 = true;
    _Jb1._P3 = true;
    _Jb1.preload = true;
    _Jb1._Ub1 = 0;
    _Jb1._Vb1 = false;
    _Jb1._R3 = _Pb1;
    _Jb1._S3 = _Qb1;
    _Jb1._Wb1 = true;
    _Jb1._Gt = 1;
    _Jb1._Xb1 = false;
    _Jb1._Yb1 = false;
    _Jb1._Ht = [];
    _Jb1._Lb1 = [];
    _Jb1._Y3 = [];
    _Jb1._Zb1();
    var _DD = new _ED();
    _Jb1._Lb1[0] = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _Jb1.width;
    _DD._w5 = _Jb1.height;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = _Mb1(_Gb1);
    _DD._Iu = _Ju[_DD._vc];
    __b1(_DD);
    return _Sb1
}

var _0c1 = _1c1;

function _1c1(_Os, _OB, _Ps, _Qs, _HB, _IB, _tD, _uD) {
    var _Gb1 = document.createElement(_1O);
    var _Hb1 = _Gb1.getContext('2d');
    _Ib1(_Hb1);
    _Jb1 = _Cb1._RB(_Os);
    _Jb1._Gt++;
    _Gb1.width = _Jb1.width;
    _Gb1.height = _Jb1.height;
    _Hb1._Kb1(_yD._RB(_OB), 0, 0, _HB, _IB, 0, 0, _Gb1.width, _Gb1.height);
    if (_tD) {
        _Gb1.complete = _AD(_Hb1, _HB, _IB)
    } else {
        _Gb1.complete = true
    }
    var _DD = new _ED();
    _Jb1._Lb1[_Jb1._Lb1.length] = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _Jb1.width;
    _DD._w5 = _Jb1.height;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = _Mb1(_Gb1);
    _DD._Iu = _Ju[_DD._vc];
    return _Os
}

var _2c1 = _3c1;

function _3c1(_Os) {
    var _Db1 = _Cb1._RB(_Os);
    if (_Db1 == null) return 0;
    var _Jb1 = new _Rb1();
    var _Sb1 = _Cb1._Tb1(_Jb1);
    _Jb1._F3 = _Db1._F3 + ".copy";
    _Jb1.width = _Db1.width;
    _Jb1.height = _Db1.height;
    _Jb1._G41._KB(_Db1._G41);
    _Jb1._O3 = _Db1._O3;
    _Jb1._P3 = _Db1._P3;
    _Jb1.preload = _Db1.preload;
    _Jb1._Ub1 = _Db1._Ub1;
    _Jb1._Vb1 = _Db1._Vb1;
    _Jb1._R3 = _Db1._R3;
    _Jb1._S3 = _Db1._S3;
    _Jb1._Wb1 = true;
    _Jb1._Gt = _Db1._Gt;
    _Jb1._4c1 = _Db1._4c1;
    _Jb1._Xb1 = _Db1._Xb1;
    _Jb1._V3 = _Db1._V3;
    _Jb1._W3 = _Db1._W3;
    _Jb1._Yb1 = _Db1._Yb1;
    _Jb1._Ht = [];
    _Jb1._Lb1 = [];
    _Jb1._Y3 = [];
    for (var _t5 = 0; _t5 < _Db1._Gt; _t5++) {
        var _DD = new _ED();
        _Jb1._Lb1[_t5] = _DD;
        _DD._Wb1(_Db1._Lb1[_t5]);
        var _5c1 = _6c1(_Db1._Lb1[_t5]);
        _DD._vc = _Mb1(_5c1);
        _DD.x = 0;
        _DD.y = 0;
        _DD._Iu = _Ju[_DD._vc]
    }
    return _Sb1
}

function _7c1(_8c1, _9c1, _ac1, _bc1, _Ex, _cc1) {
    var _v5 = _9c1._tc;
    var _w5 = _9c1._uc;
    var _dc1 = [];
    var _ec1 = _w5 * _v5;
    for (_Rt = 0; _Rt < _ec1; _Rt++) _dc1[_Rt] = false;
    if (_Ex == _yb1) {
        var _fc1 = _gc1(_9c1);
        var index = 0;
        for (var _t5 = 0; _t5 < _fc1.length; _t5 += 4) {
            if (_fc1[_t5 + 3] > _cc1) {
                _dc1[index] = true
            } else {
                _dc1[index] = false
            }
            index++
        }
    } else {
        switch (_Ex) {
            case _zb1: {
                for (var y = _bc1.top; y <= _bc1.bottom; y++) {
                    for (var x = _bc1.left; x <= _bc1.right; x++) {
                        _dc1[x + (y * _v5)] = true
                    }
                }
                break
            }
            case _Ab1: {
                var _7u = (_bc1.left + _bc1.right) / 2;
                var _9w = _7u - _bc1.left + 0.5;
                var _8u = (_bc1.top + _bc1.bottom) / 2;
                var _aw = _8u - _bc1.top + 0.5;
                for (var y = _bc1.top; y <= _bc1.bottom; y++) {
                    for (var x = _bc1.left; x <= _bc1.right; x++) {
                        if ((_9w > 0) && (_aw > 0)) {
                            _dc1[x + (y * _v5)] = _Fg((x - _7u) / _9w) + _Fg((y - _8u) / _aw) < 1
                        }
                    }
                }
                break
            }
            case _Bb1: {
                var _7u = (_bc1.left + _bc1.right) / 2;
                var _9w = _7u - _bc1.left + 0.5;
                var _8u = (_bc1.top + _bc1.bottom) / 2;
                var _aw = _8u - _bc1.top + 0.5;
                for (var y = _bc1.top; y <= _bc1.bottom; y++) {
                    for (var x = _bc1.left; x <= _bc1.right; x++) {
                        if ((_9w > 0) && (_aw > 0)) {
                            _dc1[x + (y * _v5)] = Math.abs((x - _7u) / _9w) + Math.abs((y - _8u) / _aw) < 1
                        }
                    }
                }
                break
            }
        }
    }
    if (_8c1 != null) {
        for (var _t5 = 0; _t5 < _dc1.length; _t5++) {
            if (_8c1[_t5]) _dc1[_t5] = true
        }
    }
    return _dc1
}

function _hc1(_ic1, _jc1) {
    if (_k21(_ic1)) {
        var _kc1 = _Cb1._RB(_ic1);
        var _DD = _kc1._lc1(~~_jc1);
        if (_DD) {
            return ({_Fx: _DD._Iu, _Gx: _DD})
        }
    }
    return null
}

function _jf(_qs) {
    return String.fromCharCode(_qs)
}

function _od(_zP) {
    if (!_zP || _zP == "") return 0;
    return _zP.charCodeAt(0)
}

function _fh(_zP) {
    if (_zP == undefined) {
        return 0
    } else if (typeof(_zP) == "boolean") {
        if (_zP) return 1; else return 0
    } else if (typeof(_zP) == "number") {
        return _zP
    }
    return parseFloat(_zP)
}

function _Hg(_kC, _w01) {
    if (_w01 === undefined) _w01 = 0;
    if (_w01 > 64) return " recursion error ";
    if (_kC == undefined) {
        return "undefined"
    }
    if (_kC instanceof Array) {
        var _XB = "{";
        for (var _t5 = 0; _t5 < _kC.length; ++_t5) {
            if (_t5 != 0) _XB += ",";
            _XB += _Hg(_kC[_t5], _w01 + 1)
        }
        _XB += "}";
        return _XB
    } else if (typeof(_kC) == "number") {
        if ((~~_kC) != _kC) {
            return _kC.toFixed(2).toString()
        } else {
            return _kC.toString()
        }
    } else if (typeof(_kC) == "boolean") {
        if (_kC) return "1"; else return "0"
    } else {
        return _kC.toString()
    }
}

function _hf(_zP) {
    if (!_zP) {
        return 0
    }
    return _zP.length
}

function _5k(_mc1, _zP) {
    return _zP.indexOf(_mc1) + 1;
}

function _xi(_zP, _za1, _cz) {
    if (_za1 < 1) _za1 = 1;
    return _zP.substring(_za1 - 1, _za1 + _cz - 1)
}

function _if(_zP, _za1) {
    var index = _za1 - 1;
    if (index < 0) {
        index = 0
    }
    return _zP.charAt(index)
}

function _kf(_zP, _za1, _cz) {
    if (_cz <= 0) return _zP;
    return (_zP.substring(0, _za1 - 1) + _zP.substring(_za1 - 1 + _cz, _zP.length))
}

function _lf(_mc1, _zP, _za1) {
    return (_zP.substring(0, _za1 - 1) + _mc1 + _zP.substring(_za1 - 1, _zP.length))
}

function _Hl(_zP, _mc1, _nc1) {
    if (!_zP) return "";
    var _ZN = "";
    var _It = _mc1.length;
    var _t5 = 0;
    while (_t5 < _zP.length) {
        if (_zP.substring(_t5, _t5 + _It) == _mc1) {
            _ZN += _nc1;
            _t5 += _It
        } else {
            _ZN += _zP[_t5];
            _t5++
        }
    }
    return _ZN
}

function _Dh(_zP) {
    return _oc1 = _pc1(_zP, _XN._qc1(_XN._UP), true)
}

var _rc1 = [];

function _sc1(_tc1) {
    debug("myBrandConnectReadyEvent");
    _rc1 = _tc1
}

function _uc1() {
    _iO()
}

function _vc1() {
    _wc1 = true;
    debug("myBrandConnectDoneEvent")
}

function _xc1() {
    var _yc1 = document.getElementById("ssaBrandConnectInterstitial");
    var _zc1 = document.getElementById("gm4html5_div_id");
    _zc1.appendChild(_yc1);
    _5O()
}

var _Ac1 = !1;
var _wc1 = !1;
var ssa_json = {
    'applicationUserId': '1234',
    'applicationKey': '2b46ec59',
    'onCampaignsReady': _sc1,
    'onCampaignsDone': _vc1,
    'onCampaignClose': _uc1,
    'onCampaignOpen': _xc1,
    'maxWidth': 1000,
    'maxHeight': 700
};
var _Bc1 = (function (_cE, _Mt) {
    var _gv = _cE.createElement(_Mt), _ZN = _cE.getElementsByTagName(_Mt)[0];
    _gv._ZO = !0;
    _gv.src = ('https:' != location.protocol ? 'http://jsd.supersonicads.com' : 'https://a248.e.akamai.net/ssastatic.s3.amazonaws.com') + '/inlineDelivery/delivery.min.gz.js';
    _ZN.parentNode.insertBefore(_gv, _ZN)
});
var _Cc1 = ads_engagement_launch;

function ads_engagement_launch(_Dc1, _Ec1) {
    if (SSA_CORE != undefined) SSA_CORE.BrandConnect.engage()
}

var _Fc1 = [];
_Gc1 = _Hc1;

function _Hc1(_OB, _HB, _IB) {
    if (_OB == _Ic1) {
        _Jc1 = true;
        _Kc1 = _HB;
        _Lc1 = _IB;
        return 1
    }
    if (!_Mc1(_OB)) {
        _SB("Surface does not exist");
        return 0
    }
    _wD(_HB, _IB, _OB);
    return 0
}

_wD = _Nc1;

function _Nc1(_HB, _IB, _Oc1) {
    var _KD = document.createElement(_1O);
    _KD._Zx = _KD.width = _HB;
    _KD.__x = _KD.height = _IB;
    _KD.complete = true;
    _KD._Pc1 = false;
    _KD.name = "";
    _KD._Iv = _KD.getContext('2d');
    _Ib1(_KD._Iv);
    var _DD = new _ED();
    _KD._Qc1 = _DD;
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _HB;
    _DD._w5 = _IB;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    if (_Oc1 != undefined) {
        _yD._rC(_Oc1, _KD);
        _DD._vc = _Oc1
    } else {
        _DD._vc = _yD._3C(_KD)
    }
    _DD._Iu = _KD;
    _DD._Fu = [];
    _DD._Gu = 0;
    _DD._Hu = 4;
    _DD._Rc1 = 0;
    _DD._Sc1 = null;
    _DD._Gb1 = _KD;
    return _DD._vc
}

var _Tc1 = _Uc1;

function _Uc1(_OB) {
    _yD._6C(_OB)
}

function _Mc1(_OB) {
    if (_yD._RB(_OB) != null) return 1; else return 0
}

function _Vc1(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        return _KD._Zx
    }
    return 0
}

function _Wc1(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        return _KD.__x
    }
    return 0
}

function _Xc1(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        return ({_Fx: _KD._Iu, _Gx: _KD._Qc1})
    }
    return -1
}

_Yc1 = _Zc1;

function _Zc1(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _Iv._PS();
        _Fc1.push(_Iv);
        _KD._Iv.__c1 = _OB;
        _Iv = _KD._Iv;
        _0d1(_Iv);
        g_CurrentGraphics = _Iv;
        _1d1 = false
    }
}

var _2d1, _3d1, _4d1, _5d1;
var _6d1 = _7d1;

function _7d1(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _8d1.left = _2V.left;
        _8d1.top = _2V.top;
        _8d1.right = _2V.right;
        _8d1.bottom = _2V.bottom;
        _2V.left = 0;
        _2V.top = 0;
        _2V.right = _KD._Zx;
        _2V.bottom = _KD.__x;
        _9d1._KB(_ad1);
        _bd1 = _ad1;
        _ad1._KV = 0;
        _ad1._MV = 0;
        _ad1._OV = _KD._Zx;
        _ad1._QV = _KD.__x;
        _ad1._cd1 = 0;
        _ad1._dd1 = 0;
        _ad1._ed1 = _KD._Zx;
        _ad1._fd1 = _KD.__x;
        _ad1._3B = 0;
        _ad1._5B = 0;
        _ad1._gd1 = _KD._Zx;
        _ad1._hd1 = _KD.__x;
        _ad1._4B = _ad1._3B + _ad1._gd1;
        _ad1._6B = _ad1._5B + _ad1._hd1;
        _Iv._PS();
        _Fc1.push(_Iv);
        _2d1 = _SS;
        _3d1 = _TS;
        _4d1 = _US;
        _5d1 = _VS;
        _id1(0, 0, _KD._Zx, _KD.__x);
        _jd1(0, 0, _KD._Zx, _KD.__x);
        g_CurrentGraphics = _KD._Iv;
        _Iv = _KD._Iv;
        _0d1(_Iv);
        _Iv._PS();
        _1d1 = true;
        _1X();
        if (_uu) {
            _uu._kd1()
        }
    }
}

var _ld1 = _md1;

function _md1() {
    if (_1d1) {
        _2V = _8d1;
        _bd1._KB(_9d1);
        _id1(_2d1, _3d1, _4d1, _5d1);
        _jd1(_ad1._KV, _ad1._MV, _ad1._OV, _ad1._QV);
        _Iv._WS()
    }
    var _nd1 = _Fc1.pop();
    _Iv = _nd1 ? _nd1 : _od1;
    g_CurrentGraphics = _Iv;
    _Iv._WS();
    _0d1(_Iv);
    _1X()
}

function _8U(_pd1, _Ps, _Qs) {
    var data = null;
    var _zD = _pd1.getContext('2d');
    try {
        data = _zD._qd1(_Ps, _Qs, 1, 1)
    } catch (_PQ) {
        return 0xff000000
    }
    _rd1 = data.data;
    var index = 0;
    var _sd1 = _rd1[index] & 0xff;
    var _td1 = _rd1[index + 1] & 0xff;
    var _ud1 = _rd1[index + 2] & 0xff;
    var _vd1 = _rd1[index + 3] & 0xff;
    return (_sd1 | (_td1 << 8) | (_ud1 << 16) | (_vd1 << 24))
}

var _wd1 = _xd1;
var _yd1 = _zd1;

function _xd1(_OB, _Ps, _Qs) {
    return _zd1(_OB, _Ps, _Qs) & 0xffffff
}

function _zd1(_OB, _Ps, _Qs) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        return _8U(_KD, _fC(_Ps), _fC(_Qs))
    }
    return 0x00000000
}

var _Ad1 = _Bd1;

function _Bd1(_OB, _Ps, _Qs) {
    var _KD = _yD._RB(_OB);
    if (!_KD) return;
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    var alpha = _Iv.globalAlpha;
    {
        _Iv.globalAlpha = _Lx;
        _Iv._Kb1(_KD, _Ps, _Qs)
    }
    _Iv.globalAlpha = alpha
}

function _Cd1(_OB, _Ps, _Qs, _HB, _IB) {
    var _KD = _yD._RB(_OB);
    if (!_KD) return;
    _Dd1(_KD._Qc1, _Ps, _Qs, _HB, _IB, 0xffffff, 1.0)
}

var _Ed1 = _Fd1;

function _Fd1(_OB,
              _Ps, _Qs, _GL, _HL, _Gd1, _Ox) {
    _zw("draw_surface_tiled_ext()")
}

function _Hd1(_Id1, _Ps, _Qs, _Jd1) {
    var _xD = _yD._RB(_Id1);
    var _HD = _yD._RB(_Jd1);
    if (_xD != null && _HD != null) {
        var _zD = _xD.getContext('2d');
        _zD.save();
        _zD.globalCompositeOperation = 'copy';
        _zD.drawImage(_HD, _Ps, _Qs);
        _zD.restore()
    }
}

function _Kd1(_Id1, _Ps, _Qs, _Jd1, _Ld1, _Md1, _Nd1, _Od1) {
    var _xD = _yD._RB(_Id1);
    var _HD = _yD._RB(_Jd1);
    if (_xD != null && _HD != null) {
        var _QS = [];
        var _zD = _xD.getContext('2d');
        _zD.save();
        _QS[0] = 1;
        _QS[1] = 0;
        _QS[2] = 0;
        _QS[3] = 1;
        _QS[4] = 0;
        _QS[5] = 0;
        _zD.setTransform(_QS[0],
            _QS[1], _QS[2], _QS[3], _QS[4], _QS[5]);
        _zD.beginPath();
        _zD.rect(_Ps, _Qs, _Nd1, _Od1);
        _zD.clip();
        _zD.globalCompositeOperation = 'copy';
        _zD.drawImage(_HD, _Ld1, _Md1, _Nd1, _Od1, _Ps, _Qs, _Nd1, _Od1);
        _zD.restore()
    }
}

function _2g(_3R, _Pd1, _Qd1, _Ps, _Qs, _GL, _HL, _Rd1, _2y, _Ox) {
    if (_Qd1 < 0) _Qd1 = ~~_3R._u_;
    var _Db1 = _Cb1._RB(_Pd1);
    if (_Db1 != null) {
        _Ox = min(1.0, _Ox);
        _Db1._7v(_Qd1, _Ps, _Qs, _GL, _HL, _Rd1, _Px(_2y), _Ox)
    }
}

function _5m(_3R, _Pd1, _Qd1, _Ps, _Qs) {
    if (_Qd1 < 0) _Qd1 = ~~_3R._u_;
    var _Db1 = _Cb1._RB(_Pd1);
    if (_Db1 != null) {
        _Db1._Sd1(_Qd1, _Ps,
            _Qs, _Lx)
    }
}

function _Om(_Td1) {
}

function _Ud1(_Vd1, _Wd1) {
    if (_Vd1) {
        if (_Wd1 === undefined) {
            canvas.style.cursor = ""
        } else {
            canvas.style.cursor = _Wd1
        }
    } else {
        canvas.style.cursor = "none"
    }
}

function _Xd1(_Nx) {
    _Yd1 = _Px(_Nx)
}

var _Zd1 = _Xd1;

function __d1() {
    return _Px(_Yd1)
}

var _0e1 = __d1;

function _1e1(_Ps, _Qs) {
    var _2e1 = document.getElementById(_1O);
    var _3e1 = _2e1;
    for (var _3e1 = _2e1; _3e1; _3e1 = _3e1.parentNode) {
        var position;
        if (_3e1["currentStyle"]) {
            position = _3e1["currentStyle"]["position"]
        } else if (window.getComputedStyle) {
            try {
                var style = window.getComputedStyle(_3e1,
                    null);
                if (style) {
                    position = style.getPropertyValue("position")
                }
            } catch (e) {
            }
        }
        if (position && (position == "fixed")) {
            debug("Warning: Canvas position fixed. Ignoring position alterations");
            return
        }
    }
    _2e1.style.position = "absolute";
    _2e1.style.left = _Ps + "px";
    _2e1.style.top = _Qs + "px";
}

function _4e1() {
    return _5e1 - _6e1
}

function _7e1() {
    return _8e1 - _9e1
}

var _ae1;
var _be1;
var _ce1;
var _de1;
var _ee1;
var _fe1;
var _ge1;
var _he1;
var _ie1;
var _je1;
var _ke1;
var _le1;
var _me1 = 0;
var _ne1 = 1, _oe1 = 2, _pe1 = 3, _qe1 = 4, _re1 = 5, _se1 = 6;
var _te1 = aa_1241_kz();

function aa_1241_kz() {
    return 0x87155211
}

function _ue1() {
    var _ve1 = null;
    if (window.XMLHttpRequest) {
        _ve1 = new XMLHttpRequest()
    }
    if (typeof(XMLHttpRequest) == "undefined") {
        _ve1 = function () {
            try {
                return new ActiveXObject("Msxml2.XMLHTTP.6.0")
            } catch (e) {
            }
            try {
                return new ActiveXObject("Msxml2.XMLHTTP.3.0")
            } catch (e) {
            }
            try {
                return new ActiveXObject("Msxml2.XMLHTTP")
            } catch (e) {
            }
            throw new _SB("This browser does not support XMLHttpRequest.")
        }
    }
    this._we1 = _ve1;
    this._xe1 = false
}

var _ye1 = new _ue1();

function _ze1() {
}

var _Ae1 = _Be1;

function _Be1(_Vd1) {
}

var _Ce1 = _De1;

function _De1() {
    return false
}

var _Ee1 = _Fe1;

function _Fe1() {
}

var _Ge1 = _He1;

function _He1() {
}

var _Ie1 = _Je1;

function _Je1() {
}

var _Ke1 = _Le1;

function _Le1() {
}

var _Me1 = _Ne1;

function _Ne1() {
}

var _Oe1 = _Pe1;

function _Pe1() {
}

var _Qe1 = _Re1;

function _Re1() {
}

var _Se1 = _Te1;

function _Te1() {
}

var _Ue1 = _Ve1;

function _Ve1() {
}

var _We1 = _Xe1;

function _Xe1() {
}

var _Ye1 = _Ze1;

function _Ze1() {
}

var __e1 = _0f1;

function _0f1() {
    return -1
}

var _1f1 = _2f1;

function _2f1() {
}

var _3f1 = _4f1;

function _4f1() {
}

var _5f1 = _6f1;

function _6f1() {
}

var _7f1 = _8f1;

function _8f1() {
    return _9f1
}

function _af1() {
    return _bf1
}

function _cf1() {
    return _UX
}

function _df1() {
    return _ef1
}

var _ff1 = _gf1;

function _gf1(_EX, _hf1, _if1) {
    if (_hf1 != "_self" && _hf1 != "_blank" && _hf1 != "_parent" && _hf1 != "_top") {
        _SB("Error: invalid TARGET specified. Only '_self', '_blank', 'parent' or '_top' supported. (YoYo_OpenURL)");
        return
    }
    var _rQ = window.open(_EX, _hf1, _if1)
}

var _jf1 = _kf1;

function _kf1(_EX, _hf1) {
    _ff1(_EX, _hf1, "scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=yes,status=yes")
}

var _lf1 = _Hm;

function _Hm(_EX) {
    _jf1(_EX, "_self")
}

var _mf1 = _nf1;

function _nf1(_of1, _pf1) {
}

var _qf1 = _rf1;

function _rf1(_of1, _sf1) {
}

var _tf1 = null;
var _uf1 = null;
var _vf1 = null;
var _wf1 = _xf1;

function _xf1(_PN, _yf1, _zf1, _Af1) {
}

var _zS = _Bf1;

function _Bf1() {
    var _Mt = new Date().getTime() * 1000;
    return _Mt - _ae1
}

var _Cf1 = _Df1;

function _Df1(_Ps, _Qs, _HB, _IB, _Ef1) {
    var _Ff1 = _Gf1();
    _Ff1.x = _Ps;
    _Ff1.y = _Qs;
    _Ff1._v5 = _HB;
    _Ff1._w5 = _IB;
    _Ff1._7N = _Ef1;
    _Ff1._zt = _Ps + _HB;
    _Ff1._At = _Qs + _IB;
    _Ff1.button = _Ff1._sv = _Ff1._uv = 0;
    _Ff1._Hf1 = _If1;
    return (_Ff1.index + 1)
}

var _Jf1 = _Kf1;

function _Kf1(_OB) {
    if (_OB < 0) return;
    var index = _OB - 1;
    if ((index < 0) || (index >= _Lf1.length)) {
        debug("Invalid index when deleting virtual key")
    }
    _Mf1(_OB - 1)
}

function _Nf1() {
    _Of1 = [];
    for (var _It = 0; _It < _Lf1.length; ++_It) {
        var _Pf1 = _Lf1[_It];
        if ((_Pf1._Hf1 & _Qf1) != 0) _Of1[_Of1.length] = _Pf1
    }
}

var _Rf1 = _Sf1;

function _Sf1(_OB) {
    if (_OB < 0) return;
    _OB--;
    if (!_Lf1[_OB]) return;
    _Lf1[_OB]._Hf1 |= _Qf1;
    _Nf1()
}

var _Tf1 = _Uf1;

function _Uf1(_OB) {
    if (_OB < 0) return;
    _OB--;
    if (!_Lf1[_OB]) return;
    _Lf1[_OB]._Hf1 &= ~_Qf1;
    _Nf1();
}

var _Vf1 = _Wf1;

function _Wf1() {
    return 0
}

var _Xf1 = _Yf1;

function _Yf1() {
    return 0
}

var _Zf1 = __f1;

function __f1() {
    return 0
}

var _0g1 = _1g1;

function _1g1() {
    _SN("device_ios_get_imagename()")
}

var _2g1 = _3g1;

function _3g1() {
    _SN("device_ios_get_image()")
}

var _4g1 = _5g1;

function _5g1() {
    _SN("openfeint_start()")
}

var _6g1 = _7g1;

function _7g1(_631, _b31) {
    _SN("achievement_map_achievement()")
}

var _8g1 = _9g1;

function _9g1(_631, _b31, _ag1) {
    _SN("achievement_map_leaderboard()");
}

var _bg1 = _cg1;

function _cg1(_631, _b31, _ag1) {
    _SN("openfeint_send_challenge()")
}

var _dg1 = _eg1;

function _eg1(_631) {
    _SN("openfeint_send_invite()")
}

var _fg1 = _gg1;

function _gg1(_631, _b31, _ag1) {
    _SN("openfeint_send_social()")
}

var _hg1 = _ig1;

function _ig1(_631) {
    _SN("openfeint_set_url()")
}

var _jg1 = _kg1;

function _kg1() {
    _SN("openfeint_accept_challenge()");
    return ""
}

var _lg1 = _mg1;

function _mg1() {
    _SN("achievement_is_online()");
    return false
}

var _ng1 = _og1;

function _og1(_631, _b31) {
    _SN("openfeint_send_result()")
}

var _pg1 = _qg1;

function _qg1() {
    return false
}

function _rg1() {
    _ae1 = new Date().getTime() * 1000;
    var _Mt = 0;
    for (var _t5 = 0; _t5 < 12; _t5++) {
        _jN[_t5] = _Mt;
        _Mt += _iN[_t5]
    }
    _be1 = 0;
    _ce1 = 1;
    _de1 = 2;
    _ee1 = 3;
    _fe1 = 4;
    _ge1 = 5;
    _he1 = 0;
    _ie1 = 1;
    _je1 = 2;
    _ke1 = 0;
    _le1 = 1
}

function _sg1() {
    var _Mt = setTimeout(function () {
        for (var _tg1 in _Cb1._N3) {
            if (!_Cb1._N3.hasOwnProperty(_tg1)) continue;
            _Cb1._L11(_tg1);
            break
        }
        _sg1()
    }, 1000)
}

var _ug1 = _vg1;

function _vg1() {
    return document.domain
}

function _wg1(_xg1, _yg1) {
    for (var _zg1 in _xg1) {
        var _Ag1 = _xg1[_zg1];
        if (_Ag1 instanceof Array) {
            var _Bg1 = __B();
            _9C(_yg1, _Bg1);
            _wg1(_Ag1, _Bg1)
        } else if (typeof(_Ag1) == "object") {
            var _Cg1 = _Zr();
            _9C(_yg1, _Cg1);
            _eP(_Ag1, _Cg1)
        } else if (typeof(_Ag1) == "string") {
            _9C(_yg1,
                _Ag1)
        }
    }
}

function _eP(_Lu, _9P) {
    for (var _6N in _Lu) {
        if (_Lu.hasOwnProperty(_6N)) {
            var _Ag1 = _Lu[_6N];
            if (_Ag1 instanceof Array) {
                var _Dg1 = __B();
                _0s(_9P, _6N, _Dg1);
                _wg1(_Ag1, _Dg1)
            } else if (typeof(_Ag1) == "object") {
                var _Eg1 = _Zr();
                _0s(_9P, _6N, _Eg1);
                _eP(_Ag1, _Eg1)
            } else if (typeof(_Ag1) == "string") {
                _0s(_9P, _6N, _Ag1)
            }
        }
    }
}

var _Fg1 = _Gg1;

function _Gg1() {
}

var _Hg1 = _Ig1;
var _QO = _FO;

function _Ig1() {
    return _QO
}

var _Jg1 = _2P;
var _Kg1 = _5P;
var _Lg1 = _fP;
var _Mg1 = _Ng1;

function _Ng1() {
    debug("facebook_logout");
    FB.logout(function (response) {
        if (response.status != 'connected') {
            _QO = _FO;
            _PO = "";
            g_fbOAuthToken = ""
        }
    });
    return 0
}

var _Og1 = _Pg1;

function _Pg1(_Qg1, _Rg1) {
    if (_Qg1 == 0) {
        return _MZ(_Rg1)
    } else {
        if (_fB[_Qg1] && (_Rg1 <= 1)) {
            return _fB[_Qg1]._Cz
        }
    }
    return 0
}

var _Sg1 = _Tg1;

function _Tg1(_Qg1, _Rg1) {
    if (_Qg1 == 0) {
        return _OZ(_Rg1)
    } else {
        if (_fB[_Qg1] && (_Rg1 <= 1)) {
            return _fB[_Qg1]._xz
        }
    }
    return 0
}

var _Ug1 = _Vg1;

function _Vg1(_Qg1, _Rg1) {
    if (_Qg1 == 0) {
        return _PZ(_Rg1)
    } else {
        if (_fB[_Qg1] && (_Rg1 <= 1)) {
            return _fB[_Qg1]._Bz
        }
    }
    return 0
}

var _Wg1 = _Xg1;

function _Xg1(_Qg1) {
    if (_Qg1 == 0) {
        return _Eh._3r
    } else if (_fB[_Qg1]) {
        return _fB[_Qg1].x
    }
    return 0
}

var _Yg1 = _Zg1;

function _Zg1(_Qg1) {
    if (_Qg1 == 0 && __g1[0]) {
        return __g1[0].x
    } else if (_fB[_Qg1]) {
        return _fB[_Qg1].x
    }
    return 0
}

var _0h1 = _1h1;

function _1h1(_Qg1) {
    if (_Qg1 == 0) {
        return _Eh._4r
    } else if (_fB[_Qg1]) {
        return _fB[_Qg1].y
    }
    return 0
}

var _2h1 = _3h1;

function _3h1(_Qg1) {
    if (_Qg1 == 0 && __g1[0]) {
        return __g1[0].y
    } else if (_fB[_Qg1]) {
        return _fB[_Qg1].y
    }
    return 0
}

var _4h1 = _5h1;

function _5h1() {
    return _6h1
}

var _7h1 = _8h1;

function _8h1() {
    return _9h1
};

function _ah1() {
    var _241 = 0;
    var _341 = 0;
    var _bh1 = 0;
    var _ch1 = 0;
    canvas = document.getElementById(_1O);
    var _dh1 = _eh1;
    var _fh1 = _gh1;
    if (_hh1 && _ih1) {
        var _v5 = _jh1;
        var _w5 = _kh1;
        var _mF, _au, _9u;
        _mF = _v5 / _w5;
        _au = _dh1 / _mF;
        if (_au < _fh1) {
            _mF = _w5 / _v5;
            _au = _dh1 * _mF;
            _341 = (_fh1 - _au) / 2;
            _9u = _dh1;
            _au += _341
        } else {
            _mF = _v5 / _w5;
            _9u = _fh1 * _mF;
            _241 = (_dh1 - _9u) / 2;
            _au = _fh1;
            _9u += _241
        }
        _bh1 = _9u;
        _ch1 = _au
    } else {
        _bh1 = _dh1;
        _ch1 = _fh1
    }
    _lh1.x = _241;
    _lh1.y = _341;
    _lh1._v5 = _bh1 - _241;
    _lh1._w5 = _ch1 - _341
}

(function () {
    'use strict';
    Function.prototype._mh1 = function (parent) {
        this.prototype.parent = parent;
        for (var x in parent.prototype) {
            if (!this.prototype[x]) this.prototype[x] = parent.prototype[x]
        }
    };
    Function.prototype._nh1 = function (parent) {
        return this._mh1(parent)
    };
    Array.prototype._oh1 = function (_n5, _MN, _ph1) {
        if (typeof(_n5) === 'undefined') _n5 = 0;
        if (typeof(_MN) === 'undefined') _MN = this.length - _n5;
        if (typeof(_ph1) === 'undefined') _ph1 = function (_hv, _Nt) {
            return _hv < _Nt
        };
        var left = _n5, _qh1 = [], _eC = 0;
        for (; ;) {
            for (; left + 1 < _MN; _MN++) {
                var _rh1 = this[left + Math.floor(Math.random() * (_MN - left))];
                _qh1[_eC++] = _MN;
                for (var right = left - 1; ;) {
                    while (_ph1(this[++right], _rh1)) {
                    }
                    while (_ph1(_rh1, this[--_MN])) {
                    }
                    if (right >= _MN) break;
                    var _CT = this[right];
                    this[right] = this[_MN];
                    this[_MN] = _CT
                }
            }
            if (_eC === 0) break;
            left = _MN;
            _MN = _qh1[--_eC]
        }
        return this
    };
    Array.prototype._sh1 = function (_th1, length) {
        if (typeof(length) === 'undefined') length = this.length;
        var _It = 0;
        for (var _u5 = 0; _u5 < length; ++_u5) {
            if (_th1(this[_u5])) continue;
            if (_u5 === _It) {
                ++_It;
                continue
            }
            this[_It++] = this[_u5]
        }
        return _It
    };
    Array.prototype._uh1 = function (_n5, _o5, _rz, _ph1) {
        if (typeof(_ph1) === 'undefined') _ph1 = function (_hv, _Nt) {
            return _hv < _Nt
        };
        var _Gu = _o5 - _n5;
        while (_Gu > 0) {
            var _vh1 = Math.floor(_Gu / 2);
            var _wh1 = _n5 + _vh1;
            if (_ph1(this[_wh1], _rz)) {
                _n5 = ++_wh1;
                _Gu -= _vh1 + 1
            } else _Gu = _vh1
        }
        return _n5
    };
    Array.prototype._xh1 = function (_n5, _o5, _rz, _ph1) {
        if (typeof(_ph1) === 'undefined') _ph1 = function (_hv, _Nt) {
            return _hv < _Nt
        };
        var _Gu = _o5 - _n5;
        while (_Gu > 0) {
            var _vh1 = Math.floor(_Gu / 2);
            var _wh1 = _n5 + _vh1;
            if (!_ph1(_rz, this[_wh1])) {
                _n5 = ++_wh1;
                _Gu -= _vh1 + 1
            } else _Gu = _vh1
        }
        return _n5
    };
    Array.prototype.rotate = function (_n5, _yh1, _o5) {
        var _yC = _yh1;
        while (_n5 != _yC) {
            var _zh1 = this[_n5];
            this[_n5] = this[_yC];
            this[_yC] = _zh1;
            ++_n5;
            ++_yC;
            if (_yC === _o5) _yC = _yh1;
            else if (_n5 === _yh1) _yh1 = _yC
        }
    };
    var _Ah1 = (function () {
        var _Bh1 = function () {
            return +new Date()
        };
        if (typeof(performance) === 'undefined') window['performance'] = {now: _Bh1};
        if (!window['performance'].now) window['performance'].now = _Bh1;

        function _Ch1(name, parent) {
            this.name = name;
            this.parent = parent;
            this._Dh1 = {};
            this._Eh1 = 0;
            this._Fh1 = 0;
            this._Gh1 = 0;
            this._Hh1 = !1;
            this._Ih1 = 0
        }

        _Ch1.prototype = {
            start: function () {
                this._Eh1 = performance.now();
                this._Hh1 = !0
            }, stop: function (_Jh1) {
                if (!this._Hh1) return;
                this._Hh1 = !1;
                this._Fh1 += performance.now() - this._Eh1;
                if (_Jh1) this.start();
                for (var x in this._Dh1) this._Dh1[x].stop()
            }, _Jh1: function (_Kh1) {
                if (!_Kh1) {
                    this._Hh1 = !0;
                    this._Gh1 += this._Fh1;
                    this.start()
                }
                this._Fh1 = 0;
                for (var x in this._Dh1) this._Dh1[x]._Jh1(!0)
            }
        };
        var _Lh1 = [];
        var _cs = new _Ch1("root");

        function _Mh1(name, parent) {
            if (!_Lh1) throw new _aB("late profile creation not allowed");
            var _ZN = new _Ch1(name, parent || 'root');
            _Lh1.push(_ZN);
            return _ZN
        }

        function _Nh1(_Oh1) {
            _Oh1._Ih1--;
            delete _Oh1._Dh1[_Oh1.name]
        }

        function _Ph1(_3e1, _Oh1) {
            if (_3e1.name === _Oh1.parent) return _3e1;
            for (var x in _3e1._Dh1) {
                var _tt;
                if (_tt = _Ph1(_3e1._Dh1[x], _Oh1)) return _tt
            }
            return null
        }

        function init() {
            while (_Lh1.length) {
                var _lT = _Lh1.pop();
                if (!(_lT.parentNode = _Ph1(_cs, _lT))) _Lh1._Qh1(_lT); else {
                    _lT.parentNode._Dh1[_lT.name] = _lT;
                    _lT.parentNode._Ih1++
                }
            }
            _Lh1 = null
        }

        function _Rh1() {
            _cs._Jh1(!0)
        }

        var _XB = {_Mh1: _Mh1, _Nh1: _Nh1, init: init, _Jh1: _Rh1, _Sh1: _cs};
        return _XB
    }());

    function _Th1(_Uh1) {
        if (!_Uh1) {
            console.log("Assertion failed! Pls debug.");
            debugger
        }
    }

    var _Vh1 = Number.MAX_VALUE;
    var _Wh1 = 2.2204460492503131e-016;
    var _Xh1 = Math.PI;
    var _Yh1 = 2;
    var _Zh1 = 8;
    var __h1 = 0.1;
    var _0i1 = 2.0;
    var _1i1 = 0.005;
    var _2i1 = (2.0 / 180.0 * _Xh1);
    var _3i1 = (2.0 * _1i1);
    var _4i1 = 8;
    var _5i1 = 32;
    var _6i1 = 1.0;
    var _7i1 = 0.2;
    var _8i1 = (8.0 / 180.0 * _Xh1);
    var _9i1 = 2.0;
    var _ai1 = (_9i1 * _9i1);
    var _bi1 = (0.5 * _Xh1);
    var _ci1 = (_bi1 * _bi1);
    var _di1 = 0.2;
    var _ei1 = 0.75;
    var _fi1 = 0.5;
    var _gi1 = 0.01;
    var _hi1 = (2.0 / 180.0 * _Xh1);
    var _ii1 = (-1);
    var _ji1 = 0.75;
    var _ki1 = 1.0;
    var _li1 = 5.0;
    var _mi1 = 2;
    var _ni1 = (_mi1 * _mi1);
    var _oi1 = 256;

    function _pi1(_qi1, _ri1, _si1) {
        this._ti1 = _qi1;
        this._ui1 = _ri1;
        this._vi1 = _si1
    }

    _pi1.prototype = {
        toString: function () {
            return this._ti1 + '.' + this._ui1 + '.' + this._vi1
        }
    };
    var _wi1 = new _pi1(2, 3, 1);

    function _xi1(x) {
        return isFinite(x) && !isNaN(x)
    }

    var _yi1 = Math.sqrt;
    var _zi1 = Math.atan2;
    var _Ai1 = Math.sin;
    var _Bi1 = Math.cos;
    var _Ci1 = Math.floor;
    var _Di1 = Math.ceil;
    var _Ei1 = _yi1;
    var _Fi1 = _zi1;

    function _Gi1(x) {
        return 1.0 / _yi1(x)
    }

    function _Hi1(x, y) {
        if (typeof(x) !== 'undefined') {
            this.x = x;
            this.y = y
        } else this.x = this.y = 0
    }

    _Hi1.prototype = {
        _Qr: function () {
            return new _Hi1(this.x, this.y)
        }, _Ii1: function () {
            this.x = 0.0;
            this.y = 0.0;
            return this
        }, _rC: function (_Ji1, _Ki1) {
            this.x = _Ji1;
            this.y = _Ki1;
            return this
        }, _Li1: function (_It) {
            this.x = _It.x;
            this.y = _It.y;
            return this
        }, _Mi1: function () {
            var _uv = new _Hi1();
            _uv._rC(-this.x, -this.y);
            return _uv
        }, _Ni1: function (_t5) {
            switch (_t5) {
                case 0:
                    return this.x;
                case 1:
                    return this.y
            }
        }, _Oi1: function (_t5, _uv) {
            switch (_t5) {
                case 0:
                    return this.x = _uv;
                case 1:
                    return this.y = _uv;
            }
        }, _3C: function (_uv) {
            this.x += _uv.x;
            this.y += _uv.y;
            return this
        }, _Pi1: function (_uv) {
            this.x -= _uv.x;
            this.y -= _uv.y;
            return this
        }, Multiply: function (_hv) {
            this.x *= _hv;
            this.y *= _hv;
            return this
        }, Length: function () {
            return _Ei1(this.x * this.x + this.y * this.y)
        }, _Qi1: function () {
            return this.x * this.x + this.y * this.y
        }, _Ri1: function () {
            var length = this.Length();
            if (length < _Wh1) {
                return 0.0
            }
            var _Si1 = 1.0 / length;
            this.x *= _Si1;
            this.y *= _Si1;
            return length
        }, _Ti1: function () {
            return _xi1(this.x) && _xi1(this.y)
        }, _Ui1: function () {
            return new _Hi1(-this.y, this.x)
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || [];
            _aP[0] = this.x;
            _aP[1] = this.y;
            return _aP
        }, _Xi1: function (data) {
            this.x = data[0];
            this.y = data[1]
        }
    };
    _Hi1._3C = function (_hv, _Nt) {
        return new _Hi1(_hv.x + _Nt.x, _hv.y + _Nt.y)
    }
    ;_Hi1._Pi1 = function (_hv, _Nt) {
        return new _Hi1(_hv.x - _Nt.x, _hv.y - _Nt.y)
    };
    _Hi1._Yi1 = function (_hv, _Nt) {
        return _hv.x == _Nt.x && _hv.y == _Nt.y
    };
    _Hi1.Multiply = function (_ZN, _hv) {
        return new _Hi1(_ZN * _hv.x, _ZN * _hv.y)
    };
    _Hi1._Mi1 = function (_hv) {
        return new _Hi1(-_hv.x, -_hv.y)
    };

    function _Zi1(x, y, _Mw) {
        if (typeof(x) !== 'undefined') {
            this.x = x;
            this.y = y;
            this._Mw = _Mw
        }
    }

    _Zi1.prototype = {
        _Qr: function () {
            return new _Zi1(this.x, this.y, this._Mw)
        }, _Ii1: function () {
            this.x = 0.0;
            this.y = 0.0;
            this._Mw = 0.0
        }, _rC: function (_Ji1, _Ki1, __i1) {
            this.x = _Ji1;
            this.y = _Ki1;
            this._Mw = __i1
        }, _Mi1: function () {
            var _uv = new _Zi1();
            _uv._rC(-this.x, -this.y, -this._Mw);
            return _uv
        }, _3C: function (_uv) {
            this.x += _uv.x;
            this.y += _uv.y;
            this._Mw += _uv._Mw
        }, _Pi1: function (_uv) {
            this.x -= _uv.x;
            this.y -= _uv.y;
            this._Mw -= _uv._Mw
        }, Multiply: function (_ZN) {
            this.x *= _ZN;
            this.y *= _ZN;
            this._Mw *= _ZN;
        }, x: 0, y: 0, _Mw: 0
    };
    _Zi1.Multiply = function (_ZN, _hv) {
        return new _Zi1(_ZN * _hv.x, _ZN * _hv.y, _ZN * _hv._Mw)
    };
    _Zi1._3C = function (_hv, _Nt) {
        return new _Zi1(_hv.x + _Nt.x, _hv.y + _Nt.y, _hv._Mw + _Nt._Mw)
    };
    _Zi1._Pi1 = function (_hv, _Nt) {
        return new _Zi1(_hv.x - _Nt.x,
            _hv.y - _Nt.y, _hv._Mw - _Nt._Mw)
    };

    function _0j1(_1j1, _2j1) {
        this._PQ = _1j1 ? _1j1._Qr() : new _Hi1();
        this._4V = _2j1 ? _2j1._Qr() : new _Hi1()
    }

    _0j1.prototype = {
        _rC: function (_1j1, _2j1) {
            this._PQ._Li1(_1j1);
            this._4V._Li1(_2j1)
        }, _Li1: function (_xL) {
            this._PQ._Li1(_xL._PQ);
            this._4V._Li1(_xL._4V)
        }, _3j1: function () {
            this._PQ.x = 1.0;
            this._4V.x = 0.0;
            this._PQ.y = 0.0;
            this._4V.y = 1.0
        }, _Ii1: function () {
            this._PQ.x = 0.0;
            this._4V.x = 0.0;
            this._PQ.y = 0.0;
            this._4V.y = 0.0
        }, _4j1: function () {
            var _hv = this._PQ.x, _Nt = this._4V.x, _u5 = this._PQ.y, _cE = this._4V.y;
            var _5j1 = new _0j1();
            var _6j1 = _hv * _cE - _Nt * _u5;
            if (_6j1 != 0.0) {
                _6j1 = 1.0 / _6j1
            }
            _5j1._PQ.x = _6j1 * _cE;
            _5j1._4V.x = -_6j1 * _Nt;
            _5j1._PQ.y = -_6j1 * _u5;
            _5j1._4V.y = _6j1 * _hv;
            return _5j1
        }, _7j1: function (_Nt) {
            var _8j1 = this._PQ.x, _9j1 = this._4V.x, _aj1 = this._PQ.y, _bj1 = this._4V.y;
            var _6j1 = _8j1 * _bj1 - _9j1 * _aj1;
            if (_6j1 != 0.0) {
                _6j1 = 1.0 / _6j1
            }
            var x = new _Hi1();
            x.x = _6j1 * (_bj1 * _Nt.x - _9j1 * _Nt.y);
            x.y = _6j1 * (_8j1 * _Nt.y - _aj1 * _Nt.x);
            return x
        }
    };
    _0j1._3C = function (_Uh1, _5j1) {
        return new _0j1(_Hi1._3C(_Uh1._PQ, _5j1._PQ), _Hi1._3C(_Uh1._4V, _5j1._4V))
    };

    function _cj1(_1j1,
                  _2j1, _dj1) {
        this._PQ = _1j1 ? _1j1._Qr() : new _Zi1();
        this._4V = _2j1 ? _2j1._Qr() : new _Zi1();
        this._ej1 = _dj1 ? _dj1._Qr() : new _Zi1()
    }

    _cj1.prototype = {
        _Ii1: function () {
            this._PQ._Ii1();
            this._4V._Ii1();
            this._ej1._Ii1()
        }, _fj1: function (_Nt) {
            var _6j1 = _gj1(this._PQ, _hj1(this._4V, this._ej1));
            if (_6j1 != 0.0) {
                _6j1 = 1.0 / _6j1
            }
            var x = new _Zi1();
            x.x = _6j1 * _gj1(_Nt, _hj1(this._4V, this._ej1));
            x.y = _6j1 * _gj1(this._PQ, _hj1(_Nt, this._ej1));
            x._Mw = _6j1 * _gj1(this._PQ, _hj1(this._4V, _Nt));
            return x
        }, _ij1: function (_Nt) {
            var _8j1 = this._PQ.x, _9j1 = this._4V.x,
                _aj1 = this._PQ.y, _bj1 = this._4V.y;
            var _6j1 = _8j1 * _bj1 - _9j1 * _aj1;
            if (_6j1 != 0.0) {
                _6j1 = 1.0 / _6j1
            }
            var x = new _Hi1();
            x.x = _6j1 * (_bj1 * _Nt.x - _9j1 * _Nt.y);
            x.y = _6j1 * (_8j1 * _Nt.y - _aj1 * _Nt.x);
            return x
        }, _jj1: function (_kj1) {
            var _hv = this._PQ.x, _Nt = this._4V.x, _u5 = this._PQ.y, _cE = this._4V.y;
            var _6j1 = _hv * _cE - _Nt * _u5;
            if (_6j1 != 0.0) {
                _6j1 = 1.0 / _6j1
            }
            _kj1._PQ.x = _6j1 * _cE;
            _kj1._4V.x = -_6j1 * _Nt;
            _kj1._PQ._Mw = 0.0;
            _kj1._PQ.y = -_6j1 * _u5;
            _kj1._4V.y = _6j1 * _hv;
            _kj1._4V._Mw = 0.0;
            _kj1._ej1.x = 0.0;
            _kj1._ej1.y = 0.0;
            _kj1._ej1._Mw = 0.0
        }, _lj1: function (_kj1) {
            var _6j1 = _gj1(this._PQ, _hj1(this._4V, this._ej1));
            if (_6j1 != 0.0) {
                _6j1 = 1.0 / _6j1
            }
            var _8j1 = this._PQ.x, _9j1 = this._4V.x, _mj1 = this._ej1.x;
            var _bj1 = this._4V.y, _nj1 = this._ej1.y;
            var _oj1 = this._ej1._Mw;
            _kj1._PQ.x = _6j1 * (_bj1 * _oj1 - _nj1 * _nj1);
            _kj1._PQ.y = _6j1 * (_mj1 * _nj1 - _9j1 * _oj1);
            _kj1._PQ._Mw = _6j1 * (_9j1 * _nj1 - _mj1 * _bj1);
            _kj1._4V.x = _kj1._PQ.y;
            _kj1._4V.y = _6j1 * (_8j1 * _oj1 - _mj1 * _mj1);
            _kj1._4V._Mw = _6j1 * (_mj1 * _9j1 - _8j1 * _nj1);
            _kj1._ej1.x = _kj1._PQ._Mw;
            _kj1._ej1.y = _kj1._4V._Mw;
            _kj1._ej1._Mw = _6j1 * (_8j1 * _bj1 - _9j1 * _9j1)
        }
    };

    function _pj1(angle,
                  _u5) {
        if (typeof(_u5) !== 'undefined') {
            this._ZN = angle;
            this._u5 = _u5
        } else if (typeof(angle) !== 'undefined') this._rC(angle)
    }

    _pj1.prototype = {
        _Qr: function () {
            return new _pj1(this._ZN, this._u5)
        }, _Li1: function (_It) {
            this._ZN = _It._ZN;
            this._u5 = _It._u5
        }, _rC: function (x) {
            this._ZN = _Ai1(x);
            this._u5 = _Bi1(x)
        }, _3j1: function () {
            this._ZN = 0.0;
            this._u5 = 1.0
        }, _qj1: function () {
            return _Fi1(this._ZN, this._u5)
        }, _rj1: function () {
            return new _Hi1(this._u5, this._ZN)
        }, _sj1: function () {
            return new _Hi1(-this._ZN, this._u5)
        }, _ZN: 0, _u5: 1
    };

    function _tj1(position,
                  rotation) {
        this._lT = new _Hi1();
        this._7S = new _pj1();
        if (position) {
            this._lT._Li1(position);
            this._7S._Li1(rotation)
        }
    }

    _tj1.prototype = {
        _Qr: function () {
            var _uj1 = new _tj1(this._lT, this._7S);
            return _uj1
        }, _Li1: function (_uj1) {
            this._lT._Li1(_uj1._lT);
            this._7S._Li1(_uj1._7S)
        }, _3j1: function () {
            this._lT._Ii1();
            this._7S._3j1();
        }, _rC: function (position, angle) {
            this._lT._Li1(position);
            this._7S._rC(angle)
        }
    };

    function _vj1() {
        this._wj1 = new _Hi1();
        this._xj1 = new _Hi1();
        this._u5 = new _Hi1()
    }

    _vj1.prototype = {
        _Li1: function (_yj1) {
            this._wj1._Li1(_yj1._wj1);
            this._xj1._Li1(_yj1._xj1);
            this._u5._Li1(_yj1._u5);
            this._hv = _yj1._hv;
            this._zj1 = _yj1._zj1;
            this._Aj1 = _yj1._Aj1
        }, _Qr: function () {
            var _yj1 = new _vj1();
            _yj1._wj1._Li1(this._wj1);
            _yj1._xj1._Li1(this._xj1);
            _yj1._u5._Li1(this._u5);
            _yj1._hv = this._hv;
            _yj1._zj1 = this._zj1;
            _yj1._Aj1 = this._Aj1;
            return _yj1
        }, _Bj1: function (_uj1, _Cj1) {
            _uj1._lT.x = ((1.0 - _Cj1) * this._xj1.x) + (_Cj1 * this._u5.x);
            _uj1._lT.y = ((1.0 - _Cj1) * this._xj1.y) + (_Cj1 * this._u5.y);
            var angle = (1.0 - _Cj1) * this._zj1 + _Cj1 * this._hv;
            _uj1._7S._rC(angle);
            _uj1._lT.x -= _uj1._7S._u5 * this._wj1.x - _uj1._7S._ZN * this._wj1.y;
            _uj1._lT.y -= _uj1._7S._ZN * this._wj1.x + _uj1._7S._u5 * this._wj1.y
        }, _Dj1: function (alpha) {
            _Th1(this._Aj1 < 1.0);
            var _Cj1 = (alpha - this._Aj1) / (1.0 - this._Aj1);
            this._xj1._3C(_Hi1.Multiply(_Cj1, _Hi1._Pi1(this._u5, this._xj1)));
            this._zj1 += _Cj1 * (this._hv - this._zj1);
            this._Aj1 = alpha
        }, _Ri1: function () {
            var _Ej1 = 2.0 * _Xh1;
            var _cE = _Ej1 * _Ci1(this._zj1 / _Ej1);
            this._zj1 -= _cE;
            this._hv -= _cE
        }, _zj1: 0, _hv: 0, _Aj1: 0
    };

    function _Fj1(_hv, _Nt) {
        return _hv.x * _Nt.x + _hv.y * _Nt.y
    }

    function _Gj1(_hv, _Nt) {
        return _hv.x * _Nt.y - _hv.y * _Nt.x
    }

    function _Hj1(_hv,
                  _ZN) {
        return new _Hi1(_ZN * _hv.y, -_ZN * _hv.x)
    }

    function _Ij1(_ZN, _hv) {
        return new _Hi1(-_ZN * _hv.y, _ZN * _hv.x)
    }

    function _Jj1(_Uh1, _uv) {
        return new _Hi1(_Uh1._PQ.x * _uv.x + _Uh1._4V.x * _uv.y, _Uh1._PQ.y * _uv.x + _Uh1._4V.y * _uv.y)
    }

    function _Kj1(_Uh1, _uv) {
        return new _Hi1(_Fj1(_uv, _Uh1._PQ), _Fj1(_uv, _Uh1._4V));
    }

    function _Lj1(_hv, _Nt) {
        var _u5 = _Hi1._Pi1(_hv, _Nt);
        return _u5.Length()
    }

    function _Mj1(_hv, _Nt) {
        var _u5 = _Hi1._Pi1(_hv, _Nt);
        return _Fj1(_u5, _u5)
    }

    function _gj1(_hv, _Nt) {
        return _hv.x * _Nt.x + _hv.y * _Nt.y + _hv._Mw * _Nt._Mw
    }

    function _hj1(_hv,
                  _Nt) {
        return new _Zi1(_hv.y * _Nt._Mw - _hv._Mw * _Nt.y, _hv._Mw * _Nt.x - _hv.x * _Nt._Mw, _hv.x * _Nt.y - _hv.y * _Nt.x)
    }

    function _Nj1(_Uh1, _5j1) {
        return new _0j1(_Jj1(_Uh1, _5j1._PQ), _Jj1(_Uh1, _5j1._4V))
    }

    function _Oj1(_Uh1, _5j1) {
        var _1j1 = new _Hi1(_Fj1(_Uh1._PQ, _5j1._PQ), _Fj1(_Uh1._4V, _5j1._PQ));
        var _2j1 = new _Hi1(_Fj1(_Uh1._PQ, _5j1._4V), _Fj1(_Uh1._4V, _5j1._4V));
        return new _0j1(_1j1, _2j1)
    }

    function _Pj1(_Uh1, _uv) {
        return _Zi1._3C(_Zi1._3C(_Zi1.Multiply(_uv.x, _Uh1._PQ), _Zi1.Multiply(_uv.y, _Uh1._4V)), _Zi1.Multiply(_uv._Mw, _Uh1._ej1))
    }

    function _Qj1(_Uh1, _uv) {
        return new _Hi1(_Uh1._PQ.x * _uv.x + _Uh1._4V.x * _uv.y, _Uh1._PQ.y * _uv.x + _Uh1._4V.y * _uv.y)
    }

    function _Rj1(_7S, _Kt) {
        var _Sj1 = new _pj1();
        _Sj1._ZN = _7S._ZN * _Kt._u5 + _7S._u5 * _Kt._ZN;
        _Sj1._u5 = _7S._u5 * _Kt._u5 - _7S._ZN * _Kt._ZN;
        return _Sj1
    }

    function _Tj1(_7S, _Kt) {
        var _Sj1 = new _pj1();
        _Sj1._ZN = _7S._u5 * _Kt._ZN - _7S._ZN * _Kt._u5;
        _Sj1._u5 = _7S._u5 * _Kt._u5 + _7S._ZN * _Kt._ZN;
        return _Sj1
    }

    function _Uj1(_7S, _uv) {
        return new _Hi1(_7S._u5 * _uv.x - _7S._ZN * _uv.y, _7S._ZN * _uv.x + _7S._u5 * _uv.y)
    }

    function _Vj1(_7S, _uv) {
        return new _Hi1(_7S._u5 * _uv.x + _7S._ZN * _uv.y,
            -_7S._ZN * _uv.x + _7S._u5 * _uv.y)
    }

    function _Wj1(_Xj1, _uv) {
        return new _Hi1((_Xj1._7S._u5 * _uv.x - _Xj1._7S._ZN * _uv.y) + _Xj1._lT.x, (_Xj1._7S._ZN * _uv.x + _Xj1._7S._u5 * _uv.y) + _Xj1._lT.y)
    }

    function _Yj1(_Xj1, _uv) {
        var _RD = _uv.x - _Xj1._lT.x;
        var _SD = _uv.y - _Xj1._lT.y;
        var x = (_Xj1._7S._u5 * _RD + _Xj1._7S._ZN * _SD);
        var y = (-_Xj1._7S._ZN * _RD + _Xj1._7S._u5 * _SD);
        return new _Hi1(x, y)
    }

    function _Zj1(_Uh1, _5j1) {
        var __j1 = new _tj1();
        __j1._7S = _Rj1(_Uh1._7S, _5j1._7S);
        __j1._lT = _Hi1._3C(_Uj1(_Uh1._7S, _5j1._lT), _Uh1._lT);
        return __j1
    }

    function _0k1(_Uh1, _5j1) {
        var __j1 = new _tj1();
        __j1._7S = _Tj1(_Uh1._7S, _5j1._7S);
        var _1k1 = _5j1._lT.x - _Uh1._lT.x;
        var _2k1 = _5j1._lT.y - _Uh1._lT.y;
        __j1._lT.x = _Uh1._7S._u5 * _1k1 + _Uh1._7S._ZN * _2k1;
        __j1._lT.y = -_Uh1._7S._ZN * _1k1 + _Uh1._7S._u5 * _2k1;
        return __j1
    }

    var _3k1 = Math.abs;

    function _4k1(_hv) {
        return new _Hi1(_3k1(_hv.x), _3k1(_hv.y))
    }

    function _5k1(_Uh1) {
        return new _0j1(_4k1(_Uh1._PQ), _4k1(_Uh1._4V))
    }

    var _6k1 = Math.min;

    function _7k1(_hv, _Nt) {
        return new _Hi1(_6k1(_hv.x, _Nt.x), _6k1(_hv.y, _Nt.y))
    }

    var _8k1 = Math.max;

    function _9k1(_hv, _Nt) {
        return new _Hi1(_8k1(_hv.x,
            _Nt.x), _8k1(_hv.y, _Nt.y))
    }

    function _ak1(_hv, _DC, _CC) {
        return _8k1(_DC, _6k1(_hv, _CC))
    }

    function _bk1(_hv, _DC, _CC) {
        return _9k1(_DC, _7k1(_hv, _CC))
    }

    function _ck1(x) {
        x |= (x >> 1);
        x |= (x >> 2);
        x |= (x >> 4);
        x |= (x >> 8);
        x |= (x >> 16);
        return x + 1
    }

    function _dk1(x) {
        var _eO = x > 0 && (x & (x - 1)) == 0;
        return _eO
    }

    var _ek1 = 32767;

    function _fk1(_gk1, _hk1) {
        var _Kt = Math.random();
        if (typeof(_gk1) !== 'undefined') _Kt = (_hk1 - _gk1) * _Kt + _gk1; else _Kt = 2.0 * _Kt - 1.0;
        return _Kt
    }

    function _ik1(_Kt, _gv, _Nt) {
        this._Kt = _Kt || 0;
        this._gv = _gv || 0;
        this._Nt = _Nt || 0
    }

    _ik1.prototype = {
        _rC: function (_Kt, _gv, _Nt) {
            this._Kt = _Kt;
            this._gv = _gv;
            this._Nt = _Nt
        }
    };

    function _jk1() {
    }

    _jk1.prototype = {
        _kk1: function (_Hf1) {
            this._lk1 = _Hf1
        }, _mk1: function () {
            return this._lk1
        }, _nk1: function (_Hf1) {
            this._lk1 |= _Hf1
        }, _ok1: function (_Hf1) {
            this._lk1 &= ~_Hf1
        }, _pk1: function (_Hf1) {
            this._lk1 ^= _Hf1
        }, _qk1: function (vertices, vertexCount, color) {
        }, _rk1: function (vertices, vertexCount, color) {
        }, _sk1: function (_tk1, _uk1, color) {
        }, _vk1: function (_tk1, _uk1, _wk1, color) {
        }, _xk1: function (_yk1, _zk1, color) {
        }, _Ak1: function (_uj1) {
        }, _Bk1: function (_Ck1,
                           _uk1, _Dk1, _Gu) {
        }, _lk1: 0
    };
    _jk1._Ek1 = 1;
    _jk1._Fk1 = 2;
    _jk1._Gk1 = 4;
    _jk1._Hk1 = 8;
    _jk1._Ik1 = 16;
    _jk1._Jk1 = 32;
    _jk1._Kk1 = 64;
    _jk1._Lk1 = 128;
    _jk1._Mk1 = 256;
    _jk1._Nk1 = 512;
    _jk1._Ok1 = 1024;
    if (typeof(performance) === 'undefined') {
        window.performance = {
            now: function () {
                return +new Date()
            }
        }
    }

    function _Pk1() {
        this._xS()
    }

    _Pk1.prototype = {
        _xS: function () {
            this._Qk1 = performance.now()
        }, _Rk1: function () {
            return performance.now() - this._Qk1
        }
    };

    function _Sk1() {
        this._Tk1 = 0;
        this._tk1 = new _Hi1();
        this._Uk1 = 0
    }

    function _Vk1() {
        this._L_ = 0;
        this._Wk1 = 0
    }

    _Vk1.prototype = {
        _Qr: function () {
        }, _Xk1: function () {
            return this._L_
        }, _Yk1: function () {
        }, _Zk1: function (_uj1, _lT) {
        }, __k1: function (_XR, _VR, transform, _0l1) {
        }, _1l1: function (_2l1, _uj1, _0l1) {
        }, _3l1: function (_4l1, _5l1) {
        }, _6l1: function (_uj1, _lT, _7l1, _8l1, _0l1) {
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            _aP['m_type'] = this._L_;
            _aP['m_radius'] = this._Wk1;
            return _aP
        }, _Xi1: function (data) {
            this._Wk1 = data['m_radius']
        }
    };
    _Vk1._9l1 = 0;
    _Vk1._al1 = 1;
    _Vk1._bl1 = 2;
    _Vk1._cl1 = 3;
    _Vk1._dl1 = 4;

    function _el1() {
        this.parent.call(this);
        this._L_ = _Vk1._9l1;
        this._Wk1 = 0;
        this._fl1 = new _Hi1();
        Object.seal(this)
    }

    _el1.prototype = {
        _Qr: function () {
            var _gl1 = new _el1();
            _gl1._Wk1 = this._Wk1;
            _gl1._fl1 = this._fl1._Qr();
            return _gl1
        }, _Yk1: function () {
            return 1
        }, _Zk1: function (transform, _lT) {
            var _tk1 = _Hi1._3C(transform._lT, _Uj1(transform._7S, this._fl1));
            var _cE = _Hi1._Pi1(_lT, _tk1);
            return _Fj1(_cE, _cE) <= this._Wk1 * this._Wk1;
        }, __k1: function (_XR, _VR, transform, _0l1) {
            var position = _Hi1._3C(transform._lT, _Uj1(transform._7S, this._fl1));
            var _ZN = _Hi1._Pi1(_VR._yk1, position);
            var _Nt = _Fj1(_ZN, _ZN) - this._Wk1 * this._Wk1;
            var _Kt = _Hi1._Pi1(_VR._zk1, _VR._yk1);
            var _u5 = _Fj1(_ZN, _Kt);
            var _6T = _Fj1(_Kt, _Kt);
            var _hl1 = _u5 * _u5 - _6T * _Nt;
            if (_hl1 < 0.0 || _6T < _Wh1) {
                return !1
            }
            var _hv = -(_u5 + _Ei1(_hl1));
            if (0.0 <= _hv && _hv <= _VR._il1 * _6T) {
                _hv /= _6T;
                _XR._jl1 = _hv;
                _XR._8l1 = _Hi1._3C(_ZN, _Hi1.Multiply(_hv, _Kt));
                _XR._8l1._Ri1();
                return !0
            }
            return !1
        }, _1l1: function (_2l1, transform, _0l1) {
            var _RD = transform._lT.x + (transform._7S._u5 * this._fl1.x - transform._7S._ZN * this._fl1.y);
            var _SD = transform._lT.y + (transform._7S._ZN * this._fl1.x + transform._7S._u5 * this._fl1.y);
            _2l1._kl1.x = _RD - this._Wk1;
            _2l1._kl1.y = _SD - this._Wk1;
            _2l1._ll1.x = _RD + this._Wk1;
            _2l1._ll1.y = _SD + this._Wk1
        }, _3l1: function (_4l1, _5l1) {
            _4l1._Tk1 = _5l1 * _Xh1 * this._Wk1 * this._Wk1;
            _4l1._tk1 = this._fl1;
            _4l1._Uk1 = _4l1._Tk1 * (0.5 * this._Wk1 * this._Wk1 + _Fj1(this._fl1, this._fl1))
        }, _ml1: function (_cE) {
            return 0
        }, _nl1: function (_cE) {
            return this._fl1
        }, _dz: function () {
            return 1
        }, _ol1: function (index) {
            _Th1(index == 0);
            return this._fl1
        }, _6l1: function (transform, _lT, _7l1, _8l1, _0l1) {
            var _tk1 = _Hi1._3C(transform._lT, _Uj1(transform._7S, this._fl1));
            var _cE = _Hi1._Pi1(_lT,
                _tk1);
            var _pl1 = _cE.Length();
            _7l1[0] = _pl1 - this._Wk1;
            _8l1._Li1(_Hi1.Multiply(1 / _pl1, _cE))
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['m_p'] = this._fl1._Vi1();
            return _aP
        }, _Xi1: function (data) {
            this.parent.prototype._Xi1.call(this, data);
            this._fl1._Xi1(data['m_p']);
        }
    };
    _el1._mh1(_Vk1);

    function _ql1() {
        this.parent.call(this);
        this._L_ = _Vk1._al1;
        this._Wk1 = _3i1;
        this._rl1 = new _Hi1();
        this._sl1 = new _Hi1();
        this._tl1 = new _Hi1();
        this._ul1 = new _Hi1();
        this._vl1 = !1;
        this._wl1 = !1;
        Object.seal(this)
    }

    _ql1.prototype = {
        _rC: function (_tw, _uw) {
            this._sl1._Li1(_tw);
            this._tl1._Li1(_uw);
            this._vl1 = !1;
            this._wl1 = !1
        }, _Qr: function () {
            var _gl1 = new _ql1();
            _gl1._rl1 = this._rl1._Qr();
            _gl1._sl1 = this._sl1._Qr();
            _gl1._tl1 = this._tl1._Qr();
            _gl1._ul1 = this._ul1._Qr();
            _gl1._vl1 = this._vl1;
            _gl1._wl1 = this._wl1;
            return _gl1
        }, _Yk1: function () {
            return 1
        }, _Zk1: function (transform, _lT) {
            return !1
        }, __k1: function (_XR, _VR, _uj1, _0l1) {
            var _yk1 = _Vj1(_uj1._7S, _Hi1._Pi1(_VR._yk1, _uj1._lT));
            var _zk1 = _Vj1(_uj1._7S, _Hi1._Pi1(_VR._zk1, _uj1._lT));
            var _cE = _Hi1._Pi1(_zk1,
                _yk1);
            var _tw = this._sl1;
            var _uw = this._tl1;
            var e = _Hi1._Pi1(_uw, _tw);
            var _8l1 = new _Hi1(e.y, -e.x);
            _8l1._Ri1();
            var _xl1 = _Fj1(_8l1, _Hi1._Pi1(_tw, _yk1));
            var _yl1 = _Fj1(_8l1, _cE);
            if (_yl1 == 0.0) {
                return !1
            }
            var _Mt = _xl1 / _yl1;
            if (_Mt < 0.0 || _VR._il1 < _Mt) {
                return !1
            }
            var _7S = _Hi1._3C(_yk1, _Hi1.Multiply(_Mt, _cE));
            var _Kt = _Hi1._Pi1(_uw, _tw);
            var _6T = _Fj1(_Kt, _Kt);
            if (_6T == 0.0) {
                return !1
            }
            var _ZN = _Fj1(_Hi1._Pi1(_7S, _tw), _Kt) / _6T;
            if (_ZN < 0.0 || 1.0 < _ZN) {
                return !1
            }
            _XR._jl1 = _Mt;
            if (_xl1 > 0.0) {
                _XR._8l1 = _Uj1(_uj1._7S, _8l1)._Mi1()
            } else {
                _XR._8l1 = _Uj1(_uj1._7S,
                    _8l1)
            }
            return !0
        }, _1l1: function (_2l1, _uj1, _0l1) {
            var _WD = (_uj1._7S._u5 * this._sl1.x - _uj1._7S._ZN * this._sl1.y) + _uj1._lT.x;
            var _ZD = (_uj1._7S._ZN * this._sl1.x + _uj1._7S._u5 * this._sl1.y) + _uj1._lT.y;
            var _XD = (_uj1._7S._u5 * this._tl1.x - _uj1._7S._ZN * this._tl1.y) + _uj1._lT.x;
            var __D = (_uj1._7S._ZN * this._tl1.x + _uj1._7S._u5 * this._tl1.y) + _uj1._lT.y;
            var _zl1 = _6k1(_WD, _XD);
            var _Al1 = _6k1(_ZD, __D);
            var _Bl1 = _8k1(_WD, _XD);
            var _Cl1 = _8k1(_ZD, __D);
            _2l1._kl1.x = _zl1 - this._Wk1;
            _2l1._kl1.y = _Al1 - this._Wk1;
            _2l1._ll1.x = _Bl1 + this._Wk1;
            _2l1._ll1.y = _Cl1 + this._Wk1
        }
        , _3l1: function (_4l1, _5l1) {
            _4l1._Tk1 = 0.0;
            _4l1._tk1 = _Hi1.Multiply(0.5, _Hi1._3C(this._sl1, this._tl1));
            _4l1._Uk1 = 0.0
        }, _6l1: function (_uj1, _lT, _7l1, _8l1, _0l1) {
            var _tw = _Wj1(_uj1, this._sl1);
            var _uw = _Wj1(_uj1, this._tl1);
            var _cE = _Hi1._Pi1(_lT, _tw);
            var _ZN = _Hi1._Pi1(_uw, _tw);
            var _Dl1 = _Fj1(_cE, _ZN);
            if (_Dl1 > 0) {
                var _OL = _Fj1(_ZN, _ZN);
                if (_Dl1 > _OL) {
                    _cE._Li1(_Hi1._Pi1(_lT, _uw))
                } else {
                    _cE._Pi1(_Hi1.Multiply(_Dl1 / _OL, _ZN))
                }
            }
            var _pl1 = _cE.Length();
            _7l1[0] = _pl1;
            _8l1._Li1(_pl1 > 0 ? _Hi1.Multiply(1 / _pl1, _cE) : new _Hi1(0, 0))
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['m_vertex1'] = this._sl1._Vi1();
            _aP['m_vertex2'] = this._tl1._Vi1();
            _aP['m_hasVertex0'] = this._vl1;
            if (this._vl1) _aP['m_vertex0'] = this._rl1._Vi1();
            _aP['m_hasVertex3'] = this._wl1;
            if (this._wl1) _aP['m_vertex3'] = this._ul1._Vi1();
            return _aP
        }, _Xi1: function (data) {
            this.parent.prototype._Xi1.call(this, data);
            this._sl1._Xi1(data['m_vertex1']);
            this._tl1._Xi1(data['m_vertex2']);
            this._vl1 = data['m_hasVertex0'];
            if (this._vl1) this._rl1._Xi1(data['m_vertex0']);
            this._wl1 = data['m_hasVertex3'];
            if (this._wl1) this._ul1._Xi1(data['m_vertex3'])
        }
    };
    _ql1._mh1(_Vk1);

    function _El1() {
        this.parent.call(this);
        this._L_ = _Vk1._cl1;
        this._Wk1 = _3i1;
        this._Fl1 = null;
        this._Gl1 = 0;
        this._Hl1 = new _Hi1();
        this._Il1 = new _Hi1();
        this._Jl1 = !1;
        this._Kl1 = !1;
        Object.seal(this)
    }

    _El1._Ll1 = new _ql1();
    _El1.prototype = {
        _Ml1: function (vertices, _Gu) {
            _Th1(this._Fl1 == null && this._Gl1 == 0);
            _Th1(_Gu >= 3);
            for (var _t5 = 1; _t5 < _Gu; ++_t5) {
                var _tw = vertices[_t5 - 1];
                var _uw = vertices[_t5];
                _Th1(_Mj1(_tw, _uw) > _1i1 * _1i1)
            }
            this._Gl1 = _Gu + 1;
            this._Fl1 = new Array(this._Gl1);
            for (var _t5 = 0; _t5 < _Gu; ++_t5) this._Fl1[_t5] = vertices[_t5]._Qr();
            this._Fl1[_Gu] = this._Fl1[0]._Qr();
            this._Hl1._Li1(this._Fl1[this._Gl1 - 2]);
            this._Il1._Li1(this._Fl1[1]);
            this._Jl1 = !0;
            this._Kl1 = !0
        }, _Nl1: function (vertices, _Gu) {
            _Th1(this._Fl1 == null && this._Gl1 == 0);
            _Th1(_Gu >= 2);
            for (var _t5 = 1; _t5 < _Gu; ++_t5) {
                var _tw = vertices[_t5 - 1];
                var _uw = vertices[_t5];
                _Th1(_Mj1(_tw, _uw) > _1i1 * _1i1)
            }
            this._Gl1 = _Gu;
            this._Fl1 = new Array(_Gu);
            for (var _t5 = 0; _t5 < _Gu; ++_t5) this._Fl1[_t5] = vertices[_t5]._Qr();
            this._Jl1 = !1;
            this._Kl1 = !1;
            this._Hl1._Ii1();
            this._Il1._Ii1()
        }, _Ol1: function (_Pl1) {
            this._Hl1._Li1(_Pl1);
            this._Jl1 = !0
        }, _Ql1: function (_Rl1) {
            this._Il1._Li1(_Rl1);
            this._Kl1 = !0
        }, _Qr: function () {
            var _gl1 = new _El1();
            _gl1._Gl1 = this._Gl1;
            _gl1._Fl1 = new Array(this._Gl1);
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) _gl1._Fl1[_t5] = this._Fl1[_t5]._Qr();
            _gl1._Hl1 = this._Hl1._Qr();
            _gl1._Il1 = this._Il1._Qr();
            _gl1._Jl1 = this._Jl1;
            _gl1._Kl1 = this._Kl1;
            return _gl1
        }, _Yk1: function () {
            return this._Gl1 - 1
        }, _Sl1: function (_Tl1, index) {
            _Th1(0 <= index && index < this._Gl1 - 1);
            _Tl1._L_ = _Vk1._al1;
            _Tl1._Wk1 = this._Wk1;
            _Tl1._sl1 = this._Fl1[index + 0];
            _Tl1._tl1 = this._Fl1[index + 1];
            if (index > 0) {
                _Tl1._rl1 = this._Fl1[index - 1];
                _Tl1._vl1 = !0
            } else {
                _Tl1._rl1 = this._Hl1;
                _Tl1._vl1 = this._Jl1
            }
            if (index < this._Gl1 - 2) {
                _Tl1._ul1 = this._Fl1[index + 2];
                _Tl1._wl1 = !0;
            } else {
                _Tl1._ul1 = this._Il1;
                _Tl1._wl1 = this._Kl1
            }
        }, _Zk1: function (transform, _lT) {
            return !1
        }, __k1: function (_XR, _VR, _uj1, _0l1) {
            _Th1(_0l1 < this._Gl1);
            var _Ul1 = _0l1;
            var _Vl1 = _0l1 + 1;
            if (_Vl1 == this._Gl1) {
                _Vl1 = 0
            }
            _El1._Ll1._sl1 = this._Fl1[_Ul1]._Qr();
            _El1._Ll1._tl1 = this._Fl1[_Vl1]._Qr();
            return _El1._Ll1.__k1(_XR, _VR, _uj1, 0)
        }, _1l1: function (_2l1, _uj1, _0l1) {
            _Th1(_0l1 < this._Gl1);
            var _Ul1 = _0l1;
            var _Vl1 = _0l1 + 1;
            if (_Vl1 == this._Gl1) {
                _Vl1 = 0
            }
            var _WD = (_uj1._7S._u5 * this._Fl1[_Ul1].x - _uj1._7S._ZN * this._Fl1[_Ul1].y) + _uj1._lT.x;
            var _ZD = (_uj1._7S._ZN * this._Fl1[_Ul1].x + _uj1._7S._u5 * this._Fl1[_Ul1].y) + _uj1._lT.y;
            var _XD = (_uj1._7S._u5 * this._Fl1[_Vl1].x - _uj1._7S._ZN * this._Fl1[_Vl1].y) + _uj1._lT.x;
            var __D = (_uj1._7S._ZN * this._Fl1[_Vl1].x + _uj1._7S._u5 * this._Fl1[_Vl1].y) + _uj1._lT.y;
            _2l1._kl1.x = _6k1(_WD, _XD);
            _2l1._kl1.y = _6k1(_ZD,
                __D);
            _2l1._ll1.x = _8k1(_WD, _XD);
            _2l1._ll1.y = _8k1(_ZD, __D)
        }, _3l1: function (_4l1, _5l1) {
            _4l1._Tk1 = 0.0;
            _4l1._tk1._Ii1();
            _4l1._Uk1 = 0.0
        }, _6l1: function (_uj1, _lT, _7l1, _8l1, _0l1) {
            this._Sl1(_El1._Ll1, _0l1);
            _El1._Ll1._6l1(_uj1, _lT, _7l1, _8l1, 0)
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['m_count'] = this._Gl1;
            _aP['m_vertices'] = [];
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) _aP['m_vertices'].push(this._Fl1[_t5]._Vi1());
            _aP['m_hasPrevVertex'] = this._Jl1;
            if (this._Jl1) _aP['m_prevVertex'] = this._Hl1._Vi1();
            _aP['m_hasNextVertex'] = this._Kl1;
            if (this._Kl1) _aP['m_nextVertex'] = this._Il1._Vi1();
            return _aP
        }, _Xi1: function (data) {
            this.parent.prototype._Xi1.call(this, data);
            this._Gl1 = data['m_count'];
            this._Fl1 = [];
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                this._Fl1[_t5] = new _Hi1();
                this._Fl1[_t5]._Xi1(data['m_vertices'][_t5])
            }
            this._Jl1 = data['m_hasPrevVertex'];
            if (this._Jl1) this._Hl1._Xi1(data['m_prevVertex']);
            this._Kl1 = data['m_hasNextVertex'];
            if (this._Kl1) this._Il1._Xi1(data['m_nextVertex'])
        }
    };
    _El1._mh1(_Vk1);

    function _Wl1() {
        this.parent.call(this);
        this._L_ = _Vk1._bl1;
        this._Wk1 = _3i1;
        this._Gl1 = 0;
        this._Xl1 = new _Hi1();
        this._Fl1 = new Array(_Zh1);
        this._Yl1 = new Array(_Zh1);
        Object.seal(this)
    }

    _Wl1.prototype = {
        _Qr: function () {
            var _gl1 = new _Wl1();
            _gl1._Gl1 = this._Gl1;
            _gl1._Xl1 = this._Xl1._Qr();
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                _gl1._Fl1[_t5] = this._Fl1[_t5]._Qr();
                _gl1._Yl1[_t5] = this._Yl1[_t5]._Qr()
            }
            return _gl1
        }, _Yk1: function () {
            return 1
        }, _rC: function (vertices, _Gu) {
            _Th1(3 <= _Gu && _Gu <= _Zh1);
            if (_Gu < 3) {
                this._Zl1(1.0, 1.0);
                return
            }
            var _tt = _6k1(_Gu, _Zh1);
            var __l1 = new Array(_Zh1);
            var _0m1 = 0;
            for (var _t5 = 0; _t5 < _tt; ++_t5) {
                var _uv = vertices[_t5];
                var _1m1 = !0;
                for (var _Rt = 0; _Rt < _0m1; ++_Rt) {
                    if (_Mj1(_uv, __l1[_Rt]) < 0.5 * _1i1) {
                        _1m1 = !1;
                        break
                    }
                }
                if (_1m1) {
                    __l1[_0m1++] = _uv._Qr()
                }
            }
            _tt = _0m1;
            if (_tt < 3) {
                _Th1(!1);
                this._Zl1(1.0, 1.0);
                return
            }
            var _2m1 = 0;
            var _Xv = __l1[0].x;
            for (_t5 = 1; _t5 < _tt; ++_t5) {
                var x = __l1[_t5].x;
                if (x > _Xv || (x == _Xv && __l1[_t5].y < __l1[_2m1].y)) {
                    _2m1 = _t5;
                    _Xv = x
                }
            }
            var hull = new Array(_Zh1);
            var _wt = 0;
            var _3m1 = _2m1;
            for (; ;) {
                hull[_wt] = _3m1;
                var _4m1 = 0;
                for (_Rt = 1; _Rt < _tt; ++_Rt) {
                    if (_4m1 == _3m1) {
                        _4m1 = _Rt;
                        continue
                    }
                    var _Kt = _Hi1._Pi1(__l1[_4m1], __l1[hull[_wt]]);
                    var _uv = _Hi1._Pi1(__l1[_Rt], __l1[hull[_wt]]);
                    var _u5 = _Gj1(_Kt, _uv);
                    if (_u5 < 0.0) {
                        _4m1 = _Rt
                    }
                    if (_u5 == 0.0 && _uv._Qi1() > _Kt._Qi1()) {
                        _4m1 = _Rt
                    }
                }
                ++_wt;
                _3m1 = _4m1;
                if (_4m1 == _2m1) {
                    break
                }
            }
            this._Gl1 = _wt;
            for (_t5 = 0; _t5 < _wt; ++_t5) {
                this._Fl1[_t5] = __l1[hull[_t5]]._Qr()
            }
            for (_t5 = 0; _t5 < _wt; ++_t5) {
                var _Ul1 = _t5;
                var _Vl1 = _t5 + 1 < _wt ? _t5 + 1 : 0;
                var _Tl1 = _Hi1._Pi1(this._Fl1[_Vl1], this._Fl1[_Ul1]);
                _Th1(_Tl1._Qi1() > _Wh1 * _Wh1);
                this._Yl1[_t5] = _Hj1(_Tl1, 1.0)._Qr();
                this._Yl1[_t5]._Ri1()
            }
            this._Xl1 = _Wl1._5m1(this._Fl1, _wt)
        }, _Zl1: function (_6m1, _7m1, _tk1, angle) {
            this._Gl1 = 4;
            this._Fl1[0] = new _Hi1(-_6m1, -_7m1);
            this._Fl1[1] = new _Hi1(_6m1, -_7m1);
            this._Fl1[2] = new _Hi1(_6m1, _7m1);
            this._Fl1[3] = new _Hi1(-_6m1, _7m1);
            this._Yl1[0] = new _Hi1(0.0, -1.0);
            this._Yl1[1] = new _Hi1(1.0, 0.0);
            this._Yl1[2] = new _Hi1(0.0, 1.0);
            this._Yl1[3] = new _Hi1(-1.0, 0.0);
            if (!_tk1) return;
            this._Xl1._Li1(_tk1);
            var _uj1 = new _tj1();
            _uj1._lT = _tk1;
            _uj1._7S._rC(angle);
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                this._Fl1[_t5]._Li1(_Wj1(_uj1, this._Fl1[_t5]));
                this._Yl1[_t5]._Li1(_Uj1(_uj1._7S, this._Yl1[_t5]))
            }
        }, _Zk1: function (_uj1, _lT) {
            var _8m1 = _Vj1(_uj1._7S, _Hi1._Pi1(_lT, _uj1._lT));
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _9m1 = _Fj1(this._Yl1[_t5], _Hi1._Pi1(_8m1, this._Fl1[_t5]));
                if (_9m1 > 0.0) {
                    return !1
                }
            }
            return !0
        }, __k1: function (_XR, _VR, _uj1, _0l1) {
            var _yk1 = _Vj1(_uj1._7S, _Hi1._Pi1(_VR._yk1, _uj1._lT));
            var _zk1 = _Vj1(_uj1._7S, _Hi1._Pi1(_VR._zk1, _uj1._lT));
            var _cE = _Hi1._Pi1(_zk1, _yk1);
            var _am1 = 0.0, _bm1 = _VR._il1;
            var index = -1;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _xl1 = _Fj1(this._Yl1[_t5],
                    _Hi1._Pi1(this._Fl1[_t5], _yk1));
                var _yl1 = _Fj1(this._Yl1[_t5], _cE);
                if (_yl1 == 0.0) {
                    if (_xl1 < 0.0) {
                        return !1
                    }
                } else {
                    if (_yl1 < 0.0 && _xl1 < _am1 * _yl1) {
                        _am1 = _xl1 / _yl1;
                        index = _t5
                    } else if (_yl1 > 0.0 && _xl1 < _bm1 * _yl1) {
                        _bm1 = _xl1 / _yl1
                    }
                }
                if (_bm1 < _am1) {
                    return !1
                }
            }
            _Th1(0.0 <= _am1 && _am1 <= _VR._il1);
            if (index >= 0) {
                _XR._jl1 = _am1;
                _XR._8l1 = _Uj1(_uj1._7S, this._Yl1[index]);
                return !0
            }
            return !1
        }, _1l1: function (_2l1, _uj1, _0l1) {
            var _zl1 = (_uj1._7S._u5 * this._Fl1[0].x - _uj1._7S._ZN * this._Fl1[0].y) + _uj1._lT.x;
            var _Al1 = (_uj1._7S._ZN * this._Fl1[0].x + _uj1._7S._u5 * this._Fl1[0].y) + _uj1._lT.y;
            var _Bl1 = _zl1;
            var _Cl1 = _Al1;
            for (var _t5 = 1; _t5 < this._Gl1; ++_t5) {
                var _cm1 = (_uj1._7S._u5 * this._Fl1[_t5].x - _uj1._7S._ZN * this._Fl1[_t5].y) + _uj1._lT.x;
                var _dm1 = (_uj1._7S._ZN * this._Fl1[_t5].x + _uj1._7S._u5 * this._Fl1[_t5].y) + _uj1._lT.y;
                _zl1 = _6k1(_zl1, _cm1);
                _Al1 = _6k1(_Al1, _dm1);
                _Bl1 = _8k1(_Bl1, _cm1);
                _Cl1 = _8k1(_Cl1, _dm1)
            }
            _2l1._kl1.x = _zl1 - this._Wk1;
            _2l1._kl1.y = _Al1 - this._Wk1;
            _2l1._ll1.x = _Bl1 + this._Wk1;
            _2l1._ll1.y = _Cl1 + this._Wk1
        }, _3l1: function (_4l1, _5l1) {
            _Th1(this._Gl1 >= 3);
            var _tk1 = new _Hi1(0.0, 0.0);
            var _em1 = 0.0;
            var _Uk1 = 0.0;
            var _ZN = new _Hi1(0.0, 0.0);
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                _ZN._3C(this._Fl1[_t5])
            }
            _ZN.Multiply(1.0 / this._Gl1);
            var _fm1 = 1.0 / 3.0;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _gm1 = _Hi1._Pi1(this._Fl1[_t5], _ZN);
                var _hm1 = _t5 + 1 < this._Gl1 ? _Hi1._Pi1(this._Fl1[_t5 + 1], _ZN) : _Hi1._Pi1(this._Fl1[0], _ZN);
                var _im1 = _Gj1(_gm1, _hm1);
                var _jm1 = 0.5 * _im1;
                _em1 += _jm1;
                _tk1._3C(_Hi1.Multiply(_jm1 * _fm1, _Hi1._3C(_gm1, _hm1)));
                var _km1 = _gm1.x, _lm1 = _gm1.y;
                var _mm1 = _hm1.x, _nm1 = _hm1.y;
                var _om1 = _km1 * _km1 + _mm1 * _km1 + _mm1 * _mm1;
                var _pm1 = _lm1 * _lm1 + _nm1 * _lm1 + _nm1 * _nm1;
                _Uk1 += (0.25 * _fm1 * _im1) * (_om1 + _pm1)
            }
            _4l1._Tk1 = _5l1 * _em1;
            _Th1(_em1 > _Wh1);
            _tk1.Multiply(1.0 / _em1);
            _4l1._tk1 = _Hi1._3C(_tk1, _ZN);
            _4l1._Uk1 = _5l1 * _Uk1;
            _4l1._Uk1 += _4l1._Tk1 * (_Fj1(_4l1._tk1, _4l1._tk1) - _Fj1(_tk1, _tk1))
        }, _dz: function () {
            return this._Gl1
        }, _ol1: function (index) {
            _Th1(0 <= index && index < this._Gl1);
            return this._Fl1[index];
        }, _qm1: function () {
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _Ul1 = _t5;
                var _Vl1 = _t5 < this._Gl1 - 1 ? _Ul1 + 1 : 0;
                var _lT = this._Fl1[_Ul1];
                var e = _Hi1._Pi1(this._Fl1[_Vl1], _lT);
                for (var _Rt = 0; _Rt < this._Gl1;
                     ++_Rt) {
                    if (_Rt == _Ul1 || _Rt == _Vl1) {
                        continue
                    }
                    var _uv = _Hi1._Pi1(this._Fl1[_Rt], _lT);
                    var _u5 = _Gj1(e, _uv);
                    if (_u5 < 0.0) {
                        return !1
                    }
                }
            }
            return !0
        }, _6l1: function (_uj1, _lT, _rm1, _8l1, _0l1) {
            var _8m1 = _Vj1(_uj1._7S, _Hi1._Pi1(_lT, _uj1._lT));
            var maxDistance = -Number.MAX_VALUE;
            var _sm1 = _8m1;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _9m1 = _Fj1(this._Yl1[_t5], _Hi1._Pi1(_8m1, this._Fl1[_t5]));
                if (_9m1 > maxDistance) {
                    maxDistance = _9m1;
                    _sm1 = this._Yl1[_t5]
                }
            }
            if (maxDistance > 0) {
                var _tm1 = _sm1;
                var _um1 = maxDistance * maxDistance;
                for (var _t5 = 0; _t5 < this._Gl1;
                     ++_t5) {
                    var _7l1 = _Hi1._Pi1(_8m1, this._Fl1[_t5]);
                    var _vm1 = _7l1._Qi1();
                    if (_um1 > _vm1) {
                        _tm1 = _7l1;
                        _um1 = _vm1
                    }
                }
                _rm1[0] = _Ei1(_um1);
                _8l1._Li1(_Uj1(_uj1._7S, _tm1));
                _8l1._Ri1()
            } else {
                _rm1[0] = maxDistance;
                _8l1._Li1(_Uj1(_uj1._7S, _sm1))
            }
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['m_count'] = this._Gl1;
            _aP['m_centroid'] = this._Xl1._Vi1();
            _aP['m_vertices'] = [];
            _aP['m_normals'] = [];
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                _aP['m_vertices'].push(this._Fl1[_t5]._Vi1());
                _aP['m_normals'].push(this._Yl1[_t5]._Vi1())
            }
            return _aP
        }, _Xi1: function (data) {
            this.parent.prototype._Xi1.call(this, data);
            this._Gl1 = data['m_count'];
            this._Xl1._Xi1(data['m_centroid']);
            this._Fl1 = [];
            this._Yl1 = [];
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                this._Fl1[_t5] = new _Hi1();
                this._Fl1[_t5]._Xi1(data['m_vertices'][_t5]);
                this._Yl1[_t5] = new _Hi1();
                this._Yl1[_t5]._Xi1(data['m_normals'][_t5])
            }
        }
    };
    _Wl1._5m1 = function (_wm1, _Gu) {
        _Th1(_Gu >= 3);
        var _u5 = new _Hi1();
        var _em1 = 0.0;
        var _xm1 = new _Hi1(0.0, 0.0);
        var _ym1 = 1.0 / 3.0;
        for (var _t5 = 0; _t5 < _Gu; ++_t5) {
            var _yk1 = _xm1;
            var _zk1 = _wm1[_t5];
            var _zm1 = _t5 + 1 < _Gu ? _wm1[_t5 + 1] : _wm1[0];
            var _gm1 = _Hi1._Pi1(_zk1, _yk1);
            var _hm1 = _Hi1._Pi1(_zm1, _yk1);
            var _im1 = _Gj1(_gm1, _hm1);
            var _jm1 = 0.5 * _im1;
            _em1 += _jm1;
            _u5._3C(_Hi1.Multiply(_jm1, _Hi1.Multiply(_ym1, _Hi1._3C(_Hi1._3C(_yk1, _zk1), _zm1))))
        }
        _Th1(_em1 > _Wh1);
        _u5.Multiply(1.0 / _em1);
        return _u5
    };
    _Wl1._mh1(_Vk1);

    function _Am1() {
        this._Bm1 = 0;
        this._Cm1 = 0
    }

    function _Dm1(_Em1, _Fm1) {
        if (_Em1._Bm1 == _Fm1._Bm1) {
            return _Em1._Cm1 - _Fm1._Cm1
        }
        return _Em1._Bm1 - _Fm1._Bm1
    }

    function _Gm1() {
        this._Hm1 = new _Im1();
        this._Jm1 = 0;
        this._Km1 = 0;
        this._Lm1 = 0;
        this._Mm1 = [];
        this._Nm1 = 0;
        this._Om1 = []
    }

    _Gm1.prototype = {
        _Pm1: function (_2l1, _Qm1) {
            var _Rm1 = this._Hm1._Pm1(_2l1, _Qm1);
            ++this._Km1;
            this._Sm1(_Rm1);
            return _Rm1
        }, _Tm1: function (_Rm1) {
            this._Um1(_Rm1);
            --this._Km1;
            this._Hm1._Tm1(_Rm1)
        }, _Vm1: function (_Rm1, _2l1, _Wm1) {
            var buffer = this._Hm1._Vm1(_Rm1, _2l1, _Wm1);
            if (buffer) {
                this._Sm1(_Rm1)
            }
        }, _Xm1: function (_Rm1) {
            this._Sm1(_Rm1)
        }, _Ym1: function (_Rm1) {
            return this._Hm1._Ym1(_Rm1)
        }, _Zm1: function (_Rm1) {
            return this._Hm1._Zm1(_Rm1)
        }, __m1: function (_Bm1, _Cm1) {
            var _0n1 = this._Hm1._Ym1(_Bm1);
            var _1n1 = this._Hm1._Ym1(_Cm1);
            return _2n1(_0n1, _1n1)
        }, _3n1: function () {
            return this._Km1
        }, _4n1: function (_5n1) {
            this._Lm1 = 0;
            this._Mm1.length = 0;
            for (var _t5 = 0; _t5 < this._Nm1; ++_t5) {
                this._Jm1 = this._Om1[_t5];
                if (this._Jm1 == _Gm1._6n1) {
                    continue
                }
                var _7n1 = this._Hm1._Ym1(this._Jm1);
                this._Hm1._8n1(this, _7n1)
            }
            this._Nm1 = 0;
            this._Mm1.sort(_Dm1);
            var _t5 = 0;
            while (_t5 < this._Lm1) {
                var _9n1 = this._Mm1[_t5];
                var _an1 = this._Hm1._Zm1(_9n1._Bm1);
                var _bn1 = this._Hm1._Zm1(_9n1._Cm1);
                _5n1._cn1(_an1, _bn1);
                ++_t5;
                while (_t5 < this._Lm1) {
                    var _dn1 = this._Mm1[_t5];
                    if (_dn1._Bm1 != _9n1._Bm1 || _dn1._Cm1 != _9n1._Cm1) {
                        break
                    }
                    ++_t5
                }
            }
        }, _8n1: function (_5n1, _2l1) {
            this._Hm1._8n1(_5n1, _2l1)
        }, __k1: function (_5n1, _VR) {
            this._Hm1.__k1(_5n1, _VR)
        }, _en1: function () {
            return this._Hm1._EW()
        }, _fn1: function () {
            return this._Hm1._gn1()
        }, _hn1: function () {
            return this._Hm1._in1()
        }, _jn1: function (_kn1) {
            this._Hm1._jn1(_kn1)
        }, _Sm1: function (_Rm1) {
            this._Om1[this._Nm1] = _Rm1;
            ++this._Nm1
        }, _Um1: function (_Rm1) {
            for (var _t5 = 0; _t5 < this._Nm1; ++_t5) {
                if (this._Om1[_t5] == _Rm1) {
                    this._Om1[_t5] = _Gm1._6n1
                }
            }
        }, _ln1: function (_Rm1) {
            if (_Rm1 == this._Jm1) {
                return !0
            }
            this._Mm1[this._Lm1] = new _Am1();
            this._Mm1[this._Lm1]._Bm1 = _6k1(_Rm1, this._Jm1);
            this._Mm1[this._Lm1]._Cm1 = _8k1(_Rm1, this._Jm1);
            ++this._Lm1;
            return !0
        }
    };
    _Gm1._6n1 = -1;

    function _mn1() {
        this._Fl1 = null;
        this._Gl1 = 0;
        this._Wk1 = 0
    }

    _mn1.prototype = {
        _Li1: function (_It) {
            this._Fl1 = _It._Fl1;
            this._Gl1 = _It._Gl1;
            this._Wk1 = _It._Wk1
        }, _rC: function (_gl1, index) {
            switch (_gl1._Xk1()) {
                case _Vk1._9l1: {
                    var _nn1 = _gl1;
                    this._Fl1 = [_nn1._fl1];
                    this._Gl1 = 1;
                    this._Wk1 = _nn1._Wk1
                }
                    break;
                case _Vk1._bl1: {
                    var _on1 = _gl1;
                    this._Fl1 = _on1._Fl1;
                    this._Gl1 = _on1._Gl1;
                    this._Wk1 = _on1._Wk1
                }
                    break;
                case _Vk1._cl1: {
                    var _pn1 = _gl1;
                    _Th1(0 <= index && index < _pn1._Gl1);
                    this._Fl1 = [_pn1._Fl1[index]];
                    if (index + 1 < _pn1._Gl1) {
                        this._Fl1[1] = _pn1._Fl1[index + 1]
                    } else {
                        this._Fl1[1] = _pn1._Fl1[0]
                    }
                    this._Gl1 = 2;
                    this._Wk1 = _pn1._Wk1
                }
                    break;
                case _Vk1._al1: {
                    var _Tl1 = _gl1;
                    this._Fl1 = [_Tl1._sl1, _Tl1._tl1];
                    this._Gl1 = 2;
                    this._Wk1 = _Tl1._Wk1
                }
                    break;
                default :
                    _Th1(!1)
            }
        }, _ml1: function (_9w, _aw) {
            var _qn1 = 0;
            var _rn1 = this._Fl1[0].x * _9w + this._Fl1[0].y * _aw;
            for (var _t5 = 1; _t5 < this._Gl1; ++_t5) {
                var value = this._Fl1[_t5].x * _9w + this._Fl1[_t5].y * _aw;
                if (value > _rn1) {
                    _qn1 = _t5;
                    _rn1 = value
                }
            }
            return _qn1
        }, _nl1: function (_9w, _aw) {
            return this._Fl1[this._ml1(_9w, _aw)]
        }, _dz: function () {
            return this._Gl1
        }, _ol1: function (index) {
            _Th1(0 <= index && index < this._Gl1);
            return this._Fl1[index]
        }
    };

    function _sn1() {
        this._tn1 = 0;
        this._Gu = 0;
        this._un1 = [0, 0, 0];
        this._vn1 = [0, 0, 0]
    };

    function _wn1() {
        this._xn1 = new _mn1();
        this._yn1 = new _mn1();
        this._zn1 = new _tj1();
        this._An1 = new _tj1();
        this._Bn1 = !1
    };

    function _Cn1() {
        this._Dn1 = new _Hi1();
        this._En1 = new _Hi1();
        this._7l1 = 0;
        this._Fn1 = 0
    };

    function _Gn1() {
        this._Hn1 = new _Hi1();
        this._In1 = new _Hi1();
        this._v5 = new _Hi1();
        this._hv = 0;
        this._un1 = 0;
        this._vn1 = 0
    }

    _Gn1.prototype = {
        _Li1: function (_It) {
            this._Hn1.x = _It._Hn1.x;
            this._Hn1.y = _It._Hn1.y;
            this._In1.x = _It._In1.x;
            this._In1.y = _It._In1.y;
            this._v5.x = _It._v5.x;
            this._v5.y = _It._v5.y;
            this._hv = _It._hv;
            this._un1 = _It._un1;
            this._vn1 = _It._vn1
        }
    };

    function _Jn1() {
        this._Kn1 = [new _Gn1(), new _Gn1(), new _Gn1()];
        this._Gl1 = 0
    }

    _Jn1.prototype = {
        _Ln1: function (_Fu, _xn1, _zn1, _yn1, _An1) {
            _Th1(_Fu._Gu <= 3);
            this._Gl1 = _Fu._Gu;
            var vertices = this._Kn1;
            for (var _t5 = 0; _t5 < this._Gl1;
                 ++_t5) {
                var _uv = vertices[_t5];
                _uv._un1 = _Fu._un1[_t5];
                _uv._vn1 = _Fu._vn1[_t5];
                var _Mn1 = _xn1._ol1(_uv._un1);
                var _Nn1 = _yn1._ol1(_uv._vn1);
                _uv._Hn1.x = (_zn1._7S._u5 * _Mn1.x - _zn1._7S._ZN * _Mn1.y) + _zn1._lT.x;
                _uv._Hn1.y = (_zn1._7S._ZN * _Mn1.x + _zn1._7S._u5 * _Mn1.y) + _zn1._lT.y;
                _uv._In1.x = (_An1._7S._u5 * _Nn1.x - _An1._7S._ZN * _Nn1.y) + _An1._lT.x;
                _uv._In1.y = (_An1._7S._ZN * _Nn1.x + _An1._7S._u5 * _Nn1.y) + _An1._lT.y;
                _uv._v5.x = _uv._In1.x - _uv._Hn1.x;
                _uv._v5.y = _uv._In1.y - _uv._Hn1.y;
                _uv._hv = 0.0
            }
            if (this._Gl1 > 1) {
                var _On1 = _Fu._tn1;
                var _Pn1 = this._Qn1();
                if (_Pn1 < 0.5 * _On1 || 2.0 * _On1 < _Pn1 || _Pn1 < _Wh1) {
                    this._Gl1 = 0
                }
            }
            if (this._Gl1 == 0) {
                var _uv = vertices[0];
                _uv._un1 = 0;
                _uv._vn1 = 0;
                var _Mn1 = _xn1._ol1(0);
                var _Nn1 = _yn1._ol1(0);
                _uv._Hn1.x = (_zn1._7S._u5 * _Mn1.x - _zn1._7S._ZN * _Mn1.y) + _zn1._lT.x;
                _uv._Hn1.y = (_zn1._7S._ZN * _Mn1.x + _zn1._7S._u5 * _Mn1.y) + _zn1._lT.y;
                _uv._In1.x = (_An1._7S._u5 * _Nn1.x - _An1._7S._ZN * _Nn1.y) + _An1._lT.x;
                _uv._In1.y = (_An1._7S._ZN * _Nn1.x + _An1._7S._u5 * _Nn1.y) + _An1._lT.y;
                _uv._v5.x = _uv._In1.x - _uv._Hn1.x;
                _uv._v5.y = _uv._In1.y - _uv._Hn1.y;
                _uv._hv = 1.0;
                this._Gl1 = 1
            }
        }, _Rn1: function (_Fu) {
            _Fu._tn1 = this._Qn1();
            _Fu._Gu = this._Gl1;
            var vertices = this._Kn1;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                _Fu._un1[_t5] = vertices[_t5]._un1;
                _Fu._vn1[_t5] = vertices[_t5]._vn1
            }
        }, _Sn1: function (_lT) {
            switch (this._Gl1) {
                case 1:
                    _lT.x = -this._Kn1[0]._v5.x;
                    _lT.y = -this._Kn1[0]._v5.y;
                    break;
                case 2: {
                    var _Tn1 = this._Kn1[1]._v5.x - this._Kn1[0]._v5.x;
                    var _Un1 = this._Kn1[1]._v5.y - this._Kn1[0]._v5.y;
                    var _Vn1 = _Tn1 * -this._Kn1[0]._v5.y - _Un1 * -this._Kn1[0]._v5.x;
                    if (_Vn1 > 0.0) {
                        _lT.x = -1.0 * _Un1;
                        _lT.y = 1.0 * _Tn1
                    } else {
                        _lT.x = 1.0 * _Un1;
                        _lT.y = -1.0 * _Tn1
                    }
                }
                    break;
                default :
                    _Th1(!1);
                    _lT.x = _lT.y = 0;
                    break
            }
        }, _Wn1: function (_lT) {
            switch (this._Gl1) {
                case 1:
                    _lT.x = this._Kn1[0]._v5.x;
                    _lT.y = this._Kn1[0]._v5.y;
                    break;
                case 2:
                    _lT.x = (this._Kn1[0]._hv * this._Kn1[0]._v5.x) + (this._Kn1[1]._hv * this._Kn1[1]._v5.x);
                    _lT.y = (this._Kn1[0]._hv * this._Kn1[0]._v5.y) + (this._Kn1[1]._hv * this._Kn1[1]._v5.y);
                    break;
                case 3:
                    _lT.x = _lT.y = 0;
                    break;
                default :
                    _Th1(!1);
                    _lT.x = _lT.y = 0;
                    break
            }
        }, _Xn1: function (_Yn1, _Zn1) {
            switch (this._Gl1) {
                case 1:
                    _Yn1.x = this._Kn1[0]._Hn1.x;
                    _Yn1.y = this._Kn1[0]._Hn1.y;
                    _Zn1.x = this._Kn1[0]._In1.x;
                    _Zn1.y = this._Kn1[0]._In1.y;
                    break;
                case 2:
                    _Yn1.x = (this._Kn1[0]._hv * this._Kn1[0]._Hn1.x) + (this._Kn1[1]._hv * this._Kn1[1]._Hn1.x);
                    _Yn1.y = (this._Kn1[0]._hv * this._Kn1[0]._Hn1.y) + (this._Kn1[1]._hv * this._Kn1[1]._Hn1.y);
                    _Zn1.x = (this._Kn1[0]._hv * this._Kn1[0]._In1.x) + (this._Kn1[1]._hv * this._Kn1[1]._In1.x);
                    _Zn1.y = (this._Kn1[0]._hv * this._Kn1[0]._In1.y) + (this._Kn1[1]._hv * this._Kn1[1]._In1.y);
                    break;
                case 3:
                    _Yn1.x = (this._Kn1[0]._hv * this._Kn1[0]._Hn1.x) + (this._Kn1[1]._hv * this._Kn1[1]._Hn1.x) + (this._Kn1[2]._hv * this._Kn1[2]._Hn1.x);
                    _Yn1.y = (this._Kn1[0]._hv * this._Kn1[0]._Hn1.y) + (this._Kn1[1]._hv * this._Kn1[1]._Hn1.y) + (this._Kn1[2]._hv * this._Kn1[2]._Hn1.y);
                    _Zn1.x = _Yn1.x;
                    _Zn1.y = _Yn1.y;
                    break;
                default :
                    _Th1(!1);
                    break
            }
        }, _Qn1: function () {
            switch (this._Gl1) {
                case 1:
                    return 0.0;
                case 2:
                    return _Lj1(this._Kn1[0]._v5, this._Kn1[1]._v5);
                case 3:
                    return (this._Kn1[1]._v5.x - this._Kn1[0]._v5.x) * (this._Kn1[2]._v5.y - this._Kn1[0]._v5.y) - (this._Kn1[1]._v5.y - this._Kn1[0]._v5.y) * (this._Kn1[2]._v5.x - this._Kn1[0]._v5.x);
                default :
                    _Th1(!1);
                    return 0.0
            }
        }, __n1: function () {
            var _0o1 = this._Kn1[0]._v5;
            var _1o1 = this._Kn1[1]._v5;
            var _Tn1 = _1o1.x - _0o1.x;
            var _Un1 = _1o1.y - _0o1.y;
            var _2o1 = -(_0o1.x * _Tn1 + _0o1.y * _Un1);
            if (_2o1 <= 0.0) {
                this._Kn1[0]._hv = 1.0;
                this._Gl1 = 1;
                return
            }
            var _3o1 = _1o1.x * _Tn1 + _1o1.y * _Un1;
            if (_3o1 <= 0.0) {
                this._Kn1[1]._hv = 1.0;
                this._Gl1 = 1;
                this._Kn1[0]._Li1(this._Kn1[1]);
                return
            }
            var _4o1 = 1.0 / (_3o1 + _2o1);
            this._Kn1[0]._hv = _3o1 * _4o1;
            this._Kn1[1]._hv = _2o1 * _4o1;
            this._Gl1 = 2
        }, _5o1: function () {
            var _0o1 = this._Kn1[0]._v5;
            var _1o1 = this._Kn1[1]._v5;
            var _6o1 = this._Kn1[2]._v5;
            var _Tn1 = _1o1.x - _0o1.x;
            var _Un1 = _1o1.y - _0o1.y;
            var _7o1 = _0o1.x * _Tn1 + _0o1.y * _Un1;
            var _8o1 = _1o1.x * _Tn1 + _1o1.y * _Un1;
            var _3o1 = _8o1;
            var _2o1 = -_7o1;
            var _9o1 = _6o1.x - _0o1.x;
            var _ao1 = _6o1.y - _0o1.y;
            var _bo1 = _0o1.x * _9o1 + _0o1.y * _ao1;
            var _co1 = _6o1.x * _9o1 + _6o1.y * _ao1;
            var _do1 = _co1;
            var _eo1 = -_bo1;
            var _fo1 = _6o1.x - _1o1.x;
            var _go1 = _6o1.y - _1o1.y;
            var _ho1 = _1o1.x * _fo1 + _1o1.y * _go1;
            var _io1 = _6o1.x * _fo1 + _6o1.y * _go1;
            var _jo1 = _io1;
            var _ko1 = -_ho1;
            var _lo1 = _Tn1 * _ao1 - _Un1 * _9o1;
            var _mo1 = _lo1 * (_1o1.x * _6o1.y - _1o1.y * _6o1.x);
            var _no1 = _lo1 * (_6o1.x * _0o1.y - _6o1.y * _0o1.x);
            var _oo1 = _lo1 * (_0o1.x * _1o1.y - _0o1.y * _1o1.x);
            if (_2o1 <= 0.0 && _eo1 <= 0.0) {
                this._Kn1[0]._hv = 1.0;
                this._Gl1 = 1;
                return
            }
            if (_3o1 > 0.0 && _2o1 > 0.0 && _oo1 <= 0.0) {
                var _4o1 = 1.0 / (_3o1 + _2o1);
                this._Kn1[0]._hv = _3o1 * _4o1;
                this._Kn1[1]._hv = _2o1 * _4o1;
                this._Gl1 = 2;
                return
            }
            if (_do1 > 0.0 && _eo1 > 0.0 && _no1 <= 0.0) {
                var _po1 = 1.0 / (_do1 + _eo1);
                this._Kn1[0]._hv = _do1 * _po1;
                this._Kn1[2]._hv = _eo1 * _po1;
                this._Gl1 = 2;
                this._Kn1[1]._Li1(this._Kn1[2]);
                return
            }
            if (_3o1 <= 0.0 && _ko1 <= 0.0) {
                this._Kn1[1]._hv = 1.0;
                this._Gl1 = 1;
                this._Kn1[0]._Li1(this._Kn1[1]);
                return
            }
            if (_do1 <= 0.0 && _jo1 <= 0.0) {
                this._Kn1[2]._hv = 1.0;
                this._Gl1 = 1;
                this._Kn1[0]._Li1(this._Kn1[2]);
                return
            }
            if (_jo1 > 0.0 && _ko1 > 0.0 && _mo1 <= 0.0) {
                var _qo1 = 1.0 / (_jo1 + _ko1);
                this._Kn1[1]._hv = _jo1 * _qo1;
                this._Kn1[2]._hv = _ko1 * _qo1;
                this._Gl1 = 2;
                this._Kn1[0]._Li1(this._Kn1[2]);
                return
            }
            var _ro1 = 1.0 / (_mo1 + _no1 + _oo1);
            this._Kn1[0]._hv = _mo1 * _ro1;
            this._Kn1[1]._hv = _no1 * _ro1;
            this._Kn1[2]._hv = _oo1 * _ro1;
            this._Gl1 = 3
        }
    };
    var _so1 = new _Jn1();
    var _to1 = new _Hi1();
    var _uo1 = new _Hi1();

    function _vo1(_XR, _Fu, _VR) {
        ++_vo1._wo1;
        var _xn1 = _VR._xn1;
        var _yn1 = _VR._yn1;
        var _zn1 = _VR._zn1;
        var _An1 = _VR._An1;
        _so1._Ln1(_Fu,
            _xn1, _zn1, _yn1, _An1);
        var vertices = _so1._Kn1;
        var _xo1 = 20;
        var _yo1 = [0, 0, 0], _zo1 = [0, 0, 0];
        var _Ao1 = 0;
        var _Bo1 = _Vh1;
        var _Co1 = _Bo1;
        var _Do1 = 0;
        while (_Do1 < _xo1) {
            _Ao1 = _so1._Gl1;
            for (var _t5 = 0; _t5 < _Ao1; ++_t5) {
                _yo1[_t5] = vertices[_t5]._un1;
                _zo1[_t5] = vertices[_t5]._vn1
            }
            switch (_so1._Gl1) {
                case 1:
                    break;
                case 2:
                    _so1.__n1();
                    break;
                case 3:
                    _so1._5o1();
                    break;
                default :
                    _Th1(!1)
            }
            if (_so1._Gl1 == 3) {
                break
            }
            _so1._Wn1(_uo1);
            _Co1 = _uo1._Qi1();
            _Bo1 = _Co1;
            _so1._Sn1(_uo1);
            if (_uo1._Qi1() < _Wh1 * _Wh1) {
                break
            }
            var _Eo1 = vertices[_so1._Gl1];
            _Eo1._un1 = _xn1._ml1(_zn1._7S._u5 * -_uo1.x + _zn1._7S._ZN * -_uo1.y,
                -_zn1._7S._ZN * -_uo1.x + _zn1._7S._u5 * -_uo1.y);
            var _Fo1 = _xn1._ol1(_Eo1._un1);
            _Eo1._Hn1.x = (_zn1._7S._u5 * _Fo1.x - _zn1._7S._ZN * _Fo1.y) + _zn1._lT.x;
            _Eo1._Hn1.y = (_zn1._7S._ZN * _Fo1.x + _zn1._7S._u5 * _Fo1.y) + _zn1._lT.y;
            _Eo1._vn1 = _yn1._ml1(_An1._7S._u5 * _uo1.x + _An1._7S._ZN * _uo1.y, -_An1._7S._ZN * _uo1.x + _An1._7S._u5 * _uo1.y);
            var _Go1 = _yn1._ol1(_Eo1._vn1);
            _Eo1._In1.x = (_An1._7S._u5 * _Go1.x - _An1._7S._ZN * _Go1.y) + _An1._lT.x;
            _Eo1._In1.y = (_An1._7S._ZN * _Go1.x + _An1._7S._u5 * _Go1.y) + _An1._lT.y;
            _Eo1._v5.x = _Eo1._In1.x - _Eo1._Hn1.x;
            _Eo1._v5.y = _Eo1._In1.y - _Eo1._Hn1.y;
            ++_Do1;
            ++_vo1._Ho1;
            var _Io1 = !1;
            for (var _t5 = 0; _t5 < _Ao1; ++_t5) {
                if (_Eo1._un1 == _yo1[_t5] && _Eo1._vn1 == _zo1[_t5]) {
                    _Io1 = !0;
                    break
                }
            }
            if (_Io1) {
                break
            }
            ++_so1._Gl1
        }
        _vo1._Jo1 = _8k1(_vo1._Jo1, _Do1);
        _so1._Xn1(_XR._Dn1, _XR._En1);
        _XR._7l1 = _Lj1(_XR._Dn1, _XR._En1);
        _XR._Fn1 = _Do1;
        _so1._Rn1(_Fu);
        if (_VR._Bn1) {
            var _Ko1 = _xn1._Wk1;
            var _Lo1 = _yn1._Wk1;
            if (_XR._7l1 > _Ko1 + _Lo1 && _XR._7l1 > _Wh1) {
                _XR._7l1 -= _Ko1 + _Lo1;
                _to1.x = _XR._En1.x - _XR._Dn1.x;
                _to1.y = _XR._En1.y - _XR._Dn1.y;
                _to1._Ri1();
                _XR._Dn1.x += (_Ko1 * _to1.x);
                _XR._Dn1.y += (_Ko1 * _to1.y);
                _XR._En1.x -= (_Lo1 * _to1.x);
                _XR._En1.y -= (_Lo1 * _to1.y);
            } else {
                var _RD = (0.5 * (_XR._Dn1.x + _XR._En1.x));
                var _SD = (0.5 * (_XR._Dn1.y + _XR._En1.y));
                _XR._Dn1.x = _RD;
                _XR._Dn1.y = _SD;
                _XR._En1.x = _RD;
                _XR._En1.y = _SD;
                _XR._7l1 = 0.0
            }
        }
    }

    _vo1._wo1 = 0;
    _vo1._Ho1 = 0;
    _vo1._Jo1 = 0;
    var _Mo1 = 255;

    function _No1() {
    }

    _No1.prototype = {
        _un1: 0, _vn1: 0, _Oo1: 0, _Po1: 0, _xS: function () {
            this._un1 = this._vn1 = this._Oo1 = this._Po1 = 0
        }, _RB: function () {
            return this._un1 | (this._vn1 << 8) | (this._Oo1 << 16) | (this._Po1 << 24)
        }, _Li1: function (_tC) {
            this._un1 = _tC._un1;
            this._vn1 = _tC._vn1;
            this._Oo1 = _tC._Oo1;
            this._Po1 = _tC._Po1
        }
    };
    _No1._Qo1 = 0;
    _No1._Ro1 = 1;

    function _So1() {
        this._To1 = new _Hi1();
        this._Uo1 = 0;
        this._Vo1 = 0;
        this.id = new _No1()
    };_So1.prototype = {
        _Qr: function () {
            var _Wo1 = new _So1();
            _Wo1._To1.x = this._To1.x;
            _Wo1._To1.y = this._To1.y;
            _Wo1._Uo1 = this._Uo1;
            _Wo1._Vo1 = this._Vo1;
            _Wo1.id._Li1(this.id);
            return _Wo1
        }
    };

    function _Xo1() {
        this._Yo1 = new Array(_Yh1);
        this._Zo1 = new _Hi1();
        this._To1 = new _Hi1();
        this.type = 0;
        this.__o1 = 0
    };_Xo1.prototype = {
        _Qr: function () {
            var _0p1 = new _Xo1();
            _0p1.__o1 = this.__o1;
            _0p1.type = this.type;
            _0p1._To1.x = this._To1.x;
            _0p1._To1.y = this._To1.y;
            _0p1._Zo1.x = this._Zo1.x;
            _0p1._Zo1.y = this._Zo1.y;
            for (var _t5 = 0; _t5 < this.__o1; ++_t5) _0p1._Yo1[_t5] = this._Yo1[_t5]._Qr();
            return _0p1
        }, _Li1: function (_0p1) {
            this.__o1 = _0p1.__o1;
            this.type = _0p1.type;
            this._To1.x = _0p1._To1.x;
            this._To1.y = _0p1._To1.y;
            this._Zo1.x = _0p1._Zo1.x;
            this._Zo1.y = _0p1._Zo1.y;
            for (var _t5 = 0; _t5 < this.__o1; ++_t5) this._Yo1[_t5] = _0p1._Yo1[_t5]._Qr()
        }
    };
    _Xo1._1p1 = 0;
    _Xo1._2p1 = 1;
    _Xo1._3p1 = 2;
    _Xo1._4p1 = 0;
    _Xo1._5p1 = 1;
    _Xo1._6p1 = 2;
    _Xo1._7p1 = 3;

    function _8p1() {
        this._8l1 = new _Hi1();
        this._Yo1 = new Array(_Yh1);
        this._9p1 = new Array(_Yh1);
    }

    _8p1.prototype = {
        _ap1: function (_0p1, _bp1, _cp1, _dp1, _ep1) {
            if (_0p1.__o1 == 0) {
                return
            }
            switch (_0p1.type) {
                case _Xo1._1p1: {
                    this._8l1.x = 1;
                    this._8l1.y = 0;
                    var _fp1 = (_bp1._7S._u5 * _0p1._To1.x - _bp1._7S._ZN * _0p1._To1.y) + _bp1._lT.x;
                    var _gp1 = (_bp1._7S._ZN * _0p1._To1.x + _bp1._7S._u5 * _0p1._To1.y) + _bp1._lT.y;
                    var _hp1 = (_dp1._7S._u5 * _0p1._Yo1[0]._To1.x - _dp1._7S._ZN * _0p1._Yo1[0]._To1.y) + _dp1._lT.x;
                    var _ip1 = (_dp1._7S._ZN * _0p1._Yo1[0]._To1.x + _dp1._7S._u5 * _0p1._Yo1[0]._To1.y) + _dp1._lT.y;
                    var _jp1 = _fp1 - _hp1;
                    var _kp1 = _gp1 - _ip1;
                    if ((_jp1 * _jp1 + _kp1 * _kp1) > _Wh1 * _Wh1) {
                        this._8l1.x = _hp1 - _fp1;
                        this._8l1.y = _ip1 - _gp1;
                        this._8l1._Ri1()
                    }
                    var _lp1 = _fp1 + (_cp1 * this._8l1.x);
                    var _mp1 = _gp1 + (_cp1 * this._8l1.y);
                    var _np1 = _hp1 - (_ep1 * this._8l1.x);
                    var _op1 = _ip1 - (_ep1 * this._8l1.y);
                    this._Yo1[0] = new _Hi1(0.5 * (_lp1 + _np1), 0.5 * (_mp1 + _op1));
                    this._9p1[0] = (_np1 - _lp1) * this._8l1.x + (_op1 - _mp1) * this._8l1.y
                }
                    break;
                case _Xo1._2p1: {
                    this._8l1.x = _bp1._7S._u5 * _0p1._Zo1.x - _bp1._7S._ZN * _0p1._Zo1.y;
                    this._8l1.y = _bp1._7S._ZN * _0p1._Zo1.x + _bp1._7S._u5 * _0p1._Zo1.y;
                    var _pp1 = (_bp1._7S._u5 * _0p1._To1.x - _bp1._7S._ZN * _0p1._To1.y) + _bp1._lT.x;
                    var _qp1 = (_bp1._7S._ZN * _0p1._To1.x + _bp1._7S._u5 * _0p1._To1.y) + _bp1._lT.y;
                    for (var _t5 = 0; _t5 < _0p1.__o1; ++_t5) {
                        var _rp1 = (_dp1._7S._u5 * _0p1._Yo1[_t5]._To1.x - _dp1._7S._ZN * _0p1._Yo1[_t5]._To1.y) + _dp1._lT.x;
                        var _sp1 = (_dp1._7S._ZN * _0p1._Yo1[_t5]._To1.x + _dp1._7S._u5 * _0p1._Yo1[_t5]._To1.y) + _dp1._lT.y;
                        var _cE = (_rp1 - _pp1) * this._8l1.x + (_sp1 - _qp1) * this._8l1.y;
                        var _lp1 = _rp1 + ((_cp1 - _cE) * this._8l1.x);
                        var _mp1 = _sp1 + ((_cp1 - _cE) * this._8l1.y);
                        var _np1 = (_rp1 - (_ep1 * this._8l1.x));
                        var _op1 = (_sp1 - (_ep1 * this._8l1.y));
                        this._Yo1[_t5] = new _Hi1(0.5 * (_lp1 + _np1), 0.5 * (_mp1 + _op1));
                        this._9p1[_t5] = (_np1 - _lp1) * this._8l1.x + (_op1 - _mp1) * this._8l1.y
                    }
                }
                    break;
                case _Xo1._3p1: {
                    this._8l1.x = _dp1._7S._u5 * _0p1._Zo1.x - _dp1._7S._ZN * _0p1._Zo1.y;
                    this._8l1.y = _dp1._7S._ZN * _0p1._Zo1.x + _dp1._7S._u5 * _0p1._Zo1.y;
                    var _pp1 = (_dp1._7S._u5 * _0p1._To1.x - _dp1._7S._ZN * _0p1._To1.y) + _dp1._lT.x;
                    var _qp1 = (_dp1._7S._ZN * _0p1._To1.x + _dp1._7S._u5 * _0p1._To1.y) + _dp1._lT.y;
                    for (var _t5 = 0; _t5 < _0p1.__o1; ++_t5) {
                        var _rp1 = (_bp1._7S._u5 * _0p1._Yo1[_t5]._To1.x - _bp1._7S._ZN * _0p1._Yo1[_t5]._To1.y) + _bp1._lT.x;
                        var _sp1 = (_bp1._7S._ZN * _0p1._Yo1[_t5]._To1.x + _bp1._7S._u5 * _0p1._Yo1[_t5]._To1.y) + _bp1._lT.y;
                        var _cE = (_rp1 - _pp1) * this._8l1.x + (_sp1 - _qp1) * this._8l1.y;
                        var _np1 = _rp1 + ((_ep1 - _cE) * this._8l1.x);
                        var _op1 = _sp1 + ((_ep1 - _cE) * this._8l1.y);
                        var _lp1 = (_rp1 - (_cp1 * this._8l1.x));
                        var _mp1 = (_sp1 - (_cp1 * this._8l1.y));
                        this._Yo1[_t5] = new _Hi1(0.5 * (_lp1 + _np1), 0.5 * (_mp1 + _op1));
                        this._9p1[_t5] = (_lp1 - _np1) * this._8l1.x + (_mp1 - _op1) * this._8l1.y
                    }
                    this._8l1.x = -this._8l1.x;
                    this._8l1.y = -this._8l1.y
                }
                    break
            }
        }
    };

    function _tp1(_up1, _vp1, _wp1, _xp1) {
        for (var _t5 = 0; _t5 < _Yh1; ++_t5) {
            _up1[_t5] = _Xo1._4p1;
            _vp1[_t5] = _Xo1._4p1
        }
        for (var _t5 = 0; _t5 < _wp1.__o1; ++_t5) {
            var id = _wp1._Yo1[_t5].id;
            _up1[_t5] = _Xo1._7p1;
            for (var _Rt = 0; _Rt < _xp1.__o1; ++_Rt) {
                if (_xp1._Yo1[_Rt].id._RB() == id._RB()) {
                    _up1[_t5] = _Xo1._6p1;
                    break
                }
            }
        }
        for (var _t5 = 0; _t5 < _xp1.__o1; ++_t5) {
            var id = _xp1._Yo1[_t5].id;
            _vp1[_t5] = _Xo1._5p1;
            for (var _Rt = 0; _Rt < _wp1.__o1; ++_Rt) {
                if (_wp1._Yo1[_Rt].id._RB() == id._RB()) {
                    _vp1[_t5] = _Xo1._6p1;
                    break
                }
            }
        }
    }

    function _yp1() {
        this._uv = new _Hi1();
        this.id = new _No1()
    };

    function _zp1() {
        this._yk1 = new _Hi1(),
            this._zk1 = new _Hi1();
        this._il1 = 0
    };

    function _Ap1() {
        this._8l1 = new _Hi1();
        this._jl1 = 0
    };

    function _Bp1() {
        this._kl1 = new _Hi1();
        this._ll1 = new _Hi1()
    }

    _Bp1.prototype = {
        _Li1: function (_Cp1) {
            this._kl1.x = _Cp1._kl1.x;
            this._kl1.y = _Cp1._kl1.y;
            this._ll1.x = _Cp1._ll1.x;
            this._ll1.y = _Cp1._ll1.y
        }, _Qr: function () {
            var _Dp1 = new _Bp1();
            _Dp1._kl1.x = this._kl1.x;
            _Dp1._kl1.y = this._kl1.y;
            _Dp1._ll1.x = this._ll1.x;
            _Dp1._ll1.y = this._ll1.y;
            return _Dp1
        }, _Ti1: function () {
            return (this._ll1.x - this._kl1.x) >= 0.0 && (this._ll1.y - this._kl1.y) >= 0.0 && this._kl1._Ti1() && this._ll1._Ti1()
        }
        , _Ep1: function () {
            return new _Hi1(0.5 * (this._kl1.x + this._ll1.x), 0.5 * (this._kl1.y + this._ll1.y))
        }, _Fp1: function () {
            return new _Hi1(0.5 * (this._ll1.x - this._kl1.x), 0.5 * (this._ll1.y - this._kl1.y))
        }, _Gp1: function () {
            return 2.0 * ((this._ll1.x - this._kl1.x) + (this._ll1.y - this._kl1.y))
        }, _Hp1: function (_Ip1, _Jp1) {
            if (_Jp1) {
                this._kl1.x = _6k1(_Ip1._kl1.x, _Jp1._kl1.x);
                this._kl1.y = _6k1(_Ip1._kl1.y, _Jp1._kl1.y);
                this._ll1.x = _8k1(_Ip1._ll1.x, _Jp1._ll1.x);
                this._ll1.y = _8k1(_Ip1._ll1.y, _Jp1._ll1.y)
            } else {
                this._kl1.x = _6k1(this._kl1.x,
                    _Ip1._kl1.x);
                this._kl1.y = _6k1(this._kl1.y, _Ip1._kl1.y);
                this._ll1.x = _8k1(this._ll1.x, _Ip1._ll1.x);
                this._ll1.y = _8k1(this._ll1.y, _Ip1._ll1.y)
            }
        }, _Kp1: function (_2l1) {
            return this._kl1.x <= _2l1._kl1.x && this._kl1.y <= _2l1._kl1.y && _2l1._ll1.x <= this._ll1.x && _2l1._ll1.y <= this._ll1.y
        }, __k1: function (_XR, _VR) {
            var _Lp1 = -_Vh1;
            var _Mp1 = _Vh1;
            var _lT = _VR._yk1;
            var _cE = _Hi1._Pi1(_VR._zk1, _VR._yk1);
            var _Np1 = _4k1(_cE);
            var _8l1 = new _Hi1();
            for (var _t5 = 0; _t5 < 2; ++_t5) {
                if (_Np1._Ni1(_t5) < _Wh1) {
                    if (_lT._Ni1(_t5) < this._kl1._Ni1(_t5) || this._ll1._Ni1(_t5) < _lT._Ni1(_t5)) {
                        return !1
                    }
                } else {
                    var _Op1 = 1.0 / _cE._Ni1(_t5);
                    var _Pp1 = (this._kl1._Ni1(_t5) - _lT._Ni1(_t5)) * _Op1;
                    var _Qp1 = (this._ll1._Ni1(_t5) - _lT._Ni1(_t5)) * _Op1;
                    var _ZN = -1.0;
                    if (_Pp1 > _Qp1) {
                        var _CT = _Qp1;
                        _Qp1 = _Pp1;
                        _Pp1 = _CT;
                        _ZN = 1.0
                    }
                    if (_Pp1 > _Lp1) {
                        _8l1.x = _8l1.y = 0;
                        _8l1._Oi1(_t5, _ZN);
                        _Lp1 = _Pp1
                    }
                    _Mp1 = _6k1(_Mp1, _Qp1);
                    if (_Lp1 > _Mp1) {
                        return !1
                    }
                }
            }
            if (_Lp1 < 0.0 || _VR._il1 < _Lp1) {
                return !1
            }
            _XR._jl1 = _Lp1;
            _XR._8l1.x = _8l1.x;
            _XR._8l1.y = _8l1.y;
            return !0
        }
    };

    function _Rp1(_0p1, _Sp1, _bp1, _Tp1, _dp1) {
        _0p1.__o1 = 0;
        var _Yn1 = _Wj1(_bp1, _Sp1._fl1);
        var _Zn1 = _Wj1(_dp1,
            _Tp1._fl1);
        var _9w = _Zn1.x - _Yn1.x;
        var _aw = _Zn1.y - _Yn1.y;
        var _Up1 = _9w * _9w + _aw * _aw;
        var _Ko1 = _Sp1._Wk1, _Lo1 = _Tp1._Wk1;
        var _uk1 = _Ko1 + _Lo1;
        if (_Up1 > _uk1 * _uk1) {
            return
        }
        _0p1.type = _Xo1._1p1;
        _0p1._To1.x = _Sp1._fl1.x;
        _0p1._To1.y = _Sp1._fl1.y;
        _0p1._Zo1.x = _0p1._Zo1.y = 0;
        _0p1.__o1 = 1;
        _0p1._Yo1[0] = new _So1();
        _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
        _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
        _0p1._Yo1[0].id._xS()
    }

    function _Vp1(_0p1, _Wp1, _bp1, _Tp1, _dp1) {
        _0p1.__o1 = 0;
        var _u5 = _Wj1(_dp1, _Tp1._fl1);
        var _Xp1 = _Yj1(_bp1, _u5);
        var _Yp1 = 0;
        var _Zp1 = -_Vh1;
        var _uk1 = _Wp1._Wk1 + _Tp1._Wk1;
        var vertexCount = _Wp1._Gl1;
        var vertices = _Wp1._Fl1;
        var __p1 = _Wp1._Yl1;
        for (var _t5 = 0; _t5 < vertexCount; ++_t5) {
            var _ZN = __p1[_t5].x * (_Xp1.x - vertices[_t5].x) + __p1[_t5].y * (_Xp1.y - vertices[_t5].y);
            if (_ZN > _uk1) {
                return
            }
            if (_ZN > _Zp1) {
                _Zp1 = _ZN;
                _Yp1 = _t5
            }
        }
        var _0q1 = _Yp1;
        var _1q1 = _0q1 + 1 < vertexCount ? _0q1 + 1 : 0;
        var _tw = vertices[_0q1];
        var _uw = vertices[_1q1];
        if (_Zp1 < _Wh1) {
            _0p1.__o1 = 1;
            _0p1.type = _Xo1._2p1;
            _0p1._Zo1.x = __p1[_Yp1].x;
            _0p1._Zo1.y = __p1[_Yp1].y;
            _0p1._To1.x = 0.5 * (_tw.x + _uw.x);
            _0p1._To1.y = 0.5 * (_tw.y + _uw.y);
            _0p1._Yo1[0] = new _So1();
            _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
            _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
            _0p1._Yo1[0].id._xS();
            return
        }
        var _2q1 = (_Xp1.x - _tw.x) * (_uw.x - _tw.x) + (_Xp1.y - _tw.y) * (_uw.y - _tw.y);
        var _3q1 = (_Xp1.x - _uw.x) * (_tw.x - _uw.x) + (_Xp1.y - _uw.y) * (_tw.y - _uw.y);
        if (_2q1 <= 0.0) {
            if (_Mj1(_Xp1, _tw) > _uk1 * _uk1) {
                return
            }
            _0p1.__o1 = 1;
            _0p1.type = _Xo1._2p1;
            _0p1._Zo1.x = _Xp1.x - _tw.x;
            _0p1._Zo1.y = _Xp1.y - _tw.y;
            _0p1._Zo1._Ri1();
            _0p1._To1.x = _tw.x;
            _0p1._To1.y = _tw.y;
            _0p1._Yo1[0] = new _So1();
            _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
            _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
            _0p1._Yo1[0].id._xS()
        }
        else if (_3q1 <= 0.0) {
            if (_Mj1(_Xp1, _uw) > _uk1 * _uk1) {
                return
            }
            _0p1.__o1 = 1;
            _0p1.type = _Xo1._2p1;
            _0p1._Zo1.x = _Xp1.x - _uw.x;
            _0p1._Zo1.y = _Xp1.y - _uw.y;
            _0p1._Zo1._Ri1();
            _0p1._To1.x = _uw.x;
            _0p1._To1.y = _uw.y;
            _0p1._Yo1[0] = new _So1();
            _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
            _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
            _0p1._Yo1[0].id._xS()
        } else {
            var _4q1 = 0.5 * (_tw.x + _uw.x);
            var _5q1 = 0.5 * (_tw.y + _uw.y);
            var _Zp1 = (_Xp1.x - _4q1) * __p1[_0q1].x + (_Xp1.y - _5q1) * __p1[_0q1].y;
            if (_Zp1 > _uk1) {
                return
            }
            _0p1.__o1 = 1;
            _0p1.type = _Xo1._2p1;
            _0p1._Zo1.x = __p1[_0q1].x;
            _0p1._Zo1.y = __p1[_0q1].y;
            _0p1._To1.x = _4q1;
            _0p1._To1.y = _5q1;
            _0p1._Yo1[0] = new _So1();
            _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
            _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
            _0p1._Yo1[0].id._xS()
        }
    }

    function _6q1(_7q1, _8q1, _9q1, _aq1, _bq1) {
        var _cq1 = _8q1._Gl1;
        var _dq1 = _aq1._Gl1;
        var _eq1 = _8q1._Yl1;
        var _fq1 = _8q1._Fl1;
        var _gq1 = _aq1._Fl1;
        var _uj1 = _0k1(_bq1, _9q1);
        var _qn1 = 0;
        var _hq1 = -_Vh1;
        for (var _t5 = 0; _t5 < _cq1; ++_t5) {
            var _Tw = _uj1._7S._u5 * _eq1[_t5].x - _uj1._7S._ZN * _eq1[_t5].y;
            var _Uw = _uj1._7S._ZN * _eq1[_t5].x + _uj1._7S._u5 * _eq1[_t5].y;
            var _WD = (_uj1._7S._u5 * _fq1[_t5].x - _uj1._7S._ZN * _fq1[_t5].y) + _uj1._lT.x;
            var _ZD = (_uj1._7S._ZN * _fq1[_t5].x + _uj1._7S._u5 * _fq1[_t5].y) + _uj1._lT.y;
            var _iq1 = _Vh1;
            for (var _Rt = 0; _Rt < _dq1; ++_Rt) {
                var _jq1 = _Tw * (_gq1[_Rt].x - _WD) + _Uw * (_gq1[_Rt].y - _ZD);
                if (_jq1 < _iq1) {
                    _iq1 = _jq1
                }
            }
            if (_iq1 > _hq1) {
                _hq1 = _iq1;
                _qn1 = _t5
            }
        }
        _7q1[0] = _qn1;
        return _hq1
    }

    function _kq1(_u5, _8q1, _9q1, _lq1, _aq1, _bq1) {
        var _mq1 = _8q1._Yl1;
        var _dq1 = _aq1._Gl1;
        var _nq1 = _aq1._Fl1;
        var _oq1 = _aq1._Yl1;
        _Th1(0 <= _lq1 && _lq1 < _8q1._Gl1);
        var _pq1 = _9q1._7S._u5 * _mq1[_lq1].x - _9q1._7S._ZN * _mq1[_lq1].y;
        var _qq1 = _9q1._7S._ZN * _mq1[_lq1].x + _9q1._7S._u5 * _mq1[_lq1].y;
        var _rq1 = _bq1._7S._u5 * _pq1 + _bq1._7S._ZN * _qq1;
        var _sq1 = -_bq1._7S._ZN * _pq1 + _bq1._7S._u5 * _qq1;
        var index = 0;
        var _tq1 = _Vh1;
        for (var _t5 = 0; _t5 < _dq1; ++_t5) {
            var _9m1 = _rq1 * _oq1[_t5].x + _sq1 * _oq1[_t5].y;
            if (_9m1 < _tq1) {
                _tq1 = _9m1;
                index = _t5
            }
        }
        var _Ul1 = index;
        var _Vl1 = _Ul1 + 1 < _dq1 ? _Ul1 + 1 : 0;
        _u5[0]._uv.x = (_bq1._7S._u5 * _nq1[_Ul1].x - _bq1._7S._ZN * _nq1[_Ul1].y) + _bq1._lT.x;
        _u5[0]._uv.y = (_bq1._7S._ZN * _nq1[_Ul1].x + _bq1._7S._u5 * _nq1[_Ul1].y) + _bq1._lT.y;
        _u5[0].id._un1 = _lq1;
        _u5[0].id._vn1 = _Ul1;
        _u5[0].id._Oo1 = _No1._Ro1;
        _u5[0].id._Po1 = _No1._Qo1;
        _u5[1]._uv.x = (_bq1._7S._u5 * _nq1[_Vl1].x - _bq1._7S._ZN * _nq1[_Vl1].y) + _bq1._lT.x;
        _u5[1]._uv.y = (_bq1._7S._ZN * _nq1[_Vl1].x + _bq1._7S._u5 * _nq1[_Vl1].y) + _bq1._lT.y;
        _u5[1].id._un1 = _lq1;
        _u5[1].id._vn1 = _Vl1;
        _u5[1].id._Oo1 = _No1._Ro1;
        _u5[1].id._Po1 = _No1._Qo1
    }

    function _uq1(_0p1, _vq1, _bp1, _wq1, _dp1) {
        _0p1.__o1 = 0;
        var _xq1 = _vq1._Wk1 + _wq1._Wk1;
        var _yq1 = [0];
        var _zq1 = _6q1(_yq1, _vq1, _bp1, _wq1, _dp1);
        if (_zq1 > _xq1) return;
        var _Aq1 = [0];
        var _Bq1 = _6q1(_Aq1, _wq1, _dp1, _vq1, _bp1);
        if (_Bq1 > _xq1) return;
        var _8q1;
        var _aq1;
        var _9q1, _bq1;
        var _lq1 = 0;
        var _Cq1 = 0;
        var _Dq1 = 0.1 * _1i1;
        if (_Bq1 > _zq1 + _Dq1) {
            _8q1 = _wq1;
            _aq1 = _vq1;
            _9q1 = _dp1;
            _bq1 = _bp1;
            _lq1 = _Aq1[0];
            _0p1.type = _Xo1._3p1;
            _Cq1 = 1
        } else {
            _8q1 = _vq1;
            _aq1 = _wq1;
            _9q1 = _bp1;
            _bq1 = _dp1;
            _lq1 = _yq1[0];
            _0p1.type = _Xo1._2p1;
            _Cq1 = 0
        }
        _kq1(_uq1._Eq1, _8q1, _9q1, _lq1, _aq1, _bq1);
        var _cq1 = _8q1._Gl1;
        var _Fq1 = _8q1._Fl1;
        var _Gq1 = _lq1;
        var _Hq1 = _lq1 + 1 < _cq1 ? _lq1 + 1 : 0;
        var _Iq1 = _Fq1[_Gq1];
        var _Jq1 = _Fq1[_Hq1];
        _uq1._Kq1.x = _Jq1.x - _Iq1.x;
        _uq1._Kq1.y = _Jq1.y - _Iq1.y;
        _uq1._Kq1._Ri1();
        var _Lq1 = 1.0 * _uq1._Kq1.y;
        var _Mq1 = -1.0 * _uq1._Kq1.x;
        var _pp1 = 0.5 * (_Iq1.x + _Jq1.x);
        var _qp1 = 0.5 * (_Iq1.y + _Jq1.y);
        var _Nq1 = _9q1._7S._u5 * _uq1._Kq1.x - _9q1._7S._ZN * _uq1._Kq1.y;
        var _Oq1 = _9q1._7S._ZN * _uq1._Kq1.x + _9q1._7S._u5 * _uq1._Kq1.y;
        var _Pq1 = 1.0 * _Oq1;
        var _Qq1 = -1.0 * _Nq1;
        _Iq1 = _Wj1(_9q1, _Iq1);
        _Jq1 = _Wj1(_9q1, _Jq1);
        var _Rq1 = _Pq1 * _Iq1.x + _Qq1 * _Iq1.y;
        var _Sq1 = -(_Nq1 * _Iq1.x + _Oq1 * _Iq1.y) + _xq1;
        var _Tq1 = (_Nq1 * _Jq1.x + _Oq1 * _Jq1.y) + _xq1;
        var _Uq1 = new Array(2);
        var _Vq1 = new Array(2);
        var _Wq1;
        _Wq1 = _Xq1(_Uq1, _uq1._Eq1, -_Nq1, -_Oq1, _Sq1, _Gq1);
        if (_Wq1 < 2) return;
        _Wq1 = _Xq1(_Vq1, _Uq1, _Nq1, _Oq1, _Tq1, _Hq1);
        if (_Wq1 < 2) {
            return
        }
        _0p1._Zo1.x = _Lq1;
        _0p1._Zo1.y = _Mq1;
        _0p1._To1.x = _pp1;
        _0p1._To1.y = _qp1;
        var __o1 = 0;
        for (var _t5 = 0; _t5 < _Yh1; ++_t5) {
            var _Zp1 = (_Pq1 * _Vq1[_t5]._uv.x + _Qq1 * _Vq1[_t5]._uv.y) - _Rq1;
            if (_Zp1 <= _xq1) {
                var _Yq1 = _0p1._Yo1[__o1] = new _So1();
                _Yq1._To1._Li1(_Yj1(_bq1, _Vq1[_t5]._uv));
                _Yq1.id._Li1(_Vq1[_t5].id);
                if (_Cq1) {
                    var _Zq1 = new _No1();
                    _Zq1._Li1(_Yq1.id);
                    _Yq1.id._un1 = _Zq1._vn1;
                    _Yq1.id._vn1 = _Zq1._un1;
                    _Yq1.id._Oo1 = _Zq1._Po1;
                    _Yq1.id._Po1 = _Zq1._Oo1
                }
                ++__o1
            }
        }
        _0p1.__o1 = __o1
    }

    _uq1._Kq1 = new _Hi1();
    _uq1._Eq1 = [new _yp1(), new _yp1()];

    function __q1(_0p1,
                  _yq1, _bp1, _Tp1, _dp1) {
        _0p1.__o1 = 0;
        var _0r1 = _Yj1(_bp1, _Wj1(_dp1, _Tp1._fl1));
        var _Uh1 = _yq1._sl1, _5j1 = _yq1._tl1;
        var _PQ = _5j1.x - _Uh1.x;
        var _4V = _5j1.y - _Uh1.y;
        var _sv = _PQ * (_5j1.x - _0r1.x) + _4V * (_5j1.y - _0r1.y);
        var _uv = _PQ * (_0r1.x - _Uh1.x) + _4V * (_0r1.y - _Uh1.y);
        var _uk1 = _yq1._Wk1 + _Tp1._Wk1;
        var _Zq1 = new _No1();
        _Zq1._vn1 = 0;
        _Zq1._Po1 = _No1._Qo1;
        if (_uv <= 0.0) {
            var _1r1 = _Uh1;
            var _9w = _0r1.x - _1r1.x;
            var _aw = _0r1.y - _1r1.y;
            var _xU = _9w * _9w + _aw * _aw;
            if (_xU > _uk1 * _uk1) {
                return
            }
            if (_yq1._vl1) {
                var _2r1 = _yq1._rl1;
                var _3r1 = _Uh1;
                var _4r1 = _3r1.x - _2r1.x;
                var _5r1 = _3r1.y - _2r1.y;
                var _2q1 = _4r1 * (_3r1.x - _0r1.x) + _5r1 * (_3r1.y - _0r1.y);
                if (_2q1 > 0.0) {
                    return;
                }
            }
            _Zq1._un1 = 0;
            _Zq1._Oo1 = _No1._Qo1;
            _0p1.__o1 = 1;
            _0p1.type = _Xo1._1p1;
            _0p1._Zo1.x = _0p1._Zo1.y = 0;
            _0p1._To1.x = _1r1.x;
            _0p1._To1.y = _1r1.y;
            _0p1._Yo1[0] = new _So1();
            _0p1._Yo1[0].id._Li1(_Zq1);
            _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
            _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
            return
        }
        if (_sv <= 0.0) {
            var _1r1 = _5j1;
            var _9w = _0r1.x - _1r1.x;
            var _aw = _0r1.y - _1r1.y;
            var _xU = _9w * _9w + _aw * _aw;
            if (_xU > _uk1 * _uk1) {
                return
            }
            if (_yq1._wl1) {
                var _6r1 = _yq1._ul1;
                var _7r1 = _5j1;
                var _8r1 = _6r1.x - _7r1.x;
                var _9r1 = _6r1.y - _7r1.y;
                var _uw = _8r1 * (_0r1.x - _7r1.x) + _9r1 * (_0r1.y - _7r1.y);
                if (_uw > 0.0) {
                    return
                }
            }
            _Zq1._un1 = 1;
            _Zq1._Oo1 = _No1._Qo1;
            _0p1.__o1 = 1;
            _0p1.type = _Xo1._1p1;
            _0p1._Zo1.x = _0p1._Zo1.y = 0;
            _0p1._To1.x = _1r1.x;
            _0p1._To1.y = _1r1.y;
            _0p1._Yo1[0] = new _So1();
            _0p1._Yo1[0].id._Li1(_Zq1);
            _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
            _0p1._Yo1[0]._To1.y = _Tp1._fl1.y;
            return
        }
        var _ar1 = _PQ * _PQ + _4V * _4V;
        _Th1(_ar1 > 0.0);
        var _br1 = (1.0 / _ar1) * ((_sv * _Uh1.x) + (_uv * _5j1.x));
        var _cr1 = (1.0 / _ar1) * ((_sv * _Uh1.y) + (_uv * _5j1.y));
        var _9w = _0r1.x - _br1;
        var _aw = _0r1.y - _cr1;
        var _xU = _9w * _9w + _aw * _aw;
        if (_xU > _uk1 * _uk1) {
            return
        }
        var _Tw = -_4V;
        var _Uw = _PQ;
        if (_Tw * (_0r1.x - _Uh1.x) + _Uw * (_0r1.y - _Uh1.y) < 0.0) {
            _Tw = -_Tw;
            _Uw = -_Uw
        }
        _Zq1._un1 = 0;
        _Zq1._Oo1 = _No1._Ro1;
        _0p1.__o1 = 1;
        _0p1.type = _Xo1._2p1;
        _0p1._Zo1.x = _Tw;
        _0p1._Zo1.y = _Uw;
        _0p1._Zo1._Ri1();
        _0p1._To1.x = _Uh1.x;
        _0p1._To1.y = _Uh1.y;
        _0p1._Yo1[0] = new _So1();
        _0p1._Yo1[0].id._Li1(_Zq1);
        _0p1._Yo1[0]._To1.x = _Tp1._fl1.x;
        _0p1._Yo1[0]._To1.y = _Tp1._fl1.y
    }

    function _dr1() {
        this.type = 0;
        this.index = 0;
        this._Zp1 = 0
    }

    _dr1._er1 = 0;
    _dr1._fr1 = 1;
    _dr1._gr1 = 2;

    function _hr1() {
        this.vertices = new Array(_Zh1);
        this.__p1 = new Array(_Zh1);
        this._Gu = 0
    };

    function _ir1() {
        this._Ul1 = 0, this._Vl1 = 0;
        this._tw = new _Hi1(), this._uw = new _Hi1();
        this._8l1 = new _Hi1();
        this._jr1 = new _Hi1();
        this._Sq1 = 0;
        this._kr1 = new _Hi1();
        this._Tq1 = 0
    };

    function _lr1() {
        this._mr1 = new _hr1();
        this._nr1 = new _tj1();
        this._or1 = new _Hi1();
        this._pr1 = new _Hi1(), this._qr1 = new _Hi1(), this._rr1 = new _Hi1(), this._sr1 = new _Hi1();
        this._tr1 = new _Hi1(), this._ur1 = new _Hi1(), this._vr1 = new _Hi1();
        this._wr1 = new _Hi1();
        this._xr1 = 0, this._yr1 = 0;
        this._zr1 = new _Hi1(), this._Ar1 = new _Hi1();
        this._Wk1 = 0;
        this._Br1 = !1;
    }

    _lr1._Cr1 = new _Hi1();
    _lr1._Dr1 = new _Hi1();
    _lr1._Er1 = new _Hi1();
    _lr1.prototype = {
        _Fr1: function (_0p1, _yq1, _bp1, _Gr1, _dp1) {
            this._nr1._Li1(_0k1(_bp1, _dp1));
            this._or1.x = (this._nr1._7S._u5 * _Gr1._Xl1.x - this._nr1._7S._ZN * _Gr1._Xl1.y) + this._nr1._lT.x;
            this._or1.y = (this._nr1._7S._ZN * _Gr1._Xl1.x + this._nr1._7S._u5 * _Gr1._Xl1.y) + this._nr1._lT.y;
            this._pr1.x = _yq1._rl1.x;
            this._pr1.y = _yq1._rl1.y;
            this._qr1.x = _yq1._sl1.x;
            this._qr1.y = _yq1._sl1.y;
            this._rr1.x = _yq1._tl1.x;
            this._rr1.y = _yq1._tl1.y;
            this._sr1.x = _yq1._ul1.x;
            this._sr1.y = _yq1._ul1.y;
            var _Hr1 = _yq1._vl1;
            var _Ir1 = _yq1._wl1;
            _lr1._Cr1.x = this._rr1.x - this._qr1.x;
            _lr1._Cr1.y = this._rr1.y - this._qr1.y;
            _lr1._Cr1._Ri1();
            this._ur1.x = _lr1._Cr1.y;
            this._ur1.y = -_lr1._Cr1.x;
            var _Jr1 = this._ur1.x * (this._or1.x - this._qr1.x) + this._ur1.y * (this._or1.y - this._qr1.y);
            var _Kr1 = 0.0, _Lr1 = 0.0;
            var _Mr1 = !1, _Nr1 = !1;
            if (_Hr1) {
                _lr1._Dr1.x = this._qr1.x - this._pr1.x;
                _lr1._Dr1.y = this._qr1.y - this._pr1.y;
                _lr1._Dr1._Ri1();
                this._tr1.x = _lr1._Dr1.y;
                this._tr1.y = -_lr1._Dr1.x;
                _Mr1 = (_lr1._Dr1.x * _lr1._Cr1.y - _lr1._Dr1.y * _lr1._Cr1.x) >= 0;
                _Kr1 = this._tr1.x * (this._or1.x - this._pr1.x) + this._tr1.y * (this._or1.y - this._pr1.y)
            }
            if (_Ir1) {
                _lr1._Er1.x = this._sr1.x - this._rr1.x;
                _lr1._Er1.y = this._sr1.y - this._rr1.y;
                _lr1._Er1._Ri1();
                this._vr1.x = _lr1._Er1.y;
                this._vr1.y = -_lr1._Er1.x;
                _Nr1 = (_lr1._Cr1.x * _lr1._Er1.y - _lr1._Cr1.y * _lr1._Er1.x) > 0.0;
                _Lr1 = this._vr1.x * (this._or1.x - this._rr1.x) + this._vr1.y * (this._or1.y - this._rr1.y)
            }
            if (_Hr1 && _Ir1) {
                if (_Mr1 && _Nr1) {
                    this._Br1 = _Kr1 >= 0.0 || _Jr1 >= 0.0 || _Lr1 >= 0.0;
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = this._tr1.x;
                        this._zr1.y = this._tr1.y;
                        this._Ar1.x = this._vr1.x;
                        this._Ar1.y = this._vr1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = -this._ur1.x;
                        this._zr1.y = -this._ur1.y;
                        this._Ar1.x = -this._ur1.x;
                        this._Ar1.y = -this._ur1.y
                    }
                } else if (_Mr1) {
                    this._Br1 = _Kr1 >= 0.0 || (_Jr1 >= 0.0 && _Lr1 >= 0.0);
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = this._tr1.x;
                        this._zr1.y = this._tr1.y;
                        this._Ar1.x = this._ur1.x;
                        this._Ar1.y = this._ur1.y
                    }
                    else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = -this._vr1.x;
                        this._zr1.y = -this._vr1.y;
                        this._Ar1.x = -this._ur1.x;
                        this._Ar1.y = -this._ur1.y
                    }
                } else if (_Nr1) {
                    this._Br1 = _Lr1 >= 0.0 || (_Kr1 >= 0.0 && _Jr1 >= 0.0);
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = this._ur1.x;
                        this._zr1.y = this._ur1.y;
                        this._Ar1.x = this._vr1.x;
                        this._Ar1.y = this._vr1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = -this._ur1.x;
                        this._zr1.y = -this._ur1.y;
                        this._Ar1.x = -this._tr1.x;
                        this._Ar1.y = -this._tr1.y
                    }
                } else {
                    this._Br1 = _Kr1 >= 0.0 && _Jr1 >= 0.0 && _Lr1 >= 0.0;
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = this._ur1.x;
                        this._zr1.y = this._ur1.y;
                        this._Ar1.x = this._ur1.x;
                        this._Ar1.y = this._ur1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = -this._vr1.x;
                        this._zr1.y = -this._vr1.y;
                        this._Ar1.x = -this._tr1.x;
                        this._Ar1.y = -this._tr1.y
                    }
                }
            } else if (_Hr1) {
                if (_Mr1) {
                    this._Br1 = _Kr1 >= 0.0 || _Jr1 >= 0.0;
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = this._tr1.x;
                        this._zr1.y = this._tr1.y;
                        this._Ar1.x = -this._ur1.x;
                        this._Ar1.y = -this._ur1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = this._ur1.x;
                        this._zr1.y = this._ur1.y;
                        this._Ar1.x = -this._ur1.x;
                        this._Ar1.y = -this._ur1.y
                    }
                } else {
                    this._Br1 = _Kr1 >= 0.0 && _Jr1 >= 0.0;
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = this._ur1.x;
                        this._zr1.y = this._ur1.y;
                        this._Ar1.x = -this._ur1.x;
                        this._Ar1.y = -this._ur1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = this._ur1.x;
                        this._zr1.y = this._ur1.y;
                        this._Ar1.x = -this._tr1.x;
                        this._Ar1.y = -this._tr1.y
                    }
                }
            } else if (_Ir1) {
                if (_Nr1) {
                    this._Br1 = _Jr1 >= 0.0 || _Lr1 >= 0.0;
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = -this._ur1.x;
                        this._zr1.y = -this._ur1.y;
                        this._Ar1.x = this._vr1.x;
                        this._Ar1.y = this._vr1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = -this._ur1.x;
                        this._zr1.y = -this._ur1.y;
                        this._Ar1.x = this._ur1.x;
                        this._Ar1.y = this._ur1.y
                    }
                } else {
                    this._Br1 = _Jr1 >= 0.0 && _Lr1 >= 0.0;
                    if (this._Br1) {
                        this._wr1.x = this._ur1.x;
                        this._wr1.y = this._ur1.y;
                        this._zr1.x = -this._ur1.x;
                        this._zr1.y = -this._ur1.y;
                        this._Ar1.x = this._ur1.x;
                        this._Ar1.y = this._ur1.y
                    } else {
                        this._wr1.x = -this._ur1.x;
                        this._wr1.y = -this._ur1.y;
                        this._zr1.x = -this._vr1.x;
                        this._zr1.y = -this._vr1.y;
                        this._Ar1.x = this._ur1.x;
                        this._Ar1.y = this._ur1.y
                    }
                }
            } else {
                this._Br1 = _Jr1 >= 0.0;
                if (this._Br1) {
                    this._wr1.x = this._ur1.x;
                    this._wr1.y = this._ur1.y;
                    this._zr1.x = -this._ur1.x;
                    this._zr1.y = -this._ur1.y;
                    this._Ar1.x = -this._ur1.x;
                    this._Ar1.y = -this._ur1.y
                }
                else {
                    this._wr1.x = -this._ur1.x;
                    this._wr1.y = -this._ur1.y;
                    this._zr1.x = this._ur1.x;
                    this._zr1.y = this._ur1.y;
                    this._Ar1.x = this._ur1.x;
                    this._Ar1.y = this._ur1.y
                }
            }
            this._mr1._Gu = _Gr1._Gl1;
            for (var _t5 = 0; _t5 < _Gr1._Gl1; ++_t5) {
                this._mr1.vertices[_t5] = _Wj1(this._nr1, _Gr1._Fl1[_t5]);
                this._mr1.__p1[_t5] = _Uj1(this._nr1._7S, _Gr1._Yl1[_t5])
            }
            this._Wk1 = 2.0 * _3i1;
            _0p1.__o1 = 0;
            var _Or1 = this._Pr1();
            if (_Or1.type == _dr1._er1) {
                return
            }
            if (_Or1._Zp1 > this._Wk1) {
                return
            }
            var _Qr1 = this._Rr1();
            if (_Qr1.type != _dr1._er1 && _Qr1._Zp1 > this._Wk1) {
                return
            }
            var _Sr1 = 0.98;
            var _Tr1 = 0.001;
            var _Ur1 = new _dr1();
            if (_Qr1.type == _dr1._er1) {
                _Ur1 = _Or1
            } else if (_Qr1._Zp1 > _Sr1 * _Or1._Zp1 + _Tr1) {
                _Ur1 = _Qr1
            } else {
                _Ur1 = _Or1
            }
            var _4m1 = new Array(2);
            var _Vr1 = new _ir1();
            if (_Ur1.type == _dr1._fr1) {
                _0p1.type = _Xo1._2p1;
                var _qn1 = 0;
                var _rn1 = this._wr1.x * this._mr1.__p1[0].x + this._wr1.y * this._mr1.__p1[0].y;
                for (var _t5 = 1; _t5 < this._mr1._Gu; ++_t5) {
                    var value = this._wr1.x * this._mr1.__p1[_t5].x + this._wr1.y * this._mr1.__p1[_t5].y;
                    if (value < _rn1) {
                        _rn1 = value;
                        _qn1 = _t5
                    }
                }
                var _Ul1 = _qn1;
                var _Vl1 = _Ul1 + 1 < this._mr1._Gu ? _Ul1 + 1 : 0;
                _4m1[0] = new _yp1();
                _4m1[0]._uv.x = this._mr1.vertices[_Ul1].x;
                _4m1[0]._uv.y = this._mr1.vertices[_Ul1].y;
                _4m1[0].id._un1 = 0;
                _4m1[0].id._vn1 = _Ul1;
                _4m1[0].id._Oo1 = _No1._Ro1;
                _4m1[0].id._Po1 = _No1._Qo1;
                _4m1[1] = new _yp1();
                _4m1[1]._uv.x = this._mr1.vertices[_Vl1].x;
                _4m1[1]._uv.y = this._mr1.vertices[_Vl1].y;
                _4m1[1].id._un1 = 0;
                _4m1[1].id._vn1 = _Vl1;
                _4m1[1].id._Oo1 = _No1._Ro1;
                _4m1[1].id._Po1 = _No1._Qo1;
                if (this._Br1) {
                    _Vr1._Ul1 = 0;
                    _Vr1._Vl1 = 1;
                    _Vr1._tw.x = this._qr1.x;
                    _Vr1._tw.y = this._qr1.y;
                    _Vr1._uw.x = this._rr1.x;
                    _Vr1._uw.y = this._rr1.y;
                    _Vr1._8l1.x = this._ur1.x;
                    _Vr1._8l1.y = this._ur1.y
                } else {
                    _Vr1._Ul1 = 1;
                    _Vr1._Vl1 = 0;
                    _Vr1._tw.x = this._rr1.x;
                    _Vr1._tw.y = this._rr1.y;
                    _Vr1._uw.x = this._qr1.x;
                    _Vr1._uw.y = this._qr1.y;
                    _Vr1._8l1.x = -this._ur1.x;
                    _Vr1._8l1.y = -this._ur1.y
                }
            } else {
                _0p1.type = _Xo1._3p1;
                _4m1[0] = new _yp1();
                _4m1[0]._uv = this._qr1;
                _4m1[0].id._un1 = 0;
                _4m1[0].id._vn1 = _Ur1.index;
                _4m1[0].id._Oo1 = _No1._Qo1;
                _4m1[0].id._Po1 = _No1._Ro1;
                _4m1[1] = new _yp1();
                _4m1[1]._uv = this._rr1;
                _4m1[1].id._un1 = 0;
                _4m1[1].id._vn1 = _Ur1.index;
                _4m1[1].id._Oo1 = _No1._Qo1;
                _4m1[1].id._Po1 = _No1._Ro1;
                _Vr1._Ul1 = _Ur1.index;
                _Vr1._Vl1 = _Vr1._Ul1 + 1 < this._mr1._Gu ? _Vr1._Ul1 + 1 : 0;
                _Vr1._tw.x = this._mr1.vertices[_Vr1._Ul1].x;
                _Vr1._tw.y = this._mr1.vertices[_Vr1._Ul1].y;
                _Vr1._uw.x = this._mr1.vertices[_Vr1._Vl1].x;
                _Vr1._uw.y = this._mr1.vertices[_Vr1._Vl1].y;
                _Vr1._8l1.x = this._mr1.__p1[_Vr1._Ul1].x;
                _Vr1._8l1.y = this._mr1.__p1[_Vr1._Ul1].y
            }
            _Vr1._jr1.x = _Vr1._8l1.y;
            _Vr1._jr1.y = -_Vr1._8l1.x;
            _Vr1._kr1.x = -_Vr1._jr1.x;
            _Vr1._kr1.y = -_Vr1._jr1.y;
            _Vr1._Sq1 = _Vr1._jr1.x * _Vr1._tw.x + _Vr1._jr1.y * _Vr1._tw.y;
            _Vr1._Tq1 = _Vr1._kr1.x * _Vr1._uw.x + _Vr1._kr1.y * _Vr1._uw.y;
            var _Uq1 = new Array(2);
            var _Vq1 = new Array(2);
            var _Wq1;
            _Wq1 = _Xq1(_Uq1, _4m1, _Vr1._jr1.x, _Vr1._jr1.y, _Vr1._Sq1, _Vr1._Ul1);
            if (_Wq1 < _Yh1) {
                return
            }
            _Wq1 = _Xq1(_Vq1, _Uq1, _Vr1._kr1.x, _Vr1._kr1.y, _Vr1._Tq1, _Vr1._Vl1);
            if (_Wq1 < _Yh1) {
                return
            }
            if (_Ur1.type == _dr1._fr1) {
                _0p1._Zo1.x = _Vr1._8l1.x;
                _0p1._Zo1.y = _Vr1._8l1.y;
                _0p1._To1.x = _Vr1._tw.x;
                _0p1._To1.y = _Vr1._tw.y
            } else {
                _0p1._Zo1.x = _Gr1._Yl1[_Vr1._Ul1].x;
                _0p1._Zo1.y = _Gr1._Yl1[_Vr1._Ul1].y;
                _0p1._To1.x = _Gr1._Fl1[_Vr1._Ul1].x;
                _0p1._To1.y = _Gr1._Fl1[_Vr1._Ul1].y
            }
            var __o1 = 0;
            for (var _t5 = 0;
                 _t5 < _Yh1; ++_t5) {
                var _Zp1 = _Vr1._8l1.x * (_Vq1[_t5]._uv.x - _Vr1._tw.x) + _Vr1._8l1.y * (_Vq1[_t5]._uv.y - _Vr1._tw.y);
                if (_Zp1 <= this._Wk1) {
                    var _Yq1 = _0p1._Yo1[__o1] = new _So1();
                    if (_Ur1.type == _dr1._fr1) {
                        _Yq1._To1._Li1(_Yj1(this._nr1, _Vq1[_t5]._uv));
                        _Yq1.id._Li1(_Vq1[_t5].id)
                    } else {
                        _Yq1._To1.x = _Vq1[_t5]._uv.x;
                        _Yq1._To1.y = _Vq1[_t5]._uv.y;
                        _Yq1.id._Oo1 = _Vq1[_t5].id._Po1;
                        _Yq1.id._Po1 = _Vq1[_t5].id._Oo1;
                        _Yq1.id._un1 = _Vq1[_t5].id._vn1;
                        _Yq1.id._vn1 = _Vq1[_t5].id._un1
                    }
                    ++__o1
                }
            }
            _0p1.__o1 = __o1
        }, _Pr1: function () {
            var _wk1 = new _dr1();
            _wk1.type = _dr1._fr1;
            _wk1.index = this._Br1 ? 0 : 1;
            _wk1._Zp1 = Number.MAX_VALUE;
            for (var _t5 = 0; _t5 < this._mr1._Gu; ++_t5) {
                var _ZN = this._wr1.x * (this._mr1.vertices[_t5].x - this._qr1.x) + this._wr1.y * (this._mr1.vertices[_t5].y - this._qr1.y);
                if (_ZN < _wk1._Zp1) {
                    _wk1._Zp1 = _ZN
                }
            }
            return _wk1
        }, _Rr1: function () {
            var _wk1 = new _dr1();
            _wk1.type = _dr1._er1;
            _wk1.index = -1;
            _wk1._Zp1 = -Number.MAX_VALUE;
            var _Wr1 = -this._wr1.y;
            var _Xr1 = this._wr1.x;
            for (var _t5 = 0; _t5 < this._mr1._Gu; ++_t5) {
                var _Tw = -this._mr1.__p1[_t5].x;
                var _Uw = -this._mr1.__p1[_t5].y;
                var _NL = _Tw * (this._mr1.vertices[_t5].x - this._qr1.x) + _Uw * (this._mr1.vertices[_t5].y - this._qr1.y);
                var _OL = _Tw * (this._mr1.vertices[_t5].x - this._rr1.x) + _Uw * (this._mr1.vertices[_t5].y - this._rr1.y);
                var _ZN = _6k1(_NL, _OL);
                if (_ZN > this._Wk1) {
                    _wk1.type = _dr1._gr1;
                    _wk1.index = _t5;
                    _wk1._Zp1 = _ZN;
                    return _wk1
                }
                if (_Tw * _Wr1 + _Uw * _Xr1 >= 0.0) {
                    if ((_Tw - this._Ar1.x) * this._wr1.x + (_Uw - this._Ar1.y) * this._wr1.y < -_2i1) {
                        continue
                    }
                } else {
                    if ((_Tw - this._zr1.x) * this._wr1.x + (_Uw - this._zr1.y) * this._wr1.y < -_2i1) {
                        continue
                    }
                }
                if (_ZN > _wk1._Zp1) {
                    _wk1.type = _dr1._gr1;
                    _wk1.index = _t5;
                    _wk1._Zp1 = _ZN
                }
            }
            return _wk1
        }
    };
    _lr1._Yr1 = 0;
    _lr1._Zr1 = 1;
    _lr1.__r1 = 2;

    function _0s1(_0p1, _yq1, _bp1, _Gr1, _dp1) {
        _0s1._1s1._Fr1(_0p1, _yq1, _bp1, _Gr1, _dp1)
    }

    _0s1._1s1 = new _lr1();

    function _Xq1(_2s1, _3s1, _Pq1, _Qq1, offset, _4s1) {
        var _5s1 = 0;
        var _6s1 = (_Pq1 * _3s1[0]._uv.x + _Qq1 * _3s1[0]._uv.y) - offset;
        var _7s1 = (_Pq1 * _3s1[1]._uv.x + _Qq1 * _3s1[1]._uv.y) - offset;
        if (_6s1 <= 0.0) _2s1[_5s1++] = _3s1[0];
        if (_7s1 <= 0.0) _2s1[_5s1++] = _3s1[1];
        if (_6s1 * _7s1 < 0.0) {
            var _8s1 = _6s1 / (_6s1 - _7s1);
            _2s1[_5s1] = new _yp1();
            _2s1[_5s1]._uv.x = _3s1[0]._uv.x + (_8s1 * (_3s1[1]._uv.x - _3s1[0]._uv.x));
            _2s1[_5s1]._uv.y = _3s1[0]._uv.y + (_8s1 * (_3s1[1]._uv.y - _3s1[0]._uv.y));
            _2s1[_5s1].id._un1 = _4s1;
            _2s1[_5s1].id._vn1 = _3s1[0].id._vn1;
            _2s1[_5s1].id._Oo1 = _No1._Qo1;
            _2s1[_5s1].id._Po1 = _No1._Ro1;
            ++_5s1;
        }
        return _5s1
    }

    function _9s1(_as1, _un1, _bs1, _vn1, _bp1, _dp1) {
        _9s1._VR._xn1._rC(_as1, _un1);
        _9s1._VR._yn1._rC(_bs1, _vn1);
        _9s1._VR._zn1 = _bp1;
        _9s1._VR._An1 = _dp1;
        _9s1._VR._Bn1 = !0;
        _9s1._Fu._Gu = 0;
        _vo1(_9s1._XR, _9s1._Fu, _9s1._VR);
        return _9s1._XR._7l1 < 10.0 * _Wh1
    }

    _9s1._VR = new _wn1();
    _9s1._Fu = new _sn1();
    _9s1._XR = new _Cn1();

    function _2n1(_hv,
                  _Nt) {
        return !((_Nt._kl1.x - _hv._ll1.x) > 0.0 || (_Nt._kl1.y - _hv._ll1.y) > 0.0 || (_hv._kl1.x - _Nt._ll1.x) > 0.0 || (_hv._kl1.y - _Nt._ll1.y) > 0.0)
    }

    var _cs1 = -1;

    function _ds1() {
        this._2l1 = new _Bp1();
        this._Qm1 = null;
        this.parent = 0;
        this._es1 = this._fs1 = this.height = 0
    }

    _ds1.prototype = {
        _gs1: function () {
            return this._es1 == _cs1
        }
    };

    function _Im1() {
        this._hs1 = _cs1;
        this._is1 = 16;
        this._js1 = 0;
        this._ks1 = new Array(this._is1);
        for (var _t5 = 0; _t5 < this._is1 - 1; ++_t5) {
            this._ks1[_t5] = new _ds1();
            this._ks1[_t5].parent = _t5 + 1;
            this._ks1[_t5].height = -1
        }
        this._ks1[this._is1 - 1] = new _ds1();
        this._ks1[this._is1 - 1].parent = _cs1;
        this._ks1[this._is1 - 1].height = -1;
        this._ls1 = 0;
        this._ms1 = 0;
        this._ns1 = 0
    }

    _Im1._os1 = new _Hi1(__h1, __h1);
    _Im1.prototype = {
        _Pm1: function (_2l1, _Qm1) {
            var _Rm1 = this._ps1();
            this._ks1[_Rm1]._2l1._kl1._Li1(_Hi1._Pi1(_2l1._kl1, _Im1._os1));
            this._ks1[_Rm1]._2l1._ll1._Li1(_Hi1._3C(_2l1._ll1, _Im1._os1));
            this._ks1[_Rm1]._Qm1 = _Qm1;
            this._ks1[_Rm1].height = 0;
            this._qs1(_Rm1);
            return _Rm1
        }, _Tm1: function (_Rm1) {
            _Th1(0 <= _Rm1 && _Rm1 < this._is1);
            _Th1(this._ks1[_Rm1]._gs1());
            this._rs1(_Rm1);
            this._ss1(_Rm1)
        }
        , _Vm1: function (_Rm1, _2l1, _Wm1) {
            _Th1(0 <= _Rm1 && _Rm1 < this._is1);
            _Th1(this._ks1[_Rm1]._gs1());
            if (this._ks1[_Rm1]._2l1._Kp1(_2l1)) {
                return !1
            }
            this._rs1(_Rm1);
            this._ks1[_Rm1]._2l1._Li1(_2l1);
            this._ks1[_Rm1]._2l1._kl1._Pi1(_Im1._os1);
            this._ks1[_Rm1]._2l1._ll1._3C(_Im1._os1);
            var _cE = _Hi1.Multiply(_0i1, _Wm1);
            if (_cE.x < 0.0) {
                this._ks1[_Rm1]._2l1._kl1.x += _cE.x
            } else {
                this._ks1[_Rm1]._2l1._ll1.x += _cE.x
            }
            if (_cE.y < 0.0) {
                this._ks1[_Rm1]._2l1._kl1.y += _cE.y
            } else {
                this._ks1[_Rm1]._2l1._ll1.y += _cE.y
            }
            this._qs1(_Rm1);
            return !0
        }
        , _Zm1: function (_Rm1) {
            _Th1(0 <= _Rm1 && _Rm1 < this._is1);
            return this._ks1[_Rm1]._Qm1
        }, _Ym1: function (_Rm1) {
            _Th1(0 <= _Rm1 && _Rm1 < this._is1);
            return this._ks1[_Rm1]._2l1
        }, _8n1: function (_5n1, _2l1) {
            var _qh1 = [];
            _qh1.push(this._hs1);
            while (_qh1.length > 0) {
                var _ts1 = _qh1.pop();
                if (_ts1 == _cs1) {
                    continue
                }
                var _3e1 = this._ks1[_ts1];
                if (_2n1(_3e1._2l1, _2l1)) {
                    if (_3e1._gs1()) {
                        var _us1 = _5n1._ln1(_ts1);
                        if (_us1 == !1) {
                            return
                        }
                    } else {
                        _qh1.push(_3e1._es1);
                        _qh1.push(_3e1._fs1)
                    }
                }
            }
        }, __k1: function (_5n1, _VR) {
            var _yk1 = _VR._yk1;
            var _zk1 = _VR._zk1;
            var _Kt = _Hi1._Pi1(_zk1,
                _yk1);
            _Th1(_Kt._Qi1() > 0.0);
            _Kt._Ri1();
            var _uv = _Ij1(1.0, _Kt);
            var _vs1 = _4k1(_uv);
            var _il1 = _VR._il1;
            var _ws1 = new _Bp1();
            {
                var _Mt = _Hi1._3C(_yk1, _Hi1.Multiply(_il1, _Hi1._Pi1(_zk1, _yk1)));
                _ws1._kl1._Li1(_7k1(_yk1, _Mt));
                _ws1._ll1._Li1(_9k1(_yk1, _Mt))
            }
            var _qh1 = [];
            _qh1.push(this._hs1);
            while (_qh1.length > 0) {
                var _ts1 = _qh1.pop();
                if (_ts1 == _cs1) {
                    continue
                }
                var _3e1 = this._ks1[_ts1];
                if (_2n1(_3e1._2l1, _ws1) == !1) {
                    continue
                }
                var _u5 = _3e1._2l1._Ep1();
                var _w5 = _3e1._2l1._Fp1();
                var _Zp1 = _3k1(_Fj1(_uv, _Hi1._Pi1(_yk1, _u5))) - _Fj1(_vs1, _w5);
                if (_Zp1 > 0.0) {
                    continue
                }
                if (_3e1._gs1()) {
                    var _xs1 = new _zp1();
                    _xs1._yk1._Li1(_VR._yk1);
                    _xs1._zk1._Li1(_VR._zk1);
                    _xs1._il1 = _il1;
                    var value = _5n1._ys1(_xs1, _ts1);
                    if (value == 0.0) {
                        return
                    }
                    if (value > 0.0) {
                        _il1 = value;
                        var _Mt = _Hi1._3C(_yk1, _Hi1.Multiply(_il1, _Hi1._Pi1(_zk1, _yk1)));
                        _ws1._kl1._Li1(_7k1(_yk1, _Mt));
                        _ws1._ll1._Li1(_9k1(_yk1, _Mt))
                    }
                } else {
                    _qh1.push(_3e1._es1);
                    _qh1.push(_3e1._fs1)
                }
            }
        }, _qm1: function () {
            this._zs1(this._hs1);
            this._As1(this._hs1);
            var _Bs1 = 0;
            var _Cs1 = this._ls1;
            while (_Cs1 != _cs1) {
                _Th1(0 <= _Cs1 && _Cs1 < this._is1);
                _Cs1 = this._ks1[_Cs1].parent;
                ++_Bs1
            }
            _Th1(this._EW() == this._Ds1());
            _Th1(this._js1 + _Bs1 == this._is1)
        }, _EW: function () {
            if (this._hs1 == _cs1) {
                return 0
            }
            return this._ks1[this._hs1].height
        }, _gn1: function () {
            var _Es1 = 0;
            for (var _t5 = 0; _t5 < this._is1; ++_t5) {
                var _3e1 = this._ks1[_t5];
                if (_3e1.height <= 1) {
                    continue
                }
                _Th1(_3e1._gs1() == !1);
                var _es1 = _3e1._es1;
                var _fs1 = _3e1._fs1;
                var _Fs1 = _3k1(this._ks1[_fs1].height - this._ks1[_es1].height);
                _Es1 = _8k1(_Es1, _Fs1)
            }
            return _Es1
        }, _in1: function () {
            if (this._hs1 == _cs1) {
                return 0.0
            }
            var _cs = this._ks1[this._hs1];
            var _Gs1 = _cs._2l1._Gp1();
            var _Hs1 = 0.0;
            for (var _t5 = 0; _t5 < this._is1; ++_t5) {
                var _3e1 = this._ks1[_t5];
                if (_3e1.height < 0) {
                    continue
                }
                _Hs1 += _3e1._2l1._Gp1()
            }
            return _Hs1 / _Gs1
        }, _Is1: function () {
            var _Js1 = new Array(this._js1);
            var _Gu = 0;
            for (var _t5 = 0; _t5 < this._is1; ++_t5) {
                if (this._ks1[_t5].height < 0) {
                    continue
                }
                if (this._ks1[_t5]._gs1()) {
                    this._ks1[_t5].parent = _cs1;
                    _Js1[_Gu] = _t5;
                    ++_Gu
                } else {
                    this._ss1(_t5)
                }
            }
            while (_Gu > 1) {
                var _Ks1 = _Vh1;
                var _Ls1 = -1, _Ms1 = -1;
                for (_t5 = 0; _t5 < _Gu; ++_t5) {
                    var _Ns1 = this._ks1[_Js1[_t5]]._2l1;
                    for (var _Rt = _t5 + 1; _Rt < _Gu;
                         ++_Rt) {
                        var _Os1 = this._ks1[_Js1[_Rt]]._2l1;
                        var _Nt = new _Bp1();
                        _Nt._Hp1(_Ns1, _Os1);
                        var _Ps1 = _Nt._Gp1();
                        if (_Ps1 < _Ks1) {
                            _Ls1 = _t5;
                            _Ms1 = _Rt;
                            _Ks1 = _Ps1
                        }
                    }
                }
                var _Qs1 = _Js1[_Ls1];
                var _Rs1 = _Js1[_Ms1];
                var _es1 = this._ks1[_Qs1];
                var _fs1 = this._ks1[_Rs1];
                var _Ss1 = this._ps1();
                var parent = this._ks1[_Ss1];
                parent._es1 = _Qs1;
                parent._fs1 = _Rs1;
                parent.height = 1 + _8k1(_es1.height, _fs1.height);
                parent._2l1._Hp1(_es1._2l1, _fs1._2l1);
                parent.parent = _cs1;
                _es1.parent = _Ss1;
                _fs1.parent = _Ss1;
                _Js1[_Ms1] = _Js1[_Gu - 1];
                _Js1[_Ls1] = _Ss1;
                --_Gu
            }
            this._hs1 = _Js1[0];
            this._qm1()
        }, _jn1: function (_kn1) {
            for (var _t5 = 0; _t5 < this._is1; ++_t5) {
                this._ks1[_t5]._2l1._kl1._Pi1(_kn1);
                this._ks1[_t5]._2l1._ll1._Pi1(_kn1)
            }
        }, _ps1: function () {
            if (this._ls1 == _cs1) {
                _Th1(this._js1 == this._is1);
                var _Ts1 = this._ks1;
                this._is1 *= 2;
                this._ks1 = _Ts1.concat(new Array(this._is1 - this._js1));
                for (var _t5 = this._js1; _t5 < this._is1 - 1; ++_t5) {
                    this._ks1[_t5] = new _ds1();
                    this._ks1[_t5].parent = _t5 + 1;
                    this._ks1[_t5].height = -1
                }
                this._ks1[this._is1 - 1] = new _ds1();
                this._ks1[this._is1 - 1].parent = _cs1;
                this._ks1[this._is1 - 1].height = -1;
                this._ls1 = this._js1
            }
            var _ts1 = this._ls1;
            this._ls1 = this._ks1[_ts1].parent;
            this._ks1[_ts1].parent = _cs1;
            this._ks1[_ts1]._es1 = _cs1;
            this._ks1[_ts1]._fs1 = _cs1;
            this._ks1[_ts1].height = 0;
            this._ks1[_ts1]._Qm1 = null;
            ++this._js1;
            return _ts1
        }, _ss1: function (_ts1) {
            _Th1(0 <= _ts1 && _ts1 < this._is1);
            _Th1(0 < this._js1);
            this._ks1[_ts1].parent = this._ls1;
            this._ks1[_ts1].height = -1;
            this._ls1 = _ts1;
            --this._js1
        }, _qs1: function (_Us1) {
            ++this._ns1;
            if (this._hs1 == _cs1) {
                this._hs1 = _Us1;
                this._ks1[this._hs1].parent = _cs1;
                return
            }
            var _Vs1 = this._ks1[_Us1]._2l1;
            var index = this._hs1;
            while (this._ks1[index]._gs1() == !1) {
                var _es1 = this._ks1[index]._es1;
                var _fs1 = this._ks1[index]._fs1;
                var _em1 = this._ks1[index]._2l1._Gp1();
                var _Ws1 = new _Bp1();
                _Ws1._Hp1(this._ks1[index]._2l1, _Vs1);
                var _Xs1 = _Ws1._Gp1();
                var _Ps1 = 2.0 * _Xs1;
                var _Ys1 = 2.0 * (_Xs1 - _em1);
                var _Zs1;
                var _2l1;
                if (this._ks1[_es1]._gs1()) {
                    _2l1 = new _Bp1();
                    _2l1._Hp1(_Vs1, this._ks1[_es1]._2l1);
                    _Zs1 = _2l1._Gp1() + _Ys1
                } else {
                    _2l1 = new _Bp1();
                    _2l1._Hp1(_Vs1, this._ks1[_es1]._2l1);
                    var __s1 = this._ks1[_es1]._2l1._Gp1();
                    var _0t1 = _2l1._Gp1();
                    _Zs1 = (_0t1 - __s1) + _Ys1
                }
                var _1t1;
                if (this._ks1[_fs1]._gs1()) {
                    _2l1 = new _Bp1();
                    _2l1._Hp1(_Vs1, this._ks1[_fs1]._2l1);
                    _1t1 = _2l1._Gp1() + _Ys1
                } else {
                    _2l1 = new _Bp1();
                    _2l1._Hp1(_Vs1, this._ks1[_fs1]._2l1);
                    var __s1 = this._ks1[_fs1]._2l1._Gp1();
                    var _0t1 = _2l1._Gp1();
                    _1t1 = _0t1 - __s1 + _Ys1
                }
                if (_Ps1 < _Zs1 && _Ps1 < _1t1) {
                    break
                }
                if (_Zs1 < _1t1) {
                    index = _es1
                } else {
                    index = _fs1
                }
            }
            var _2t1 = index;
            var _3t1 = this._ks1[_2t1].parent;
            var _4t1 = this._ps1();
            this._ks1[_4t1].parent = _3t1;
            this._ks1[_4t1]._Qm1 = null;
            this._ks1[_4t1]._2l1._Hp1(_Vs1, this._ks1[_2t1]._2l1);
            this._ks1[_4t1].height = this._ks1[_2t1].height + 1;
            if (_3t1 != _cs1) {
                if (this._ks1[_3t1]._es1 == _2t1) {
                    this._ks1[_3t1]._es1 = _4t1
                } else {
                    this._ks1[_3t1]._fs1 = _4t1
                }
                this._ks1[_4t1]._es1 = _2t1;
                this._ks1[_4t1]._fs1 = _Us1;
                this._ks1[_2t1].parent = _4t1;
                this._ks1[_Us1].parent = _4t1
            } else {
                this._ks1[_4t1]._es1 = _2t1;
                this._ks1[_4t1]._fs1 = _Us1;
                this._ks1[_2t1].parent = _4t1;
                this._ks1[_Us1].parent = _4t1;
                this._hs1 = _4t1
            }
            index = this._ks1[_Us1].parent;
            while (index != _cs1) {
                index = this._5t1(index);
                var _es1 = this._ks1[index]._es1;
                var _fs1 = this._ks1[index]._fs1;
                _Th1(_es1 != _cs1);
                _Th1(_fs1 != _cs1);
                this._ks1[index].height = 1 + _8k1(this._ks1[_es1].height, this._ks1[_fs1].height);
                this._ks1[index]._2l1._Hp1(this._ks1[_es1]._2l1, this._ks1[_fs1]._2l1);
                index = this._ks1[index].parent;
            }
        }, _rs1: function (_Us1) {
            if (_Us1 == this._hs1) {
                this._hs1 = _cs1;
                return
            }
            var parent = this._ks1[_Us1].parent;
            var _6t1 = this._ks1[parent].parent;
            var _2t1;
            if (this._ks1[parent]._es1 == _Us1) {
                _2t1 = this._ks1[parent]._fs1
            } else {
                _2t1 = this._ks1[parent]._es1
            }
            if (_6t1 != _cs1) {
                if (this._ks1[_6t1]._es1 == parent) {
                    this._ks1[_6t1]._es1 = _2t1
                } else {
                    this._ks1[_6t1]._fs1 = _2t1
                }
                this._ks1[_2t1].parent = _6t1;
                this._ss1(parent);
                var index = _6t1;
                while (index != _cs1) {
                    index = this._5t1(index);
                    var _es1 = this._ks1[index]._es1;
                    var _fs1 = this._ks1[index]._fs1;
                    this._ks1[index]._2l1._Hp1(this._ks1[_es1]._2l1, this._ks1[_fs1]._2l1);
                    this._ks1[index].height = 1 + _8k1(this._ks1[_es1].height, this._ks1[_fs1].height);
                    index = this._ks1[index].parent
                }
            } else {
                this._hs1 = _2t1;
                this._ks1[_2t1].parent = _cs1;
                this._ss1(parent)
            }
        }, _5t1: function (_7t1) {
            _Th1(_7t1 != _cs1);
            var _Uh1 = this._ks1[_7t1];
            if (_Uh1._gs1() || _Uh1.height < 2) {
                return _7t1
            }
            var _8t1 = _Uh1._es1;
            var _9t1 = _Uh1._fs1;
            _Th1(0 <= _8t1 && _8t1 < this._is1);
            _Th1(0 <= _9t1 && _9t1 < this._is1);
            var _5j1 = this._ks1[_8t1];
            var __j1 = this._ks1[_9t1];
            var _Fs1 = __j1.height - _5j1.height;
            if (_Fs1 > 1) {
                var _at1 = __j1._es1;
                var _bt1 = __j1._fs1;
                var _ct1 = this._ks1[_at1];
                var _dt1 = this._ks1[_bt1];
                _Th1(0 <= _at1 && _at1 < this._is1);
                _Th1(0 <= _bt1 && _bt1 < this._is1);
                __j1._es1 = _7t1;
                __j1.parent = _Uh1.parent;
                _Uh1.parent = _9t1;
                if (__j1.parent != _cs1) {
                    if (this._ks1[__j1.parent]._es1 == _7t1) {
                        this._ks1[__j1.parent]._es1 = _9t1
                    } else {
                        _Th1(this._ks1[__j1.parent]._fs1 == _7t1);
                        this._ks1[__j1.parent]._fs1 = _9t1
                    }
                } else {
                    this._hs1 = _9t1
                }
                if (_ct1.height > _dt1.height) {
                    __j1._fs1 = _at1;
                    _Uh1._fs1 = _bt1;
                    _dt1.parent = _7t1;
                    _Uh1._2l1._Hp1(_5j1._2l1, _dt1._2l1);
                    __j1._2l1._Hp1(_Uh1._2l1, _ct1._2l1);
                    _Uh1.height = 1 + _8k1(_5j1.height, _dt1.height);
                    __j1.height = 1 + _8k1(_Uh1.height, _ct1.height)
                } else {
                    __j1._fs1 = _bt1;
                    _Uh1._fs1 = _at1;
                    _ct1.parent = _7t1;
                    _Uh1._2l1._Hp1(_5j1._2l1, _ct1._2l1);
                    __j1._2l1._Hp1(_Uh1._2l1, _dt1._2l1);
                    _Uh1.height = 1 + _8k1(_5j1.height, _ct1.height);
                    __j1.height = 1 + _8k1(_Uh1.height, _dt1.height)
                }
                return _9t1
            }
            if (_Fs1 < -1) {
                var _et1 = _5j1._es1;
                var _ft1 = _5j1._fs1;
                var _im1 = this._ks1[_et1];
                var _gt1 = this._ks1[_ft1];
                _Th1(0 <= _et1 && _et1 < this._is1);
                _Th1(0 <= _ft1 && _ft1 < this._is1);
                _5j1._es1 = _7t1;
                _5j1.parent = _Uh1.parent;
                _Uh1.parent = _8t1;
                if (_5j1.parent != _cs1) {
                    if (this._ks1[_5j1.parent]._es1 == _7t1) {
                        this._ks1[_5j1.parent]._es1 = _8t1
                    } else {
                        _Th1(this._ks1[_5j1.parent]._fs1 == _7t1);
                        this._ks1[_5j1.parent]._fs1 = _8t1
                    }
                } else {
                    this._hs1 = _8t1
                }
                if (_im1.height > _gt1.height) {
                    _5j1._fs1 = _et1;
                    _Uh1._es1 = _ft1;
                    _gt1.parent = _7t1;
                    _Uh1._2l1._Hp1(__j1._2l1,
                        _gt1._2l1);
                    _5j1._2l1._Hp1(_Uh1._2l1, _im1._2l1);
                    _Uh1.height = 1 + _8k1(__j1.height, _gt1.height);
                    _5j1.height = 1 + _8k1(_Uh1.height, _im1.height)
                } else {
                    _5j1._fs1 = _ft1;
                    _Uh1._es1 = _et1;
                    _im1.parent = _7t1;
                    _Uh1._2l1._Hp1(__j1._2l1, _im1._2l1);
                    _5j1._2l1._Hp1(_Uh1._2l1, _gt1._2l1);
                    _Uh1.height = 1 + _8k1(__j1.height, _im1.height);
                    _5j1.height = 1 + _8k1(_Uh1.height, _gt1.height)
                }
                return _8t1
            }
            return _7t1
        }, _Ds1: function (_ts1) {
            if (typeof(_ts1) === 'undefined') _ts1 = this._hs1;
            _Th1(0 <= _ts1 && _ts1 < this._is1);
            var _3e1 = this._ks1[_ts1];
            if (_3e1._gs1()) {
                return 0
            }
            var _ht1 = this._Ds1(_3e1._es1);
            var _it1 = this._Ds1(_3e1._fs1);
            return 1 + _8k1(_ht1, _it1)
        }, _zs1: function (index) {
            if (index == _cs1) {
                return
            }
            if (index == this._hs1) {
                _Th1(this._ks1[index].parent == _cs1)
            }
            var _3e1 = this._ks1[index];
            var _es1 = _3e1._es1;
            var _fs1 = _3e1._fs1;
            if (_3e1._gs1()) {
                _Th1(_es1 == _cs1);
                _Th1(_fs1 == _cs1);
                _Th1(_3e1.height == 0);
                return
            }
            _Th1(0 <= _es1 && _es1 < this._is1);
            _Th1(0 <= _fs1 && _fs1 < this._is1);
            _Th1(this._ks1[_es1].parent == index);
            _Th1(this._ks1[_fs1].parent == index);
            this._zs1(_es1);
            this._zs1(_fs1)
        }, _As1: function (index) {
            if (index == _cs1) {
                return
            }
            var _3e1 = this._ks1[index];
            var _es1 = _3e1._es1;
            var _fs1 = _3e1._fs1;
            if (_3e1._gs1()) {
                _Th1(_es1 == _cs1);
                _Th1(_fs1 == _cs1);
                _Th1(_3e1.height == 0);
                return
            }
            _Th1(0 <= _es1 && _es1 < this._is1);
            _Th1(0 <= _fs1 && _fs1 < this._is1);
            var _ht1 = this._ks1[_es1].height;
            var _it1 = this._ks1[_fs1].height;
            var height;
            height = 1 + _8k1(_ht1, _it1);
            _Th1(_3e1.height == height);
            var _2l1 = new _Bp1();
            _2l1._Hp1(this._ks1[_es1]._2l1, this._ks1[_fs1]._2l1);
            _Th1(_Hi1._Yi1(_2l1._kl1, _3e1._2l1._kl1));
            _Th1(_Hi1._Yi1(_2l1._ll1, _3e1._2l1._ll1));
            this._As1(_es1);
            this._As1(_fs1)
        }
    };

    function _jt1() {
        this._xn1 = new _mn1();
        this._yn1 = new _mn1();
        this._kt1 = new _vj1();
        this._lt1 = new _vj1();
        this._mt1 = 0
    };

    function _nt1() {
        this._c31 = 0;
        this._Mt = 0
    };_nt1._er1 = 0;
    _nt1._ot1 = 1;
    _nt1._pt1 = 2;
    _nt1._qt1 = 3;
    _nt1._rt1 = 4;

    function _st1() {
        this._tt1 = null;
        this._ut1 = null;
        this._vt1 = null;
        this._wt1 = null;
        this._L_ = 0;
        this._xt1 = new _Hi1();
        this._yt1 = new _Hi1()
    }

    var _zt1 = new _tj1();
    var _At1 = new _tj1();
    _st1.prototype = {
        _ap1: function (_Fu, _xn1, _kt1, _yn1, _lt1, _Pp1) {
            this._tt1 = _xn1;
            this._ut1 = _yn1;
            var _Gu = _Fu._Gu;
            _Th1(0 < _Gu && _Gu < 3);
            this._vt1 = _kt1;
            this._wt1 = _lt1;
            this._vt1._Bj1(_zt1, _Pp1);
            this._wt1._Bj1(_At1, _Pp1);
            if (_Gu == 1) {
                this._L_ = _st1._Bt1;
                var _Ct1 = this._tt1._ol1(_Fu._un1[0]);
                var _Dt1 = this._ut1._ol1(_Fu._vn1[0]);
                var _fp1 = (_zt1._7S._u5 * _Ct1.x - _zt1._7S._ZN * _Ct1.y) + _zt1._lT.x;
                var _gp1 = (_zt1._7S._ZN * _Ct1.x + _zt1._7S._u5 * _Ct1.y) + _zt1._lT.y;
                var _hp1 = (_At1._7S._u5 * _Dt1.x - _At1._7S._ZN * _Dt1.y) + _At1._lT.x;
                var _ip1 = (_At1._7S._ZN * _Dt1.x + _At1._7S._u5 * _Dt1.y) + _At1._lT.y;
                this._yt1.x = _hp1 - _fp1;
                this._yt1.y = _ip1 - _gp1;
                var _ZN = this._yt1._Ri1();
                return _ZN
            } else if (_Fu._un1[0] == _Fu._un1[1]) {
                this._L_ = _st1._3p1;
                var _Et1 = _yn1._ol1(_Fu._vn1[0]);
                var _Ft1 = _yn1._ol1(_Fu._vn1[1]);
                this._yt1.x = 1.0 * (_Ft1.y - _Et1.y);
                this._yt1.y = -1.0 * (_Ft1.x - _Et1.x);
                this._yt1._Ri1();
                var _Pq1 = _At1._7S._u5 * this._yt1.x - _At1._7S._ZN * this._yt1.y;
                var _Qq1 = _At1._7S._ZN * this._yt1.x + _At1._7S._u5 * this._yt1.y;
                this._xt1.x = 0.5 * (_Et1.x + _Ft1.x);
                this._xt1.y = 0.5 * (_Et1.y + _Ft1.y);
                var _hp1 = (_At1._7S._u5 * this._xt1.x - _At1._7S._ZN * this._xt1.y) + _At1._lT.x;
                var _ip1 = (_At1._7S._ZN * this._xt1.x + _At1._7S._u5 * this._xt1.y) + _At1._lT.y;
                var _Ct1 = _xn1._ol1(_Fu._un1[0]);
                var _fp1 = (_zt1._7S._u5 * _Ct1.x - _zt1._7S._ZN * _Ct1.y) + _zt1._lT.x;
                var _gp1 = (_zt1._7S._ZN * _Ct1.x + _zt1._7S._u5 * _Ct1.y) + _zt1._lT.y;
                var _ZN = (_fp1 - _hp1) * _Pq1 + (_gp1 - _ip1) * _Qq1;
                if (_ZN < 0.0) {
                    this._yt1.x = -this._yt1.x;
                    this._yt1.y = -this._yt1.y;
                    _ZN = -_ZN
                }
                return _ZN
            } else {
                this._L_ = _st1._2p1;
                var _Gt1 = this._tt1._ol1(_Fu._un1[0]);
                var _Ht1 = this._tt1._ol1(_Fu._un1[1]);
                this._yt1.x = 1.0 * (_Ht1.y - _Gt1.y);
                this._yt1.y = -1.0 * (_Ht1.x - _Gt1.x);
                this._yt1._Ri1();
                var _Pq1 = _zt1._7S._u5 * this._yt1.x - _zt1._7S._ZN * this._yt1.y;
                var _Qq1 = _zt1._7S._ZN * this._yt1.x + _zt1._7S._u5 * this._yt1.y;
                this._xt1.x = 0.5 * (_Gt1.x + _Ht1.x);
                this._xt1.y = 0.5 * (_Gt1.y + _Ht1.y);
                var _fp1 = (_zt1._7S._u5 * this._xt1.x - _zt1._7S._ZN * this._xt1.y) + _zt1._lT.x;
                var _gp1 = (_zt1._7S._ZN * this._xt1.x + _zt1._7S._u5 * this._xt1.y) + _zt1._lT.y;
                var _Dt1 = this._ut1._ol1(_Fu._vn1[0]);
                var _hp1 = (_At1._7S._u5 * _Dt1.x - _At1._7S._ZN * _Dt1.y) + _At1._lT.x;
                var _ip1 = (_At1._7S._ZN * _Dt1.x + _At1._7S._u5 * _Dt1.y) + _At1._lT.y;
                var _ZN = (_hp1 - _fp1) * _Pq1 + (_ip1 - _gp1) * _Qq1;
                if (_ZN < 0.0) {
                    this._yt1.x = -this._yt1.x;
                    this._yt1.y = -this._yt1.y;
                    _ZN = -_ZN
                }
                return _ZN
            }
        }, _It1: function (_Jt1, _Mt) {
            this._vt1._Bj1(_zt1, _Mt);
            this._wt1._Bj1(_At1, _Mt);
            switch (this._L_) {
                case _st1._Bt1: {
                    var _Kt1 = _zt1._7S._u5 * this._yt1.x + _zt1._7S._ZN * this._yt1.y;
                    var _Lt1 = -_zt1._7S._ZN * this._yt1.x + _zt1._7S._u5 * this._yt1.y;
                    var _Mt1 = _At1._7S._u5 * -this._yt1.x + _At1._7S._ZN * -this._yt1.y;
                    var _Nt1 = -_At1._7S._ZN * -this._yt1.x + _At1._7S._u5 * -this._yt1.y;
                    _Jt1[0] = this._tt1._ml1(_Kt1, _Lt1);
                    _Jt1[1] = this._ut1._ml1(_Mt1, _Nt1);
                    var _Ct1 = this._tt1._ol1(_Jt1[0]);
                    var _Dt1 = this._ut1._ol1(_Jt1[1]);
                    var _fp1 = (_zt1._7S._u5 * _Ct1.x - _zt1._7S._ZN * _Ct1.y) + _zt1._lT.x;
                    var _gp1 = (_zt1._7S._ZN * _Ct1.x + _zt1._7S._u5 * _Ct1.y) + _zt1._lT.y;
                    var _hp1 = (_At1._7S._u5 * _Dt1.x - _At1._7S._ZN * _Dt1.y) + _At1._lT.x;
                    var _ip1 = (_At1._7S._ZN * _Dt1.x + _At1._7S._u5 * _Dt1.y) + _At1._lT.y;
                    return (_hp1 - _fp1) * this._yt1.x + (_ip1 - _gp1) * this._yt1.y
                }
                case _st1._2p1: {
                    var _Pq1 = _zt1._7S._u5 * this._yt1.x - _zt1._7S._ZN * this._yt1.y;
                    var _Qq1 = _zt1._7S._ZN * this._yt1.x + _zt1._7S._u5 * this._yt1.y;
                    var _fp1 = (_zt1._7S._u5 * this._xt1.x - _zt1._7S._ZN * this._xt1.y) + _zt1._lT.x;
                    var _gp1 = (_zt1._7S._ZN * this._xt1.x + _zt1._7S._u5 * this._xt1.y) + _zt1._lT.y;
                    var _Mt1 = _At1._7S._u5 * -_Pq1 + _At1._7S._ZN * -_Qq1;
                    var _Nt1 = -_At1._7S._ZN * -_Pq1 + _At1._7S._u5 * -_Qq1;
                    _Jt1[0] = -1;
                    _Jt1[1] = this._ut1._ml1(_Mt1, _Nt1);
                    var _Dt1 = this._ut1._ol1(_Jt1[1]);
                    var _hp1 = (_At1._7S._u5 * _Dt1.x - _At1._7S._ZN * _Dt1.y) + _At1._lT.x;
                    var _ip1 = (_At1._7S._ZN * _Dt1.x + _At1._7S._u5 * _Dt1.y) + _At1._lT.y;
                    return (_hp1 - _fp1) * _Pq1 + (_ip1 - _gp1) * _Qq1
                }
                case _st1._3p1: {
                    var _Pq1 = _At1._7S._u5 * this._yt1.x - _At1._7S._ZN * this._yt1.y;
                    var _Qq1 = _At1._7S._ZN * this._yt1.x + _At1._7S._u5 * this._yt1.y;
                    var _hp1 = (_At1._7S._u5 * this._xt1.x - _At1._7S._ZN * this._xt1.y) + _At1._lT.x;
                    var _ip1 = (_At1._7S._ZN * this._xt1.x + _At1._7S._u5 * this._xt1.y) + _At1._lT.y;
                    var _Kt1 = _zt1._7S._u5 * -_Pq1 + _zt1._7S._ZN * -_Qq1;
                    var _Nt1 = -_zt1._7S._ZN * -_Pq1 + _zt1._7S._u5 * -_Qq1;
                    _Jt1[1] = -1;
                    _Jt1[0] = this._tt1._ml1(_Kt1, _Nt1);
                    var _Ct1 = this._tt1._ol1(_Jt1[0]);
                    var _fp1 = (_zt1._7S._u5 * _Ct1.x - _zt1._7S._ZN * _Ct1.y) + _zt1._lT.x;
                    var _gp1 = (_zt1._7S._ZN * _Ct1.x + _zt1._7S._u5 * _Ct1.y) + _zt1._lT.y;
                    return (_fp1 - _hp1) * _Pq1 + (_gp1 - _ip1) * _Qq1
                }
                default :
                    _Th1(!1);
                    _Jt1[0] = -1;
                    _Jt1[1] = -1;
                    return 0.0
            }
        }, _Ot1: function (_un1, _vn1, _Mt) {
            this._vt1._Bj1(_zt1, _Mt);
            this._wt1._Bj1(_At1, _Mt);
            switch (this._L_) {
                case _st1._Bt1: {
                    var _Ct1 = this._tt1._ol1(_un1);
                    var _Dt1 = this._ut1._ol1(_vn1);
                    var _fp1 = (_zt1._7S._u5 * _Ct1.x - _zt1._7S._ZN * _Ct1.y) + _zt1._lT.x;
                    var _gp1 = (_zt1._7S._ZN * _Ct1.x + _zt1._7S._u5 * _Ct1.y) + _zt1._lT.y;
                    var _hp1 = (_At1._7S._u5 * _Dt1.x - _At1._7S._ZN * _Dt1.y) + _At1._lT.x;
                    var _ip1 = (_At1._7S._ZN * _Dt1.x + _At1._7S._u5 * _Dt1.y) + _At1._lT.y;
                    var _Zp1 = (_hp1 - _fp1) * this._yt1.x + (_ip1 - _gp1) * this._yt1.y;
                    return _Zp1
                }
                case _st1._2p1: {
                    var _Pq1 = _zt1._7S._u5 * this._yt1.x - _zt1._7S._ZN * this._yt1.y;
                    var _Qq1 = _zt1._7S._ZN * this._yt1.x + _zt1._7S._u5 * this._yt1.y;
                    var _fp1 = (_zt1._7S._u5 * this._xt1.x - _zt1._7S._ZN * this._xt1.y) + _zt1._lT.x;
                    var _gp1 = (_zt1._7S._ZN * this._xt1.x + _zt1._7S._u5 * this._xt1.y) + _zt1._lT.y;
                    var _Dt1 = this._ut1._ol1(_vn1);
                    var _hp1 = (_At1._7S._u5 * _Dt1.x - _At1._7S._ZN * _Dt1.y) + _At1._lT.x;
                    var _ip1 = (_At1._7S._ZN * _Dt1.x + _At1._7S._u5 * _Dt1.y) + _At1._lT.y;
                    var _Zp1 = (_hp1 - _fp1) * _Pq1 + (_ip1 - _gp1) * _Qq1;
                    return _Zp1
                }
                case _st1._3p1: {
                    var _Pq1 = _At1._7S._u5 * this._yt1.x - _At1._7S._ZN * this._yt1.y;
                    var _Qq1 = _At1._7S._ZN * this._yt1.x + _At1._7S._u5 * this._yt1.y;
                    var _hp1 = (_At1._7S._u5 * this._xt1.x - _At1._7S._ZN * this._xt1.y) + _At1._lT.x;
                    var _ip1 = (_At1._7S._ZN * this._xt1.x + _At1._7S._u5 * this._xt1.y) + _At1._lT.y;
                    var _Ct1 = this._tt1._ol1(_un1);
                    var _fp1 = (_zt1._7S._u5 * _Ct1.x - _zt1._7S._ZN * _Ct1.y) + _zt1._lT.x;
                    var _gp1 = (_zt1._7S._ZN * _Ct1.x + _zt1._7S._u5 * _Ct1.y) + _zt1._lT.y;
                    var _Zp1 = (_fp1 - _hp1) * _Pq1 + (_gp1 - _ip1) * _Qq1;
                    return _Zp1
                }
                default :
                    _Th1(!1);
                    return 0.0
            }
        }
    };
    _st1._Bt1 = 0;
    _st1._2p1 = 1;
    _st1._3p1 = 2;
    var _Pt1 = _Ah1._Mh1("toi", "solveTOI");

    function _Qt1(_XR, _VR) {
        _Pt1.start();
        ++_Qt1._Rt1;
        _XR._c31 = _nt1._er1;
        _XR._Mt = _VR._mt1;
        var _xn1 = _VR._xn1;
        var _yn1 = _VR._yn1;
        _Qt1._St1._Li1(_VR._kt1);
        _Qt1._Tt1._Li1(_VR._lt1);
        _Qt1._St1._Ri1();
        _Qt1._Tt1._Ri1();
        var _mt1 = _VR._mt1;
        var _xq1 = _xn1._Wk1 + _yn1._Wk1;
        var target = _8k1(_1i1, _xq1 - 3.0 * _1i1);
        var _Ut1 = 0.25 * _1i1;
        _Th1(target > _Ut1);
        var _Pp1 = 0.0;
        var _Vt1 = 20;
        var _Do1 = 0;
        var _Fu = new _sn1();
        _Fu._Gu = 0;
        var _Wt1 = new _wn1();
        _Wt1._xn1._Li1(_VR._xn1);
        _Wt1._yn1._Li1(_VR._yn1);
        _Wt1._Bn1 = !1;
        for (; ;) {
            _Qt1._St1._Bj1(_Wt1._zn1, _Pp1);
            _Qt1._Tt1._Bj1(_Wt1._An1,
                _Pp1);
            var _Xt1 = new _Cn1();
            _vo1(_Xt1, _Fu, _Wt1);
            if (_Xt1._7l1 <= 0.0) {
                _XR._c31 = _nt1._pt1;
                _XR._Mt = 0.0;
                break
            }
            if (_Xt1._7l1 < target + _Ut1) {
                _XR._c31 = _nt1._qt1;
                _XR._Mt = _Pp1;
                break
            }
            var _Yt1 = new _st1();
            _Yt1._ap1(_Fu, _xn1, _Qt1._St1, _yn1, _Qt1._Tt1, _Pp1);
            var _Zt1 = !1;
            var _Qp1 = _mt1;
            var __t1 = 0;
            for (; ;) {
                var _Jt1 = [];
                var _OL = _Yt1._It1(_Jt1, _Qp1);
                if (_OL > target + _Ut1) {
                    _XR._c31 = _nt1._rt1;
                    _XR._Mt = _mt1;
                    _Zt1 = !0;
                    break
                }
                if (_OL > target - _Ut1) {
                    _Pp1 = _Qp1;
                    break
                }
                var _NL = _Yt1._Ot1(_Jt1[0], _Jt1[1], _Pp1);
                if (_NL < target - _Ut1) {
                    _XR._c31 = _nt1._ot1;
                    _XR._Mt = _Pp1;
                    _Zt1 = !0;
                    break
                }
                if (_NL <= target + _Ut1) {
                    _XR._c31 = _nt1._qt1;
                    _XR._Mt = _Pp1;
                    _Zt1 = !0;
                    break
                }
                var _0u1 = 0;
                var _sd1 = _Pp1, _td1 = _Qp1;
                for (; ;) {
                    var _Mt;
                    if (_0u1 & 1) {
                        _Mt = _sd1 + (target - _NL) * (_td1 - _sd1) / (_OL - _NL)
                    } else {
                        _Mt = 0.5 * (_sd1 + _td1)
                    }
                    ++_0u1;
                    ++_Qt1._1u1;
                    var _ZN = _Yt1._Ot1(_Jt1[0], _Jt1[1], _Mt);
                    if (_3k1(_ZN - target) < _Ut1) {
                        _Qp1 = _Mt;
                        break
                    }
                    if (_ZN > target) {
                        _sd1 = _Mt;
                        _NL = _ZN
                    } else {
                        _td1 = _Mt;
                        _OL = _ZN
                    }
                    if (_0u1 == 50) {
                        break
                    }
                }
                _Qt1._2u1 = _8k1(_Qt1._2u1, _0u1);
                ++__t1;
                if (__t1 == _Zh1) {
                    break
                }
            }
            ++_Do1;
            ++_Qt1._3u1;
            if (_Zt1) {
                break
            }
            if (_Do1 == _Vt1) {
                _XR._c31 = _nt1._ot1;
                _XR._Mt = _Pp1;
                break
            }
        }
        _Qt1._4u1 = _8k1(_Qt1._4u1, _Do1);
        _Pt1.stop();
        _Qt1._5u1 = _8k1(_Qt1._5u1, _Pt1._Fh1);
        _Qt1._6u1 += _Pt1._Fh1
    }

    _Qt1._St1 = new _vj1();
    _Qt1._Tt1 = new _vj1();
    _Qt1._6u1 = 0;
    _Qt1._5u1 = 0;
    _Qt1._Rt1 = 0;
    _Qt1._3u1 = 0;
    _Qt1._4u1 = 0;
    _Qt1._1u1 = 0;
    _Qt1._2u1 = 0;

    function _7u1() {
        this.type = _8u1._9u1;
        this.position = new _Hi1(0.0, 0.0);
        this.angle = 0.0;
        this._au1 = new _Hi1(0.0, 0.0);
        this._bu1 = 0.0;
        this._cu1 = 0.0;
        this._du1 = 0.0;
        this._eu1 = !0;
        this._fu1 = !0;
        this._gu1 = !1;
        this._hu1 = !1;
        this._hg = !0;
        this._Qm1 = null;
        this._iu1 = 1.0;
        Object.seal(this)
    }

    _7u1.prototype = {
        _Xi1: function (data) {
            this.type = data['type'];
            this.position._Xi1(data['position']);
            this.angle = data['angle'];
            this._au1._Xi1(data['linearVelocity']);
            this._bu1 = data['angularVelocity'];
            this._cu1 = data['linearDamping'];
            this._du1 = data['angularDamping'];
            this._eu1 = data['allowSleep'];
            this._fu1 = data['awake'];
            this._gu1 = data['fixedRotation'];
            this._hu1 = data['bullet'];
            this._hg = data['active'];
            this._iu1 = data['gravityScale']
        }
    };

    function _8u1(_ju1, _ku1) {
        _Th1(_ju1.position._Ti1());
        _Th1(_ju1._au1._Ti1());
        _Th1(_xi1(_ju1.angle));
        _Th1(_xi1(_ju1._bu1));
        _Th1(_xi1(_ju1._du1) && _ju1._du1 >= 0.0);
        _Th1(_xi1(_ju1._cu1) && _ju1._cu1 >= 0.0);
        this._lu1 = 0;
        this._mu1 = 0;
        if (_ju1._hu1) {
            this._mu1 |= _8u1._nu1
        }
        if (_ju1._gu1) {
            this._mu1 |= _8u1._ou1
        }
        if (_ju1._eu1) {
            this._mu1 |= _8u1._pu1
        }
        if (_ju1._fu1) {
            this._mu1 |= _8u1._qu1
        }
        if (_ju1._hg) {
            this._mu1 |= _8u1._ru1;
        }
        this._su1 = _ku1;
        this._nr1 = new _tj1();
        this._nr1._lT._Li1(_ju1.position);
        this._nr1._7S._rC(_ju1.angle);
        this._tu1 = new _tj1();
        this._tu1._Li1(this._nr1);
        this._uu1 = new _vj1();
        this._uu1._wj1._Ii1();
        this._uu1._xj1._Li1(this._nr1._lT);
        this._uu1._u5._Li1(this._nr1._lT);
        this._uu1._zj1 = _ju1.angle;
        this._uu1._hv = _ju1.angle;
        this._uu1._Aj1 = 0.0;
        this._vu1 = null;
        this._wu1 = null;
        this._xu1 = null;
        this._yu1 = null;
        this._zu1 = _ju1._au1._Qr();
        this._Au1 = _ju1._bu1;
        this._Bu1 = _ju1._cu1;
        this._Cu1 = _ju1._du1;
        this._Du1 = _ju1._iu1;
        this._Eu1 = new _Hi1();
        this._Fu1 = 0.0;
        this._Gu1 = 0.0;
        this._L_ = _ju1.type;
        if (this._L_ == _8u1._Hu1) {
            this._Iu1 = 1.0;
            this._Ju1 = 1.0
        } else {
            this._Iu1 = 0.0;
            this._Ju1 = 0.0
        }
        this._Ku1 = 0.0;
        this._Lu1 = 0.0;
        this._Mu1 = _ju1._Qm1;
        this._Nu1 = null;
        this._Ou1 = 0
    }

    _8u1._9u1 = 0;
    _8u1._Pu1 = 1;
    _8u1._Hu1 = 2;
    _8u1._Qu1 = 0x0001;
    _8u1._qu1 = 0x0002;
    _8u1._pu1 = 0x0004;
    _8u1._nu1 = 0x0008;
    _8u1._ou1 = 0x0010;
    _8u1._ru1 = 0x0020;
    _8u1._Ru1 = 0x0040;
    _8u1._Su1 = new _Hi1();
    _8u1._Tu1 = new _tj1();
    _8u1.prototype = {
        _Uu1: function (_Vu1, _5l1) {
            if (typeof(_5l1) !== 'undefined') {
                var _Wu1 = new _Xu1();
                _Wu1._gl1 = _Vu1;
                _Wu1._5l1 = _5l1;
                return this._Uu1(_Wu1)
            }
            _Th1(this._su1._Yu1() == !1);
            if (this._su1._Yu1() == !0) {
                return null
            }
            var _d71 = new _Zu1();
            _d71.__u1(this, _Vu1);
            if (this._mu1 & _8u1._ru1) {
                var _0v1 = this._su1._1v1._2v1;
                _d71._3v1(_0v1, this._nr1)
            }
            _d71._yu1 = this._Nu1;
            this._Nu1 = _d71;
            ++this._Ou1;
            _d71._4v1 = this;
            if (_d71._5v1 > 0.0) {
                this._6v1()
            }
            this._su1._mu1 |= _7v1._8v1;
            return _d71
        }, _9v1: function (_d71) {
            _Th1(this._su1._Yu1() == !1);
            if (this._su1._Yu1() == !0) {
                return
            }
            _Th1(_d71._4v1 == this);
            _Th1(this._Ou1 > 0);
            var _3e1 = this._Nu1;
            var _8N = !1;
            while (_3e1 != null) {
                if (_3e1 == _d71) {
                    this._Nu1 = _3e1 = _d71._yu1;
                    _8N = !0;
                    break
                }
                _3e1 = _3e1._yu1
            }
            _Th1(_8N);
            var _Tl1 = this._wu1;
            while (_Tl1) {
                var _u5 = _Tl1._av1;
                _Tl1 = _Tl1._yC;
                var _bv1 = _u5._cv1();
                var _dv1 = _u5._ev1();
                if (_d71 == _bv1 || _d71 == _dv1) {
                    this._su1._1v1._fv1(_u5)
                }
            }
            if (this._mu1 & _8u1._ru1) {
                var _0v1 = this._su1._1v1._2v1;
                _d71._gv1(_0v1)
            }
            _d71._fv1();
            _d71._4v1 = null;
            _d71._yu1 = null;
            --this._Ou1;
            this._6v1()
        }, _hv1: function (position, angle) {
            _Th1(this._su1._Yu1() == !1);
            if (this._su1._Yu1() == !0) {
                return
            }
            this._nr1._7S._rC(angle);
            this._nr1._lT._Li1(position);
            this._tu1._Li1(this._nr1);
            this._uu1._u5._Li1(_Wj1(this._nr1, this._uu1._wj1));
            this._uu1._hv = angle;
            this._uu1._xj1._Li1(this._uu1._u5);
            this._uu1._zj1 = angle;
            var _0v1 = this._su1._1v1._2v1;
            for (var _CO = this._Nu1;
                 _CO; _CO = _CO._yu1) {
                _CO._iv1(_0v1, this._nr1, this._nr1)
            }
        }, _Bj1: function () {
            return this._nr1
        }, _371: function () {
            return this._nr1._lT
        }, _qj1: function () {
            return this._uu1._hv
        }, _jv1: function () {
            return this._uu1._u5
        }, _kv1: function () {
            return this._uu1._wj1
        }, _lv1: function (_uv) {
            if (this._L_ == _8u1._9u1) {
                return
            }
            if (_Fj1(_uv, _uv) > 0.0) {
                this._B71(!0)
            }
            this._zu1 = _uv
        }, _mv1: function () {
            return this._zu1
        }, _nv1: function (_v5) {
            if (this._L_ == _8u1._9u1) {
                return
            }
            if (_v5 * _v5 > 0.0) {
                this._B71(!0)
            }
            this._Au1 = _v5
        }, _ov1: function () {
            return this._Au1
        }, _pv1: function (_qv1,
                           _Wo1, _rv1) {
            if (this._L_ != _8u1._Hu1) {
                return
            }
            if (_rv1 && (this._mu1 & _8u1._qu1) == 0) {
                this._B71(!0)
            }
            if (this._mu1 & _8u1._qu1) {
                this._Eu1._3C(_qv1);
                this._Fu1 += _Gj1(_Hi1._Pi1(_Wo1, this._uu1._u5), _qv1)
            }
        }, _sv1: function (_qv1, _rv1) {
            if (this._L_ != _8u1._Hu1) {
                return
            }
            if (_rv1 && (this._mu1 & _8u1._qu1) == 0) {
                this._B71(!0);
            }
            if (this._mu1 & _8u1._qu1) {
                this._Eu1._3C(_qv1)
            }
        }, _tv1: function (_uv1, _rv1) {
            if (this._L_ != _8u1._Hu1) {
                return
            }
            if (_rv1 && (this._mu1 & _8u1._qu1) == 0) {
                this._B71(!0)
            }
            if (this._mu1 & _8u1._qu1) {
                this._Fu1 += _uv1
            }
        }, _vv1: function (_wv1,
                           _Wo1, _rv1) {
            if (this._L_ != _8u1._Hu1) {
                return
            }
            if (_rv1 && (this._mu1 & _8u1._qu1) == 0) {
                this._B71(!0)
            }
            if (this._mu1 & _8u1._qu1) {
                this._zu1._3C(_Hi1.Multiply(this._Ju1, _wv1));
                this._Au1 += this._Lu1 * _Gj1(_Hi1._Pi1(_Wo1, this._uu1._u5), _wv1)
            }
        }, _xv1: function (_wv1, _rv1) {
            if (this._L_ != _8u1._Hu1) {
                return
            }
            if (_rv1 && (this._mu1 & _8u1._qu1) == 0) {
                this._B71(!0)
            }
            if (this._mu1 & _8u1._qu1) {
                this._Au1 += this._Lu1 * _wv1
            }
        }, _yv1: function () {
            return this._Iu1
        }, _zv1: function () {
            return this._Ku1 + this._Iu1 * _Fj1(this._uu1._wj1, this._uu1._wj1)
        }, _Av1: function (data) {
            data._Tk1 = this._Iu1;
            data._Uk1 = this._Ku1 + this._Iu1 * _Fj1(this._uu1._wj1, this._uu1._wj1);
            data._tk1 = this._uu1._wj1
        }, _Bv1: function (_4l1) {
            _Th1(this._su1._Yu1() == !1);
            if (this._su1._Yu1() == !0) {
                return
            }
            if (this._L_ != _8u1._Hu1) {
                return
            }
            this._Ju1 = 0.0;
            this._Ku1 = 0.0;
            this._Lu1 = 0.0;
            this._Iu1 = _4l1._Tk1;
            if (this._Iu1 <= 0.0) {
                this._Iu1 = 1.0
            }
            this._Ju1 = 1.0 / this._Iu1;
            if (_4l1._Uk1 > 0.0 && (this._mu1 & _8u1._ou1) == 0) {
                this._Ku1 = _4l1._Uk1 - this._Iu1 * _Fj1(_4l1._tk1, _4l1._tk1);
                _Th1(this._Ku1 > 0.0);
                this._Lu1 = 1.0 / this._Ku1
            }
            _8u1._Su1._Li1(this._uu1._u5);
            this._uu1._wj1._Li1(_4l1._tk1);
            this._uu1._xj1._Li1(_Wj1(this._nr1, this._uu1._wj1));
            this._uu1._u5._Li1(this._uu1._xj1);
            this._zu1._3C(_Ij1(this._Au1, _Hi1._Pi1(this._uu1._u5, _8u1._Su1)))
        }, _6v1: function () {
            this._Iu1 = 0.0;
            this._Ju1 = 0.0;
            this._Ku1 = 0.0;
            this._Lu1 = 0.0;
            this._uu1._wj1._Ii1();
            if (this._L_ == _8u1._9u1 || this._L_ == _8u1._Pu1) {
                this._uu1._xj1._Li1(this._nr1._lT);
                this._uu1._u5._Li1(this._nr1._lT);
                this._uu1._zj1 = this._uu1._hv;
                return
            }
            _Th1(this._L_ == _8u1._Hu1);
            var _wj1 = new _Hi1(0, 0);
            for (var _CO = this._Nu1; _CO;
                 _CO = _CO._yu1) {
                if (_CO._5v1 == 0.0) {
                    continue
                }
                var _4l1 = new _Sk1();
                _CO._Av1(_4l1);
                this._Iu1 += _4l1._Tk1;
                _wj1._3C(_Hi1.Multiply(_4l1._Tk1, _4l1._tk1));
                this._Ku1 += _4l1._Uk1
            }
            if (this._Iu1 > 0.0) {
                this._Ju1 = 1.0 / this._Iu1;
                _wj1.Multiply(this._Ju1)
            } else {
                this._Iu1 = 1.0;
                this._Ju1 = 1.0
            }
            if (this._Ku1 > 0.0 && (this._mu1 & _8u1._ou1) == 0) {
                this._Ku1 -= this._Iu1 * _Fj1(_wj1, _wj1);
                _Th1(this._Ku1 > 0.0);
                this._Lu1 = 1.0 / this._Ku1
            } else {
                this._Ku1 = 0.0;
                this._Lu1 = 0.0
            }
            _8u1._Su1._Li1(this._uu1._u5);
            this._uu1._wj1._Li1(_wj1);
            this._uu1._xj1._Li1(_Wj1(this._nr1,
                this._uu1._wj1));
            this._uu1._u5._Li1(this._uu1._xj1);
            this._zu1._3C(_Ij1(this._Au1, _Hi1._Pi1(this._uu1._u5, _8u1._Su1)))
        }, _Cv1: function (_To1) {
            return _Wj1(this._nr1, _To1)
        }, _Dv1: function (_Ev1) {
            return _Uj1(this._nr1._7S, _Ev1)
        }, _Fv1: function (_Gv1) {
            return _Yj1(this._nr1, _Gv1)
        }, _Hv1: function (_Iv1) {
            return _Vj1(this._nr1._7S, _Iv1)
        }, _Jv1: function (_Gv1) {
            return _Hi1._3C(this._zu1, _Ij1(this._Au1, _Hi1._Pi1(_Gv1, this._uu1._u5)))
        }, _Kv1: function (_To1) {
            return this._Jv1(this._Cv1(_To1))
        }, _Lv1: function () {
            return this._Bu1
        }, _w71: function (_cu1) {
            this._Bu1 = _cu1
        }, _Mv1: function () {
            return this._Cu1
        }, _y71: function (_du1) {
            this._Cu1 = _du1
        }, _Nv1: function () {
            return this._Du1
        }, _Ov1: function (scale) {
            this._Du1 = scale
        }, _Pv1: function (type) {
            _Th1(this._su1._Yu1() == !1);
            if (this._su1._Yu1() == !0) {
                return
            }
            if (this._L_ == type) {
                return
            }
            this._L_ = type;
            this._6v1();
            if (this._L_ == _8u1._9u1) {
                this._zu1._Ii1();
                this._Au1 = 0.0;
                this._uu1._zj1 = this._uu1._hv;
                this._uu1._xj1._Li1(this._uu1._u5);
                this._Qv1()
            }
            this._B71(!0);
            this._Eu1._Ii1();
            this._Fu1 = 0.0;
            var _Rv1 = this._wu1;
            while (_Rv1) {
                var _Sv1 = _Rv1;
                _Rv1 = _Rv1._yC;
                this._su1._1v1._fv1(_Sv1._av1)
            }
            this._wu1 = null;
            var _0v1 = this._su1._1v1._2v1;
            for (var _CO = this._Nu1; _CO; _CO = _CO._yu1) {
                var _Tv1 = _CO._Km1;
                for (var _t5 = 0; _t5 < _Tv1; ++_t5) {
                    _0v1._Xm1(_CO._Uv1[_t5]._Rm1)
                }
            }
        }, _Xk1: function () {
            return this._L_
        }, _Vv1: function (_Wv1) {
            if (_Wv1) {
                this._mu1 |= _8u1._nu1
            } else {
                this._mu1 &= ~_8u1._nu1;
            }
        }, _Xv1: function () {
            return (this._mu1 & _8u1._nu1) == _8u1._nu1
        }, _Yv1: function (_Wv1) {
            if (_Wv1) {
                this._mu1 |= _8u1._pu1
            } else {
                this._mu1 &= ~_8u1._pu1;
                this._B71(!0)
            }
        }, _Zv1: function () {
            return (this._mu1 & _8u1._pu1) == _8u1._pu1
        }
        , _B71: function (_Wv1) {
            if (_Wv1) {
                if ((this._mu1 & _8u1._qu1) == 0) {
                    this._mu1 |= _8u1._qu1;
                    this._Gu1 = 0.0
                }
            } else {
                this._mu1 &= ~_8u1._qu1;
                this._Gu1 = 0.0;
                this._zu1._Ii1();
                this._Au1 = 0.0;
                this._Eu1._Ii1();
                this._Fu1 = 0.0
            }
        }, __v1: function () {
            return (this._mu1 & _8u1._qu1) == _8u1._qu1
        }, _0w1: function (_Wv1) {
            _Th1(this._su1._Yu1() == !1);
            if (_Wv1 == this._1w1()) {
                return
            }
            if (_Wv1) {
                this._mu1 |= _8u1._ru1;
                var _0v1 = this._su1._1v1._2v1;
                for (var _CO = this._Nu1; _CO; _CO = _CO._yu1) {
                    _CO._3v1(_0v1, this._nr1)
                }
            } else {
                this._mu1 &= ~_8u1._ru1;
                var _0v1 = this._su1._1v1._2v1;
                for (var _CO = this._Nu1; _CO; _CO = _CO._yu1) {
                    _CO._gv1(_0v1)
                }
                var _Rv1 = this._wu1;
                while (_Rv1) {
                    var _Sv1 = _Rv1;
                    _Rv1 = _Rv1._yC;
                    this._su1._1v1._fv1(_Sv1._av1)
                }
                this._wu1 = null
            }
        }, _1w1: function () {
            return (this._mu1 & _8u1._ru1) == _8u1._ru1
        }, _2w1: function (_Wv1) {
            var status = (this._mu1 & _8u1._ou1) == _8u1._ou1;
            if (status == _Wv1) {
                return
            }
            if (_Wv1) {
                this._mu1 |= _8u1._ou1
            } else {
                this._mu1 &= ~_8u1._ou1
            }
            this._Au1 = 0.0;
            this._6v1()
        }, _3w1: function () {
            return (this._mu1 & _8u1._ou1) == _8u1._ou1
        }, _4w1: function () {
            return this._Nu1
        }, _5w1: function () {
            return this._vu1
        }
        , _6w1: function () {
            return this._wu1
        }, _7w1: function () {
            return this._yu1
        }, _Zm1: function () {
            return this._Mu1
        }, _8w1: function (data) {
            this._Mu1 = data
        }, _9w1: function () {
            return this._su1
        }, _Qv1: function () {
            _8u1._Tu1._7S._rC(this._uu1._zj1);
            _8u1._Tu1._lT._Li1(_Hi1._Pi1(this._uu1._xj1, _Uj1(_8u1._Tu1._7S, this._uu1._wj1)));
            var _0v1 = this._su1._1v1._2v1;
            for (var _CO = this._Nu1; _CO; _CO = _CO._yu1) {
                _CO._iv1(_0v1, _8u1._Tu1, this._nr1)
            }
        }, _aw1: function () {
            this._nr1._7S._rC(this._uu1._hv);
            this._nr1._lT._Li1(_Hi1._Pi1(this._uu1._u5, _Uj1(this._nr1._7S,
                this._uu1._wj1)))
        }, _bw1: function (_Cp1) {
            if (this._L_ != _8u1._Hu1 && _Cp1._L_ != _8u1._Hu1) {
                return !1
            }
            for (var _cw1 = this._vu1; _cw1; _cw1 = _cw1._yC) {
                if (_cw1._Cp1 == _Cp1) {
                    if (_cw1._dw1._ew1 == !1) {
                        return !1
                    }
                }
            }
            return !0
        }, _Dj1: function (alpha) {
            this._uu1._Dj1(alpha);
            this._uu1._u5._Li1(this._uu1._xj1);
            this._uu1._hv = this._uu1._zj1;
            this._nr1._7S._rC(this._uu1._hv);
            this._nr1._lT._Li1(_Hi1._Pi1(this._uu1._u5, _Uj1(this._nr1._7S, this._uu1._wj1)))
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            _aP['fixtures'] = null;
            _aP['type'] = this._L_;
            _aP['position'] = this._371()._Vi1();
            _aP['angle'] = this._qj1();
            _aP['linearVelocity'] = this._mv1()._Vi1();
            _aP['angularVelocity'] = this._ov1();
            _aP['linearDamping'] = this._Lv1();
            _aP['angularDamping'] = this._Mv1();
            _aP['allowSleep'] = this._Zv1();
            _aP['awake'] = this.__v1();
            _aP['fixedRotation'] = this._3w1();
            _aP['bullet'] = this._Xv1();
            _aP['active'] = this._1w1();
            _aP['gravityScale'] = this._Nv1();
            return _aP
        }
    };

    function _fw1() {
        this._gw1 = 0x0001;
        this._hw1 = 0xFFFF;
        this._iw1 = 0
    }

    _fw1.prototype = {
        _Qr: function () {
            var _QG = new _fw1();
            _QG._gw1 = this._gw1;
            _QG._hw1 = this._hw1;
            _QG._iw1 = this._iw1;
            return _QG
        }, _Li1: function (_QG) {
            this._gw1 = _QG._gw1;
            this._hw1 = _QG._hw1;
            this._iw1 = _QG._iw1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            _aP['categoryBits'] = this._gw1;
            _aP['maskBits'] = this._hw1;
            _aP['groupIndex'] = this._iw1;
            return _aP
        }, _Xi1: function (data) {
            this._gw1 = data['categoryBits'];
            this._hw1 = data['maskBits'];
            this._iw1 = data['groupIndex']
        }
    };

    function _Xu1() {
        this._gl1 = null;
        this._Qm1 = null;
        this._Sf = 0.2;
        this._jw1 = 0.0;
        this._5l1 = 0.0;
        this._kw1 = !1;
        this._QG = new _fw1();
        Object.seal(this)
    }

    _Xu1.prototype = {
        _Xi1: function (data) {
            this._Sf = data['friction'];
            this._jw1 = data['restitution'];
            this._5l1 = data['density'];
            this._kw1 = data['isSensor'];
            this._QG._Xi1(data['filter'])
        }
    };

    function _lw1() {
        this._2l1 = new _Bp1();
        this._d71 = null;
        this._0l1 = 0;
        this._Rm1 = 0
    };

    function _Zu1() {
        this._Mu1 = null;
        this._4v1 = null;
        this._yu1 = null;
        this._Uv1 = null;
        this._Km1 = 0;
        this._mw1 = null;
        this._5v1 = 0.0;
        this._nw1 = new _fw1();
        this._ow1 = !1;
        this._pw1 = 0;
        this._qw1 = 0
    }

    _Zu1.prototype = {
        _Xk1: function () {
            return this._mw1._Xk1()
        }, _rw1: function () {
            return this._mw1
        }, _t71: function (_sw1) {
            if (_sw1 != this._ow1) {
                this._4v1._B71(!0);
                this._ow1 = _sw1
            }
        }, _tw1: function () {
            return this._ow1
        }, _uw1: function (_QG) {
            this._nw1 = _QG;
            this._vw1()
        }, _ww1: function () {
            return this._nw1
        }, _vw1: function () {
            if (this._4v1 == null) {
                return
            }
            var _Tl1 = this._4v1._6w1();
            while (_Tl1) {
                var _av1 = _Tl1._av1;
                var _bv1 = _av1._cv1();
                var _dv1 = _av1._ev1();
                if (_bv1 == this || _dv1 == this) {
                    _av1._xw1()
                }
                _Tl1 = _Tl1._yC
            }
            var _ku1 = this._4v1._9w1();
            if (_ku1 == null) {
                return
            }
            var _0v1 = _ku1._1v1._2v1;
            for (var _t5 = 0; _t5 < this._Km1; ++_t5) {
                _0v1._Xm1(this._Uv1[_t5]._Rm1)
            }
        }, _yw1: function () {
            return this._4v1
        }
        , _7w1: function () {
            return this._yu1
        }, _Zm1: function () {
            return this._Mu1
        }, _8w1: function (data) {
            this._Mu1 = data
        }, _Zk1: function (_lT) {
            return this._mw1._Zk1(this._4v1._Bj1(), _lT)
        }, __k1: function (_XR, _VR, _0l1) {
            return this._mw1.__k1(_XR, _VR, this._4v1._Bj1(), _0l1)
        }, _Av1: function (_4l1) {
            this._mw1._3l1(_4l1, this._5v1)
        }, _h71: function (_5l1) {
            _Th1(_xi1(_5l1) && _5l1 >= 0.0);
            this._5v1 = _5l1
        }, _zw1: function () {
            return this._5v1
        }, _Aw1: function () {
            return this._pw1
        }, _n71: function (_Sf) {
            this._pw1 = _Sf
        }, _Bw1: function () {
            return this._qw1
        }, _k71: function (_jw1) {
            this._qw1 = _jw1
        }, _Cw1: function (_0l1) {
            _Th1(0 <= _0l1 && _0l1 < this._Km1);
            return this._Uv1[_0l1]._2l1
        }, __u1: function (body, _Vu1) {
            this._Mu1 = _Vu1._Qm1;
            this._pw1 = _Vu1._Sf;
            this._qw1 = _Vu1._jw1;
            this._4v1 = body;
            this._yu1 = null;
            this._nw1._Li1(_Vu1._QG);
            this._ow1 = _Vu1._kw1;
            this._mw1 = _Vu1._gl1._Qr();
            var _Dw1 = this._mw1._Yk1();
            this._Uv1 = new Array(_Dw1);
            for (var _t5 = 0; _t5 < _Dw1; ++_t5) {
                this._Uv1[_t5] = new _lw1();
                this._Uv1[_t5]._d71 = null;
                this._Uv1[_t5]._Rm1 = _Gm1._6n1
            }
            this._Km1 = 0;
            this._5v1 = _Vu1._5l1
        }, _fv1: function () {
            _Th1(this._Km1 == 0);
            this._Uv1 = null;
            this._mw1 = null
        }, _3v1: function (_0v1, _uj1) {
            _Th1(this._Km1 == 0);
            this._Km1 = this._mw1._Yk1();
            for (var _t5 = 0; _t5 < this._Km1; ++_t5) {
                var _Ew1 = this._Uv1[_t5];
                this._mw1._1l1(_Ew1._2l1, _uj1, _t5);
                _Ew1._Rm1 = _0v1._Pm1(_Ew1._2l1, _Ew1);
                _Ew1._d71 = this;
                _Ew1._0l1 = _t5
            }
        }, _gv1: function (_0v1) {
            for (var _t5 = 0; _t5 < this._Km1; ++_t5) {
                var _Ew1 = this._Uv1[_t5];
                _0v1._Tm1(_Ew1._Rm1);
                _Ew1._Rm1 = _Gm1._6n1
            }
            this._Km1 = 0
        }, _iv1: function (_0v1, _Fw1, _Gw1) {
            if (this._Km1 == 0) {
                return
            }
            for (var _t5 = 0; _t5 < this._Km1; ++_t5) {
                var _Ew1 = this._Uv1[_t5];
                var _Ip1 = new _Bp1(), _Jp1 = new _Bp1();
                this._mw1._1l1(_Ip1, _Fw1, _Ew1._0l1);
                this._mw1._1l1(_Jp1, _Gw1, _Ew1._0l1);
                _Ew1._2l1._Hp1(_Ip1, _Jp1);
                var _Wm1 = _Hi1._Pi1(_Gw1._lT, _Fw1._lT);
                _0v1._Vm1(_Ew1._Rm1, _Ew1._2l1, _Wm1)
            }
        }, _6l1: function (_lT, _cE, _tt, _0l1) {
            this._mw1._6l1(this._4v1._Bj1(), _lT, _cE, _tt, _0l1)
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            _aP['shape'] = null;
            _aP['friction'] = this._pw1;
            _aP['restitution'] = this._qw1;
            _aP['density'] = this._5v1;
            _aP['isSensor'] = this._ow1;
            _aP['filter'] = this._nw1._Vi1();
            return _aP
        }
    };

    function _Hw1() {
    }

    _Hw1.prototype = {
        _Iw1: function (_dw1) {
        }, _Jw1: function (_d71) {
        }, _Kw1: function (__a1) {
        }, _Lw1: function (index) {
        }
    };

    function _Mw1() {
    }

    _Mw1.prototype = {
        _bw1: function (_bv1, _dv1) {
            var _Nw1 = _bv1._ww1();
            var _Ow1 = _dv1._ww1();
            if (_Nw1._iw1 == _Ow1._iw1 && _Nw1._iw1 != 0) {
                return _Nw1._iw1 > 0
            }
            var _Pw1 = (_Nw1._hw1 & _Ow1._gw1) != 0 && (_Nw1._gw1 & _Ow1._hw1) != 0;
            return _Pw1
        }
    };

    function _Qw1() {
        this._Rw1 = new Array(_Yh1);
        this._Sw1 = new Array(_Yh1);
        this._Gu = 0
    }

    function _Tw1() {
    }

    _Tw1.prototype = {
        _Uw1: function (_av1) {
        }, _Vw1: function (_av1) {
        }, _Ww1: function (_av1,
                           _Xw1) {
        }, _Yw1: function (_av1, _wv1) {
        }
    };

    function _Zw1() {
    }

    _Zw1.prototype = {
        __w1: function (_d71) {
            return !1
        }, _0x1: function (index) {
            return !1
        }
    };

    function _1x1() {
    }

    _1x1.prototype = {
        __w1: function (_d71, _Wo1, _8l1, _jl1) {
        }, _0x1: function (index, _Wo1, _8l1, _jl1) {
            return 0
        }
    };

    function _2x1() {
        this._3x1 = 0;
        this._4x1 = 0;
        this._5x1 = 0;
        this._6x1 = 0;
        this._7x1 = 0;
        this._8x1 = !1
    }

    function _9x1() {
        this._u5 = new _Hi1();
        this._hv = 0
    }

    function _ax1() {
        this._uv = new _Hi1();
        this._v5 = 0
    }

    function _bx1() {
        this._vh1 = new _2x1();
        this._cx1 = null;
        this._dx1 = null
    }

    var _ex1 = _Ah1._Mh1("step");
    var _fx1 = _Ah1._Mh1("collide", "step");
    var _gx1 = _Ah1._Mh1("solve", "step");
    var _hx1 = _Ah1._Mh1("solveTOI", "step");
    var _ix1 = _Ah1._Mh1("broadphase", "step");

    function _7v1(_Zf) {
        this._1v1 = new _jx1();
        this._kx1 = null;
        this._lx1 = null;
        this._mx1 = null;
        this._vu1 = null;
        this._nx1 = 0;
        this._ox1 = 0;
        this._px1 = !0;
        this._qx1 = !0;
        this._rx1 = !1;
        this._sx1 = !0;
        this._tx1 = !0;
        this._ux1 = _Zf;
        this._mu1 = _7v1._vx1;
        this._wx1 = 0.0;
        this._xx1 = new _2x1();
        this._yx1 = new _zx1();
        this._Ax1 = new _Bx1();
        this._Ax1._su1 = this
    }

    function _Cx1() {
        this._0v1 = null;
        this._5n1 = null
    }

    _Cx1.prototype = {
        _ln1: function (_Rm1) {
            var _Ew1 = this._0v1._Zm1(_Rm1);
            return this._5n1.__w1(_Ew1._d71)
        }
    };

    function _Dx1() {
        this._0v1 = null;
        this._5n1 = null
    }

    _Dx1.prototype = {
        _ys1: function (_VR, _Rm1) {
            var _Qm1 = this._0v1._Zm1(_Rm1);
            var _Ew1 = _Qm1;
            var _d71 = _Ew1._d71;
            var index = _Ew1._0l1;
            var _XR = new _Ap1();
            var _Bt = _d71.__k1(_XR, _VR, index);
            if (_Bt) {
                var _jl1 = _XR._jl1;
                var _Wo1 = _Hi1._3C(_Hi1.Multiply((1.0 - _jl1), _VR._yk1), _Hi1.Multiply(_jl1, _VR._zk1));
                return this._5n1.__w1(_d71, _Wo1, _XR._8l1, _jl1)
            }
            return _VR._il1
        }
    };
    _7v1._Ex1 = new _vj1();
    _7v1._Fx1 = new _vj1();
    _7v1._Gx1 = new _vj1();
    _7v1.prototype = {
        _fv1: function () {
            var _Nt = this._mx1;
            while (_Nt) {
                var _Hx1 = _Nt._yu1;
                var _CO = _Nt._Nu1;
                while (_CO) {
                    var _Ix1 = _CO._yu1;
                    _CO._Km1 = 0;
                    _CO._fv1();
                    _CO = _Ix1
                }
                _Nt = _Hx1
            }
        }, _Jx1: function (listener) {
            this._kx1 = listener
        }, _Kx1: function (_QG) {
            this._1v1._Lx1 = _QG
        }, _Mx1: function (listener) {
            this._1v1._Nx1 = listener
        }, _Ox1: function (_Px1) {
            this._lx1 = _Px1
        }, _T71: function (_Vu1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return null
            }
            var _Nt = new _8u1(_Vu1, this);
            _Nt._xu1 = null;
            _Nt._yu1 = this._mx1;
            if (this._mx1) {
                this._mx1._xu1 = _Nt
            }
            this._mx1 = _Nt;
            ++this._nx1;
            return _Nt
        }, _Qx1: function (_Nt) {
            _Th1(this._nx1 > 0);
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return
            }
            var _Rx1 = _Nt._vu1;
            while (_Rx1) {
                var _Sx1 = _Rx1;
                _Rx1 = _Rx1._yC;
                if (this._kx1) {
                    this._kx1._Iw1(_Sx1._dw1)
                }
                this._Tx1(_Sx1._dw1);
                _Nt._vu1 = _Rx1
            }
            _Nt._vu1 = null;
            var _Rv1 = _Nt._wu1;
            while (_Rv1) {
                var _Sv1 = _Rv1;
                _Rv1 = _Rv1._yC;
                this._1v1._fv1(_Sv1._av1)
            }
            _Nt._wu1 = null;
            var _CO = _Nt._Nu1;
            while (_CO) {
                var _Ux1 = _CO;
                _CO = _CO._yu1;
                if (this._kx1) {
                    this._kx1._Jw1(_Ux1)
                }
                _Ux1._gv1(this._1v1._2v1);
                _Ux1._fv1();
                _Nt._Nu1 = _CO;
                _Nt._Ou1 -= 1
            }
            _Nt._Nu1 = null;
            _Nt._Ou1 = 0;
            if (_Nt._xu1) {
                _Nt._xu1._yu1 = _Nt._yu1
            }
            if (_Nt._yu1) {
                _Nt._yu1._xu1 = _Nt._xu1
            }
            if (_Nt == this._mx1) {
                this._mx1 = _Nt._yu1
            }
            _Nt._Vx1 = !0;
            --this._nx1
        }, _Wx1: function (_Vu1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return null
            }
            var _Rt = _Xx1.__u1(_Vu1);
            _Rt._xu1 = null;
            _Rt._yu1 = this._vu1;
            if (this._vu1) {
                this._vu1._xu1 = _Rt
            }
            this._vu1 = _Rt;
            ++this._ox1;
            _Rt._Yx1._dw1 = _Rt;
            _Rt._Yx1._Cp1 = _Rt._Zx1;
            _Rt._Yx1.__x1 = null;
            _Rt._Yx1._yC = _Rt._0y1._vu1;
            if (_Rt._0y1._vu1) _Rt._0y1._vu1.__x1 = _Rt._Yx1;
            _Rt._0y1._vu1 = _Rt._Yx1;
            _Rt._1y1._dw1 = _Rt;
            _Rt._1y1._Cp1 = _Rt._0y1;
            _Rt._1y1.__x1 = null;
            _Rt._1y1._yC = _Rt._Zx1._vu1;
            if (_Rt._Zx1._vu1) _Rt._Zx1._vu1.__x1 = _Rt._1y1;
            _Rt._Zx1._vu1 = _Rt._1y1;
            var _2y1 = _Vu1._2y1;
            var _3y1 = _Vu1._3y1;
            if (_Vu1._4y1 == !1) {
                var _Tl1 = _3y1._6w1();
                while (_Tl1) {
                    if (_Tl1._Cp1 == _2y1) {
                        _Tl1._av1._xw1()
                    }
                    _Tl1 = _Tl1._yC
                }
            }
            return _Rt
        }, _Tx1: function (_Rt) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return
            }
            var _4y1 = _Rt._ew1;
            if (_Rt._xu1) {
                _Rt._xu1._yu1 = _Rt._yu1
            }
            if (_Rt._yu1) {
                _Rt._yu1._xu1 = _Rt._xu1
            }
            if (_Rt == this._vu1) {
                this._vu1 = _Rt._yu1
            }
            var _2y1 = _Rt._0y1;
            var _3y1 = _Rt._Zx1;
            _2y1._B71(!0);
            _3y1._B71(!0);
            if (_Rt._Yx1.__x1) {
                _Rt._Yx1.__x1._yC = _Rt._Yx1._yC
            }
            if (_Rt._Yx1._yC) {
                _Rt._Yx1._yC.__x1 = _Rt._Yx1.__x1
            }
            if (_Rt._Yx1 == _2y1._vu1) {
                _2y1._vu1 = _Rt._Yx1._yC
            }
            _Rt._Yx1.__x1 = null;
            _Rt._Yx1._yC = null;
            if (_Rt._1y1.__x1) {
                _Rt._1y1.__x1._yC = _Rt._1y1._yC
            }
            if (_Rt._1y1._yC) {
                _Rt._1y1._yC.__x1 = _Rt._1y1.__x1
            }
            if (_Rt._1y1 == _3y1._vu1) {
                _3y1._vu1 = _Rt._1y1._yC
            }
            _Rt._1y1.__x1 = null;
            _Rt._1y1._yC = null;
            _Xx1._fv1(_Rt);
            _Th1(this._ox1 > 0);
            --this._ox1;
            if (_4y1 == !1) {
                var _Tl1 = _3y1._6w1();
                while (_Tl1) {
                    if (_Tl1._Cp1 == _2y1) {
                        _Tl1._av1._xw1()
                    }
                    _Tl1 = _Tl1._yC
                }
            }
        }, _5y1: function (_3x1, _6x1, _7x1) {
            _ex1.start();
            if (this._mu1 & _7v1._8v1) {
                this._1v1._6y1();
                this._mu1 &= ~_7v1._8v1
            }
            this._mu1 |= _7v1._7y1;
            this._xx1._3x1 = _3x1;
            this._xx1._6x1 = _6x1;
            this._xx1._7x1 = _7x1;
            if (_3x1 > 0.0) {
                this._xx1._4x1 = 1.0 / _3x1
            } else {
                this._xx1._4x1 = 0.0
            }
            this._xx1._5x1 = this._wx1 * _3x1;
            this._xx1._8x1 = this._px1;
            {
                _fx1.start();
                this._1v1._Fr1();
                _fx1.stop()
            }
            if (this._sx1 && this._xx1._3x1 > 0.0) {
                _gx1.start();
                this._Ax1._7j1(this._xx1);
                this._7j1(this._xx1);
                _gx1.stop()
            }
            if (this._qx1 && this._xx1._3x1 > 0.0) {
                _hx1.start();
                this._8y1(this._xx1);
                _hx1.stop()
            }
            if (this._xx1._3x1 > 0.0) {
                this._wx1 = this._xx1._4x1
            }
            if (this._mu1 & _7v1._vx1) {
                this._9y1()
            }
            this._mu1 &= ~_7v1._7y1;
            _ex1.stop()
        }, _9y1: function () {
            for (var body = this._mx1; body; body = body._7w1()) {
                body._Eu1.x = body._Eu1.y = 0;
                body._Fu1 = 0.0
            }
        }, _ay1: function () {
            if (this._lx1 == null) {
                return
            }
            var _Hf1 = this._lx1._mk1();
            if (_Hf1 & _jk1._Ek1) {
                for (var _Nt = this._mx1; _Nt; _Nt = _Nt._7w1()) {
                    var _uj1 = _Nt._Bj1();
                    for (var _CO = _Nt._4w1(); _CO; _CO = _CO._7w1()) {
                        if (_Nt._1w1() == !1) {
                            this._by1(_CO, _uj1, new _ik1(0.5, 0.5, 0.3))
                        } else if (_Nt._Xk1() == _8u1._9u1) {
                            this._by1(_CO, _uj1, new _ik1(0.5, 0.9, 0.5))
                        } else if (_Nt._Xk1() == _8u1._Pu1) {
                            this._by1(_CO, _uj1, new _ik1(0.5, 0.5, 0.9))
                        } else if (_Nt.__v1() == !1) {
                            this._by1(_CO, _uj1, new _ik1(0.6, 0.6, 0.6))
                        } else {
                            this._by1(_CO, _uj1, new _ik1(0.9, 0.7, 0.7))
                        }
                    }
                }
                this._cy1(this._Ax1)
            }
            if (_Hf1 & _jk1._Fk1) {
                for (var _Rt = this._vu1; _Rt; _Rt = _Rt._7w1()) {
                    this._dy1(_Rt)
                }
            }
            if (_Hf1 & _jk1._Ok1) {
                var color = new _ik1(0.3, 0.9, 0.9);
                for (var _u5 = this._1v1._wu1; _u5; _u5 = _u5._7w1()) {
                    var _bv1 = _u5._cv1();
                    var _dv1 = _u5._ev1();
                    var _ey1 = _bv1._Cw1(_u5._fy1())._Ep1();
                    var _gy1 = _dv1._Cw1(_u5._hy1())._Ep1();
                    this._lx1._xk1(_ey1, _gy1, color)
                }
            }
            if (_Hf1 & _jk1._Gk1) {
                var color = new _ik1(0.9, 0.3, 0.9);
                var _iy1 = new _ik1(0.3, 0.3, 0.9);
                var _jy1 = this._1v1._2v1;
                for (var _Nt = this._mx1; _Nt; _Nt = _Nt._7w1()) {
                    if (_Nt._1w1() == !1) {
                        continue
                    }
                    for (var _CO = _Nt._4w1(); _CO; _CO = _CO._7w1()) {
                        for (var _t5 = 0; _t5 < _CO._Km1; ++_t5) {
                            var _Ew1 = _CO._Uv1[_t5];
                            var _2l1 = _jy1._Ym1(_Ew1._Rm1);
                            var _wm1 = [];
                            _wm1[0] = new _Hi1(_2l1._kl1.x, _2l1._kl1.y);
                            _wm1[1] = new _Hi1(_2l1._ll1.x,
                                _2l1._kl1.y);
                            _wm1[2] = new _Hi1(_2l1._ll1.x, _2l1._ll1.y);
                            _wm1[3] = new _Hi1(_2l1._kl1.x, _2l1._ll1.y);
                            this._lx1._qk1(_wm1, 4, color);
                            var _ky1 = new _Bp1();
                            _CO._rw1()._1l1(_ky1, _Nt._Bj1(), 0);
                            var _wm1 = [];
                            _wm1[0] = new _Hi1(_ky1._kl1.x, _ky1._kl1.y);
                            _wm1[1] = new _Hi1(_ky1._ll1.x, _ky1._kl1.y);
                            _wm1[2] = new _Hi1(_ky1._ll1.x, _ky1._ll1.y);
                            _wm1[3] = new _Hi1(_ky1._kl1.x, _ky1._ll1.y);
                            this._lx1._qk1(_wm1, 4, _iy1)
                        }
                    }
                }
            }
            if (_Hf1 & _jk1._Hk1) {
                for (var _Nt = this._mx1; _Nt; _Nt = _Nt._7w1()) {
                    var _uj1 = _Nt._Bj1()._Qr();
                    _uj1._lT = _Nt._jv1();
                    this._lx1._Ak1(_uj1)
                }
            }
        }, _ly1: function (_5n1, _2l1) {
            var _my1 = new _Cx1();
            _my1._0v1 = this._1v1._2v1;
            _my1._5n1 = _5n1;
            this._1v1._2v1._8n1(_my1, _2l1);
            this._Ax1._ly1(_5n1, _2l1)
        }, __k1: function (_5n1, _ny1, _oy1) {
            var _my1 = new _Dx1();
            _my1._0v1 = this._1v1._2v1;
            _my1._5n1 = _5n1;
            var _VR = new _zp1();
            _VR._il1 = 1.0;
            _VR._yk1 = _ny1;
            _VR._zk1 = _oy1;
            this._1v1._2v1.__k1(_my1, _VR);
            this._Ax1.__k1(_5n1, _ny1, _oy1)
        }, _py1: function () {
            return this._mx1
        }, _5w1: function () {
            return this._vu1
        }, _6w1: function () {
            return this._1v1._wu1
        }, _qy1: function (_Wv1) {
            if (_Wv1 == this._tx1) {
                return
            }
            this._tx1 = _Wv1;
            if (this._tx1 == !1) {
                for (var _Nt = this._mx1; _Nt; _Nt = _Nt._yu1) {
                    _Nt._B71(!0)
                }
            }
        }, _ry1: function () {
            return this._tx1
        }, _sy1: function (_Wv1) {
            this._px1 = _Wv1;
        }, _ty1: function () {
            return this._px1
        }, _uy1: function (_Wv1) {
            this._qx1 = _Wv1
        }, _vy1: function () {
            return this._qx1
        }, _wy1: function (_Wv1) {
            this._rx1 = _Wv1
        }, _xy1: function () {
            return this._rx1
        }, _3n1: function () {
            return this._1v1._2v1._3n1()
        }, _yy1: function () {
            return this._nx1
        }, _zy1: function () {
            return this._ox1
        }, _Ay1: function () {
            return this._1v1._By1
        }, _en1: function () {
            return this._1v1._2v1._en1()
        }
        , _fn1: function () {
            return this._1v1._2v1._fn1()
        }, _hn1: function () {
            return this._1v1._2v1._hn1()
        }, _Cy1: function (_Zf) {
            this._ux1 = _Zf;
        }, _Dy1: function () {
            return this._ux1
        }, _Yu1: function () {
            return (this._mu1 & _7v1._7y1) == _7v1._7y1
        }, _Ey1: function (_Wv1) {
            if (_Wv1) {
                this._mu1 |= _7v1._vx1
            } else {
                this._mu1 &= ~_7v1._vx1
            }
        }, _Fy1: function () {
            return (this._mu1 & _7v1._vx1) == _7v1._vx1
        }, _jn1: function (_kn1) {
            _Th1((this._mu1 & _7v1._7y1) == 0);
            if ((this._mu1 & _7v1._7y1) == _7v1._7y1) {
                return
            }
            for (var _Nt = this._mx1; _Nt; _Nt = _Nt._yu1) {
                _Nt._nr1._lT._Pi1(_kn1);
                _Nt._uu1._xj1._Pi1(_kn1);
                _Nt._uu1._u5._Pi1(_kn1)
            }
            for (var _Rt = this._vu1; _Rt; _Rt = _Rt._yu1) {
                _Rt._jn1(_kn1)
            }
            this._1v1._2v1._jn1(_kn1);
        }, _Gy1: function () {
            return this._1v1
        }, _7j1: function (_vh1) {
            for (var _Nt = this._mx1; _Nt; _Nt = _Nt._yu1) {
                _Nt._tu1._Li1(_Nt._nr1)
            }
            this._yx1._ap1(this._nx1, this._1v1._By1, this._ox1, this._1v1._Nx1);
            for (var _Nt = this._mx1; _Nt; _Nt = _Nt._yu1) {
                _Nt._mu1 &= ~_8u1._Qu1
            }
            for (var _u5 = this._1v1._wu1; _u5; _u5 = _u5._yu1) {
                _u5._mu1 &= ~_Hy1._Qu1
            }
            for (var _Rt = this._vu1; _Rt; _Rt = _Rt._yu1) {
                _Rt._Iy1 = !1
            }
            var _Jy1 = this._nx1;
            var _qh1 = new Array(_Jy1);
            for (var _Ky1 = this._mx1; _Ky1; _Ky1 = _Ky1._yu1) {
                if (_Ky1._mu1 & _8u1._Qu1) {
                    continue
                }
                if (_Ky1.__v1() == !1 || _Ky1._1w1() == !1) {
                    continue
                }
                if (_Ky1._Xk1() == _8u1._9u1) {
                    continue
                }
                this._yx1._NA();
                var _Ly1 = 0;
                _qh1[_Ly1++] = _Ky1;
                _Ky1._mu1 |= _8u1._Qu1;
                while (_Ly1 > 0) {
                    var _Nt = _qh1[--_Ly1];
                    _Th1(_Nt._1w1() == !0);
                    this._yx1._My1(_Nt);
                    _Nt._B71(!0);
                    if (_Nt._Xk1() == _8u1._9u1) {
                        continue
                    }
                    for (var _Rv1 = _Nt._wu1; _Rv1; _Rv1 = _Rv1._yC) {
                        var _av1 = _Rv1._av1;
                        if (_av1._mu1 & _Hy1._Qu1) {
                            continue
                        }
                        if (_av1._Ny1() == !1 || _av1._Oy1() == !1) {
                            continue
                        }
                        var _Py1 = _av1._Qy1._ow1;
                        var _Ry1 = _av1._Sy1._ow1;
                        if (_Py1 || _Ry1) {
                            continue
                        }
                        this._yx1._Ty1(_av1);
                        _av1._mu1 |= _Hy1._Qu1;
                        var _Cp1 = _Rv1._Cp1;
                        if (_Cp1._mu1 & _8u1._Qu1) {
                            continue
                        }
                        _Th1(_Ly1 < _Jy1);
                        _qh1[_Ly1++] = _Cp1;
                        _Cp1._mu1 |= _8u1._Qu1
                    }
                    for (var _Rx1 = _Nt._vu1; _Rx1; _Rx1 = _Rx1._yC) {
                        if (_Rx1._dw1._Iy1 == !0) {
                            continue
                        }
                        var _Cp1 = _Rx1._Cp1;
                        if (_Cp1._1w1() == !1) {
                            continue
                        }
                        this._yx1._Uy1(_Rx1._dw1);
                        _Rx1._dw1._Iy1 = !0;
                        if (_Cp1._mu1 & _8u1._Qu1) {
                            continue
                        }
                        _Th1(_Ly1 < _Jy1);
                        _qh1[_Ly1++] = _Cp1;
                        _Cp1._mu1 |= _8u1._Qu1
                    }
                }
                this._yx1._7j1(_vh1, this._ux1,
                    this._tx1);
                for (var _t5 = 0; _t5 < this._yx1._nx1; ++_t5) {
                    var _Nt = this._yx1._Vy1[_t5];
                    if (_Nt._Xk1() == _8u1._9u1) {
                        _Nt._mu1 &= ~_8u1._Qu1;
                    }
                }
            }
            {
                _ix1.start();
                for (var _Nt = this._mx1; _Nt; _Nt = _Nt._7w1()) {
                    if ((_Nt._mu1 & _8u1._Qu1) == 0) {
                        continue
                    }
                    if (_Nt._Xk1() == _8u1._9u1) {
                        continue
                    }
                    _Nt._Qv1()
                }
                this._1v1._6y1();
                _ix1.stop()
            }
        }, _8y1: function (_vh1) {
            this._yx1._ap1(2 * _5i1, _5i1, 0, this._1v1._Nx1);
            if (this._sx1) {
                for (var _Nt = this._mx1; _Nt; _Nt = _Nt._yu1) {
                    _Nt._mu1 &= ~_8u1._Qu1;
                    _Nt._uu1._Aj1 = 0.0
                }
                for (var _u5 = this._1v1._wu1; _u5; _u5 = _u5._yu1) {
                    _u5._mu1 &= ~(_Hy1._Ru1 | _Hy1._Qu1);
                    _u5._Wy1 = 0;
                    _u5._Xy1 = 1.0
                }
            }
            for (; ;) {
                var _Yy1 = null;
                var _Zy1 = 1.0;
                for (var _u5 = this._1v1._wu1; _u5; _u5 = _u5._yu1) {
                    if (_u5._Ny1() == !1) {
                        continue
                    }
                    if (_u5._Wy1 > _4i1) {
                        continue
                    }
                    var alpha = 1.0;
                    if (_u5._mu1 & _Hy1._Ru1) {
                        alpha = _u5._Xy1
                    } else {
                        var __y1 = _u5._cv1();
                        var _0z1 = _u5._ev1();
                        if (__y1._tw1() || _0z1._tw1()) {
                            continue
                        }
                        var _1z1 = __y1._yw1();
                        var _2z1 = _0z1._yw1();
                        var _Oo1 = _1z1._L_;
                        var _Po1 = _2z1._L_;
                        _Th1(_Oo1 == _8u1._Hu1 || _Po1 == _8u1._Hu1);
                        var _3z1 = _1z1.__v1() && _Oo1 != _8u1._9u1;
                        var _4z1 = _2z1.__v1() && _Po1 != _8u1._9u1;
                        if (_3z1 == !1 && _4z1 == !1) {
                            continue
                        }
                        var _5z1 = _1z1._Xv1() || _Oo1 != _8u1._Hu1;
                        var _6z1 = _2z1._Xv1() || _Po1 != _8u1._Hu1;
                        if (_5z1 == !1 && _6z1 == !1) {
                            continue;
                        }
                        var _Aj1 = _1z1._uu1._Aj1;
                        if (_1z1._uu1._Aj1 < _2z1._uu1._Aj1) {
                            _Aj1 = _2z1._uu1._Aj1;
                            _1z1._uu1._Dj1(_Aj1)
                        } else if (_2z1._uu1._Aj1 < _1z1._uu1._Aj1) {
                            _Aj1 = _1z1._uu1._Aj1;
                            _2z1._uu1._Dj1(_Aj1)
                        }
                        _Th1(_Aj1 < 1.0);
                        var _un1 = _u5._fy1();
                        var _vn1 = _u5._hy1();
                        var _VR = new _jt1();
                        _VR._xn1._rC(__y1._rw1(), _un1);
                        _VR._yn1._rC(_0z1._rw1(), _vn1);
                        _VR._kt1._Li1(_1z1._uu1);
                        _VR._lt1._Li1(_2z1._uu1);
                        _VR._mt1 = 1.0;
                        var _XR = new _nt1();
                        _Qt1(_XR,
                            _VR);
                        var _Cj1 = _XR._Mt;
                        if (_XR._c31 == _nt1._qt1) {
                            alpha = _6k1(_Aj1 + (1.0 - _Aj1) * _Cj1, 1.0)
                        } else {
                            alpha = 1.0
                        }
                        _u5._Xy1 = alpha;
                        _u5._mu1 |= _Hy1._Ru1
                    }
                    if (alpha < _Zy1) {
                        _Yy1 = _u5;
                        _Zy1 = alpha
                    }
                }
                if (_Yy1 == null || 1.0 - 10.0 * _Wh1 < _Zy1) {
                    this._sx1 = !0;
                    break
                }
                var __y1 = _Yy1._cv1();
                var _0z1 = _Yy1._ev1();
                var _1z1 = __y1._yw1();
                var _2z1 = _0z1._yw1();
                _7v1._Ex1._Li1(_1z1._uu1);
                _7v1._Fx1._Li1(_2z1._uu1);
                _1z1._Dj1(_Zy1);
                _2z1._Dj1(_Zy1);
                _Yy1._OA(this._1v1._Nx1);
                _Yy1._mu1 &= ~_Hy1._Ru1;
                ++_Yy1._Wy1;
                if (_Yy1._Ny1() == !1 || _Yy1._Oy1() == !1) {
                    _Yy1._7z1(!1);
                    _1z1._uu1._Li1(_7v1._Ex1);
                    _2z1._uu1._Li1(_7v1._Fx1);
                    _1z1._aw1();
                    _2z1._aw1();
                    continue
                }
                _1z1._B71(!0);
                _2z1._B71(!0);
                this._yx1._NA();
                this._yx1._My1(_1z1);
                this._yx1._My1(_2z1);
                this._yx1._Ty1(_Yy1);
                _1z1._mu1 |= _8u1._Qu1;
                _2z1._mu1 |= _8u1._Qu1;
                _Yy1._mu1 |= _Hy1._Qu1;
                var _8z1 = [_1z1, _2z1];
                for (var _t5 = 0; _t5 < 2; ++_t5) {
                    var body = _8z1[_t5];
                    if (body._L_ == _8u1._Hu1) {
                        for (var _Rv1 = body._wu1; _Rv1; _Rv1 = _Rv1._yC) {
                            if (this._yx1._nx1 == this._yx1._9z1) {
                                break
                            }
                            if (this._yx1._By1 == this._yx1._az1) {
                                break
                            }
                            var _av1 = _Rv1._av1;
                            if (_av1._mu1 & _Hy1._Qu1) {
                                continue
                            }
                            var _Cp1 = _Rv1._Cp1;
                            if (_Cp1._L_ == _8u1._Hu1 && body._Xv1() == !1 && _Cp1._Xv1() == !1) {
                                continue
                            }
                            var _Py1 = _av1._Qy1._ow1;
                            var _Ry1 = _av1._Sy1._ow1;
                            if (_Py1 || _Ry1) {
                                continue
                            }
                            _7v1._Gx1._Li1(_Cp1._uu1);
                            if ((_Cp1._mu1 & _8u1._Qu1) == 0) {
                                _Cp1._Dj1(_Zy1)
                            }
                            _av1._OA(this._1v1._Nx1);
                            if (_av1._Ny1() == !1) {
                                _Cp1._uu1._Li1(_7v1._Gx1);
                                _Cp1._aw1();
                                continue
                            }
                            if (_av1._Oy1() == !1) {
                                _Cp1._uu1._Li1(_7v1._Gx1);
                                _Cp1._aw1();
                                continue
                            }
                            _av1._mu1 |= _Hy1._Qu1;
                            this._yx1._Ty1(_av1);
                            if (_Cp1._mu1 & _8u1._Qu1) {
                                continue
                            }
                            _Cp1._mu1 |= _8u1._Qu1;
                            if (_Cp1._L_ != _8u1._9u1) {
                                _Cp1._B71(!0)
                            }
                            this._yx1._My1(_Cp1)
                        }
                    }
                }
                var _bz1 = new _2x1();
                _bz1._3x1 = (1.0 - _Zy1) * _vh1._3x1;
                _bz1._4x1 = 1.0 / _bz1._3x1;
                _bz1._5x1 = 1.0;
                _bz1._7x1 = 20;
                _bz1._6x1 = _vh1._6x1;
                _bz1._8x1 = !1;
                this._yx1._8y1(_bz1, _1z1._lu1, _2z1._lu1);
                for (var _t5 = 0; _t5 < this._yx1._nx1; ++_t5) {
                    var body = this._yx1._Vy1[_t5];
                    body._mu1 &= ~_8u1._Qu1;
                    if (body._L_ != _8u1._Hu1) {
                        continue
                    }
                    body._Qv1();
                    for (var _Rv1 = body._wu1; _Rv1; _Rv1 = _Rv1._yC) {
                        _Rv1._av1._mu1 &= ~(_Hy1._Ru1 | _Hy1._Qu1)
                    }
                }
                this._1v1._6y1();
                if (this._rx1) {
                    this._sx1 = !1;
                    break
                }
            }
        }, _dy1: function (_dw1) {
            var _2y1 = _dw1._cz1();
            var _3y1 = _dw1._dz1();
            var _9q1 = _2y1._Bj1();
            var _bq1 = _3y1._Bj1();
            var _xt = _9q1._lT;
            var _zt = _bq1._lT;
            var _yk1 = _dw1._ez1();
            var _zk1 = _dw1._fz1();
            var color = new _ik1(0.5, 0.8, 0.8);
            switch (_dw1._Xk1()) {
                case _Xx1._gz1:
                    this._lx1._xk1(_yk1, _zk1, color);
                    break;
                case _Xx1._hz1: {
                    var _iz1 = _dw1;
                    var _NL = _iz1._jz1();
                    var _OL = _iz1._kz1();
                    this._lx1._xk1(_NL, _yk1, color);
                    this._lx1._xk1(_OL, _zk1, color);
                    this._lx1._xk1(_NL, _OL, color)
                }
                    break;
                case _Xx1._lz1:
                    break;
                case _Xx1._mz1:
                    this._lx1._nz1(_dw1._oz1(), 5.0, color);
                default :
                    this._lx1._xk1(_xt, _yk1,
                        color);
                    this._lx1._xk1(_yk1, _zk1, color);
                    this._lx1._xk1(_zt, _zk1, color)
            }
        }, _by1: function (_d71, _uj1, color) {
            switch (_d71._Xk1()) {
                case _Vk1._9l1: {
                    var _nn1 = _d71._rw1();
                    var _tk1 = _Wj1(_uj1, _nn1._fl1);
                    var _uk1 = _nn1._Wk1;
                    var _wk1 = _Uj1(_uj1._7S, new _Hi1(1.0, 0.0));
                    this._lx1._vk1(_tk1, _uk1, _wk1, color)
                }
                    break;
                case _Vk1._al1: {
                    var _Tl1 = _d71._rw1();
                    var _tw = _Wj1(_uj1, _Tl1._sl1);
                    var _uw = _Wj1(_uj1, _Tl1._tl1);
                    this._lx1._xk1(_tw, _uw, color)
                }
                    break;
                case _Vk1._cl1: {
                    var _pn1 = _d71._rw1();
                    var _Gu = _pn1._Gl1;
                    var vertices = _pn1._Fl1;
                    var _tw = _Wj1(_uj1,
                        vertices[0]);
                    for (var _t5 = 1; _t5 < _Gu; ++_t5) {
                        var _uw = _Wj1(_uj1, vertices[_t5]);
                        this._lx1._xk1(_tw, _uw, color);
                        _tw = _uw
                    }
                }
                    break;
                case _Vk1._bl1: {
                    var _pz1 = _d71._rw1();
                    var vertexCount = _pz1._Gl1;
                    _Th1(vertexCount <= _Zh1);
                    var vertices = new Array(_Zh1);
                    for (var _t5 = 0; _t5 < vertexCount; ++_t5) {
                        vertices[_t5] = _Wj1(_uj1, _pz1._Fl1[_t5])
                    }
                    this._lx1._rk1(vertices, vertexCount, color)
                }
                    break;
                default :
                    break
            }
        }, _qz1: function () {
            return this._Ax1._qz1()
        }, _rz1: function (_Gu) {
            this._Ax1._rz1(_Gu)
        }, _sz1: function (_5l1) {
            this._Ax1._sz1(_5l1)
        }, _tz1: function () {
            return this._Ax1._tz1()
        }, _uz1: function (_iu1) {
            this._Ax1._uz1(_iu1)
        }, _vz1: function () {
            return this._Ax1._vz1()
        }, _wz1: function (_xz1) {
            this._Ax1._wz1(_xz1)
        }, _yz1: function () {
            return this._Ax1._yz1()
        }, _zz1: function (_uk1) {
            this._Ax1._zz1(_uk1)
        }, _Az1: function () {
            return this._Ax1._Az1()
        }, _Bz1: function (_Vu1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return 0
            }
            var _lT = this._Ax1._Bz1(_Vu1);
            return _lT
        }, _Cz1: function (index, _Dz1) {
            this._Ax1._Cz1(index, _Dz1)
        }, _Ez1: function (_gl1, _uj1, _Dz1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return 0
            }
            return this._Ax1._Ez1(_gl1, _uj1, _Dz1)
        }, _Fz1: function (_Vu1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return null
            }
            var _gv = this._Ax1._Fz1(_Vu1);
            return _gv
        }, _Gz1: function (_Hz1, _Iz1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return
            }
            this._Ax1._Gz1(_Hz1, _Iz1)
        }, _Jz1: function (__a1, _Dz1) {
            _Th1(this._Yu1() == !1);
            if (this._Yu1()) {
                return
            }
            this._Ax1._Jz1(__a1, _Dz1)
        }, _Kz1: function () {
            return this._Ax1._Kz1()
        }, _Lz1: function () {
            return this._Ax1._Lz1()
        }, _Mz1: function () {
            return this._Ax1._Mz1()
        }, _Nz1: function () {
            return this._Ax1._Nz1()
        },
        _Oz1: function () {
            return this._Ax1._Oz1()
        }, _Pz1: function () {
            return this._Ax1._Pz1()
        }, _Qz1: function (buffer, _Rz1) {
            this._Ax1._Qz1(buffer, _Rz1)
        }, _Sz1: function (buffer, _Rz1) {
            this._Ax1._Sz1(buffer, _Rz1)
        }, _Tz1: function (buffer, _Rz1) {
            this._Ax1._Tz1(buffer, _Rz1)
        }, _Uz1: function (buffer, _Rz1) {
            this._Ax1._Uz1(buffer, _Rz1)
        }, _Vz1: function (buffer, _Rz1) {
            this._Ax1._Vz1(buffer, _Rz1)
        }, _Wz1: function () {
            return this._Ax1._Xz1
        }, _Yz1: function () {
            return this._Ax1._By1
        }, _Zz1: function () {
            return this._Ax1.__z1
        }, _0A1: function () {
            return this._Ax1._1A1
        }
        , _2A1: function () {
            return this._Ax1._2A1()
        }, _3A1: function () {
            return this._Ax1._3A1()
        }, _4A1: function () {
            return this._Ax1._4A1();
        }, _5A1: function () {
            return this._Ax1._5A1()
        }, _cy1: function (_6A1) {
            var _7A1 = _6A1._5A1();
            if (_7A1) {
                var _8A1 = _6A1._Az1();
                var _9A1 = _6A1._Lz1();
                if (_6A1._aA1.data) {
                    var _bA1 = _6A1._Nz1();
                    this._lx1._Bk1(_9A1, _8A1, _bA1, _7A1)
                } else {
                    this._lx1._Bk1(_9A1, _8A1, null, _7A1)
                }
            }
        }
    };
    _7v1._8v1 = 0x0001;
    _7v1._7y1 = 0x0002;
    _7v1._vx1 = 0x0004;

    function _cA1(_Rz1) {
        this._dA1 = new Array(_Rz1);
        this._Br1 = 0;
        this._eA1 = 0;
        this._fA1 = _Rz1
    }

    _cA1.prototype = {
        _gA1: function (_zC) {
            if (this._eA1 >= this._fA1) return;
            this._dA1[this._eA1++] = _zC
        }, _hA1: function () {
            _Th1(this._Br1 < this._eA1);
            this._Br1++
        }, _iA1: function () {
            return this._Br1 >= this._eA1
        }, _jA1: function () {
            return this._dA1[this._Br1]
        }
    };

    function _kA1(_lA1) {
        this._mA1 = new Array(_lA1);
        this._nA1 = 0;
        this._oA1 = 0;
        this._pA1 = 0;
        this._qA1 = null
    }

    _kA1._rA1 = function () {
        this._tk1 = new _Hi1();
        this._sA1 = 0
    };
    _kA1._tA1 = function (x, y, _t5, _gv) {
        this._S_ = x;
        this._T_ = y;
        this._uA1 = _t5;
        this._vA1 = _gv
    };
    _kA1.prototype = {
        _wA1: function (_tk1,
                        _sA1) {
            var _gv = (this._mA1[this._nA1++] = new _kA1._rA1());
            _gv._tk1._Li1(_tk1);
            _gv._sA1 = _sA1
        }, _xA1: function (_uk1) {
            _Th1(this._qA1 == null);
            var _yA1 = 1 / _uk1;
            var _am1 = new _Hi1(+_Vh1, +_Vh1);
            var _bm1 = new _Hi1(-_Vh1, -_Vh1);
            for (var _tC = 0; _tC < this._nA1; _tC++) {
                var _gv = this._mA1[_tC];
                _am1._Li1(_7k1(_am1, _gv._tk1));
                _bm1._Li1(_9k1(_bm1, _gv._tk1))
            }
            this._oA1 = 1 + ((_yA1 * (_bm1.x - _am1.x)) >>> 0);
            this._pA1 = 1 + ((_yA1 * (_bm1.y - _am1.y)) >>> 0);
            this._qA1 = new Array(this._oA1 * this._pA1);
            for (var _t5 = 0; _t5 < this._oA1 * this._pA1; _t5++) this._qA1[_t5] = null;
            var _zA1 = new _cA1(this._oA1 * this._oA1);
            for (var _tC = 0; _tC < this._nA1; _tC++) {
                var _gv = this._mA1[_tC];
                _gv._tk1._Li1(_Hi1.Multiply(_yA1, _Hi1._Pi1(_gv._tk1, _am1)));
                var x = _8k1(0, _6k1(Math.floor(_gv._tk1.x), this._oA1 - 1));
                var y = _8k1(0, _6k1(Math.floor(_gv._tk1.y), this._pA1 - 1));
                _zA1._gA1(new _kA1._tA1(x, y, x + y * this._oA1, _gv))
            }
            while (!_zA1._iA1()) {
                var x = _zA1._jA1()._S_;
                var y = _zA1._jA1()._T_;
                var _t5 = _zA1._jA1()._uA1;
                var _gv = _zA1._jA1()._vA1;
                _zA1._hA1();
                if (!this._qA1[_t5]) {
                    this._qA1[_t5] = _gv;
                    if (x > 0) {
                        _zA1._gA1(new _kA1._tA1(x - 1,
                            y, _t5 - 1, _gv))
                    }
                    if (y > 0) {
                        _zA1._gA1(new _kA1._tA1(x, y - 1, _t5 - this._oA1, _gv))
                    }
                    if (x < this._oA1 - 1) {
                        _zA1._gA1(new _kA1._tA1(x + 1, y, _t5 + 1, _gv))
                    }
                    if (y < this._pA1 - 1) {
                        _zA1._gA1(new _kA1._tA1(x, y + 1, _t5 + this._oA1, _gv))
                    }
                }
            }
            var _AA1 = this._oA1 + this._pA1;
            for (var _BA1 = 0; _BA1 < _AA1; _BA1++) {
                for (var y = 0; y < this._pA1; y++) {
                    for (var x = 0; x < this._oA1 - 1; x++) {
                        var _t5 = x + y * this._oA1;
                        var _hv = this._qA1[_t5];
                        var _Nt = this._qA1[_t5 + 1];
                        if (_hv != _Nt) {
                            _zA1._gA1(new _kA1._tA1(x, y, _t5, _Nt));
                            _zA1._gA1(new _kA1._tA1(x + 1, y, _t5 + 1, _hv))
                        }
                    }
                }
                for (var y = 0; y < this._pA1 - 1;
                     y++) {
                    for (var x = 0; x < this._oA1; x++) {
                        var _t5 = x + y * this._oA1;
                        var _hv = this._qA1[_t5];
                        var _Nt = this._qA1[_t5 + this._oA1];
                        if (_hv != _Nt) {
                            _zA1._gA1(new _kA1._tA1(x, y, _t5, _Nt));
                            _zA1._gA1(new _kA1._tA1(x, y + 1, _t5 + this._oA1, _hv))
                        }
                    }
                }
                var _CA1 = !1;
                while (!_zA1._iA1()) {
                    var x = _zA1._jA1()._S_;
                    var y = _zA1._jA1()._T_;
                    var _t5 = _zA1._jA1()._uA1;
                    var _tC = _zA1._jA1()._vA1;
                    _zA1._hA1();
                    var _hv = this._qA1[_t5];
                    var _Nt = _tC;
                    if (_hv != _Nt) {
                        var _q21 = _hv._tk1.x - x;
                        var _r21 = _hv._tk1.y - y;
                        var _DA1 = _Nt._tk1.x - x;
                        var _EA1 = _Nt._tk1.y - y;
                        var _td1 = _q21 * _q21 + _r21 * _r21;
                        var __Q = _DA1 * _DA1 + _EA1 * _EA1;
                        if (_td1 > __Q) {
                            this._qA1[_t5] = _Nt;
                            if (x > 0) {
                                _zA1._gA1(new _kA1._tA1(x - 1, y, _t5 - 1, _Nt))
                            }
                            if (y > 0) {
                                _zA1._gA1(new _kA1._tA1(x, y - 1, _t5 - this._oA1, _Nt))
                            }
                            if (x < this._oA1 - 1) {
                                _zA1._gA1(new _kA1._tA1(x + 1, y, _t5 + 1, _Nt))
                            }
                            if (y < this._pA1 - 1) {
                                _zA1._gA1(new _kA1._tA1(x, y + 1, _t5 + this._oA1, _Nt))
                            }
                            _CA1 = !0
                        }
                    }
                }
                if (!_CA1) {
                    break
                }
            }
        }, _FA1: function (_5n1) {
            for (var y = 0; y < this._pA1 - 1; y++) {
                for (var x = 0; x < this._oA1 - 1; x++) {
                    var _t5 = x + y * this._oA1;
                    var _hv = this._qA1[_t5];
                    var _Nt = this._qA1[_t5 + 1];
                    var _u5 = this._qA1[_t5 + this._oA1];
                    var _cE = this._qA1[_t5 + 1 + this._oA1];
                    if (_Nt != _u5) {
                        if (_hv != _Nt && _hv != _u5) {
                            _5n1(_hv._sA1, _Nt._sA1, _u5._sA1)
                        }
                        if (_cE != _Nt && _cE != _u5) {
                            _5n1(_Nt._sA1, _cE._sA1, _u5._sA1)
                        }
                    }
                }
            }
        }
    };

    function _GA1(_Kt, _gv, _Nt, _hv) {
        if (_Kt instanceof _ik1) {
            this._Kt = (255 * _Kt._Kt);
            this._gv = (255 * _Kt._gv);
            this._Nt = (255 * _Kt._Nt);
            this._hv = 255
        } else if (typeof(_Kt) !== 'undefined') {
            this._Kt = _Kt;
            this._gv = _gv;
            this._Nt = _Nt;
            this._hv = _hv
        } else this._Kt = this._gv = this._Nt = this._hv = 0
    }

    _GA1.prototype = {
        _HA1: function () {
            return !this._Kt && !this._gv && !this._Nt && !this._hv
        }, _IA1: function () {
            return new _ik1(1.0 / 255 * this._Kt,
                1.0 / 255 * this._gv, 1.0 / 255 * this._Nt)
        }, _rC: function (_JA1, _KA1, _LA1, _MA1) {
            if (_JA1 instanceof _ik1) {
                this._Kt = (255 * _JA1._Kt);
                this._gv = (255 * _JA1._gv);
                this._Nt = (255 * _JA1._Nt);
                this._hv = 255
            } else {
                this._Kt = _JA1;
                this._gv = _KA1;
                this._Nt = _LA1;
                this._hv = _MA1
            }
        }, _Li1: function (_NA1) {
            this._Kt = _NA1._Kt;
            this._gv = _NA1._gv;
            this._Nt = _NA1._Nt;
            this._hv = _NA1._hv
        }, _Qr: function () {
            return new _GA1(this._Kt, this._gv, this._Nt, this._hv)
        }
    };
    _GA1._OA1 = new _GA1();

    function _PA1() {
        this._Hf1 = 0;
        this.position = new _Hi1();
        this._291 = new _Hi1();
        this.color = new _GA1();
        this._Qm1 = null
    }

    _PA1._QA1 = 0;
    _PA1._RA1 = 1 << 1;
    _PA1._SA1 = 1 << 2;
    _PA1._TA1 = 1 << 3;
    _PA1._UA1 = 1 << 4;
    _PA1._VA1 = 1 << 5;
    _PA1._WA1 = 1 << 6;
    _PA1._XA1 = 1 << 7;
    _PA1._YA1 = 1 << 8;
    _PA1._ZA1 = 1 << 9;

    function __A1() {
        this._Hf1 = 0;
        this._0B1 = 0;
        this.position = new _Hi1();
        this.angle = 0;
        this._au1 = new _Hi1();
        this._bu1 = 0;
        this.color = new _GA1();
        this._1B1 = 1;
        this._gl1 = null;
        this._2B1 = !0;
        this._Qm1 = null
    }

    function _3B1() {
        this._4B1 = null;
        this._5B1 = 0;
        this._6B1 = 0;
        this._7B1 = 0;
        this._8B1 = 1.0;
        this._xu1 = null;
        this._yu1 = null;
        this._9B1 = -1;
        this._Iu1 = 0;
        this._aB1 = 0;
        this._bB1 = new _Hi1();
        this._zu1 = new _Hi1();
        this._Au1 = 0;
        this._cB1 = new _tj1();
        this._cB1._3j1();
        this._dB1 = !0;
        this._eB1 = !1;
        this._fB1 = !1;
        this._Mu1 = null
    }

    _3B1.prototype = {
        _7w1: function () {
            return this._yu1
        }, _5A1: function () {
            return this._6B1 - this._5B1
        }, _gB1: function () {
            return this._5B1
        }, _hB1: function () {
            return this._7B1
        }, _iB1: function (_Hf1) {
            this._7B1 = _Hf1
        }, _yv1: function () {
            this._jB1();
            return this._Iu1
        }, _zv1: function () {
            this._jB1();
            return this._aB1
        }, _Ep1: function () {
            this._jB1();
            return this._bB1
        }, _mv1: function () {
            this._jB1();
            return this._zu1
        }, _ov1: function () {
            this._jB1();
            return this._Au1
        }, _Bj1: function () {
            return this._cB1
        }, _371: function () {
            return this._cB1._lT
        }, _qj1: function () {
            return this._cB1._7S._qj1()
        }, _Zm1: function () {
            return this._Mu1;
        }, _8w1: function (data) {
            this._Mu1 = data
        }, _jB1: function () {
            if (this._9B1 != this._4B1._9B1) {
                var _wt = this._4B1._kB1();
                this._Iu1 = 0;
                this._bB1._Ii1();
                this._zu1._Ii1();
                for (var _t5 = this._5B1; _t5 < this._6B1; _t5++) {
                    this._Iu1 += _wt;
                    this._bB1._3C(_Hi1.Multiply(_wt, this._4B1._lB1.data[_t5]));
                    this._zu1._3C(_Hi1.Multiply(_wt, this._4B1._mB1.data[_t5]))
                }
                if (this._Iu1 > 0) {
                    this._bB1.Multiply(1 / this._Iu1);
                    this._zu1.Multiply(1 / this._Iu1)
                }
                this._aB1 = 0;
                this._Au1 = 0;
                for (var _t5 = this._5B1; _t5 < this._6B1; _t5++) {
                    var _lT = _Hi1._Pi1(this._4B1._lB1.data[_t5], this._bB1);
                    var _uv = _Hi1._Pi1(this._4B1._mB1.data[_t5], this._zu1);
                    this._aB1 += _wt * _Fj1(_lT, _lT);
                    this._Au1 += _wt * _Gj1(_lT, _uv)
                }
                if (this._aB1 > 0) {
                    this._Au1 *= 1 / this._aB1
                }
                this._9B1 = this._4B1._9B1
            }
        }
    };
    _3B1._nB1 = 1 << 0;
    _3B1._oB1 = 1 << 1;

    function _pB1() {
        this._un1 = this._vn1 = 0;
        this._Hf1 = 0;
        this._qB1 = 0.0;
        this._8l1 = new _Hi1()
    };

    function _rB1() {
        this.index = 0;
        this.body = null;
        this._qB1 = 0.0;
        this._8l1 = new _Hi1();
        this._Tk1 = 0.0
    };

    function _Bx1() {
        this._9B1 = 0;
        this._sB1 = 0;
        this._tB1 = 0;
        this._5v1 = 1;
        this._uB1 = 1;
        this._Du1 = 1;
        this._vB1 = 1;
        this._wB1 = 1;
        this._xB1 = 1;
        this._Gl1 = 0;
        this._yB1 = 0;
        this._zB1 = 0;
        this._AB1 = new _Bx1._BB1();
        this._lB1 = new _Bx1._BB1();
        this._mB1 = new _Bx1._BB1();
        this._CB1 = null;
        this._DB1 = null;
        this._EB1 = null;
        this._aA1 = new _Bx1._BB1();
        this._FB1 = null;
        this._GB1 = new _Bx1._BB1();
        this._Km1 = 0;
        this._HB1 = 0;
        this._IB1 = null;
        this._By1 = 0;
        this._az1 = 0;
        this._Xz1 = null;
        this._1A1 = 0;
        this._JB1 = 0;
        this.__z1 = null;
        this._Lm1 = 0;
        this._KB1 = 0;
        this._Mm1 = null;
        this._LB1 = 0;
        this._MB1 = 0;
        this._NB1 = null;
        this._OB1 = 0;
        this._PB1 = null;
        this._QB1 = 0.05;
        this._RB1 = 1.0;
        this._SB1 = 0.25;
        this._TB1 = 0.25;
        this._UB1 = 0.25;
        this._VB1 = 0.1;
        this._WB1 = 0.2;
        this._XB1 = 0.5;
        this._YB1 = 0.5;
        this._ZB1 = 0.5;
        this._su1 = null
    }

    _Bx1._BB1 = function () {
        this.data = null;
        this.__B1 = 0
    };
    _Bx1._0C1 = function () {
        this.index = 0;
        this._sA1 = 0
    };
    _Bx1._0C1._1C1 = function (_hv, _Nt) {
        return _hv._sA1 < _Nt._sA1
    };
    _Bx1._0C1._2C1 = function (_hv, _Nt) {
        return _hv < _Nt._sA1
    };
    _Bx1._0C1._3C1 = function (_hv,
                               _Nt) {
        return _hv._sA1 < _Nt
    };
    _Bx1._4C1 = function () {
        this._un1 = this._vn1 = 0;
        this._Hf1 = 0;
        this._1B1 = 0.0;
        this._7l1 = 0.0
    };
    _Bx1._5C1 = function () {
        this._un1 = this._vn1 = this._6C1 = 0;
        this._Hf1 = 0;
        this._1B1 = 0.0;
        this._7C1 = new _Hi1(), this._8C1 = new _Hi1(), this._NA1 = new _Hi1();
        this._9C1 = 0.0, this._aC1 = 0.0, this._bC1 = 0.0, this._ZN = 0.0
    };
    _Bx1._cC1 = _PA1._TA1;
    _Bx1._dC1 = _PA1._UA1;
    _Bx1._eC1 = _PA1._WA1;
    _Bx1._fC1 = 12;
    _Bx1._gC1 = 12;
    _Bx1._hC1 = 8 * 4;
    _Bx1._iC1 = 1 << (_Bx1._gC1 - 1);
    _Bx1._jC1 = _Bx1._hC1 - _Bx1._gC1;
    _Bx1._kC1 = _Bx1._hC1 - _Bx1._gC1 - _Bx1._fC1;
    _Bx1._lC1 = 1 << _Bx1._kC1;
    _Bx1._mC1 = _Bx1._lC1 * (1 << (_Bx1._fC1 - 1));
    _Bx1._nC1 = (1 << _Bx1._fC1) - 1;
    _Bx1._oC1 = (1 << _Bx1._gC1) - 1;

    function _pC1(x, y) {
        return ((y + _Bx1._iC1) << _Bx1._jC1) + (_Bx1._lC1 * x + _Bx1._mC1) >>> 0;
    }

    function _qC1(_sA1, x, y) {
        return _sA1 + (y << _Bx1._jC1) + (x << _Bx1._kC1)
    }

    function _rC1(_Rz1, _sC1) {
        return _sC1 && _Rz1 > _sC1 ? _sC1 : _Rz1
    }

    function _tC1(_av1) {
        return (_av1._Hf1 & _PA1._RA1) == _PA1._RA1
    }

    _Bx1.prototype = {
        _uC1: function (_vC1, _wC1, _xC1) {
            _Th1(_xC1 > _wC1);
            var _yC1 = (_vC1) ? _vC1.slice() : [];
            _yC1.length = _xC1;
            return _yC1
        }, _zC1: function (buffer,
                           __B1, _wC1, _xC1, _AC1) {
            _Th1(_xC1 > _wC1);
            _Th1(!__B1 || _xC1 <= __B1);
            if ((!_AC1 || buffer) && !__B1) {
                buffer = this._uC1(buffer, _wC1, _xC1)
            }
            return buffer
        }, _BC1: function (buffer, _wC1, _xC1, _AC1) {
            _Th1(_xC1 > _wC1);
            return this._zC1(buffer.data, buffer.__B1, _wC1, _xC1, _AC1)
        }, _CC1: function (buffer) {
            if (!buffer) {
                buffer = new Array(this._yB1);
                for (var _t5 = 0; _t5 < this._yB1; _t5++) {
                    buffer[_t5] = 0
                }
            }
            return buffer
        }, _Bz1: function (_Vu1) {
            if (this._Gl1 >= this._yB1) {
                var _Rz1 = this._Gl1 ? 2 * this._Gl1 : _oi1;
                _Rz1 = _rC1(_Rz1, this._zB1);
                _Rz1 = _rC1(_Rz1, this._AB1.__B1);
                _Rz1 = _rC1(_Rz1, this._lB1.__B1);
                _Rz1 = _rC1(_Rz1, this._mB1.__B1);
                _Rz1 = _rC1(_Rz1, this._aA1.__B1);
                _Rz1 = _rC1(_Rz1, this._GB1.__B1);
                if (this._yB1 < _Rz1) {
                    this._AB1.data = this._BC1(this._AB1, this._yB1, _Rz1, !1);
                    this._lB1.data = this._BC1(this._lB1, this._yB1, _Rz1, !1);
                    this._mB1.data = this._BC1(this._mB1, this._yB1, _Rz1, !1);
                    this._CB1 = this._zC1(this._CB1, 0, this._yB1, _Rz1, !1);
                    this._DB1 = this._zC1(this._DB1, 0, this._yB1, _Rz1, !0);
                    this._EB1 = this._zC1(this._EB1, 0, this._yB1, _Rz1, !0);
                    this._aA1.data = this._BC1(this._aA1, this._yB1,
                        _Rz1, !0);
                    this._FB1 = this._zC1(this._FB1, 0, this._yB1, _Rz1, !1);
                    this._GB1.data = this._BC1(this._GB1, this._yB1, _Rz1, !0);
                    this._yB1 = _Rz1
                }
            }
            if (this._Gl1 >= this._yB1) {
                return _ii1
            }
            var index = this._Gl1++;
            this._AB1.data[index] = _Vu1._Hf1;
            this._lB1.data[index] = _Vu1.position._Qr();
            this._mB1.data[index] = _Vu1._291._Qr();
            this._FB1[index] = null;
            if (this._EB1) {
                this._EB1[index] = 0
            }
            if (this._aA1.data || !_Vu1.color._HA1()) {
                this._aA1.data = this._CC1(this._aA1.data);
                this._aA1.data[index] = _Vu1.color._Qr()
            }
            if (this._GB1.data || _Vu1._Qm1) {
                this._GB1.data = this._CC1(this._GB1.data);
                this._GB1.data[index] = _Vu1._Qm1
            }
            if (this._Km1 >= this._HB1) {
                var _wC1 = this._HB1;
                var _xC1 = this._Km1 ? 2 * this._Km1 : _oi1;
                this._IB1 = this._uC1(this._IB1, _wC1, _xC1);
                this._HB1 = _xC1
            }
            this._IB1[this._Km1] = new _Bx1._0C1();
            this._IB1[this._Km1++].index = index;
            return index
        }, _Cz1: function (index, _Dz1) {
            var _Hf1 = _PA1._RA1;
            if (_Dz1) {
                _Hf1 |= _PA1._ZA1
            }
            this._AB1.data[index] |= _Hf1
        }, _Ez1: function (_gl1, _uj1, _Dz1) {
            function _DC1(_6A1, _gl1, _uj1, _Dz1) {
                this._4B1 = _6A1;
                this._mw1 = _gl1;
                this._nr1 = _uj1;
                this._EC1 = _Dz1;
                this._Vx1 = 0
            }

            _DC1.prototype = {
                __w1: function (_d71) {
                    return !1
                }, _0x1: function (index) {
                    _Th1(index >= 0 && index < this._4B1._Gl1);
                    if (this._mw1._Zk1(this._nr1, this._4B1._lB1.data[index])) {
                        this._4B1._Cz1(index, this._EC1);
                        this._Vx1++
                    }
                    return !0
                }, _FC1: function () {
                    return this._Vx1
                }
            };
            var _5n1 = new _DC1(this, _gl1, _uj1, _Dz1);
            var _2l1 = new _Bp1();
            _gl1._1l1(_2l1, _uj1, 0);
            this._su1._ly1(_5n1, _2l1);
            return _5n1._FC1()
        }, _Jz1: function (__a1, _Dz1) {
            for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                this._Cz1(_t5, _Dz1)
            }
        }, _Fz1: function (_GC1) {
            var _jw = this._HC1();
            var identity = new _tj1();
            identity._3j1();
            var transform = identity._Qr();
            var _IC1 = this._Gl1;
            if (_GC1._gl1) {
                var _JC1 = new _PA1();
                _JC1._Hf1 = _GC1._Hf1;
                _JC1.color = _GC1.color;
                _JC1._Qm1 = _GC1._Qm1;
                var _gl1 = _GC1._gl1;
                transform._rC(_GC1.position, _GC1.angle);
                var _2l1 = new _Bp1();
                var _Dw1 = _gl1._Yk1();
                for (var _0l1 = 0; _0l1 < _Dw1; _0l1++) {
                    if (_0l1 == 0) {
                        _gl1._1l1(_2l1, identity, _0l1)
                    } else {
                        var _KC1 = new _Bp1();
                        _gl1._1l1(_KC1, identity, _0l1);
                        _2l1._Hp1(_KC1)
                    }
                }
                for (var y = Math.floor(_2l1._kl1.y / _jw) * _jw; y < _2l1._ll1.y; y += _jw) {
                    for (var x = Math.floor(_2l1._kl1.x / _jw) * _jw;
                         x < _2l1._ll1.x; x += _jw) {
                        var _lT = new _Hi1(x, y);
                        if (_gl1._Zk1(identity, _lT)) {
                            _lT = _Wj1(transform, _lT);
                            _JC1.position._Li1(_lT);
                            _JC1._291._Li1(_Hi1._3C(_GC1._au1, _Ij1(_GC1._bu1, _Hi1._Pi1(_lT, _GC1.position))));
                            this._Bz1(_JC1)
                        }
                    }
                }
            }
            var lastIndex = this._Gl1;
            var __a1 = new _3B1();
            __a1._4B1 = this;
            __a1._5B1 = _IC1;
            __a1._6B1 = lastIndex;
            __a1._7B1 = _GC1._0B1;
            __a1._8B1 = _GC1._1B1;
            __a1._Mu1 = _GC1._Qm1;
            __a1._cB1 = transform;
            __a1._dB1 = _GC1._2B1;
            __a1._xu1 = null;
            __a1._yu1 = this._PB1;
            if (this._PB1) {
                this._PB1._xu1 = __a1
            }
            this._PB1 = __a1;
            ++this._OB1;
            for (var _t5 = _IC1; _t5 < lastIndex; _t5++) {
                this._FB1[_t5] = __a1
            }
            this._LC1(!0);
            if (_GC1._Hf1 & _Bx1._cC1) {
                for (var _tC = 0; _tC < this._By1; _tC++) {
                    var _av1 = this._Xz1[_tC];
                    var _hv = _av1._un1;
                    var _Nt = _av1._vn1;
                    if (_hv > _Nt) {
                        var _MC1 = _hv;
                        _hv = _Nt;
                        _Nt = _MC1
                    }
                    if (_IC1 <= _hv && _Nt < lastIndex) {
                        if (this._Lm1 >= this._KB1) {
                            var _wC1 = this._KB1;
                            var _xC1 = this._Lm1 ? 2 * this._Lm1 : _oi1;
                            this._Mm1 = this._uC1(this._Mm1, _wC1, _xC1);
                            this._KB1 = _xC1
                        }
                        var _dn1 = this._Mm1[this._Lm1] = new _Bx1._4C1();
                        _dn1._un1 = _hv;
                        _dn1._vn1 = _Nt;
                        _dn1._Hf1 = _av1._Hf1;
                        _dn1._1B1 = _GC1._1B1;
                        _dn1._7l1 = _Lj1(this._lB1.data[_hv], this._lB1.data[_Nt]);
                        this._Lm1++
                    }
                }
            }
            if (_GC1._Hf1 & _Bx1._dC1) {
                var _NC1 = new _kA1(lastIndex - _IC1);
                for (var _t5 = _IC1; _t5 < lastIndex; _t5++) {
                    _NC1._wA1(this._lB1.data[_t5], _t5)
                }
                _NC1._xA1(_jw / 2);
                var _5n1 = function _OC1(_hv, _Nt, _u5) {
                    var _7C1 = this._lB1.data[_hv];
                    var _8C1 = this._lB1.data[_Nt];
                    var _NA1 = this._lB1.data[_u5];
                    var _PC1 = _Hi1._Pi1(_7C1, _8C1);
                    var _QC1 = _Hi1._Pi1(_8C1, _NA1);
                    var _RC1 = _Hi1._Pi1(_NA1, _7C1);
                    var _SC1 = _ni1 * this._xB1;
                    if (_TC1(_PC1, _PC1) < _SC1 && _TC1(_QC1, _QC1) < _SC1 && _TC1(_RC1,
                        _RC1) < _SC1) {
                        if (this._LB1 >= this._MB1) {
                            var _wC1 = this._MB1;
                            var _xC1 = this._LB1 ? 2 * this._LB1 : _oi1;
                            this._NB1 = this._uC1(this._NB1, _wC1, _xC1);
                            this._MB1 = _xC1
                        }
                        var _UC1 = this._NB1[this._LB1];
                        _UC1._un1 = _hv;
                        _UC1._vn1 = _Nt;
                        _UC1._6C1 = _u5;
                        _UC1._Hf1 = this._AB1.data[_hv] | this._AB1.data[_Nt] | this._AB1.data[_u5];
                        _UC1._1B1 = _GC1._1B1;
                        var _VC1 = _Hi1.Multiply(1.0 / 3.0, _Hi1._3C(_7C1, _Hi1._3C(_8C1, _NA1)));
                        _UC1._7C1 = _Hi1._Pi1(_7C1, _VC1);
                        _UC1._8C1 = _Hi1._Pi1(_8C1, _VC1);
                        _UC1._NA1 = _Hi1._Pi1(_NA1, _VC1);
                        _UC1._9C1 = -_Fj1(_RC1, _PC1);
                        _UC1._aC1 = -_Fj1(_PC1,
                            _QC1);
                        _UC1._bC1 = -_Fj1(_QC1, _RC1);
                        _UC1._ZN = _Gj1(_7C1, _8C1) + _Gj1(_8C1, _NA1) + _Gj1(_NA1, _7C1);
                        this._LB1++
                    }
                };
                _NC1._FA1(_5n1)
            }
            if (_GC1._0B1 & _PA1._nB1) {
                _WC1(__a1)
            }
            return __a1
        }, _Gz1: function (_Hz1, _Iz1) {
            _Th1(_Hz1 != _Iz1);
            this._XC1(_Iz1._5B1, _Iz1._6B1, this._Gl1);
            _Th1(_Iz1._6B1 == this._Gl1);
            this._XC1(_Hz1._5B1, _Hz1._6B1, _Iz1._5B1);
            this._Th1(_Hz1._6B1 == _Iz1._5B1);
            var _YC1 = 0;
            for (var _t5 = _Hz1._5B1; _t5 < _Iz1._6B1; _t5++) {
                _YC1 |= this._AB1.data[_t5]
            }
            this._LC1(!0);
            if (_YC1 & _Bx1._cC1) {
                for (var _tC = 0; _tC < this._By1; _tC++) {
                    var _av1 = this._Xz1[_tC];
                    var _hv = _av1._un1;
                    var _Nt = _av1._vn1;
                    if (_hv > _Nt) {
                        var _MC1 = _hv;
                        _hv = _Nt;
                        _Nt = _MC1
                    }
                    if (_Hz1._5B1 <= _hv && _hv < _Hz1._6B1 && _Iz1._5B1 <= _Nt && _Nt < _Iz1._6B1) {
                        if (this._Lm1 >= this._KB1) {
                            var _wC1 = this._KB1;
                            var _xC1 = this._Lm1 ? 2 * this._Lm1 : _oi1;
                            this._Mm1 = this._uC1(this._Mm1, _wC1, _xC1);
                            this._KB1 = _xC1
                        }
                        var _dn1 = this._Mm1[this._Lm1] = new _Bx1._4C1();
                        _dn1._un1 = _hv;
                        _dn1._vn1 = _Nt;
                        _dn1._Hf1 = _av1._Hf1;
                        _dn1._1B1 = _6k1(_Hz1._8B1, _Iz1._8B1);
                        _dn1._7l1 = _Lj1(this._lB1.data[_hv], this._lB1.data[_Nt]);
                        this._Lm1++
                    }
                }
            }
            if (_YC1 & _Bx1._dC1) {
                var _NC1 = new _kA1(_Iz1._6B1 - _Hz1._5B1);
                for (var _t5 = _Hz1._5B1; _t5 < _Iz1._6B1; _t5++) {
                    if (!(this._AB1.data[_t5] & _PA1._RA1)) {
                        _NC1._wA1(this._lB1.data[_t5], _t5)
                    }
                }
                _NC1._xA1(this._HC1() / 2);
                var _5n1 = new _ZC1();
                _5n1._6A1 = this;
                _5n1._Hz1 = _Hz1;
                _5n1._Iz1 = _Iz1;
                _NC1._FA1(_5n1)
            }
            for (var _t5 = _Iz1._5B1; _t5 < _Iz1._6B1; _t5++) {
                this._FB1[_t5] = _Hz1
            }
            var _0B1 = _Hz1._7B1 | _Iz1._7B1;
            _Hz1._7B1 = _0B1;
            _Hz1._6B1 = _Iz1._6B1;
            _Iz1._5B1 = _Iz1._6B1;
            this.__C1(_Iz1);
            if (_0B1 & _PA1._nB1) {
                this._WC1(_Hz1)
            }
        }, __C1: function (__a1) {
            _Th1(this._OB1 > 0);
            _Th1(__a1);
            if (this._su1._kx1) {
                this._su1._kx1._0D1(__a1)
            }
            for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                this._FB1[_t5] = null
            }
            if (__a1._xu1) {
                __a1._xu1._yu1 = __a1._yu1
            }
            if (__a1._yu1) {
                __a1._yu1._xu1 = __a1._xu1
            }
            if (__a1 == this._PB1) {
                this._PB1 = __a1._yu1
            }
            --this._OB1
        }, _WC1: function (__a1) {
            for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                this._CB1[_t5] = 0
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                if (_hv >= __a1._5B1 && _hv < __a1._6B1 && _Nt >= __a1._5B1 && _Nt < __a1._6B1) {
                    var _v5 = _av1._qB1;
                    this._CB1[_hv] += _v5;
                    this._CB1[_Nt] += _v5
                }
            }
            this._EB1 = this._CC1(this._EB1);
            for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                var _v5 = this._CB1[_t5];
                this._EB1[_t5] = _v5 < 0.8 ? 0 : _Vh1
            }
            var _1D1 = __a1._5A1();
            for (var _Mt = 0; _Mt < _1D1; _Mt++) {
                var _CA1 = !1;
                for (var _tC = 0; _tC < this._By1; _tC++) {
                    var _av1 = this._Xz1[_tC];
                    var _hv = _av1._un1;
                    var _Nt = _av1._vn1;
                    if (_hv >= __a1._5B1 && _hv < __a1._6B1 && _Nt >= __a1._5B1 && _Nt < __a1._6B1) {
                        var _Kt = 1 - _av1._qB1;
                        var _2D1 = this._EB1[_hv];
                        var _3D1 = this._EB1[_Nt];
                        var _4D1 = _3D1 + _Kt;
                        var _5D1 = _2D1 + _Kt;
                        if (_2D1 > _4D1) {
                            _2D1 = _4D1;
                            _CA1 = !0
                        }
                        if (_3D1 > _5D1) {
                            _3D1 = _5D1;
                            _CA1 = !0
                        }
                        this._EB1[_hv] = _2D1;
                        this._EB1[_Nt] = _3D1
                    }
                }
                if (!_CA1) {
                    break
                }
            }
            for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                var _lT = this._EB1[_t5];
                if (_lT < _Vh1) {
                    _lT *= this._vB1
                } else {
                    _lT = 0
                }
                this._EB1[_t5] = _lT
            }
        }, _Ty1: function (_hv, _Nt) {
            var _cE = _Hi1._Pi1(this._lB1.data[_Nt], this._lB1.data[_hv]);
            var _6D1 = _Fj1(_cE, _cE);
            if (_6D1 < this._xB1) {
                if (this._By1 >= this._az1) {
                    var _wC1 = this._az1;
                    var _xC1 = this._By1 ? 2 * this._By1 : _oi1;
                    this._Xz1 = this._uC1(this._Xz1, _wC1, _xC1);
                    this._az1 = _xC1
                }
                var _7D1 = _Gi1(_6D1);
                var _av1 = this._Xz1[this._By1] = new _pB1();
                _av1._un1 = _hv;
                _av1._vn1 = _Nt;
                _av1._Hf1 = this._AB1.data[_hv] | this._AB1.data[_Nt];
                _av1._qB1 = 1 - _6D1 * _7D1 * this._wB1;
                _av1._8l1._Li1(_Hi1.Multiply(_7D1, _cE));
                this._By1++
            }
        }, _LC1: function (_8D1) {
            var _9D1 = 0;
            var _aD1 = this._Km1;
            for (var _bD1 = _9D1; _bD1 < _aD1; ++_bD1) {
                var _Ew1 = this._IB1[_bD1];
                var _t5 = _Ew1.index;
                var _lT = this._lB1.data[_t5];
                _Ew1._sA1 = _pC1(this._wB1 * _lT.x, this._wB1 * _lT.y)
            }
            this._IB1._oh1(_9D1, _aD1, function (_hv, _Nt) {
                return _Bx1._0C1._1C1(_hv, _Nt)
            });
            this._By1 = 0;
            for (var _hv = _9D1, _u5 = _9D1; _hv < _aD1; _hv++) {
                var _cD1 = _qC1(this._IB1[_hv]._sA1, 1, 0);
                for (var _Nt = _hv + 1; _Nt < _aD1; _Nt++) {
                    if (_cD1 < this._IB1[_Nt]._sA1) break;
                    this._Ty1(this._IB1[_hv].index, this._IB1[_Nt].index)
                }
                var _dD1 = _qC1(this._IB1[_hv]._sA1, -1, 1);
                for (; _u5 < _aD1; _u5++) {
                    if (_dD1 <= this._IB1[_u5]._sA1) break
                }
                var _eD1 = _qC1(this._IB1[_hv]._sA1, 1, 1);
                for (var _Nt = _u5; _Nt < _aD1; _Nt++) {
                    if (_eD1 < this._IB1[_Nt]._sA1) break;
                    this._Ty1(this._IB1[_hv].index, this._IB1[_Nt].index)
                }
            }
            if (_8D1) {
                this._By1 = this._Xz1._sh1(_tC1, this._By1)
            }
        }, _fD1: function () {
            var _2l1 = new _Bp1();
            _2l1._kl1.x = +_Vh1;
            _2l1._kl1.y = +_Vh1;
            _2l1._ll1.x = -_Vh1;
            _2l1._ll1.y = -_Vh1;
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                var _lT = this._lB1.data[_t5];
                _2l1._kl1._Li1(_7k1(_2l1._kl1, _lT));
                _2l1._ll1._Li1(_9k1(_2l1._ll1, _lT))
            }
            _2l1._kl1.x -= this._vB1;
            _2l1._kl1.y -= this._vB1;
            _2l1._ll1.x += this._vB1;
            _2l1._ll1.y += this._vB1;
            this._1A1 = 0;

            function _gD1(_6A1) {
                this._4B1 = _6A1
            }

            _gD1.prototype = {
                __w1: function (_d71) {
                    if (_d71._tw1()) {
                        return !0
                    }
                    var _gl1 = _d71._rw1();
                    var _Nt = _d71._yw1();
                    var _jy1 = _Nt._jv1();
                    var _hD1 = _Nt._yv1();
                    var _iD1 = _Nt._zv1() - _hD1 * _Nt._kv1()._Qi1();
                    var _jD1 = _hD1 > 0 ? 1 / _hD1 : 0;
                    var _kD1 = _iD1 > 0 ? 1 / _iD1 : 0;
                    var _Dw1 = _gl1._Yk1();
                    for (var _0l1 = 0; _0l1 < _Dw1; _0l1++) {
                        var _2l1 = _d71._Cw1(_0l1)._Qr();
                        _2l1._kl1.x -= this._4B1._vB1;
                        _2l1._kl1.y -= this._4B1._vB1;
                        _2l1._ll1.x += this._4B1._vB1;
                        _2l1._ll1.y += this._4B1._vB1;
                        var _9D1 = 0;
                        var _aD1 = this._4B1._Km1;
                        var _lD1 = this._4B1._IB1._uh1(_9D1, _aD1, _pC1(this._4B1._wB1 * _2l1._kl1.x, this._4B1._wB1 * _2l1._kl1.y), function (_hv, _Nt) {
                            return _Bx1._0C1._3C1(_hv, _Nt)
                        });
                        var _mD1 = this._4B1._IB1._xh1(_lD1, _aD1, _pC1(this._4B1._wB1 * _2l1._ll1.x, this._4B1._wB1 * _2l1._ll1.y), function (_hv, _Nt) {
                            return _Bx1._0C1._2C1(_hv, _Nt)
                        });
                        for (var _Ew1 = _lD1; _Ew1 != _mD1; ++_Ew1) {
                            var _nD1 = this._4B1._IB1[_Ew1];
                            var _hv = _nD1.index;
                            var _oD1 = this._4B1._lB1.data[_hv];
                            if (_2l1._kl1.x <= _oD1.x && _oD1.x <= _2l1._ll1.x && _2l1._kl1.y <= _oD1.y && _oD1.y <= _2l1._ll1.y) {
                                var _cE = [0];
                                var _tt = new _Hi1();
                                _d71._6l1(_oD1, _cE, _tt, _0l1);
                                if (_cE[0] < this._4B1._vB1) {
                                    var _pD1 = this._4B1._AB1.data[_hv] & _PA1._SA1 ? 0 : this._4B1._qD1();
                                    var _rD1 = _Hi1._Pi1(_oD1, _jy1);
                                    var _sD1 = _Gj1(_rD1, _tt);
                                    if (this._4B1._1A1 >= this._4B1._JB1) {
                                        var _wC1 = this._4B1._JB1;
                                        var _xC1 = this._4B1._1A1 ? 2 * this._4B1._1A1 : _oi1;
                                        this._4B1.__z1 = this._4B1._uC1(this._4B1.__z1, _wC1, _xC1);
                                        this._4B1._JB1 = _xC1
                                    }
                                    var _av1 = this._4B1.__z1[this._4B1._1A1] = new _rB1();
                                    _av1.index = _hv;
                                    _av1.body = _Nt;
                                    _av1._qB1 = 1 - _cE[0] * this._4B1._wB1;
                                    _av1._8l1._Li1(_tt._Mi1());
                                    _av1._Tk1 = 1 / (_pD1 + _jD1 + _kD1 * _sD1 * _sD1);
                                    this._4B1._1A1++
                                }
                            }
                        }
                    }
                    return !0
                }, _0x1: function (_t5) {
                    return !1
                }
            };
            var _5n1 = new _gD1(this);
            this._su1._ly1(_5n1, _2l1)
        }, _7j1: function (_vh1) {
            ++this._9B1;
            if (this._Gl1 == 0) {
                return
            }
            this._sB1 = 0;
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                this._sB1 |= this._AB1.data[_t5]
            }
            if (this._sB1 & _PA1._RA1) {
                this._tD1()
            }
            this._tB1 = 0;
            for (var __a1 = this._PB1; __a1; __a1 = __a1._7w1()) {
                this._tB1 |= __a1._7B1
            }
            var _Zf = _Hi1.Multiply(_vh1._3x1 * this._Du1, this._su1._Dy1());
            var _uD1 = this._vD1(_vh1);
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                var _uv = this._mB1.data[_t5];
                _uv._3C(_Zf);
                var _uw = _Fj1(_uv, _uv);
                if (_uw > _uD1) {
                    _uv.Multiply(_Ei1(_uD1 / _uw))
                }
            }
            this._wD1(_vh1);
            if (this._tB1 & _3B1._oB1) {
                this._xD1(_vh1)
            }
            if (this._sB1 & _PA1._SA1) {
                this._yD1(_vh1)
            }
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                this._lB1.data[_t5]._3C(_Hi1.Multiply(_vh1._3x1, this._mB1.data[_t5]))
            }
            this._fD1();
            this._LC1(!1);
            if (this._sB1 & _PA1._VA1) {
                this._zD1(_vh1)
            }
            if (this._sB1 & _PA1._WA1) {
                this._AD1(_vh1)
            }
            if (this._sB1 & _PA1._XA1) {
                this._BD1(_vh1)
            }
            if (this._sB1 & _PA1._UA1) {
                this._CD1(_vh1)
            }
            if (this._sB1 & _PA1._TA1) {
                this._DD1(_vh1)
            }
            if (this._tB1 & _3B1._nB1) {
                this._ED1(_vh1)
            }
            if (this._sB1 & _PA1._YA1) {
                this._FD1(_vh1)
            }
            this._GD1(_vh1);
            this._HD1(_vh1)
        }, _wD1: function (_vh1) {
            var _2l1 = new _Bp1();
            _2l1._kl1.x = +_Vh1;
            _2l1._kl1.y = +_Vh1;
            _2l1._ll1.x = -_Vh1;
            _2l1._ll1.y = -_Vh1;
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                var _uv = this._mB1.data[_t5];
                var _yk1 = this._lB1.data[_t5];
                var _zk1 = _Hi1._3C(_yk1, _Hi1.Multiply(_vh1._3x1,
                    _uv));
                _2l1._kl1 = _7k1(_2l1._kl1, _7k1(_yk1, _zk1));
                _2l1._ll1 = _9k1(_2l1._ll1, _9k1(_yk1, _zk1))
            }

            function _ID1(_6A1, _vh1) {
                this._4B1 = _6A1;
                this._JD1 = _vh1
            }

            _ID1.prototype = {
                __w1: function (_d71) {
                    if (_d71._tw1()) {
                        return !0
                    }
                    var _gl1 = _d71._rw1();
                    var body = _d71._yw1();
                    var _9D1 = 0;
                    var _aD1 = this._4B1._Km1;
                    var _Dw1 = _gl1._Yk1();
                    for (var _0l1 = 0; _0l1 < _Dw1; _0l1++) {
                        var _2l1 = _d71._Cw1(_0l1)._Qr();
                        _2l1._kl1.x -= this._4B1._vB1;
                        _2l1._kl1.y -= this._4B1._vB1;
                        _2l1._ll1.x += this._4B1._vB1;
                        _2l1._ll1.y += this._4B1._vB1;
                        var _lD1 = this._4B1._IB1._uh1(_9D1,
                            _aD1, _pC1(this._4B1._wB1 * _2l1._kl1.x, this._4B1._wB1 * _2l1._kl1.y), function (_hv, _Nt) {
                                return _Bx1._0C1._3C1(_hv, _Nt)
                            });
                        var _mD1 = this._4B1._IB1._xh1(_lD1, _aD1, _pC1(this._4B1._wB1 * _2l1._ll1.x, this._4B1._wB1 * _2l1._ll1.y), function (_hv, _Nt) {
                            return _Bx1._0C1._2C1(_hv, _Nt)
                        });
                        for (var _Ew1 = _lD1; _Ew1 != _mD1; ++_Ew1) {
                            var _nD1 = this._4B1._IB1[_Ew1];
                            var _hv = _nD1.index;
                            var _oD1 = this._4B1._lB1.data[_hv];
                            if (_2l1._kl1.x <= _oD1.x && _oD1.x <= _2l1._ll1.x && _2l1._kl1.y <= _oD1.y && _oD1.y <= _2l1._ll1.y) {
                                var _KD1 = this._4B1._mB1.data[_hv];
                                var _XR = new _Ap1();
                                var _VR = new _zp1();
                                _VR._yk1 = _Wj1(body._nr1, _Yj1(body._tu1, _oD1));
                                _VR._zk1 = _Hi1._3C(_oD1, _Hi1.Multiply(this._JD1._3x1, _KD1));
                                _VR._il1 = 1;
                                if (_d71.__k1(_XR, _VR, _0l1)) {
                                    var _lT = _Hi1._3C(_Hi1._3C(_Hi1.Multiply((1 - _XR._jl1), _VR._yk1), _Hi1.Multiply(_XR._jl1, _VR._zk1)), _Hi1.Multiply(_1i1, _XR._8l1));
                                    var _uv = _Hi1.Multiply(this._JD1._4x1, _Hi1._Pi1(_lT, _oD1));
                                    this._4B1._mB1.data[_hv]._Li1(_uv);
                                    var _CO = _Hi1.Multiply(this._4B1._kB1(), _Hi1._Pi1(_KD1, _uv));
                                    _CO = _Hi1.Multiply(_Fj1(_CO, _XR._8l1), _XR._8l1);
                                    body._vv1(_CO, _lT,
                                        !0)
                                }
                            }
                        }
                    }
                    return !0
                }, _0x1: function (_t5) {
                    return !1
                }
            };
            var _5n1 = new _ID1(this, _vh1);
            this._su1._ly1(_5n1, _2l1)
        }, _GD1: function (_vh1) {
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                this._CB1[_t5] = 0
            }
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                var _hv = _av1.index;
                var _v5 = _av1._qB1;
                this._CB1[_hv] += _v5
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                var _v5 = _av1._qB1;
                this._CB1[_hv] += _v5;
                this._CB1[_Nt] += _v5
            }
            if (this._sB1 & _Bx1._eC1) {
                for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                    if (this._AB1.data[_t5] & _Bx1._eC1) {
                        this._CB1[_t5] = 0
                    }
                }
            }
            var _LD1 = this._QB1 * this._MD1(_vh1);
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                var _v5 = this._CB1[_t5];
                var _w5 = _LD1 * _8k1(0.0, _6k1(_v5, _li1) - _ki1);
                this._CB1[_t5] = _w5
            }
            var _ND1 = _vh1._3x1 / (this._5v1 * this._vB1);
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                var _hv = _av1.index;
                var _Nt = _av1.body;
                var _v5 = _av1._qB1;
                var _wt = _av1._Tk1;
                var _tt = _av1._8l1;
                var _lT = this._lB1.data[_hv];
                var _w5 = this._CB1[_hv] + _LD1 * _v5;
                var _CO = _Hi1.Multiply(_ND1 * _v5 * _wt * _w5, _tt);
                this._mB1.data[_hv]._Pi1(_Hi1.Multiply(this._qD1(),
                    _CO));
                _Nt._vv1(_CO, _lT, !0)
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                var _v5 = _av1._qB1;
                var _tt = _av1._8l1;
                var _w5 = this._CB1[_hv] + this._CB1[_Nt];
                var _CO = _Hi1.Multiply(_ND1 * _v5 * _w5, _tt);
                this._mB1.data[_hv]._Pi1(_CO);
                this._mB1.data[_Nt]._3C(_CO)
            }
        }, _HD1: function (_vh1) {
            var _xz1 = this._RB1;
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                var _hv = _av1.index;
                var _Nt = _av1.body;
                var _v5 = _av1._qB1;
                var _wt = _av1._Tk1;
                var _tt = _av1._8l1;
                var _lT = this._lB1.data[_hv];
                var _uv = _Hi1._Pi1(_Nt._Jv1(_lT),
                    this._mB1.data[_hv]);
                var _OD1 = _Fj1(_uv, _tt);
                if (_OD1 < 0) {
                    var _CO = _Hi1.Multiply(_xz1 * _v5 * _wt * _OD1, _tt);
                    this._mB1.data[_hv]._3C(_Hi1.Multiply(this._qD1(), _CO));
                    _Nt._vv1(_CO._Mi1(), _lT, !0)
                }
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                var _v5 = _av1._qB1;
                var _tt = _av1._8l1;
                var _uv = _Hi1._Pi1(this._mB1.data[_Nt], this._mB1.data[_hv]);
                var _OD1 = _Fj1(_uv, _tt);
                if (_OD1 < 0) {
                    var _CO = _Hi1.Multiply(_xz1 * _v5 * _OD1, _tt);
                    this._mB1.data[_hv]._3C(_CO);
                    this._mB1.data[_Nt]._Pi1(_CO)
                }
            }
        }
        , _yD1: function (_vh1) {
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                if (this._AB1.data[_t5] & _PA1._SA1) {
                    this._mB1.data[_t5]._Ii1()
                }
            }
        }, _xD1: function (_vh1) {
            for (var __a1 = this._PB1; __a1; __a1 = __a1._7w1()) {
                if (__a1._7B1 & _3B1._oB1) {
                    __a1._jB1();
                    var rotation = new _pj1(_vh1._3x1 * __a1._Au1);
                    var transform = new _tj1(_Hi1._3C(__a1._bB1, _Hi1._Pi1(_Hi1.Multiply(_vh1._3x1, __a1._zu1), _Uj1(rotation, __a1._bB1))), rotation);
                    __a1._cB1 = _Zj1(transform, __a1._cB1);
                    var _PD1 = new _tj1();
                    _PD1._lT.x = _vh1._4x1 * transform._lT.x;
                    _PD1._lT.y = _vh1._4x1 * transform._lT.y;
                    _PD1._7S._ZN = _vh1._4x1 * transform._7S._ZN;
                    _PD1._7S._u5 = _vh1._4x1 * (transform._7S._u5 - 1);
                    for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                        this._mB1.data[_t5]._Li1(_Wj1(_PD1, this._lB1.data[_t5]))
                    }
                }
            }
        }, _CD1: function (_vh1) {
            var _QD1 = _vh1._4x1 * this._SB1;
            for (var _tC = 0; _tC < this._LB1; _tC++) {
                var _UC1 = this._NB1[_tC];
                if (_UC1._Hf1 & _PA1._UA1) {
                    var _hv = _UC1._un1;
                    var _Nt = _UC1._vn1;
                    var _u5 = _UC1._6C1;
                    var _MC1 = _UC1._7C1;
                    var _RD1 = _UC1._8C1;
                    var _SD1 = _UC1._NA1;
                    var _7C1 = this._lB1.data[_hv];
                    var _8C1 = this._lB1.data[_Nt];
                    var _NA1 = this._lB1.data[_u5];
                    var _lT = _Hi1.Multiply(1 / 3, _Hi1._3C(_7C1, _Hi1._3C(_8C1, _NA1)));
                    var _Kt = new _pj1();
                    _Kt._ZN = _Gj1(_MC1, _7C1) + _Gj1(_RD1, _8C1) + _Gj1(_SD1, _NA1);
                    _Kt._u5 = _Fj1(_MC1, _7C1) + _Fj1(_RD1, _8C1) + _Fj1(_SD1, _NA1);
                    var _WQ = _Kt._ZN * _Kt._ZN + _Kt._u5 * _Kt._u5;
                    var _TD1 = _Gi1(_WQ);
                    _Kt._ZN *= _TD1;
                    _Kt._u5 *= _TD1;
                    var _1B1 = _QD1 * _UC1._1B1;
                    this._mB1.data[_hv]._3C(_Hi1.Multiply(_1B1, (_Hi1._Pi1(_UD1(_Kt, _MC1), (_Hi1._Pi1(_7C1, _lT))))));
                    this._mB1.data[_Nt]._3C(_Hi1.Multiply(_1B1, (_Hi1._Pi1(_UD1(_Kt, _RD1), (_Hi1._Pi1(_8C1, _lT))))));
                    this._mB1.data[_u5]._3C(_Hi1.Multiply(_1B1,
                        (_Hi1._Pi1(_UD1(_Kt, _SD1), (_Hi1._Pi1(_NA1, _lT))))))
                }
            }
        }, _DD1: function (_vh1) {
            var _VD1 = _vh1._4x1 * this._TB1;
            for (var _tC = 0; _tC < this._Lm1; _tC++) {
                var _dn1 = this._Mm1[_tC];
                if (_dn1._Hf1 & _PA1._TA1) {
                    var _hv = _dn1._un1;
                    var _Nt = _dn1._vn1;
                    var _cE = _Hi1._Pi1(this._lB1.data[_Nt], this._lB1.data[_hv]);
                    var _WD1 = _dn1._7l1;
                    var _VQ = _cE.Length();
                    var _1B1 = _VD1 * _dn1._1B1;
                    var _CO = _Hi1.Multiply(_1B1 * (_WD1 - _VQ) / _VQ, _cE);
                    this._mB1.data[_hv]._Pi1(_CO);
                    this._mB1.data[_Nt]._3C(_CO)
                }
            }
        }, _BD1: function (_vh1) {
            this._DB1 = this._CC1(this._DB1);
            for (var _t5 = 0;
                 _t5 < this._Gl1; _t5++) {
                this._CB1[_t5] = 0;
                this._DB1[_t5] = new _Hi1()
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                if (_av1._Hf1 & _PA1._XA1) {
                    var _hv = _av1._un1;
                    var _Nt = _av1._vn1;
                    var _v5 = _av1._qB1;
                    var _tt = _av1._8l1;
                    this._CB1[_hv] += _v5;
                    this._CB1[_Nt] += _v5;
                    this._DB1[_hv]._Pi1(_Hi1.Multiply((1 - _v5) * _v5, _tt));
                    this._DB1[_Nt]._3C(_Hi1.Multiply((1 - _v5) * _v5, _tt))
                }
            }
            var _XD1 = this._VB1 * this._YD1(_vh1);
            var _ZD1 = this._WB1 * this._YD1(_vh1);
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                if (_av1._Hf1 & _PA1._XA1) {
                    var _hv = _av1._un1;
                    var _Nt = _av1._vn1;
                    var _v5 = _av1._qB1;
                    var _tt = _av1._8l1;
                    var _w5 = this._CB1[_hv] + this._CB1[_Nt];
                    var _ZN = _Hi1._Pi1(this._DB1[_Nt], this._DB1[_hv]);
                    var __D1 = (_XD1 * (_w5 - 2) + _ZD1 * _Fj1(_ZN, _tt)) * _v5;
                    var _CO = _Hi1.Multiply(__D1, _tt);
                    this._mB1.data[_hv]._Pi1(_CO);
                    this._mB1.data[_Nt]._3C(_CO)
                }
            }
        }, _zD1: function (_vh1) {
            var _0E1 = this._UB1;
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                var _hv = _av1.index;
                if (this._AB1.data[_hv] & _PA1._VA1) {
                    var _Nt = _av1.body;
                    var _v5 = _av1._qB1;
                    var _wt = _av1._Tk1;
                    var _lT = this._lB1.data[_hv];
                    var _uv = _Hi1._Pi1(_Nt._Jv1(_lT), this._mB1.data[_hv]);
                    var _CO = _Hi1.Multiply(_0E1 * _wt * _v5, _uv);
                    this._mB1.data[_hv]._3C(_Hi1.Multiply(this._qD1(), _CO));
                    _Nt._vv1(_CO._Mi1(), _lT, !0)
                }
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                if (_av1._Hf1 & _PA1._VA1) {
                    var _hv = _av1._un1;
                    var _Nt = _av1._vn1;
                    var _v5 = _av1._qB1;
                    var _uv = _Hi1._Pi1(this._mB1.data[_Nt], this._mB1.data[_hv]);
                    var _CO = _Hi1.Multiply(_0E1 * _v5, _uv);
                    this._mB1.data[_hv]._3C(_CO);
                    this._mB1.data[_Nt]._Pi1(_CO)
                }
            }
        }, _AD1: function (_vh1) {
            var _1E1 = this._XB1 * this._YD1(_vh1);
            var _2E1 = 1.0 - _ji1;
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                var _hv = _av1.index;
                if (this._AB1.data[_hv] & _PA1._WA1) {
                    var _v5 = _av1._qB1;
                    if (_v5 > _2E1) {
                        var _Nt = _av1.body;
                        var _wt = _av1._Tk1;
                        var _lT = this._lB1.data[_hv];
                        var _tt = _av1._8l1;
                        var _CO = _Hi1.Multiply(_1E1 * _wt * (_v5 - _2E1), _tt);
                        this._mB1.data[_hv]._Pi1(_Hi1.Multiply(this._qD1(), _CO));
                        _Nt._vv1(_CO, _lT, !0)
                    }
                }
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                if (_av1._Hf1 & _PA1._WA1) {
                    var _v5 = _av1._qB1;
                    if (_v5 > _2E1) {
                        var _hv = _av1._un1;
                        var _Nt = _av1._vn1;
                        var _tt = _av1._8l1;
                        var _CO = _Hi1.Multiply(_1E1 * (_v5 - _2E1), _tt);
                        this._mB1.data[_hv]._Pi1(_CO);
                        this._mB1.data[_Nt]._3C(_CO)
                    }
                }
            }
        }, _ED1: function (_vh1) {
            this._EB1 = this._CC1(this._EB1);
            var _3E1 = _vh1._4x1 * this._YB1;
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                if (this._FB1[_hv] != this._FB1[_Nt]) {
                    var _v5 = _av1._qB1;
                    var _tt = _av1._8l1;
                    var _w5 = this._EB1[_hv] + this._EB1[_Nt];
                    var _CO = _Hi1.Multiply(_3E1 * _w5 * _v5, _tt);
                    this._mB1.data[_hv]._Pi1(_CO);
                    this._mB1.data[_Nt]._3C(_CO)
                }
            }
        }, _FD1: function (_vh1) {
            this._aA1.data = this._CC1(this._aA1.data);
            var _4E1 = Math.floor(256 * this._ZB1);
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                if (this._AB1.data[_hv] & this._AB1.data[_Nt] & _PA1._YA1) {
                    var _5E1 = this._aA1.data[_hv];
                    var _6E1 = this._aA1.data[_Nt];
                    var _7E1 = (_4E1 * (_6E1._Kt - _5E1._Kt)) >> 8;
                    var _8E1 = (_4E1 * (_6E1._gv - _5E1._gv)) >> 8;
                    var _9E1 = (_4E1 * (_6E1._Nt - _5E1._Nt)) >> 8;
                    var _aE1 = (_4E1 * (_6E1._hv - _5E1._hv)) >> 8;
                    _5E1._Kt += _7E1;
                    _5E1._gv += _8E1;
                    _5E1._Nt += _9E1;
                    _5E1._hv += _aE1;
                    _6E1._Kt -= _7E1;
                    _6E1._gv -= _8E1;
                    _6E1._Nt -= _9E1;
                    _6E1._hv -= _aE1
                }
            }
        }, _tD1: function () {
            var _bE1 = 0;
            var _cE1 = new Array(this._Gl1);
            for (var _t5 = 0; _t5 < this._Gl1; _t5++) {
                var _Hf1 = this._AB1.data[_t5];
                if (_Hf1 & _PA1._RA1) {
                    var _dE1 = this._su1._kx1;
                    if ((_Hf1 & _PA1._ZA1) && _dE1) {
                        _dE1._Lw1(_t5)
                    }
                    _cE1[_t5] = _ii1
                } else {
                    _cE1[_t5] = _bE1;
                    if (_t5 != _bE1) {
                        this._AB1.data[_bE1] = this._AB1.data[_t5];
                        this._lB1.data[_bE1] = this._lB1.data[_t5];
                        this._mB1.data[_bE1] = this._mB1.data[_t5];
                        this._FB1[_bE1] = this._FB1[_t5];
                        if (this._EB1) {
                            this._EB1[_bE1] = this._EB1[_t5]
                        }
                        if (this._aA1.data) {
                            this._aA1.data[_bE1] = this._aA1.data[_t5]
                        }
                        if (this._GB1.data) {
                            this._GB1.data[_bE1] = this._GB1.data[_t5]
                        }
                    }
                    _bE1++
                }
            }
            var _eE1 = {
                _fE1: function (_Ew1) {
                    return _Ew1.index < 0
                }, _gE1: function (_av1) {
                    return _av1._un1 < 0 || _av1._vn1 < 0
                }, _hE1: function (_av1) {
                    return _av1.index < 0
                }, _iE1: function (_dn1) {
                    return _dn1._un1 < 0 || _dn1._vn1 < 0
                }, _jE1: function (_UC1) {
                    return _UC1._un1 < 0 || _UC1._vn1 < 0 || _UC1._6C1 < 0;
                }
            };
            for (var _tC = 0; _tC < this._Km1; _tC++) {
                var _Ew1 = this._IB1[_tC];
                _Ew1.index = _cE1[_Ew1.index]
            }
            if (this._IB1) {
                this._Km1 = this._IB1._sh1(_eE1._fE1,
                    this._Km1)
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                _av1._un1 = _cE1[_av1._un1];
                _av1._vn1 = _cE1[_av1._vn1]
            }
            if (this._Xz1) {
                this._By1 = this._Xz1._sh1(_eE1._gE1, this._By1)
            }
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                _av1.index = _cE1[_av1.index]
            }
            if (this.__z1) {
                this._1A1 = this.__z1._sh1(_eE1._hE1, this._1A1)
            }
            for (var _tC = 0; _tC < this._Lm1; _tC++) {
                var _dn1 = this._Mm1[_tC];
                _dn1._un1 = _cE1[_dn1._un1];
                _dn1._vn1 = _cE1[_dn1._vn1]
            }
            if (this._Mm1) {
                this._Lm1 = this._Mm1._sh1(_eE1._iE1, this._Lm1)
            }
            for (var _tC = 0;
                 _tC < this._LB1; _tC++) {
                var _UC1 = this._NB1[_tC];
                _UC1._un1 = _cE1[_UC1._un1];
                _UC1._vn1 = _cE1[_UC1._vn1];
                _UC1._6C1 = _cE1[_UC1._6C1]
            }
            if (this._NB1) {
                this._LB1 = this._NB1._sh1(_eE1._jE1, this._LB1)
            }
            for (var __a1 = this._PB1; __a1; __a1 = __a1._7w1()) {
                var _IC1 = _bE1;
                var lastIndex = 0;
                var _kE1 = !1;
                for (var _t5 = __a1._5B1; _t5 < __a1._6B1; _t5++) {
                    var _Rt = _cE1[_t5];
                    if (_Rt >= 0) {
                        _IC1 = _6k1(_IC1, _Rt);
                        lastIndex = _8k1(lastIndex, _Rt + 1)
                    } else {
                        _kE1 = !0
                    }
                }
                if (_IC1 < lastIndex) {
                    __a1._5B1 = _IC1;
                    __a1._6B1 = lastIndex;
                    if (_kE1) {
                        if (__a1._7B1 & _3B1._oB1) {
                            __a1._fB1 = !0
                        }
                    }
                } else {
                    __a1._5B1 = 0;
                    __a1._6B1 = 0;
                    if (__a1._dB1) {
                        __a1._eB1 = !0
                    }
                }
            }
            this._Gl1 = _bE1;
            for (var __a1 = this._PB1; __a1;) {
                var _yC = __a1._7w1();
                if (__a1._eB1) {
                    this.__C1(__a1)
                }
                __a1 = _yC
            }
        }, _XC1: function (start, _lE1, end) {
            if (start == _lE1 || _lE1 == end) {
                return
            }

            function _cE1(_t5) {
                if (_t5 < start) {
                    return _t5
                } else if (_t5 < _lE1) {
                    return _t5 + end - _lE1
                } else if (_t5 < end) {
                    return _t5 + start - _lE1
                } else {
                    return _t5
                }
            }

            this._AB1.data.rotate(start, _lE1, end);
            this._lB1.data.rotate(start, _lE1, end);
            this._mB1.data.rotate(start, _lE1, end);
            this._FB1.rotate(start, _lE1,
                end);
            if (this._EB1) {
                this._EB1.rotate(start, _lE1, end)
            }
            if (this._aA1.data) {
                this._aA1.data.rotate(start, _lE1, end)
            }
            if (this._GB1.data) {
                this._GB1.data.rotate(start, _lE1, end)
            }
            for (var _tC = 0; _tC < this._Km1; _tC++) {
                var _Ew1 = this._IB1[_tC];
                _Ew1.index = _cE1(_Ew1.index)
            }
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                _av1._un1 = _cE1(_av1._un1);
                _av1._vn1 = _cE1(_av1._vn1)
            }
            for (var _tC = 0; _tC < this._1A1; _tC++) {
                var _av1 = this.__z1[_tC];
                _av1.index = _cE1(_av1.index)
            }
            for (var _tC = 0; _tC < this._Lm1; _tC++) {
                var _dn1 = this._Mm1[_tC];
                _dn1._un1 = _cE1(_dn1._un1);
                _dn1._vn1 = _cE1(_dn1._vn1)
            }
            for (var _tC = 0; _tC < this._LB1; _tC++) {
                var _UC1 = this._NB1[_tC];
                _UC1._un1 = _cE1(_UC1._un1);
                _UC1._vn1 = _cE1(_UC1._vn1);
                _UC1._6C1 = _cE1(_UC1._6C1)
            }
            for (var __a1 = this._PB1; __a1; __a1 = __a1._7w1()) {
                __a1._5B1 = _cE1(__a1._5B1);
                __a1._6B1 = _cE1(__a1._6B1 - 1) + 1
            }
        }, _zz1: function (_uk1) {
            this._vB1 = 2 * _uk1;
            this._xB1 = this._vB1 * this._vB1;
            this._wB1 = 1 / this._vB1
        }, _sz1: function (_5l1) {
            this._5v1 = _5l1;
            this._uB1 = 1 / this._5v1
        }, _tz1: function () {
            return this._5v1
        }, _uz1: function (_iu1) {
            this._Du1 = _iu1
        }
        , _vz1: function () {
            return this._Du1
        }, _wz1: function (_xz1) {
            this._RB1 = _xz1
        }, _yz1: function () {
            return this._RB1
        }, _Az1: function () {
            return this._vB1 / 2
        }, _YD1: function (_vh1) {
            return this._vB1 * _vh1._4x1
        }, _vD1: function (_vh1) {
            var _291 = this._YD1(_vh1);
            return _291 * _291
        }, _MD1: function (_vh1) {
            return this._5v1 * this._vD1(_vh1)
        }, _HC1: function () {
            return _ji1 * this._vB1
        }, _kB1: function () {
            var _jw = this._HC1();
            return this._5v1 * _jw * _jw;
        }, _qD1: function () {
            return 1.777777 * this._uB1 * this._wB1 * this._wB1
        }, _Kz1: function () {
            return this._AB1.data
        }, _Lz1: function () {
            return this._lB1.data
        }, _Mz1: function () {
            return this._mB1.data
        }, _Nz1: function () {
            this._aA1.data = this._CC1(this._aA1.data);
            return this._aA1.data
        }, _Oz1: function () {
            this._GB1.data = this._CC1(this._GB1.data);
            return this._GB1.data
        }, _qz1: function () {
            return this._zB1
        }, _rz1: function (_Gu) {
            _Th1(this._Gl1 <= _Gu);
            this._zB1 = _Gu
        }, _Pz1: function () {
            return this._FB1
        }, _mE1: function (buffer, _nE1, _xC1) {
            _Th1((_nE1 && _xC1) || (!_nE1 && !_xC1));
            buffer.data = _nE1;
            buffer.__B1 = _xC1
        }, _Qz1: function (buffer, _Rz1) {
            this._mE1(this._AB1, buffer, _Rz1)
        }
        , _Sz1: function (buffer, _Rz1) {
            this._mE1(this._lB1, buffer, _Rz1)
        }, _Tz1: function (buffer, _Rz1) {
            this._mE1(this._mB1, buffer, _Rz1)
        }, _Uz1: function (buffer, _Rz1) {
            this._mE1(this._aA1, buffer, _Rz1)
        }, _Vz1: function (buffer, _Rz1) {
            this._mE1(this._GB1, buffer, _Rz1)
        }, _ly1: function (_5n1, _2l1) {
            if (this._Km1 == 0) {
                return
            }
            var _9D1 = 0;
            var _aD1 = this._Km1;
            var _lD1 = this._IB1._uh1(_9D1, _aD1, _pC1(this._wB1 * _2l1._kl1.x, this._wB1 * _2l1._kl1.y), function (_hv, _Nt) {
                return _Bx1._0C1._3C1(_hv, _Nt)
            });
            var _mD1 = this._IB1._xh1(_lD1, _aD1, _pC1(this._wB1 * _2l1._ll1.x,
                this._wB1 * _2l1._ll1.y), function (_hv, _Nt) {
                return _Bx1._0C1._2C1(_hv, _Nt)
            });
            for (var _Ew1 = _lD1; _Ew1 < _mD1; ++_Ew1) {
                var _nD1 = this._IB1[_Ew1];
                var _t5 = _nD1.index;
                var _lT = this._lB1.data[_t5];
                if (_2l1._kl1.x < _lT.x && _lT.x < _2l1._ll1.x && _2l1._kl1.y < _lT.y && _lT.y < _2l1._ll1.y) {
                    if (!_5n1._0x1(_t5)) {
                        break
                    }
                }
            }
        }, __k1: function (_5n1, _ny1, _oy1) {
            if (this._Km1 == 0) {
                return
            }
            var _9D1 = 0;
            var _aD1 = this._Km1;
            var _lD1 = this._IB1._uh1(_9D1, _aD1, _pC1(this._wB1 * _6k1(_ny1.x, _oy1.x) - 1, this._wB1 * _6k1(_ny1.y, _oy1.y) - 1), function (_hv, _Nt) {
                return _Bx1._0C1._3C1(_hv,
                    _Nt)
            });
            var _mD1 = this._IB1._xh1(_9D1, _aD1, _pC1(this._wB1 * _8k1(_ny1.x, _oy1.x) + 1, this._wB1 * _8k1(_ny1.y, _oy1.y) + 1), function (_hv, _Nt) {
                return _Bx1._0C1._2C1(_hv, _Nt)
            });
            var _jl1 = 1;
            var _uv = _Hi1._Pi1(_oy1, _ny1);
            var _uw = _Fj1(_uv, _uv);
            for (var _Ew1 = _lD1; _Ew1 < _mD1; ++_Ew1) {
                var _nD1 = this._IB1[_Ew1];
                var _t5 = _nD1.index;
                var _lT = _Hi1._Pi1(_ny1, this._lB1.data[_t5]);
                var _oE1 = _Fj1(_lT, _uv);
                var _zk1 = _Fj1(_lT, _lT);
                var _pE1 = _oE1 * _oE1 - _uw * (_zk1 - this._xB1);
                if (_pE1 >= 0) {
                    var _qE1 = _Ei1(_pE1);
                    var _Mt = (-_oE1 - _qE1) / _uw;
                    if (_Mt > _jl1) {
                        continue
                    }
                    if (_Mt < 0) {
                        _Mt = (-_oE1 + _qE1) / _uw;
                        if (_Mt < 0 || _Mt > _jl1) {
                            continue
                        }
                    }
                    var _tt = _Hi1._3C(_lT, _Hi1._Pi1(_Mt, _uv));
                    _tt._Ri1();
                    var _CO = _5n1._0x1(_t5, _Hi1._3C(_ny1, _Hi1.Multiply(_Mt, _uv)), _tt, _Mt);
                    _jl1 = _6k1(_jl1, _CO);
                    if (_jl1 <= 0) {
                        break
                    }
                }
            }
        }, _2A1: function () {
            var _rE1 = 0;
            for (var _tC = 0; _tC < this._By1; _tC++) {
                var _av1 = this._Xz1[_tC];
                var _hv = _av1._un1;
                var _Nt = _av1._vn1;
                var _tt = _av1._8l1;
                var _uv = _Hi1._Pi1(this._mB1.data[_Nt], this._mB1.data[_hv]);
                var _OD1 = _Fj1(_uv, _tt);
                if (_OD1 < 0) {
                    _rE1 += _OD1 * _OD1
                }
            }
            return 0.5 * this._kB1() * _rE1
        }, _3A1: function () {
            return this._PB1
        }
        , _4A1: function () {
            return this._OB1
        }, _5A1: function () {
            return this._Gl1
        }
    };

    function _sE1(_tE1, _uE1) {
        return _Ei1(_tE1 * _uE1)
    }

    function _vE1(_wE1, _xE1) {
        return _wE1 > _xE1 ? _wE1 : _xE1
    }

    function _yE1() {
        this._Yt1 = null;
        this._zE1 = !1
    };

    function _AE1() {
        this._Cp1 = null;
        this._av1 = null;
        this.__x1 = null;
        this._yC = null
    };

    function _Hy1() {
        this._BE1 = new _AE1();
        this._CE1 = new _AE1();
        this._DE1 = new _Xo1()
    }

    _Hy1._EE1 = new _Xo1();
    _Hy1.prototype = {
        __u1: function (__y1, _un1, _0z1, _vn1) {
            this._Xy1 = 0;
            this._mu1 = _Hy1._FE1;
            this._Qy1 = __y1 || null;
            this._Sy1 = _0z1 || null;
            this._GE1 = _un1 || 0;
            this._HE1 = _vn1 || 0;
            this._DE1.__o1 = 0;
            this._xu1 = null;
            this._yu1 = null;
            this._BE1._av1 = null;
            this._BE1.__x1 = null;
            this._BE1._yC = null;
            this._BE1._Cp1 = null;
            this._CE1._av1 = null;
            this._CE1.__x1 = null;
            this._CE1._yC = null;
            this._CE1._Cp1 = null;
            this._Wy1 = 0;
            if (__y1) {
                this._pw1 = _sE1(this._Qy1._pw1, this._Sy1._pw1);
                this._qw1 = _vE1(this._Qy1._qw1, this._Sy1._qw1)
            } else {
                this._pw1 = 0;
                this._qw1 = 0
            }
            this._IE1 = 0.0
        }, _JE1: function () {
            return this._DE1
        }, _KE1: function (_LE1) {
            var _2y1 = this._Qy1._yw1();
            var _3y1 = this._Sy1._yw1();
            var _as1 = this._Qy1._rw1();
            var _bs1 = this._Sy1._rw1();
            _LE1._ap1(this._DE1, _2y1._Bj1(), _as1._Wk1, _3y1._Bj1(), _bs1._Wk1)
        }, _Oy1: function () {
            return (this._mu1 & _Hy1._ME1) == _Hy1._ME1
        }, _7z1: function (_Wv1) {
            if (_Wv1) {
                this._mu1 |= _Hy1._FE1
            } else {
                this._mu1 &= ~_Hy1._FE1
            }
        }, _Ny1: function () {
            return (this._mu1 & _Hy1._FE1) == _Hy1._FE1
        }, _7w1: function () {
            return this._yu1
        }, _cv1: function () {
            return this._Qy1
        }, _fy1: function () {
            return this._GE1;
        }, _ev1: function () {
            return this._Sy1
        }, _hy1: function () {
            return this._HE1
        }, _n71: function (_Sf) {
            this._pw1 = _Sf
        }
        , _Aw1: function () {
            return this._pw1
        }, _NE1: function () {
            this._pw1 = _sE1(this._Qy1._pw1, this._Sy1._pw1)
        }, _k71: function (_jw1) {
            this._qw1 = _jw1
        }, _Bw1: function () {
            return this._qw1
        }, _OE1: function () {
            this._qw1 = _vE1(this._Qy1._qw1, this._Sy1._qw1)
        }, _PE1: function (_Tb) {
            this._IE1 = _Tb
        }, _QE1: function () {
            return this._IE1
        }, _Ot1: function (_0p1, _bp1, _dp1) {
        }, _xw1: function () {
            this._mu1 |= _Hy1._RE1
        }, _SE1: null, _OA: function (listener) {
            _Hy1._EE1._Li1(this._DE1);
            this._mu1 |= _Hy1._FE1;
            var _TE1 = !1;
            var _UE1 = (this._mu1 & _Hy1._ME1) == _Hy1._ME1;
            var _Py1 = this._Qy1._tw1();
            var _Ry1 = this._Sy1._tw1();
            var _sw1 = _Py1 || _Ry1;
            var _2y1 = this._Qy1._yw1();
            var _3y1 = this._Sy1._yw1();
            var _bp1 = _2y1._Bj1();
            var _dp1 = _3y1._Bj1();
            if (_sw1) {
                var _as1 = this._Qy1._rw1();
                var _bs1 = this._Sy1._rw1();
                _TE1 = _9s1(_as1, this._GE1, _bs1, this._HE1, _bp1, _dp1);
                this._DE1.__o1 = 0
            } else {
                this._Ot1(this._DE1, _bp1, _dp1);
                _TE1 = this._DE1.__o1 > 0;
                for (var _t5 = 0; _t5 < this._DE1.__o1; ++_t5) {
                    var _VE1 = this._DE1._Yo1[_t5];
                    _VE1._Uo1 = 0.0;
                    _VE1._Vo1 = 0.0;
                    var _WE1 = _VE1.id;
                    for (var _Rt = 0; _Rt < _Hy1._EE1.__o1; ++_Rt) {
                        var _XE1 = _Hy1._EE1._Yo1[_Rt];
                        if (_XE1.id._RB() == _WE1._RB()) {
                            _VE1._Uo1 = _XE1._Uo1;
                            _VE1._Vo1 = _XE1._Vo1;
                            break
                        }
                    }
                }
                if (_TE1 != _UE1) {
                    _2y1._B71(!0);
                    _3y1._B71(!0)
                }
            }
            if (_TE1) {
                this._mu1 |= _Hy1._ME1
            } else {
                this._mu1 &= ~_Hy1._ME1
            }
            if (_UE1 == !1 && _TE1 == !0 && listener) {
                listener._Uw1(this)
            }
            if (_UE1 == !0 && _TE1 == !1 && listener) {
                listener._Vw1(this)
            }
            if (_sw1 == !1 && _TE1 && listener) {
                listener._Ww1(this, _Hy1._EE1)
            }
        }
    };
    _Hy1._Qu1 = 0x0001;
    _Hy1._ME1 = 0x0002;
    _Hy1._FE1 = 0x0004;
    _Hy1._RE1 = 0x0008;
    _Hy1._YE1 = 0x0010;
    _Hy1._Ru1 = 0x0020;

    function _ZE1() {
        this.parent.call(this)
    }

    _ZE1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            _Rp1(_0p1, this._Qy1._rw1(), _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, __E1, _dv1, _0F1) {
            this.parent.prototype.__u1.call(this, _bv1, 0, _dv1, 0);
            _Th1(this._Qy1._Xk1() == _Vk1._9l1);
            _Th1(this._Sy1._Xk1() == _Vk1._9l1)
        }
    };
    _ZE1._mh1(_Hy1);
    var _1F1 = new _ql1();

    function _2F1() {
        this.parent.call(this)
    }

    _2F1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            var _pn1 = this._Qy1._rw1();
            _pn1._Sl1(_1F1, this._GE1);
            __q1(_0p1, _1F1, _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, _un1, _dv1, _vn1) {
            this.parent.prototype.__u1.call(this, _bv1,
                _un1, _dv1, _vn1);
            _Th1(this._Qy1._Xk1() == _Vk1._cl1);
            _Th1(this._Sy1._Xk1() == _Vk1._9l1)
        }
    };
    _2F1._mh1(_Hy1);

    function _3F1() {
        this.parent.call(this)
    }

    _3F1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            var _pn1 = this._Qy1._rw1();
            _pn1._Sl1(_1F1, this._GE1);
            _0s1(_0p1, _1F1, _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, _un1, _dv1, _vn1) {
            this.parent.prototype.__u1.call(this, _bv1, _un1, _dv1, _vn1);
            _Th1(this._Qy1._Xk1() == _Vk1._cl1);
            _Th1(this._Sy1._Xk1() == _Vk1._bl1)
        }
    };
    _3F1.__u1 = function (_bv1, _un1, _dv1, _vn1) {
        return new _3F1(_bv1,
            _un1, _dv1, _vn1)
    };
    _3F1._mh1(_Hy1);

    function _4F1() {
        this.parent.call(this)
    }

    _4F1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            __q1(_0p1, this._Qy1._rw1(), _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, _un1, _dv1, _vn1) {
            this.parent.prototype.__u1.call(this, _bv1, 0, _dv1, 0);
            _Th1(this._Qy1._Xk1() == _Vk1._al1);
            _Th1(this._Sy1._Xk1() == _Vk1._9l1)
        }
    };
    _4F1.__u1 = function (_bv1, _un1, _dv1, _vn1) {
        return new _4F1(_bv1, _dv1)
    };
    _4F1._mh1(_Hy1);

    function _5F1() {
        this.parent.call(this)
    }

    _5F1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            _0s1(_0p1,
                this._Qy1._rw1(), _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, _un1, _dv1, _vn1) {
            this.parent.prototype.__u1.call(this, _bv1, 0, _dv1, 0);
            _Th1(this._Qy1._Xk1() == _Vk1._al1);
            _Th1(this._Sy1._Xk1() == _Vk1._bl1)
        }
    };
    _5F1.__u1 = function (_bv1, _un1, _dv1, _vn1) {
        return new _5F1(_bv1, _dv1)
    };
    _5F1._mh1(_Hy1);

    function _6F1() {
        this.parent.call(this)
    }

    _6F1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            _Vp1(_0p1, this._Qy1._rw1(), _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, _un1, _dv1, _vn1) {
            this.parent.prototype.__u1.call(this, _bv1,
                0, _dv1, 0);
            _Th1(this._Qy1._Xk1() == _Vk1._bl1);
            _Th1(this._Sy1._Xk1() == _Vk1._9l1)
        }
    };
    _6F1.__u1 = function (_bv1, _un1, _dv1, _vn1) {
        return new _6F1(_bv1, _dv1)
    };
    _6F1._mh1(_Hy1);

    function _7F1() {
        this.parent.call(this)
    }

    _7F1.prototype = {
        _Ot1: function (_0p1, _bp1, _dp1) {
            _uq1(_0p1, this._Qy1._rw1(), _bp1, this._Sy1._rw1(), _dp1)
        }, __u1: function (_bv1, _un1, _dv1, _vn1) {
            this.parent.prototype.__u1.call(this, _bv1, 0, _dv1, 0);
            _Th1(this._Qy1._Xk1() == _Vk1._bl1);
            _Th1(this._Sy1._Xk1() == _Vk1._bl1)
        }
    };
    _7F1.__u1 = function (_bv1, _un1, _dv1, _vn1) {
        return new _7F1(_bv1,
            _dv1)
    };
    _7F1._mh1(_Hy1);
    _Hy1._8F1 = function (_Yt1, _9F1, _aF1) {
        _Th1(0 <= _9F1 && _9F1 < _Vk1._dl1);
        _Th1(0 <= _aF1 && _aF1 < _Vk1._dl1);
        if (!_Hy1._bF1[_9F1]) _Hy1._bF1[_9F1] = [];
        _Hy1._bF1[_9F1][_aF1] = new _yE1();
        _Hy1._bF1[_9F1][_aF1]._Yt1 = _Yt1;
        _Hy1._bF1[_9F1][_aF1]._zE1 = !0;
        if (_9F1 != _aF1) {
            if (!_Hy1._bF1[_aF1]) _Hy1._bF1[_aF1] = [];
            _Hy1._bF1[_aF1][_9F1] = new _yE1();
            _Hy1._bF1[_aF1][_9F1]._Yt1 = _Yt1;
            _Hy1._bF1[_aF1][_9F1]._zE1 = !1
        }
        _Yt1._cF1 = [];
        _Yt1._dF1 = 2
    };
    _Hy1._eF1 = function () {
        _Hy1._8F1(_ZE1, _Vk1._9l1, _Vk1._9l1);
        _Hy1._8F1(_6F1, _Vk1._bl1,
            _Vk1._9l1);
        _Hy1._8F1(_7F1, _Vk1._bl1, _Vk1._bl1);
        _Hy1._8F1(_4F1, _Vk1._al1, _Vk1._9l1);
        _Hy1._8F1(_5F1, _Vk1._al1, _Vk1._bl1);
        _Hy1._8F1(_2F1, _Vk1._cl1, _Vk1._9l1);
        _Hy1._8F1(_3F1, _Vk1._cl1, _Vk1._bl1)
    };
    _Hy1._fF1 = function (_Yt1) {
        var _av1;
        if (_av1 = _Yt1._cF1.pop()) return _av1;
        for (var _t5 = 0; _t5 < _Yt1._dF1 - 1; ++_t5) _Yt1._cF1.push(new _Yt1());
        {
            _Yt1._dF1 += 32
        }
        return new _Yt1()
    };
    _Hy1.__u1 = function (_bv1, _un1, _dv1, _vn1) {
        if (_Hy1._gF1 == !1) {
            _Hy1._eF1();
            _Hy1._gF1 = !0
        }
        var _9F1 = _bv1._Xk1();
        var _aF1 = _dv1._Xk1();
        _Th1(0 <= _9F1 && _9F1 < _Vk1._dl1);
        _Th1(0 <= _aF1 && _aF1 < _Vk1._dl1);
        var _Yt1 = _Hy1._bF1[_9F1] ? _Hy1._bF1[_9F1][_aF1] ? _Hy1._bF1[_9F1][_aF1]._Yt1 : null : null;
        if (_Yt1) {
            var _av1 = _Hy1._fF1(_Yt1);
            if (_Hy1._bF1[_9F1][_aF1]._zE1) _av1.__u1(_bv1, _un1, _dv1, _vn1); else _av1.__u1(_dv1, _vn1, _bv1, _un1);
            return _av1
        }
        return null
    };
    _Hy1._fv1 = function (_av1) {
        _Th1(_Hy1._gF1 == !0);
        var _bv1 = _av1._Qy1;
        var _dv1 = _av1._Sy1;
        if (_av1._DE1.__o1 > 0 && _bv1._tw1() == !1 && _dv1._tw1() == !1) {
            _bv1._yw1()._B71(!0);
            _dv1._yw1()._B71(!0)
        }
        var _Oo1 = _bv1._Xk1();
        var _Po1 = _dv1._Xk1();
        _Th1(0 <= _Oo1 && _Po1 < _Vk1._dl1);
        _Th1(0 <= _Oo1 && _Po1 < _Vk1._dl1);
        _Hy1._bF1[_Oo1][_Po1]._Yt1._cF1.push(_av1)
    };
    _Hy1._bF1 = [];
    _Hy1._gF1 = !1;
    var _hF1 = new _Mw1();
    var _iF1 = new _Tw1();

    function _jx1() {
        this._2v1 = new _Gm1();
        this._wu1 = null;
        this._By1 = 0;
        this._Lx1 = _hF1;
        this._Nx1 = _iF1
    }

    _jx1.prototype = {
        _cn1: function (_jF1, _kF1) {
            var _xn1 = _jF1;
            var _yn1 = _kF1;
            var _bv1 = _xn1._d71;
            var _dv1 = _yn1._d71;
            var _un1 = _xn1._0l1;
            var _vn1 = _yn1._0l1;
            var _2y1 = _bv1._yw1();
            var _3y1 = _dv1._yw1();
            if (_2y1 == _3y1) {
                return
            }
            var _Tl1 = _3y1._6w1();
            while (_Tl1) {
                if (_Tl1._Cp1 == _2y1) {
                    var __y1 = _Tl1._av1._cv1();
                    var _0z1 = _Tl1._av1._ev1();
                    var _7t1 = _Tl1._av1._fy1();
                    var _8t1 = _Tl1._av1._hy1();
                    if (__y1 == _bv1 && _0z1 == _dv1 && _7t1 == _un1 && _8t1 == _vn1) {
                        return
                    }
                    if (__y1 == _dv1 && _0z1 == _bv1 && _7t1 == _vn1 && _8t1 == _un1) {
                        return
                    }
                }
                _Tl1 = _Tl1._yC
            }
            if (_3y1._bw1(_2y1) == !1) {
                return
            }
            if (this._Lx1 && this._Lx1._bw1(_bv1, _dv1) == !1) {
                return
            }
            var _u5 = _Hy1.__u1(_bv1, _un1, _dv1, _vn1);
            if (_u5 == null) {
                return
            }
            _bv1 = _u5._cv1();
            _dv1 = _u5._ev1();
            _un1 = _u5._fy1();
            _vn1 = _u5._hy1();
            _2y1 = _bv1._yw1();
            _3y1 = _dv1._yw1();
            _u5._xu1 = null;
            _u5._yu1 = this._wu1;
            if (this._wu1 != null) {
                this._wu1._xu1 = _u5
            }
            this._wu1 = _u5;
            _u5._BE1._av1 = _u5;
            _u5._BE1._Cp1 = _3y1;
            _u5._BE1.__x1 = null;
            _u5._BE1._yC = _2y1._wu1;
            if (_2y1._wu1 != null) {
                _2y1._wu1.__x1 = _u5._BE1
            }
            _2y1._wu1 = _u5._BE1;
            _u5._CE1._av1 = _u5;
            _u5._CE1._Cp1 = _2y1;
            _u5._CE1.__x1 = null;
            _u5._CE1._yC = _3y1._wu1;
            if (_3y1._wu1 != null) {
                _3y1._wu1.__x1 = _u5._CE1
            }
            _3y1._wu1 = _u5._CE1;
            if (_bv1._tw1() == !1 && _dv1._tw1() == !1) {
                _2y1._B71(!0);
                _3y1._B71(!0)
            }
            ++this._By1
        }, _6y1: function () {
            this._2v1._4n1(this)
        }, _fv1: function (_u5) {
            var _bv1 = _u5._cv1();
            var _dv1 = _u5._ev1();
            var _2y1 = _bv1._yw1();
            var _3y1 = _dv1._yw1();
            if (this._Nx1 && _u5._Oy1()) {
                this._Nx1._Vw1(_u5)
            }
            if (_u5._xu1) {
                _u5._xu1._yu1 = _u5._yu1
            }
            if (_u5._yu1) {
                _u5._yu1._xu1 = _u5._xu1
            }
            if (_u5 == this._wu1) {
                this._wu1 = _u5._yu1
            }
            if (_u5._BE1.__x1) {
                _u5._BE1.__x1._yC = _u5._BE1._yC
            }
            if (_u5._BE1._yC) {
                _u5._BE1._yC.__x1 = _u5._BE1.__x1
            }
            if (_u5._BE1 == _2y1._wu1) {
                _2y1._wu1 = _u5._BE1._yC
            }
            if (_u5._CE1.__x1) {
                _u5._CE1.__x1._yC = _u5._CE1._yC
            }
            if (_u5._CE1._yC) {
                _u5._CE1._yC.__x1 = _u5._CE1.__x1
            }
            if (_u5._CE1 == _3y1._wu1) {
                _3y1._wu1 = _u5._CE1._yC;
            }
            _Hy1._fv1(_u5);
            --this._By1
        }, _Fr1: function () {
            var _u5 = this._wu1;
            while (_u5) {
                var _bv1 = _u5._cv1();
                var _dv1 = _u5._ev1();
                var _un1 = _u5._fy1();
                var _vn1 = _u5._hy1();
                var _2y1 = _bv1._yw1();
                var _3y1 = _dv1._yw1();
                if (_u5._mu1 & _Hy1._RE1) {
                    if (_3y1._bw1(_2y1) == !1) {
                        var _lF1 = _u5;
                        _u5 = _lF1._7w1();
                        this._fv1(_lF1);
                        continue
                    }
                    if (this._Lx1 && this._Lx1._bw1(_bv1, _dv1) == !1) {
                        var _lF1 = _u5;
                        _u5 = _lF1._7w1();
                        this._fv1(_lF1);
                        continue
                    }
                    _u5._mu1 &= ~_Hy1._RE1
                }
                var _3z1 = _2y1.__v1() && _2y1._L_ != _8u1._9u1;
                var _4z1 = _3y1.__v1() && _3y1._L_ != _8u1._9u1;
                if (_3z1 == !1 && _4z1 == !1) {
                    _u5 = _u5._7w1();
                    continue
                }
                var _Bm1 = _bv1._Uv1[_un1]._Rm1;
                var _Cm1 = _dv1._Uv1[_vn1]._Rm1;
                var _mF1 = this._2v1.__m1(_Bm1, _Cm1);
                if (_mF1 == !1) {
                    var _lF1 = _u5;
                    _u5 = _lF1._7w1();
                    this._fv1(_lF1);
                    continue
                }
                _u5._OA(this._Nx1);
                _u5 = _u5._7w1()
            }
        }
    };

    function _nF1() {
        this._Ko1 = new _Hi1();
        this._Lo1 = new _Hi1();
        this._Uo1 = 0;
        this._Vo1 = 0;
        this._oF1 = 0;
        this._pF1 = 0;
        this._qF1 = 0
    }

    function _rF1() {
        this._sF1 = new Array(_Yh1);
        this._Zo1 = new _Hi1();
        this._To1 = new _Hi1();
        this._un1 = 0;
        this._vn1 = 0;
        this._tF1 = 0, this._uF1 = 0;
        this._vF1 = new _Hi1(), this._wF1 = new _Hi1();
        this._xF1 = 0, this._yF1 = 0;
        this.type = 0;
        this._cp1 = 0, this._ep1 = 0;
        this.__o1 = 0
    };

    function _zF1() {
        this._Yo1 = new Array(_Yh1);
        for (var _t5 = 0; _t5 < this._Yo1.length; ++_t5) this._Yo1[_t5] = new _nF1();
        this._8l1 = new _Hi1();
        this._oF1 = new _0j1();
        this._AF1 = new _0j1();
        this._un1 = 0;
        this._vn1 = 0;
        this._tF1 = 0, this._uF1 = 0;
        this._xF1 = 0, this._yF1 = 0;
        this._Sf = 0;
        this._jw1 = 0;
        this._BF1 = 0;
        this.__o1 = 0;
        this._CF1 = 0
    }

    function _DF1() {
        this._8l1 = new _Hi1();
        this._Wo1 = new _Hi1();
        this._Zp1 = 0
    }

    _DF1.prototype = {
        _ap1: function (_NA1, _bp1, _dp1, index) {
            _Th1(_NA1.__o1 > 0);
            switch (_NA1.type) {
                case _Xo1._1p1: {
                    var _fp1 = (_bp1._7S._u5 * _NA1._To1.x - _bp1._7S._ZN * _NA1._To1.y) + _bp1._lT.x;
                    var _gp1 = (_bp1._7S._ZN * _NA1._To1.x + _bp1._7S._u5 * _NA1._To1.y) + _bp1._lT.y;
                    var _hp1 = (_dp1._7S._u5 * _NA1._sF1[0].x - _dp1._7S._ZN * _NA1._sF1[0].y) + _dp1._lT.x;
                    var _ip1 = (_dp1._7S._ZN * _NA1._sF1[0].x + _dp1._7S._u5 * _NA1._sF1[0].y) + _dp1._lT.y;
                    this._Wo1.x = 0.5 * (_fp1 + _hp1);
                    this._Wo1.y = 0.5 * (_gp1 + _ip1);
                    this._8l1.x = _hp1 - _fp1;
                    this._8l1.y = _ip1 - _gp1;
                    var _EF1 = this._8l1.x;
                    var _FF1 = this._8l1.y;
                    this._8l1._Ri1();
                    this._Zp1 = (_EF1 * this._8l1.x + _FF1 * this._8l1.y) - _NA1._cp1 - _NA1._ep1;
                }
                    break;
                case _Xo1._2p1: {
                    this._8l1.x = _bp1._7S._u5 * _NA1._Zo1.x - _bp1._7S._ZN * _NA1._Zo1.y;
                    this._8l1.y = _bp1._7S._ZN * _NA1._Zo1.x + _bp1._7S._u5 * _NA1._Zo1.y;
                    var _pp1 = (_bp1._7S._u5 * _NA1._To1.x - _bp1._7S._ZN * _NA1._To1.y) + _bp1._lT.x;
                    var _qp1 = (_bp1._7S._ZN * _NA1._To1.x + _bp1._7S._u5 * _NA1._To1.y) + _bp1._lT.y;
                    var _rp1 = (_dp1._7S._u5 * _NA1._sF1[index].x - _dp1._7S._ZN * _NA1._sF1[index].y) + _dp1._lT.x;
                    var _sp1 = (_dp1._7S._ZN * _NA1._sF1[index].x + _dp1._7S._u5 * _NA1._sF1[index].y) + _dp1._lT.y;
                    this._Zp1 = ((_rp1 - _pp1) * this._8l1.x + (_sp1 - _qp1) * this._8l1.y) - _NA1._cp1 - _NA1._ep1;
                    this._Wo1.x = _rp1;
                    this._Wo1.y = _sp1
                }
                    break;
                case _Xo1._3p1: {
                    this._8l1.x = _dp1._7S._u5 * _NA1._Zo1.x - _dp1._7S._ZN * _NA1._Zo1.y;
                    this._8l1.y = _dp1._7S._ZN * _NA1._Zo1.x + _dp1._7S._u5 * _NA1._Zo1.y;
                    var _pp1 = (_dp1._7S._u5 * _NA1._To1.x - _dp1._7S._ZN * _NA1._To1.y) + _dp1._lT.x;
                    var _qp1 = (_dp1._7S._ZN * _NA1._To1.x + _dp1._7S._u5 * _NA1._To1.y) + _dp1._lT.y;
                    var _rp1 = (_bp1._7S._u5 * _NA1._sF1[index].x - _bp1._7S._ZN * _NA1._sF1[index].y) + _bp1._lT.x;
                    var _sp1 = (_bp1._7S._ZN * _NA1._sF1[index].x + _bp1._7S._u5 * _NA1._sF1[index].y) + _bp1._lT.y;
                    this._Zp1 = ((_rp1 - _pp1) * this._8l1.x + (_sp1 - _qp1) * this._8l1.y) - _NA1._cp1 - _NA1._ep1;
                    this._Wo1.x = _rp1;
                    this._Wo1.y = _sp1;
                    this._8l1.x = -this._8l1.x;
                    this._8l1.y = -this._8l1.y
                }
                    break
            }
        }
    };

    function _GF1() {
        this._vh1 = new _2x1();
        this._HF1 = null;
        this._Gu = 0;
        this._cx1 = null;
        this._dx1 = null
    }

    function _IF1() {
        this._JF1 = [];
        this._KF1 = []
    }

    _IF1._LF1 = new _tj1();
    _IF1._MF1 = new _tj1();
    _IF1._NF1 = new _DF1();
    _IF1.prototype = {
        _A01: function (_Vu1) {
            this._JD1 = _Vu1._vh1;
            this._Gl1 = _Vu1._Gu;
            this._JF1.length = this._Gl1;
            this._KF1.length = this._Gl1;
            this._OF1 = _Vu1._cx1;
            this._PF1 = _Vu1._dx1;
            this._QF1 = _Vu1._HF1;
            for (var _t5 = 0; _t5 < this._Gl1;
                 ++_t5) {
                var _av1 = this._QF1[_t5];
                var _bv1 = _av1._Qy1;
                var _dv1 = _av1._Sy1;
                var _as1 = _bv1._rw1();
                var _bs1 = _dv1._rw1();
                var _cp1 = _as1._Wk1;
                var _ep1 = _bs1._Wk1;
                var _2y1 = _bv1._yw1();
                var _3y1 = _dv1._yw1();
                var _0p1 = _av1._JE1();
                var __o1 = _0p1.__o1;
                _Th1(__o1 > 0);
                var _RF1 = this._KF1[_t5] || new _zF1();
                _RF1._Sf = _av1._pw1;
                _RF1._jw1 = _av1._qw1;
                _RF1._BF1 = _av1._IE1;
                _RF1._un1 = _2y1._lu1;
                _RF1._vn1 = _3y1._lu1;
                _RF1._tF1 = _2y1._Ju1;
                _RF1._uF1 = _3y1._Ju1;
                _RF1._xF1 = _2y1._Lu1;
                _RF1._yF1 = _3y1._Lu1;
                _RF1._CF1 = _t5;
                _RF1.__o1 = __o1;
                _RF1._AF1._Ii1();
                _RF1._oF1._Ii1();
                this._KF1[_t5] = _RF1;
                var _NA1 = this._JF1[_t5] || new _rF1();
                _NA1._un1 = _2y1._lu1;
                _NA1._vn1 = _3y1._lu1;
                _NA1._tF1 = _2y1._Ju1;
                _NA1._uF1 = _3y1._Ju1;
                _NA1._vF1.x = _2y1._uu1._wj1.x;
                _NA1._vF1.y = _2y1._uu1._wj1.y;
                _NA1._wF1.x = _3y1._uu1._wj1.x;
                _NA1._wF1.y = _3y1._uu1._wj1.y;
                _NA1._xF1 = _2y1._Lu1;
                _NA1._yF1 = _3y1._Lu1;
                _NA1._Zo1.x = _0p1._Zo1.x;
                _NA1._Zo1.y = _0p1._Zo1.y;
                _NA1._To1.x = _0p1._To1.x;
                _NA1._To1.y = _0p1._To1.y;
                _NA1.__o1 = __o1;
                _NA1._cp1 = _cp1;
                _NA1._ep1 = _ep1;
                _NA1.type = _0p1.type;
                this._JF1[_t5] = _NA1;
                for (var _Rt = 0; _Rt < __o1; ++_Rt) {
                    var _Yq1 = _0p1._Yo1[_Rt];
                    var _SF1 = _RF1._Yo1[_Rt];
                    if (this._JD1._8x1) {
                        _SF1._Uo1 = this._JD1._5x1 * _Yq1._Uo1;
                        _SF1._Vo1 = this._JD1._5x1 * _Yq1._Vo1
                    } else {
                        _SF1._Uo1 = 0.0;
                        _SF1._Vo1 = 0.0
                    }
                    _SF1._Ko1._Ii1();
                    _SF1._Lo1._Ii1();
                    _SF1._oF1 = 0.0;
                    _SF1._pF1 = 0.0;
                    _SF1._qF1 = 0.0;
                    _NA1._sF1[_Rt] = _Yq1._To1
                }
            }
        }, _TF1: function () {
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _RF1 = this._KF1[_t5];
                var _NA1 = this._JF1[_t5];
                var _cp1 = _NA1._cp1;
                var _ep1 = _NA1._ep1;
                var _0p1 = this._QF1[_RF1._CF1]._JE1();
                var _un1 = _RF1._un1;
                var _vn1 = _RF1._vn1;
                var _UF1 = _RF1._tF1;
                var _VF1 = _RF1._uF1;
                var _7t1 = _RF1._xF1;
                var _8t1 = _RF1._yF1;
                var _vF1 = _NA1._vF1;
                var _wF1 = _NA1._wF1;
                var _ey1 = this._OF1[_un1]._u5;
                var _WF1 = this._OF1[_un1]._hv;
                var _XF1 = this._PF1[_un1]._uv;
                var _Hn1 = this._PF1[_un1]._v5;
                var _gy1 = this._OF1[_vn1]._u5;
                var _YF1 = this._OF1[_vn1]._hv;
                var _ZF1 = this._PF1[_vn1]._uv;
                var _In1 = this._PF1[_vn1]._v5;
                _Th1(_0p1.__o1 > 0);
                _IF1._LF1._7S._rC(_WF1);
                _IF1._MF1._7S._rC(_YF1);
                _IF1._LF1._lT.x = _ey1.x - (_IF1._LF1._7S._u5 * _vF1.x - _IF1._LF1._7S._ZN * _vF1.y);
                _IF1._LF1._lT.y = _ey1.y - (_IF1._LF1._7S._ZN * _vF1.x + _IF1._LF1._7S._u5 * _vF1.y);
                _IF1._MF1._lT.x = _gy1.x - (_IF1._MF1._7S._u5 * _wF1.x - _IF1._MF1._7S._ZN * _wF1.y);
                _IF1._MF1._lT.y = _gy1.y - (_IF1._MF1._7S._ZN * _wF1.x + _IF1._MF1._7S._u5 * _wF1.y);
                var _LE1 = new _8p1();
                _LE1._ap1(_0p1, _IF1._LF1, _cp1, _IF1._MF1, _ep1);
                _RF1._8l1.x = _LE1._8l1.x;
                _RF1._8l1.y = _LE1._8l1.y;
                var __o1 = _RF1.__o1;
                for (var _Rt = 0; _Rt < __o1; ++_Rt) {
                    var _SF1 = _RF1._Yo1[_Rt];
                    _SF1._Ko1.x = _LE1._Yo1[_Rt].x - _ey1.x;
                    _SF1._Ko1.y = _LE1._Yo1[_Rt].y - _ey1.y;
                    _SF1._Lo1.x = _LE1._Yo1[_Rt].x - _gy1.x;
                    _SF1._Lo1.y = _LE1._Yo1[_Rt].y - _gy1.y;
                    var __F1 = _SF1._Ko1.x * _RF1._8l1.y - _SF1._Ko1.y * _RF1._8l1.x;
                    var _0G1 = _SF1._Lo1.x * _RF1._8l1.y - _SF1._Lo1.y * _RF1._8l1.x;
                    var _1G1 = _UF1 + _VF1 + _7t1 * __F1 * __F1 + _8t1 * _0G1 * _0G1;
                    _SF1._oF1 = _1G1 > 0.0 ? 1.0 / _1G1 : 0.0;
                    var _Nq1 = 1.0 * _RF1._8l1.y;
                    var _Oq1 = -1.0 * _RF1._8l1.x;
                    var _2G1 = _SF1._Ko1.x * _Oq1 - _SF1._Ko1.y * _Nq1;
                    var _3G1 = _SF1._Lo1.x * _Oq1 - _SF1._Lo1.y * _Nq1;
                    var _4G1 = _UF1 + _VF1 + _7t1 * _2G1 * _2G1 + _8t1 * _3G1 * _3G1;
                    _SF1._pF1 = _4G1 > 0.0 ? 1.0 / _4G1 : 0.0;
                    _SF1._qF1 = 0.0;
                    var _5G1 = _RF1._8l1.x * (((_ZF1.x + (-_In1 * _SF1._Lo1.y)) - _XF1.x) - (-_Hn1 * _SF1._Ko1.y)) + _RF1._8l1.y * (((_ZF1.y + (_In1 * _SF1._Lo1.x)) - _XF1.y) - (_Hn1 * _SF1._Ko1.x));
                    if (_5G1 < -_6i1) {
                        _SF1._qF1 = -_RF1._jw1 * _5G1
                    }
                }
                if (_RF1.__o1 == 2) {
                    var _6G1 = _RF1._Yo1[0];
                    var _7G1 = _RF1._Yo1[1];
                    var _8G1 = _6G1._Ko1.x * _RF1._8l1.y - _6G1._Ko1.y * _RF1._8l1.x;
                    var _9G1 = _6G1._Lo1.x * _RF1._8l1.y - _6G1._Lo1.y * _RF1._8l1.x;
                    var _aG1 = _7G1._Ko1.x * _RF1._8l1.y - _7G1._Ko1.y * _RF1._8l1.x;
                    var _bG1 = _7G1._Lo1.x * _RF1._8l1.y - _7G1._Lo1.y * _RF1._8l1.x;
                    var _cG1 = _UF1 + _VF1 + _7t1 * _8G1 * _8G1 + _8t1 * _9G1 * _9G1;
                    var _dG1 = _UF1 + _VF1 + _7t1 * _aG1 * _aG1 + _8t1 * _bG1 * _bG1;
                    var _eG1 = _UF1 + _VF1 + _7t1 * _8G1 * _aG1 + _8t1 * _9G1 * _bG1;
                    var _fG1 = 1000.0;
                    if (_cG1 * _cG1 < _fG1 * (_cG1 * _dG1 - _eG1 * _eG1)) {
                        _RF1._AF1._PQ.x = _cG1;
                        _RF1._AF1._PQ.y = _eG1;
                        _RF1._AF1._4V.x = _eG1;
                        _RF1._AF1._4V.y = _dG1;
                        _RF1._oF1._Li1(_RF1._AF1._4j1())
                    } else {
                        _RF1.__o1 = 1
                    }
                }
            }
        }, _gG1: function () {
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _RF1 = this._KF1[_t5];
                var _un1 = _RF1._un1;
                var _vn1 = _RF1._vn1;
                var _UF1 = _RF1._tF1;
                var _7t1 = _RF1._xF1;
                var _VF1 = _RF1._uF1;
                var _8t1 = _RF1._yF1;
                var __o1 = _RF1.__o1;
                var _XF1 = this._PF1[_un1]._uv;
                var _Hn1 = this._PF1[_un1]._v5;
                var _ZF1 = this._PF1[_vn1]._uv;
                var _In1 = this._PF1[_vn1]._v5;
                var _8l1 = _RF1._8l1;
                var _Nq1 = 1.0 * _8l1.y;
                var _Oq1 = -1.0 * _8l1.x;
                for (var _Rt = 0; _Rt < __o1; ++_Rt) {
                    var _SF1 = _RF1._Yo1[_Rt];
                    var _br1 = (_SF1._Uo1 * _8l1.x) + (_SF1._Vo1 * _Nq1);
                    var _cr1 = (_SF1._Uo1 * _8l1.y) + (_SF1._Vo1 * _Oq1);
                    _Hn1 -= _7t1 * (_SF1._Ko1.x * _cr1 - _SF1._Ko1.y * _br1);
                    _XF1.x -= _UF1 * _br1;
                    _XF1.y -= _UF1 * _cr1;
                    _In1 += _8t1 * (_SF1._Lo1.x * _cr1 - _SF1._Lo1.y * _br1);
                    _ZF1.x += _VF1 * _br1;
                    _ZF1.y += _VF1 * _cr1
                }
                this._PF1[_un1]._v5 = _Hn1;
                this._PF1[_vn1]._v5 = _In1
            }
        }, _hG1: function () {
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _RF1 = this._KF1[_t5];
                var _un1 = _RF1._un1;
                var _vn1 = _RF1._vn1;
                var _UF1 = _RF1._tF1;
                var _7t1 = _RF1._xF1;
                var _VF1 = _RF1._uF1;
                var _8t1 = _RF1._yF1;
                var __o1 = _RF1.__o1;
                var _XF1 = this._PF1[_un1]._uv;
                var _Hn1 = this._PF1[_un1]._v5;
                var _ZF1 = this._PF1[_vn1]._uv;
                var _In1 = this._PF1[_vn1]._v5;
                var _8l1 = _RF1._8l1;
                var _Nq1 = 1.0 * _8l1.y;
                var _Oq1 = -1.0 * _8l1.x;
                var _Sf = _RF1._Sf;
                _Th1(__o1 == 1 || __o1 == 2);
                for (var _Rt = 0; _Rt < __o1; ++_Rt) {
                    var _SF1 = _RF1._Yo1[_Rt];
                    var _iG1 = _ZF1.x + (-_In1 * _SF1._Lo1.y) - _XF1.x - (-_Hn1 * _SF1._Ko1.y);
                    var _jG1 = _ZF1.y + (_In1 * _SF1._Lo1.x) - _XF1.y - (_Hn1 * _SF1._Ko1.x);
                    var _kG1 = (_iG1 * _Nq1 + _jG1 * _Oq1) - _RF1._BF1;
                    var _lG1 = _SF1._pF1 * (-_kG1);
                    var _mG1 = _Sf * _SF1._Uo1;
                    var _nG1 = _ak1(_SF1._Vo1 + _lG1, -_mG1, _mG1);
                    _lG1 = _nG1 - _SF1._Vo1;
                    _SF1._Vo1 = _nG1;
                    var _br1 = _lG1 * _Nq1;
                    var _cr1 = _lG1 * _Oq1;
                    _XF1.x -= _UF1 * _br1;
                    _XF1.y -= _UF1 * _cr1;
                    _Hn1 -= _7t1 * (_SF1._Ko1.x * _cr1 - _SF1._Ko1.y * _br1);
                    _ZF1.x += _VF1 * _br1;
                    _ZF1.y += _VF1 * _cr1;
                    _In1 += _8t1 * (_SF1._Lo1.x * _cr1 - _SF1._Lo1.y * _br1)
                }
                if (_RF1.__o1 == 1) {
                    _SF1 = _RF1._Yo1[0];
                    _iG1 = _ZF1.x + (-_In1 * _SF1._Lo1.y) - _XF1.x - (-_Hn1 * _SF1._Ko1.y);
                    _jG1 = _ZF1.y + (_In1 * _SF1._Lo1.x) - _XF1.y - (_Hn1 * _SF1._Ko1.x);
                    var _OD1 = _iG1 * _8l1.x + _jG1 * _8l1.y;
                    var _lG1 = -_SF1._oF1 * (_OD1 - _SF1._qF1);
                    var _nG1 = _8k1(_SF1._Uo1 + _lG1, 0.0);
                    _lG1 = _nG1 - _SF1._Uo1;
                    _SF1._Uo1 = _nG1;
                    _br1 = _lG1 * _8l1.x;
                    _cr1 = _lG1 * _8l1.y;
                    _XF1.x -= _UF1 * _br1;
                    _XF1.y -= _UF1 * _cr1;
                    _Hn1 -= _7t1 * (_SF1._Ko1.x * _cr1 - _SF1._Ko1.y * _br1);
                    _ZF1.x += _VF1 * _br1;
                    _ZF1.y += _VF1 * _cr1;
                    _In1 += _8t1 * (_SF1._Lo1.x * _cr1 - _SF1._Lo1.y * _br1)
                } else {
                    var _oG1 = _RF1._Yo1[0];
                    var _pG1 = _RF1._Yo1[1];
                    var _q21 = _oG1._Uo1;
                    var _r21 = _pG1._Uo1;
                    _Th1(_q21 >= 0.0 && _r21 >= 0.0);
                    var _qG1 = _ZF1.x + (-_In1 * _oG1._Lo1.y) - _XF1.x - (-_Hn1 * _oG1._Ko1.y);
                    var _rG1 = _ZF1.y + (_In1 * _oG1._Lo1.x) - _XF1.y - (_Hn1 * _oG1._Ko1.x);
                    var _sG1 = _ZF1.x + (-_In1 * _pG1._Lo1.y) - _XF1.x - (-_Hn1 * _pG1._Ko1.y);
                    var _tG1 = _ZF1.y + (_In1 * _pG1._Lo1.x) - _XF1.y - (_Hn1 * _pG1._Ko1.x);
                    var _uG1 = _qG1 * _8l1.x + _rG1 * _8l1.y;
                    var _vG1 = _sG1 * _8l1.x + _tG1 * _8l1.y;
                    var _DA1 = _uG1 - _oG1._qF1;
                    var _EA1 = _vG1 - _pG1._qF1;
                    _DA1 -= _RF1._AF1._PQ.x * _q21 + _RF1._AF1._4V.x * _r21;
                    _EA1 -= _RF1._AF1._PQ.y * _q21 + _RF1._AF1._4V.y * _r21;
                    for (; ;) {
                        var _St = -(_RF1._oF1._PQ.x * _DA1 + _RF1._oF1._4V.x * _EA1);
                        var _wG1 = -(_RF1._oF1._PQ.y * _DA1 + _RF1._oF1._4V.y * _EA1);
                        if (_St >= 0.0 && _wG1 >= 0.0) {
                            var _9w = _St - _q21;
                            var _aw = _wG1 - _r21;
                            var _xG1 = _9w * _8l1.x;
                            var _yG1 = _9w * _8l1.y;
                            var _zG1 = _aw * _8l1.x;
                            var _AG1 = _aw * _8l1.y;
                            _XF1.x -= _UF1 * (_xG1 + _zG1);
                            _XF1.y -= _UF1 * (_yG1 + _AG1);
                            _Hn1 -= _7t1 * ((_oG1._Ko1.x * _yG1 - _oG1._Ko1.y * _xG1) + (_pG1._Ko1.x * _AG1 - _pG1._Ko1.y * _zG1));
                            _ZF1.x += _VF1 * (_xG1 + _zG1);
                            _ZF1.y += _VF1 * (_yG1 + _AG1);
                            _In1 += _8t1 * ((_oG1._Lo1.x * _yG1 - _oG1._Lo1.y * _xG1) + (_pG1._Lo1.x * _AG1 - _pG1._Lo1.y * _zG1));
                            _oG1._Uo1 = _St;
                            _pG1._Uo1 = _wG1;
                            break
                        }
                        _St = -_oG1._oF1 * _DA1;
                        _wG1 = 0.0;
                        _uG1 = 0.0;
                        _vG1 = _RF1._AF1._PQ.y * _St + _EA1;
                        if (_St >= 0.0 && _vG1 >= 0.0) {
                            _9w = _St - _q21;
                            _aw = _wG1 - _r21;
                            _xG1 = _9w * _8l1.x;
                            _yG1 = _9w * _8l1.y;
                            _zG1 = _aw * _8l1.x;
                            _AG1 = _aw * _8l1.y;
                            _XF1.x -= _UF1 * (_xG1 + _zG1);
                            _XF1.y -= _UF1 * (_yG1 + _AG1);
                            _Hn1 -= _7t1 * ((_oG1._Ko1.x * _yG1 - _oG1._Ko1.y * _xG1) + (_pG1._Ko1.x * _AG1 - _pG1._Ko1.y * _zG1));
                            _ZF1.x += _VF1 * (_xG1 + _zG1);
                            _ZF1.y += _VF1 * (_yG1 + _AG1);
                            _In1 += _8t1 * ((_oG1._Lo1.x * _yG1 - _oG1._Lo1.y * _xG1) + (_pG1._Lo1.x * _AG1 - _pG1._Lo1.y * _zG1));
                            _oG1._Uo1 = _St;
                            _pG1._Uo1 = _wG1;
                            break
                        }
                        _St = 0.0;
                        _wG1 = -_pG1._oF1 * _EA1;
                        _uG1 = _RF1._AF1._4V.x * _wG1 + _DA1;
                        _vG1 = 0.0;
                        if (_wG1 >= 0.0 && _uG1 >= 0.0) {
                            _9w = _St - _q21;
                            _aw = _wG1 - _r21;
                            _xG1 = _9w * _8l1.x;
                            _yG1 = _9w * _8l1.y;
                            _zG1 = _aw * _8l1.x;
                            _AG1 = _aw * _8l1.y;
                            _XF1.x -= _UF1 * (_xG1 + _zG1);
                            _XF1.y -= _UF1 * (_yG1 + _AG1);
                            _Hn1 -= _7t1 * ((_oG1._Ko1.x * _yG1 - _oG1._Ko1.y * _xG1) + (_pG1._Ko1.x * _AG1 - _pG1._Ko1.y * _zG1));
                            _ZF1.x += _VF1 * (_xG1 + _zG1);
                            _ZF1.y += _VF1 * (_yG1 + _AG1);
                            _In1 += _8t1 * ((_oG1._Lo1.x * _yG1 - _oG1._Lo1.y * _xG1) + (_pG1._Lo1.x * _AG1 - _pG1._Lo1.y * _zG1));
                            _oG1._Uo1 = _St;
                            _pG1._Uo1 = _wG1;
                            break
                        }
                        _St = 0.0;
                        _wG1 = 0.0;
                        _uG1 = _DA1;
                        _vG1 = _EA1;
                        if (_uG1 >= 0.0 && _vG1 >= 0.0) {
                            _9w = _St - _q21;
                            _aw = _wG1 - _r21;
                            _xG1 = _9w * _8l1.x;
                            _yG1 = _9w * _8l1.y;
                            _zG1 = _aw * _8l1.x;
                            _AG1 = _aw * _8l1.y;
                            _XF1.x -= _UF1 * (_xG1 + _zG1);
                            _XF1.y -= _UF1 * (_yG1 + _AG1);
                            _Hn1 -= _7t1 * ((_oG1._Ko1.x * _yG1 - _oG1._Ko1.y * _xG1) + (_pG1._Ko1.x * _AG1 - _pG1._Ko1.y * _zG1));
                            _ZF1.x += _VF1 * (_xG1 + _zG1);
                            _ZF1.y += _VF1 * (_yG1 + _AG1);
                            _In1 += _8t1 * ((_oG1._Lo1.x * _yG1 - _oG1._Lo1.y * _xG1) + (_pG1._Lo1.x * _AG1 - _pG1._Lo1.y * _zG1));
                            _oG1._Uo1 = _St;
                            _pG1._Uo1 = _wG1;
                            break
                        }
                        break
                    }
                }
                this._PF1[_un1]._v5 = _Hn1;
                this._PF1[_vn1]._v5 = _In1
            }
        }, _BG1: function () {
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _RF1 = this._KF1[_t5];
                var _0p1 = this._QF1[_RF1._CF1]._JE1();
                for (var _Rt = 0; _Rt < _RF1.__o1; ++_Rt) {
                    _0p1._Yo1[_Rt]._Uo1 = _RF1._Yo1[_Rt]._Uo1;
                    _0p1._Yo1[_Rt]._Vo1 = _RF1._Yo1[_Rt]._Vo1
                }
            }
        }, _CG1: function () {
            var _DG1 = 0.0;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _NA1 = this._JF1[_t5];
                var _un1 = _NA1._un1;
                var _vn1 = _NA1._vn1;
                var _vF1 = _NA1._vF1;
                var _UF1 = _NA1._tF1;
                var _7t1 = _NA1._xF1;
                var _wF1 = _NA1._wF1;
                var _VF1 = _NA1._uF1;
                var _8t1 = _NA1._yF1;
                var __o1 = _NA1.__o1;
                var _ey1 = this._OF1[_un1]._u5;
                var _WF1 = this._OF1[_un1]._hv;
                var _gy1 = this._OF1[_vn1]._u5;
                var _YF1 = this._OF1[_vn1]._hv;
                for (var _Rt = 0; _Rt < __o1; ++_Rt) {
                    _IF1._LF1._7S._rC(_WF1);
                    _IF1._MF1._7S._rC(_YF1);
                    _IF1._LF1._lT.x = _ey1.x - (_IF1._LF1._7S._u5 * _vF1.x - _IF1._LF1._7S._ZN * _vF1.y);
                    _IF1._LF1._lT.y = _ey1.y - (_IF1._LF1._7S._ZN * _vF1.x + _IF1._LF1._7S._u5 * _vF1.y);
                    _IF1._MF1._lT.x = _gy1.x - (_IF1._MF1._7S._u5 * _wF1.x - _IF1._MF1._7S._ZN * _wF1.y);
                    _IF1._MF1._lT.y = _gy1.y - (_IF1._MF1._7S._ZN * _wF1.x + _IF1._MF1._7S._u5 * _wF1.y);
                    _IF1._NF1._ap1(_NA1, _IF1._LF1, _IF1._MF1, _Rt);
                    var _8l1 = _IF1._NF1._8l1;
                    var _Wo1 = _IF1._NF1._Wo1;
                    var _Zp1 = _IF1._NF1._Zp1;
                    var _EG1 = _Wo1.x - _ey1.x;
                    var _FG1 = _Wo1.y - _ey1.y;
                    var _GG1 = _Wo1.x - _gy1.x;
                    var _HG1 = _Wo1.y - _gy1.y;
                    _DG1 = _6k1(_DG1, _Zp1);
                    var __j1 = _ak1(_di1 * (_Zp1 + _1i1), -_7i1, 0.0);
                    var __F1 = _EG1 * _8l1.y - _FG1 * _8l1.x;
                    var _0G1 = _GG1 * _8l1.y - _HG1 * _8l1.x;
                    var _AF1 = _UF1 + _VF1 + _7t1 * __F1 * __F1 + _8t1 * _0G1 * _0G1;
                    var _wv1 = _AF1 > 0.0 ? -__j1 / _AF1 : 0.0;
                    var _br1 = _wv1 * _8l1.x;
                    var _cr1 = _wv1 * _8l1.y;
                    _ey1.x -= _UF1 * _br1;
                    _ey1.y -= _UF1 * _cr1;
                    _WF1 -= _7t1 * (_EG1 * _cr1 - _FG1 * _br1);
                    _gy1.x += _VF1 * _br1;
                    _gy1.y += _VF1 * _cr1;
                    _YF1 += _8t1 * (_GG1 * _cr1 - _HG1 * _br1)
                }
                this._OF1[_un1]._hv = _WF1;
                this._OF1[_vn1]._hv = _YF1
            }
            return _DG1 >= -3.0 * _1i1
        }, _IG1: function (_JG1, _KG1) {
            var _DG1 = 0.0;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                var _NA1 = this._JF1[_t5];
                var _un1 = _NA1._un1;
                var _vn1 = _NA1._vn1;
                var _vF1 = _NA1._vF1;
                var _wF1 = _NA1._wF1;
                var __o1 = _NA1.__o1;
                var _UF1 = 0.0;
                var _7t1 = 0.0;
                if (_un1 == _JG1 || _un1 == _KG1) {
                    _UF1 = _NA1._tF1;
                    _7t1 = _NA1._xF1
                }
                var _VF1 = 0.0;
                var _8t1 = 0.0;
                if (_vn1 == _JG1 || _vn1 == _KG1) {
                    _VF1 = _NA1._uF1;
                    _8t1 = _NA1._yF1
                }
                var _ey1 = this._OF1[_un1]._u5;
                var _WF1 = this._OF1[_un1]._hv;
                var _gy1 = this._OF1[_vn1]._u5;
                var _YF1 = this._OF1[_vn1]._hv;
                for (var _Rt = 0; _Rt < __o1; ++_Rt) {
                    _IF1._LF1._7S._rC(_WF1);
                    _IF1._MF1._7S._rC(_YF1);
                    _IF1._LF1._lT._Li1(_Hi1._Pi1(_ey1, _Uj1(_IF1._LF1._7S, _vF1)));
                    _IF1._MF1._lT._Li1(_Hi1._Pi1(_gy1, _Uj1(_IF1._MF1._7S,
                        _wF1)));
                    _IF1._NF1._ap1(_NA1, _IF1._LF1, _IF1._MF1, _Rt);
                    var _8l1 = _IF1._NF1._8l1;
                    var _Wo1 = _IF1._NF1._Wo1;
                    var _Zp1 = _IF1._NF1._Zp1;
                    var _Ko1 = _Hi1._Pi1(_Wo1, _ey1);
                    var _Lo1 = _Hi1._Pi1(_Wo1, _gy1);
                    _DG1 = _6k1(_DG1, _Zp1);
                    var __j1 = _ak1(_ei1 * (_Zp1 + _1i1), -_7i1, 0.0);
                    var __F1 = _Gj1(_Ko1, _8l1);
                    var _0G1 = _Gj1(_Lo1, _8l1);
                    var _AF1 = _UF1 + _VF1 + _7t1 * __F1 * __F1 + _8t1 * _0G1 * _0G1;
                    var _wv1 = _AF1 > 0.0 ? -__j1 / _AF1 : 0.0;
                    var _1r1 = _Hi1.Multiply(_wv1, _8l1);
                    _ey1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                    _WF1 -= _7t1 * _Gj1(_Ko1, _1r1);
                    _gy1._3C(_Hi1.Multiply(_VF1, _1r1));
                    _YF1 += _8t1 * _Gj1(_Lo1, _1r1)
                }
                this._OF1[_un1]._hv = _WF1;
                this._OF1[_vn1]._hv = _YF1
            }
            return _DG1 >= -1.5 * _1i1;
        }
    };

    function _zx1() {
        this._Vy1 = [];
        this._QF1 = [];
        this._LG1 = [];
        this._PF1 = [];
        this._OF1 = []
    }

    var _MG1 = _Ah1._Mh1("solve initialization", "solve");
    var _NG1 = _Ah1._Mh1("warm starting", "solve initialization");
    var _OG1 = _Ah1._Mh1("solve velocities", "solve");
    var _PG1 = _Ah1._Mh1("solve positions", "solve");
    _zx1._QG1 = new _bx1();
    _zx1._RG1 = new _GF1();
    _zx1._SG1 = new _IF1();
    _zx1.prototype = {
        _NA: function () {
            this._nx1 = 0;
            this._By1 = 0;
            this._ox1 = 0
        }
        , _ap1: function (_TG1, _UG1, _VG1, listener) {
            this._WG1 = listener;
            this._9z1 = _TG1;
            this._az1 = _UG1;
            this._XG1 = _VG1;
            this._nx1 = 0;
            this._By1 = 0;
            this._ox1 = 0;
            this._Vy1.length = _TG1;
            this._QF1.length = _UG1;
            this._LG1.length = _VG1;
            this._PF1.length = _TG1;
            this._OF1.length = _TG1
        }, _7j1: function (_vh1, _Zf, _eu1) {
            _MG1.start();
            var _w5 = _vh1._3x1;
            for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                var _Nt = this._Vy1[_t5];
                this._OF1[_t5]._u5._Li1(_Nt._uu1._u5);
                var _hv = _Nt._uu1._hv;
                this._PF1[_t5]._uv._Li1(_Nt._zu1);
                var _v5 = _Nt._Au1;
                _Nt._uu1._xj1._Li1(_Nt._uu1._u5);
                _Nt._uu1._zj1 = _Nt._uu1._hv;
                if (_Nt._L_ == _8u1._Hu1) {
                    this._PF1[_t5]._uv.x += _w5 * ((_Nt._Du1 * _Zf.x) + (_Nt._Ju1 * _Nt._Eu1.x));
                    this._PF1[_t5]._uv.y += _w5 * ((_Nt._Du1 * _Zf.y) + (_Nt._Ju1 * _Nt._Eu1.y));
                    _v5 += _w5 * _Nt._Lu1 * _Nt._Fu1;
                    this._PF1[_t5]._uv.x *= 1.0 / (1.0 + _w5 * _Nt._Bu1);
                    this._PF1[_t5]._uv.y *= 1.0 / (1.0 + _w5 * _Nt._Bu1);
                    _v5 *= 1.0 / (1.0 + _w5 * _Nt._Cu1)
                }
                this._OF1[_t5]._hv = _hv;
                this._PF1[_t5]._v5 = _v5
            }
            _zx1._QG1._vh1 = _vh1;
            _zx1._QG1._cx1 = this._OF1;
            _zx1._QG1._dx1 = this._PF1;
            _zx1._RG1._vh1 = _vh1;
            _zx1._RG1._HF1 = this._QF1;
            _zx1._RG1._Gu = this._By1;
            _zx1._RG1._cx1 = this._OF1;
            _zx1._RG1._dx1 = this._PF1;
            _zx1._RG1._YG1 = this._ZG1;
            _zx1._SG1._A01(_zx1._RG1);
            _zx1._SG1._TF1();
            if (_vh1._8x1) {
                _NG1.start();
                _zx1._SG1._gG1();
                _NG1.stop()
            }
            for (var _t5 = 0; _t5 < this._ox1; ++_t5) {
                this._LG1[_t5].__G1(_zx1._QG1)
            }
            _MG1.stop();
            _OG1.start();
            for (var _t5 = 0; _t5 < _vh1._6x1; ++_t5) {
                for (var _Rt = 0; _Rt < this._ox1; ++_Rt) {
                    this._LG1[_Rt]._hG1(_zx1._QG1)
                }
                _zx1._SG1._hG1()
            }
            _zx1._SG1._BG1();
            _OG1.stop();
            _PG1.start();
            for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                var _u5 = this._OF1[_t5]._u5;
                var _hv = this._OF1[_t5]._hv;
                var _uv = this._PF1[_t5]._uv;
                var _v5 = this._PF1[_t5]._v5;
                var _0H1 = _w5 * _uv.x;
                var _1H1 = _w5 * _uv.y;
                var _2H1 = _0H1 * _0H1 + _1H1 * _1H1;
                if (_2H1 > _ai1) {
                    var _3H1 = _9i1 / _Ei1(_2H1);
                    _uv.x *= _3H1;
                    _uv.y *= _3H1
                }
                var rotation = _w5 * _v5;
                if (rotation * rotation > _ci1) {
                    var _3H1 = _bi1 / _3k1(rotation);
                    _v5 *= _3H1
                }
                _u5.x += _w5 * _uv.x;
                _u5.y += _w5 * _uv.y;
                _hv += _w5 * _v5;
                this._OF1[_t5]._hv = _hv;
                this._PF1[_t5]._v5 = _v5
            }
            var _4H1 = !1;
            for (var _t5 = 0; _t5 < _vh1._7x1; ++_t5) {
                var _5H1 = _zx1._SG1._CG1();
                var _6H1 = !0;
                for (var _Rt = 0; _Rt < this._ox1; ++_Rt) {
                    var _7H1 = this._LG1[_Rt]._CG1(_zx1._QG1);
                    _6H1 = _6H1 && _7H1
                }
                if (_5H1 && _6H1) {
                    _4H1 = !0;
                    break
                }
            }
            for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                var body = this._Vy1[_t5];
                body._uu1._u5._Li1(this._OF1[_t5]._u5);
                body._uu1._hv = this._OF1[_t5]._hv;
                body._zu1._Li1(this._PF1[_t5]._uv);
                body._Au1 = this._PF1[_t5]._v5;
                body._aw1()
            }
            _PG1.stop();
            this._8H1(_zx1._SG1._KF1);
            if (_eu1) {
                var _9H1 = _Vh1;
                var _aH1 = _gi1 * _gi1;
                var _bH1 = _hi1 * _hi1;
                for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                    var _Nt = this._Vy1[_t5];
                    if (_Nt._Xk1() == _8u1._9u1) {
                        continue
                    }
                    if ((_Nt._mu1 & _8u1._pu1) == 0 || _Nt._Au1 * _Nt._Au1 > _bH1 || _Fj1(_Nt._zu1,
                        _Nt._zu1) > _aH1) {
                        _Nt._Gu1 = 0.0;
                        _9H1 = 0.0
                    } else {
                        _Nt._Gu1 += _w5;
                        _9H1 = _6k1(_9H1, _Nt._Gu1)
                    }
                }
                if (_9H1 >= _fi1 && _4H1) {
                    for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                        var _Nt = this._Vy1[_t5];
                        _Nt._B71(!1)
                    }
                }
            }
        }, _8y1: function (_bz1, _JG1, _KG1) {
            _Th1(_JG1 < this._nx1);
            _Th1(_KG1 < this._nx1);
            for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                var _Nt = this._Vy1[_t5];
                this._OF1[_t5]._u5._Li1(_Nt._uu1._u5);
                this._OF1[_t5]._hv = _Nt._uu1._hv;
                this._PF1[_t5]._uv._Li1(_Nt._zu1);
                this._PF1[_t5]._v5 = _Nt._Au1
            }
            _zx1._RG1._HF1 = this._QF1;
            _zx1._RG1._Gu = this._By1;
            _zx1._RG1._vh1 = _bz1;
            _zx1._RG1._cx1 = this._OF1;
            _zx1._RG1._dx1 = this._PF1;
            _zx1._SG1._A01(_zx1._RG1);
            for (var _t5 = 0; _t5 < _bz1._7x1; ++_t5) {
                var _5H1 = _zx1._SG1._IG1(_JG1, _KG1);
                if (_5H1) {
                    break
                }
            }
            this._Vy1[_JG1]._uu1._xj1._Li1(this._OF1[_JG1]._u5);
            this._Vy1[_JG1]._uu1._zj1 = this._OF1[_JG1]._hv;
            this._Vy1[_KG1]._uu1._xj1._Li1(this._OF1[_KG1]._u5);
            this._Vy1[_KG1]._uu1._zj1 = this._OF1[_KG1]._hv;
            _zx1._SG1._TF1();
            for (var _t5 = 0; _t5 < _bz1._6x1; ++_t5) {
                _zx1._SG1._hG1()
            }
            var _w5 = _bz1._3x1;
            for (var _t5 = 0; _t5 < this._nx1; ++_t5) {
                var _u5 = this._OF1[_t5]._u5;
                var _hv = this._OF1[_t5]._hv;
                var _uv = this._PF1[_t5]._uv;
                var _v5 = this._PF1[_t5]._v5;
                var _cH1 = _Hi1.Multiply(_w5, _uv);
                if (_Fj1(_cH1, _cH1) > _ai1) {
                    var _3H1 = _9i1 / _cH1.Length();
                    _uv.Multiply(_3H1)
                }
                var rotation = _w5 * _v5;
                if (rotation * rotation > _ci1) {
                    var _3H1 = _bi1 / _3k1(rotation);
                    _v5 *= _3H1
                }
                _u5._3C(_Hi1.Multiply(_w5, _uv));
                _hv += _w5 * _v5;
                this._OF1[_t5]._hv = _hv;
                this._PF1[_t5]._v5 = _v5;
                var body = this._Vy1[_t5];
                body._uu1._u5._Li1(_u5);
                body._uu1._hv = _hv;
                body._zu1._Li1(_uv);
                body._Au1 = _v5;
                body._aw1()
            }
            this._8H1(_zx1._SG1._KF1)
        }, _My1: function (body) {
            _Th1(this._nx1 < this._9z1);
            body._lu1 = this._nx1;
            this._Vy1[this._nx1] = body;
            if (!this._OF1[this._nx1]) {
                this._OF1[this._nx1] = new _9x1();
                this._PF1[this._nx1] = new _ax1()
            }
            ++this._nx1
        }, _Ty1: function (_av1) {
            _Th1(this._By1 < this._az1);
            this._QF1[this._By1++] = _av1
        }, _Uy1: function (_dw1) {
            _Th1(this._ox1 < this._XG1);
            this._LG1[this._ox1++] = _dw1;
        }, _8H1: function (_dH1) {
            if (this._WG1 == null) {
                return
            }
            for (var _t5 = 0; _t5 < this._By1; ++_t5) {
                var _u5 = this._QF1[_t5];
                var _RF1 = _dH1[_t5];
                var _wv1 = new _Qw1();
                _wv1._Gu = _RF1.__o1;
                for (var _Rt = 0; _Rt < _RF1.__o1;
                     ++_Rt) {
                    _wv1._Rw1[_Rt] = _RF1._Yo1[_Rt]._Uo1;
                    _wv1._Sw1[_Rt] = _RF1._Yo1[_Rt]._Vo1
                }
                this._WG1._Yw1(_u5, _wv1)
            }
        }
    };

    function _eH1() {
        this._GG = new _Hi1();
        this._fH1 = 0;
        this._gH1 = 0
    };

    function _hH1() {
        this._Cp1 = null;
        this._dw1 = null;
        this.__x1 = null;
        this._yC = null
    };

    function _iH1() {
        this.type = _Xx1._jH1;
        this._Qm1 = null;
        this._2y1 = null;
        this._3y1 = null;
        this._4y1 = !1
    };_iH1.prototype = {
        _Xi1: function (data, _8z1, _kH1) {
            this._2y1 = _8z1[data['bodyA']];
            this._3y1 = _8z1[data['bodyB']];
            this._4y1 = data['collideConnected']
        }
    };

    function _Xx1(_Vu1) {
        _Th1(_Vu1._2y1 != _Vu1._3y1);
        this._L_ = _Vu1.type;
        this._xu1 = null;
        this._yu1 = null;
        this._0y1 = _Vu1._2y1;
        this._Zx1 = _Vu1._3y1;
        this._kP = 0;
        this._ew1 = _Vu1._4y1;
        this._Iy1 = !1;
        this._Mu1 = _Vu1._Qm1;
        this._Yx1 = new _hH1();
        this._Yx1._dw1 = null;
        this._Yx1._Cp1 = null;
        this._Yx1.__x1 = null;
        this._Yx1._yC = null;
        this._1y1 = new _hH1();
        this._1y1._dw1 = null;
        this._1y1._Cp1 = null;
        this._1y1.__x1 = null;
        this._1y1._yC = null
    }

    _Xx1.prototype = {
        _Xk1: function () {
            return this._L_
        }, _cz1: function () {
            return this._0y1
        }, _dz1: function () {
            return this._Zx1
        }, _ez1: function () {
        }, _fz1: function () {
        }
        , _lH1: function (_4x1) {
        }, _mH1: function (_4x1) {
        }, _7w1: function () {
            return this._yu1
        }, _Zm1: function () {
            return this._Mu1
        }, _8w1: function (data) {
            this._Mu1 = data
        }, _1w1: function () {
            return this._0y1._1w1() && this._Zx1._1w1()
        }, _nH1: function () {
            return this._ew1
        }, _jn1: function (_kn1) {
        }, __G1: function (data) {
        }, _hG1: function (data) {
        }, _CG1: function (data) {
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            _aP['bodyA'] = null;
            _aP['bodyB'] = null;
            _aP['type'] = this._L_;
            _aP['collideConnected'] = this._ew1;
            return _aP
        }
    };
    _Xx1._oH1 = 0;
    _Xx1._pH1 = 1;
    _Xx1._qH1 = 2;
    _Xx1._rH1 = 3;
    _Xx1._jH1 = 0;
    _Xx1._sH1 = 1;
    _Xx1._tH1 = 2;
    _Xx1._gz1 = 3;
    _Xx1._hz1 = 4;
    _Xx1._lz1 = 5;
    _Xx1._uH1 = 6;
    _Xx1._vH1 = 7;
    _Xx1._wH1 = 8;
    _Xx1._xH1 = 9;
    _Xx1._yH1 = 10;
    _Xx1._mz1 = 11;
    _Xx1.__u1 = function (_Vu1) {
        var _dw1 = null;
        switch (_Vu1.type) {
            case _Xx1._gz1:
                _dw1 = new _zH1(_Vu1);
                break;
            case _Xx1._lz1:
                _dw1 = new _AH1(_Vu1);
                break;
            case _Xx1._tH1:
                _dw1 = new _BH1(_Vu1);
                break;
            case _Xx1._sH1:
                _dw1 = new _CH1(_Vu1);
                break;
            case _Xx1._hz1:
                _dw1 = new _DH1(_Vu1);
                break;
            case _Xx1._uH1:
                _dw1 = new _EH1(_Vu1);
                break;
            case _Xx1._vH1:
                _dw1 = new _FH1(_Vu1);
                break;
            case _Xx1._wH1:
                _dw1 = new _GH1(_Vu1);
                break;
            case _Xx1._xH1:
                _dw1 = new _HH1(_Vu1);
                break;
            case _Xx1._yH1:
                _dw1 = new _IH1(_Vu1);
                break;
            case _Xx1._mz1:
                _dw1 = new _JH1(_Vu1);
                break;
            default :
                _Th1(!1);
                break
        }
        return _dw1
    };
    _Xx1._fv1 = function (_dw1) {
    };

    function _KH1() {
        this.parent.call(this);
        this.type = _Xx1._sH1;
        this._LH1 = new _Hi1();
        this._MH1 = new _Hi1();
        this._NH1 = 0.0;
        this._OH1 = 0.0;
        this._PH1 = 0.0;
        this._QH1 = 0.0;
        this._RH1 = 0.0;
        this._SH1 = !1;
        this._TH1 = !1;
        Object.seal(this)
    }

    _KH1.prototype = {
        _ap1: function (_1z1, _2z1, anchor) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            this._LH1 = this._2y1._Fv1(anchor);
            this._MH1 = this._3y1._Fv1(anchor);
            this._NH1 = this._3y1._qj1() - this._2y1._qj1()
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._NH1 = data['referenceAngle'];
            this._OH1 = data['lowerAngle'];
            this._PH1 = data['upperAngle'];
            this._QH1 = data['maxMotorTorque'];
            this._RH1 = data['motorSpeed'];
            this._SH1 = data['enableLimit'];
            this._TH1 = data['enableMotor']
        }
    };
    _KH1._mh1(_iH1);

    function _CH1(_Vu1) {
        this.parent.call(this,
            _Vu1);
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._WH1 = _Vu1._NH1;
        this._XH1 = new _Zi1();
        this._YH1 = 0.0;
        this._ZH1 = _Vu1._OH1;
        this.__H1 = _Vu1._PH1;
        this._0I1 = _Vu1._QH1;
        this._1I1 = _Vu1._RH1;
        this._2I1 = _Vu1._SH1;
        this._3I1 = _Vu1._TH1;
        this._4I1 = _Xx1._oH1;
        this._GE1 = 0;
        this._HE1 = 0;
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._Iu1 = new _cj1();
        this._dI1 = 0
    }

    _CH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }
        , _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1
        }, _gI1: function () {
            return this._WH1
        }, _hI1: function () {
            var _1z1 = this._0y1;
            var _2z1 = this._Zx1;
            return _2z1._uu1._hv - _1z1._uu1._hv - this._WH1
        }, _iI1: function () {
            var _1z1 = this._0y1;
            var _2z1 = this._Zx1;
            return _2z1._Au1 - _1z1._Au1
        }, _jI1: function () {
            return this._2I1
        }, _kI1: function (_Wv1) {
            if (_Wv1 != this._2I1) {
                this._0y1._B71(!0);
                this._Zx1._B71(!0);
                this._2I1 = _Wv1;
                this._XH1._Mw = 0.0
            }
        }, _lI1: function () {
            return this._ZH1
        }
        , _mI1: function () {
            return this.__H1
        }, _nI1: function (_am1, _bm1) {
            _Th1(_am1 <= _bm1);
            if (_am1 != this._ZH1 || _bm1 != this.__H1) {
                this._0y1._B71(!0);
                this._Zx1._B71(!0);
                this._XH1._Mw = 0.0;
                this._ZH1 = _am1;
                this.__H1 = _bm1
            }
        }, _oI1: function () {
            return this._3I1
        }, _pI1: function (_Wv1) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._3I1 = _Wv1
        }, _qI1: function (_Tb) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._1I1 = _Tb
        }, _rI1: function () {
            return this._1I1
        }, _sI1: function (_uv1) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._0I1 = _uv1
        }, _tI1: function () {
            return this._0I1
        }, _lH1: function (_4x1) {
            var _1r1 = new _Hi1(this._XH1.x, this._XH1.y);
            return _Hi1.Multiply(_4x1, _1r1)
        }, _mH1: function (_4x1) {
            return _4x1 * this._XH1._Mw
        }, _uI1: function (_4x1) {
            return _4x1 * this._YH1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1 = this._0y1._uu1._wj1;
            this._8I1 = this._Zx1._uu1._wj1;
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            this._6I1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _gu1 = (_7t1 + _8t1 == 0.0);
            this._Iu1._PQ.x = _UF1 + _VF1 + this._5I1.y * this._5I1.y * _7t1 + this._6I1.y * this._6I1.y * _8t1;
            this._Iu1._4V.x = -this._5I1.y * this._5I1.x * _7t1 - this._6I1.y * this._6I1.x * _8t1;
            this._Iu1._ej1.x = -this._5I1.y * _7t1 - this._6I1.y * _8t1;
            this._Iu1._PQ.y = this._Iu1._4V.x;
            this._Iu1._4V.y = _UF1 + _VF1 + this._5I1.x * this._5I1.x * _7t1 + this._6I1.x * this._6I1.x * _8t1;
            this._Iu1._ej1.y = this._5I1.x * _7t1 + this._6I1.x * _8t1;
            this._Iu1._PQ._Mw = this._Iu1._ej1.x;
            this._Iu1._4V._Mw = this._Iu1._ej1.y;
            this._Iu1._ej1._Mw = _7t1 + _8t1;
            this._dI1 = _7t1 + _8t1;
            if (this._dI1 > 0.0) {
                this._dI1 = 1.0 / this._dI1
            }
            if (this._3I1 == !1 || _gu1) {
                this._YH1 = 0.0
            }
            if (this._2I1 && _gu1 == !1) {
                var _xI1 = _YF1 - _WF1 - this._WH1;
                if (_3k1(this.__H1 - this._ZH1) < 2.0 * _2i1) {
                    this._4I1 = _Xx1._rH1
                } else if (_xI1 <= this._ZH1) {
                    if (this._4I1 != _Xx1._pH1) {
                        this._XH1._Mw = 0.0
                    }
                    this._4I1 = _Xx1._pH1
                } else if (_xI1 >= this.__H1) {
                    if (this._4I1 != _Xx1._qH1) {
                        this._XH1._Mw = 0.0
                    }
                    this._4I1 = _Xx1._qH1
                } else {
                    this._4I1 = _Xx1._oH1;
                    this._XH1._Mw = 0.0
                }
            } else {
                this._4I1 = _Xx1._oH1
            }
            if (data._vh1._8x1) {
                this._XH1.Multiply(data._vh1._5x1);
                this._YH1 *= data._vh1._5x1;
                var _1r1 = new _Hi1(this._XH1.x, this._XH1.y);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * (_Gj1(this._5I1, _1r1) + this._YH1 + this._XH1._Mw);
                _ZF1._3C(_Hi1.Multiply(_VF1,
                    _1r1));
                _In1 += _8t1 * (_Gj1(this._6I1, _1r1) + this._YH1 + this._XH1._Mw)
            } else {
                this._XH1._Ii1();
                this._YH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _gu1 = (_7t1 + _8t1 == 0.0);
            if (this._3I1 && this._4I1 != _Xx1._rH1 && _gu1 == !1) {
                var _yI1 = _In1 - _Hn1 - this._1I1;
                var _wv1 = -this._dI1 * _yI1;
                var _zI1 = this._YH1;
                var _AI1 = data._vh1._3x1 * this._0I1;
                this._YH1 = _ak1(this._YH1 + _wv1, -_AI1, _AI1);
                _wv1 = this._YH1 - _zI1;
                _Hn1 -= _7t1 * _wv1;
                _In1 += _8t1 * _wv1
            }
            if (this._2I1 && this._4I1 != _Xx1._oH1 && _gu1 == !1) {
                var _BI1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_ZF1, _Ij1(_In1, this._6I1)), _XF1), _Ij1(_Hn1, this._5I1));
                var _CI1 = _In1 - _Hn1;
                var _yI1 = new _Zi1(_BI1.x, _BI1.y, _CI1);
                var _wv1 = this._Iu1._fj1(_yI1)._Mi1();
                if (this._4I1 == _Xx1._rH1) {
                    this._XH1._3C(_wv1)
                } else if (this._4I1 == _Xx1._pH1) {
                    var _nG1 = this._XH1._Mw + _wv1._Mw;
                    if (_nG1 < 0.0) {
                        var _DI1 = _Hi1._3C(_BI1._Mi1(), _Hi1.Multiply(this._XH1._Mw, new _Hi1(this._Iu1._ej1.x, this._Iu1._ej1.y)));
                        var _EI1 = this._Iu1._ij1(_DI1);
                        _wv1.x = _EI1.x;
                        _wv1.y = _EI1.y;
                        _wv1._Mw = -this._XH1._Mw;
                        this._XH1.x += _EI1.x;
                        this._XH1.y += _EI1.y;
                        this._XH1._Mw = 0.0;
                    } else {
                        this._XH1._3C(_wv1)
                    }
                } else if (this._4I1 == _Xx1._qH1) {
                    var _nG1 = this._XH1._Mw + _wv1._Mw;
                    if (_nG1 > 0.0) {
                        var _DI1 = _Hi1._3C(_BI1._Mi1(), _Hi1.Multiply(this._XH1._Mw, new _Hi1(this._Iu1._ej1.x, this._Iu1._ej1.y)));
                        var _EI1 = this._Iu1._ij1(_DI1);
                        _wv1.x = _EI1.x;
                        _wv1.y = _EI1.y;
                        _wv1._Mw = -this._XH1._Mw;
                        this._XH1.x += _EI1.x;
                        this._XH1.y += _EI1.y;
                        this._XH1._Mw = 0.0
                    } else {
                        this._XH1._3C(_wv1)
                    }
                }
                var _1r1 = new _Hi1(_wv1.x, _wv1.y);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * (_Gj1(this._5I1, _1r1) + _wv1._Mw);
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * (_Gj1(this._6I1, _1r1) + _wv1._Mw)
            } else {
                var _yI1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_ZF1, _Ij1(_In1, this._6I1)), _XF1), _Ij1(_Hn1, this._5I1));
                var _wv1 = this._Iu1._ij1(_yI1._Mi1());
                this._XH1.x += _wv1.x;
                this._XH1.y += _wv1.y;
                _XF1._Pi1(_Hi1.Multiply(_UF1, _wv1));
                _Hn1 -= _7t1 * _Gj1(this._5I1, _wv1);
                _ZF1._3C(_Hi1.Multiply(_VF1, _wv1));
                _In1 += _8t1 * _Gj1(this._6I1, _wv1)
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _FI1 = 0.0;
            var _GI1 = 0.0;
            var _gu1 = (this._bI1 + this._cI1 == 0.0);
            if (this._2I1 && this._4I1 != _Xx1._oH1 && _gu1 == !1) {
                var angle = _YF1 - _WF1 - this._WH1;
                var _HI1 = 0.0;
                if (this._4I1 == _Xx1._rH1) {
                    var __j1 = _ak1(angle - this._ZH1, -_8i1, _8i1);
                    _HI1 = -this._dI1 * __j1;
                    _FI1 = _3k1(__j1)
                } else if (this._4I1 == _Xx1._pH1) {
                    var __j1 = angle - this._ZH1;
                    _FI1 = -__j1;
                    __j1 = _ak1(__j1 + _2i1, -_8i1, 0.0);
                    _HI1 = -this._dI1 * __j1
                } else if (this._4I1 == _Xx1._qH1) {
                    var __j1 = angle - this.__H1;
                    _FI1 = __j1;
                    __j1 = _ak1(__j1 - _2i1, 0.0, _8i1);
                    _HI1 = -this._dI1 * __j1
                }
                _WF1 -= this._bI1 * _HI1;
                _YF1 += this._cI1 * _HI1
            }
            {
                _vI1._rC(_WF1);
                _wI1._rC(_YF1);
                var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
                var _Lo1 = _Uj1(_wI1,
                    _Hi1._Pi1(this._VH1, this._8I1));
                var __j1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, _Lo1), _ey1), _Ko1);
                _GI1 = __j1.Length();
                var _UF1 = this._9I1, _VF1 = this._aI1;
                var _7t1 = this._bI1, _8t1 = this._cI1;
                var _AF1 = new _0j1();
                _AF1._PQ.x = _UF1 + _VF1 + _7t1 * _Ko1.y * _Ko1.y + _8t1 * _Lo1.y * _Lo1.y;
                _AF1._PQ.y = -_7t1 * _Ko1.x * _Ko1.y - _8t1 * _Lo1.x * _Lo1.y;
                _AF1._4V.x = _AF1._PQ.y;
                _AF1._4V.y = _UF1 + _VF1 + _7t1 * _Ko1.x * _Ko1.x + _8t1 * _Lo1.x * _Lo1.x;
                var _wv1 = _AF1._7j1(__j1)._Mi1();
                _ey1._Pi1(_Hi1.Multiply(_UF1, _wv1));
                _WF1 -= _7t1 * _Gj1(_Ko1, _wv1);
                _gy1._3C(_Hi1.Multiply(_VF1,
                    _wv1));
                _YF1 += _8t1 * _Gj1(_Lo1, _wv1)
            }
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return _GI1 <= _1i1 && _FI1 <= _2i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['referenceAngle'] = this._WH1;
            _aP['lowerAngle'] = this._ZH1;
            _aP['upperAngle'] = this.__H1;
            _aP['maxMotorTorque'] = this._0I1;
            _aP['motorSpeed'] = this._1I1;
            _aP['enableLimit'] = this._2I1;
            _aP['enableMotor'] = this._3I1;
            return _aP
        }
    };
    _CH1._mh1(_Xx1);

    function _II1() {
        this.parent.call(this);
        this.type = _Xx1._lz1;
        this.target = new _Hi1(0.0, 0.0);
        this._JI1 = 0.0;
        this._KI1 = 5.0;
        this._LI1 = 0.7;
        Object.seal(this)
    }

    _II1._mh1(_iH1);

    function _AH1(_Vu1) {
        this.parent.call(this, _Vu1);
        _Th1(_Vu1.target._Ti1());
        _Th1(_xi1(_Vu1._JI1) && _Vu1._JI1 >= 0.0);
        _Th1(_xi1(_Vu1._KI1) && _Vu1._KI1 >= 0.0);
        _Th1(_xi1(_Vu1._LI1) && _Vu1._LI1 >= 0.0);
        this._MI1 = _Vu1.target._Qr();
        this._VH1 = _Yj1(this._Zx1._Bj1(), this._MI1);
        this._NI1 = _Vu1._JI1;
        this._XH1 = new _Hi1();
        this._OI1 = _Vu1._KI1;
        this._PI1 = _Vu1._LI1;
        this._QI1 = 0.0;
        this._RI1 = 0.0;
        this._GE1 = 0;
        this._HE1 = 0;
        this._6I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._aI1 = 0;
        this._cI1 = 0;
        this._Iu1 = new _0j1();
        this._SI1 = new _Hi1()
    }

    _AH1.prototype = {
        _ez1: function () {
            return this._MI1;
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            return _Hi1.Multiply(_4x1, this._XH1)
        }, _mH1: function (_4x1) {
            return _4x1 * 0.0
        }, _TI1: function (target) {
            if (this._Zx1.__v1() == !1) {
                this._Zx1._B71(!0)
            }
            this._MI1._Li1(target)
        }, _UI1: function () {
            return this._MI1
        }
        , _VI1: function (_qv1) {
            this._NI1 = _qv1
        }, _WI1: function () {
            return this._NI1
        }, _XI1: function (_YI1) {
            this._OI1 = _YI1
        }, _ZI1: function () {
            return this._OI1
        }, __I1: function (_3H1) {
            this._PI1 = _3H1
        }, _0J1: function () {
            return this._PI1
        }, _jn1: function (_kn1) {
            this._MI1._Pi1(_kn1)
        }, __G1: function (data) {
            this._HE1 = this._Zx1._lu1;
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._aI1 = this._Zx1._Ju1;
            this._cI1 = this._Zx1._Lu1;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _wI1 = new _pj1(_YF1);
            var _Tk1 = this._Zx1._yv1();
            var _1J1 = 2.0 * _Xh1 * this._OI1;
            var _cE = 2.0 * _Tk1 * this._PI1 * _1J1;
            var _tC = _Tk1 * (_1J1 * _1J1);
            var _w5 = data._vh1._3x1;
            _Th1(_cE + _w5 * _tC > _Wh1);
            this._RI1 = _w5 * (_cE + _w5 * _tC);
            if (this._RI1 != 0.0) {
                this._RI1 = 1.0 / this._RI1
            }
            this._QI1 = _w5 * _tC * this._RI1;
            this._6I1._Li1(_Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1)));
            var _AF1 = new _0j1();
            _AF1._PQ.x = this._aI1 + this._cI1 * this._6I1.y * this._6I1.y + this._RI1;
            _AF1._PQ.y = -this._cI1 * this._6I1.x * this._6I1.y;
            _AF1._4V.x = _AF1._PQ.y;
            _AF1._4V.y = this._aI1 + this._cI1 * this._6I1.x * this._6I1.x + this._RI1;
            this._Iu1._Li1(_AF1._4j1());
            this._SI1._Li1(_Hi1._Pi1(_Hi1._3C(_gy1, this._6I1), this._MI1));
            this._SI1.Multiply(this._QI1);
            _In1 *= 0.98;
            if (data._vh1._8x1) {
                this._XH1.Multiply(data._vh1._5x1);
                _ZF1._3C(_Hi1.Multiply(this._aI1, this._XH1));
                _In1 += this._cI1 * _Gj1(this._6I1, this._XH1)
            } else {
                this._XH1._Ii1()
            }
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _yI1 = _Hi1._3C(_ZF1, _Ij1(_In1, this._6I1));
            var _wv1 = _Jj1(this._Iu1,
                (_Hi1._3C(_Hi1._3C(_yI1, this._SI1), _Hi1.Multiply(this._RI1, this._XH1)))._Mi1());
            var _zI1 = this._XH1._Qr();
            this._XH1._3C(_wv1);
            var _AI1 = data._vh1._3x1 * this._NI1;
            if (this._XH1._Qi1() > _AI1 * _AI1) {
                this._XH1.Multiply(_AI1 / this._XH1.Length())
            }
            _wv1._Li1(_Hi1._Pi1(this._XH1, _zI1));
            _ZF1._3C(_Hi1.Multiply(this._aI1, _wv1));
            _In1 += this._cI1 * _Gj1(this._6I1, _wv1);
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            return !0
        }
    };
    _AH1._mh1(_Xx1);

    function _2J1() {
        this.parent.call(this);
        this.type = _Xx1._gz1;
        this._LH1 = new _Hi1(0.0, 0.0);
        this._MH1 = new _Hi1(0.0, 0.0);
        this.length = 1.0;
        this._KI1 = 0.0;
        this._LI1 = 0.0;
        Object.seal(this)
    }

    _2J1.prototype = {
        _ap1: function (_ZQ, __Q, _3J1, _4J1) {
            this._2y1 = _ZQ;
            this._3y1 = __Q;
            this._LH1 = this._2y1._Fv1(_3J1);
            this._MH1 = this._3y1._Fv1(_4J1);
            var _cE = _Hi1._Pi1(_4J1, _3J1);
            this.length = _cE.Length()
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this.length = data['length'];
            this._KI1 = data['frequencyHz'];
            this._LI1 = data['dampingRatio']
        }
    };
    _2J1._mh1(_iH1);

    function _zH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._5J1 = _Vu1.length;
        this._OI1 = _Vu1._KI1;
        this._PI1 = _Vu1._LI1;
        this._XH1 = 0.0;
        this._RI1 = 0.0;
        this._6J1 = 0.0;
        this._GE1 = 0;
        this._HE1 = 0;
        this._7J1 = new _Hi1();
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._Iu1 = 0
    }

    _zH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }
        , _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            var _ct1 = _Hi1.Multiply((_4x1 * this._XH1), this._7J1);
            return _ct1
        }, _mH1: function (_4x1) {
            return 0.0
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1
        }, _8J1: function (length) {
            this._5J1 = length
        }, _9J1: function () {
            return this._5J1
        }, _XI1: function (_YI1) {
            this._OI1 = _YI1
        }, _ZI1: function () {
            return this._OI1
        }, __I1: function (_3H1) {
            this._PI1 = _3H1
        }, _0J1: function () {
            return this._PI1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            this._6I1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            this._7J1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, this._6I1), _ey1), this._5I1);
            var length = this._7J1.Length();
            if (length > _1i1) {
                this._7J1.Multiply(1.0 / length)
            } else {
                this._7J1._rC(0.0, 0.0)
            }
            var _aJ1 = _Gj1(this._5I1, this._7J1);
            var _bJ1 = _Gj1(this._6I1, this._7J1);
            var _cJ1 = this._9I1 + this._bI1 * _aJ1 * _aJ1 + this._aI1 + this._cI1 * _bJ1 * _bJ1;
            this._Iu1 = _cJ1 != 0.0 ? 1.0 / _cJ1 : 0.0;
            if (this._OI1 > 0.0) {
                var __j1 = length - this._5J1;
                var _1J1 = 2.0 * _Xh1 * this._OI1;
                var _cE = 2.0 * this._Iu1 * this._PI1 * _1J1;
                var _tC = this._Iu1 * _1J1 * _1J1;
                var _w5 = data._vh1._3x1;
                this._RI1 = _w5 * (_cE + _w5 * _tC);
                this._RI1 = this._RI1 != 0.0 ? 1.0 / this._RI1 : 0.0;
                this._6J1 = __j1 * _w5 * _tC * this._RI1;
                _cJ1 += this._RI1;
                this._Iu1 = _cJ1 != 0.0 ? 1.0 / _cJ1 : 0.0
            } else {
                this._RI1 = 0.0;
                this._6J1 = 0.0
            }
            if (data._vh1._8x1) {
                this._XH1 *= data._vh1._5x1;
                var _1r1 = _Hi1.Multiply(this._XH1, this._7J1);
                _XF1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
                _Hn1 -= this._bI1 * _Gj1(this._5I1, _1r1);
                _ZF1._3C(_Hi1.Multiply(this._aI1, _1r1));
                _In1 += this._cI1 * _Gj1(this._6I1,
                    _1r1)
            } else {
                this._XH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _dJ1 = _Hi1._3C(_XF1, _Ij1(_Hn1, this._5I1));
            var _eJ1 = _Hi1._3C(_ZF1, _Ij1(_In1, this._6I1));
            var _yI1 = _Fj1(this._7J1, _Hi1._Pi1(_eJ1, _dJ1));
            var _wv1 = -this._Iu1 * (_yI1 + this._6J1 + this._RI1 * this._XH1);
            this._XH1 += _wv1;
            var _1r1 = _Hi1.Multiply(_wv1, this._7J1);
            _XF1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
            _Hn1 -= this._bI1 * _Gj1(this._5I1, _1r1);
            _ZF1._3C(_Hi1.Multiply(this._aI1, _1r1));
            _In1 += this._cI1 * _Gj1(this._6I1, _1r1);
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            if (this._OI1 > 0.0) {
                return !0
            }
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _sv = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, _Lo1), _ey1), _Ko1);
            var length = _sv._Ri1();
            var __j1 = length - this._5J1;
            __j1 = _ak1(__j1, -_7i1, _7i1);
            var _wv1 = -this._Iu1 * __j1;
            var _1r1 = _Hi1.Multiply(_wv1, _sv);
            _ey1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
            _WF1 -= this._bI1 * _Gj1(_Ko1, _1r1);
            _gy1._3C(_Hi1.Multiply(this._aI1, _1r1));
            _YF1 += this._cI1 * _Gj1(_Lo1,
                _1r1);
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return _3k1(__j1) < _1i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['length'] = this._5J1;
            _aP['frequencyHz'] = this._OI1;
            _aP['dampingRatio'] = this._PI1;
            return _aP
        }
    };
    _zH1._mh1(_Xx1);

    function _fJ1() {
        this.parent.call(this);
        this.type = _Xx1._tH1;
        this._LH1 = new _Hi1();
        this._MH1 = new _Hi1();
        this._gJ1 = new _Hi1(1.0, 0.0);
        this._NH1 = 0.0;
        this._SH1 = !1;
        this._hJ1 = 0.0;
        this._iJ1 = 0.0;
        this._TH1 = !1;
        this._jJ1 = 0.0;
        this._RH1 = 0.0;
        Object.seal(this)
    }

    _fJ1.prototype = {
        _ap1: function (_1z1, _2z1, anchor, _wk1) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            this._LH1 = this._2y1._Fv1(anchor);
            this._MH1 = this._3y1._Fv1(anchor);
            this._gJ1 = this._2y1._Hv1(_wk1);
            this._NH1 = this._3y1._qj1() - this._2y1._qj1()
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._gJ1._Xi1(data['localAxisA']);
            this._NH1 = data['referenceAngle'];
            this._SH1 = data['enableLimit'];
            this._hJ1 = data['lowerTranslation'];
            this._iJ1 = data['upperTranslation'];
            this._TH1 = data['enableMotor'];
            this._jJ1 = data['maxMotorForce'];
            this._RH1 = data['motorSpeed'];
        }
    };
    _fJ1._mh1(_iH1);

    function _BH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._kJ1 = _Vu1._gJ1._Qr();
        this._kJ1._Ri1();
        this._lJ1 = _Ij1(1.0, this._kJ1);
        this._WH1 = _Vu1._NH1;
        this._XH1 = new _Zi1();
        this._dI1 = 0.0;
        this._YH1 = 0.0;
        this._mJ1 = _Vu1._hJ1;
        this._nJ1 = _Vu1._iJ1;
        this._oJ1 = _Vu1._jJ1;
        this._1I1 = _Vu1._RH1;
        this._2I1 = _Vu1._SH1;
        this._3I1 = _Vu1._TH1;
        this._4I1 = _Xx1._oH1;
        this._yt1 = new _Hi1();
        this._pJ1 = new _Hi1();
        this._GE1 = 0;
        this._HE1 = 0;
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._qJ1 = 0, this._rJ1 = 0;
        this._sJ1 = 0, this._tJ1 = 0;
        this._uJ1 = new _cj1();
        this._dI1 = 0
    }

    _BH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            return _Hi1.Multiply(_4x1, _Hi1._3C(_Hi1.Multiply(this._XH1.x, this._pJ1), _Hi1.Multiply((this._YH1 + this._XH1._Mw), this._yt1)))
        }, _mH1: function (_4x1) {
            return _4x1 * this._XH1.y
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1;
        }, _vJ1: function () {
            return this._kJ1
        }, _gI1: function () {
            return this._WH1
        }, _wJ1: function () {
            var _Yn1 = this._0y1._Cv1(this._UH1);
            var _Zn1 = this._Zx1._Cv1(this._VH1);
            var _cE = _Hi1._Pi1(_Zn1, _Yn1);
            var _wk1 = this._0y1._Dv1(this._kJ1);
            var _cH1 = _Fj1(_cE, _wk1);
            return _cH1
        }, _iI1: function () {
            var _1z1 = this._0y1;
            var _2z1 = this._Zx1;
            var _Ko1 = _Uj1(_1z1._nr1._7S, _Hi1._Pi1(this._UH1, _1z1._uu1._wj1));
            var _Lo1 = _Uj1(_2z1._nr1._7S, _Hi1._Pi1(this._VH1, _2z1._uu1._wj1));
            var _yk1 = _Hi1._3C(_1z1._uu1._u5, _Ko1);
            var _zk1 = _Hi1._3C(_2z1._uu1._u5, _Lo1);
            var _cE = _Hi1._Pi1(_zk1, _yk1);
            var _wk1 = _Uj1(_1z1._nr1._7S, this._kJ1);
            var _XF1 = _1z1._zu1;
            var _ZF1 = _2z1._zu1;
            var _Hn1 = _1z1._Au1;
            var _In1 = _2z1._Au1;
            var _Tb = _Fj1(_cE, _Ij1(_Hn1, _wk1)) + _Fj1(_wk1, _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_ZF1,
                _Ij1(_In1, _Lo1)), _XF1), _Ij1(_Hn1, _Ko1)));
            return _Tb
        }, _jI1: function () {
            return this._2I1
        }, _kI1: function (_Wv1) {
            if (_Wv1 != this._2I1) {
                this._0y1._B71(!0);
                this._Zx1._B71(!0);
                this._2I1 = _Wv1;
                this._XH1._Mw = 0.0
            }
        }, _lI1: function () {
            return this._mJ1
        }, _mI1: function () {
            return this._nJ1
        }, _nI1: function (_am1, _bm1) {
            _Th1(_am1 <= _bm1);
            if (_am1 != this._mJ1 || _bm1 != this._nJ1) {
                this._0y1._B71(!0);
                this._Zx1._B71(!0);
                this._mJ1 = _am1;
                this._nJ1 = _bm1;
                this._XH1._Mw = 0.0
            }
        }, _oI1: function () {
            return this._3I1
        }, _pI1: function (_Wv1) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._3I1 = _Wv1
        }, _qI1: function (_Tb) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._1I1 = _Tb
        }, _rI1: function () {
            return this._1I1
        }, _xJ1: function (_qv1) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._oJ1 = _qv1
        }, _yJ1: function () {
            return this._oJ1
        }, _zJ1: function (_4x1) {
            return _4x1 * this._YH1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1 = this._0y1._uu1._wj1;
            this._8I1 = this._Zx1._uu1._wj1;
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _cE = _Hi1._3C(_Hi1._Pi1(_gy1, _ey1), _Hi1._Pi1(_Lo1, _Ko1));
            var _UF1 = this._9I1,
                _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            {
                this._yt1 = _Uj1(_vI1, this._kJ1);
                this._sJ1 = _Gj1(_Hi1._3C(_cE, _Ko1), this._yt1);
                this._tJ1 = _Gj1(_Lo1, this._yt1);
                this._dI1 = _UF1 + _VF1 + _7t1 * this._sJ1 * this._sJ1 + _8t1 * this._tJ1 * this._tJ1;
                if (this._dI1 > 0.0) {
                    this._dI1 = 1.0 / this._dI1;
                }
            }
            {
                this._pJ1 = _Uj1(_vI1, this._lJ1);
                this._qJ1 = _Gj1(_Hi1._3C(_cE, _Ko1), this._pJ1);
                this._rJ1 = _Gj1(_Lo1, this._pJ1);
                var _cG1 = _UF1 + _VF1 + _7t1 * this._qJ1 * this._qJ1 + _8t1 * this._rJ1 * this._rJ1;
                var _eG1 = _7t1 * this._qJ1 + _8t1 * this._rJ1;
                var _AJ1 = _7t1 * this._qJ1 * this._sJ1 + _8t1 * this._rJ1 * this._tJ1;
                var _dG1 = _7t1 + _8t1;
                if (_dG1 == 0.0) {
                    _dG1 = 1.0
                }
                var _BJ1 = _7t1 * this._sJ1 + _8t1 * this._tJ1;
                var _CJ1 = _UF1 + _VF1 + _7t1 * this._sJ1 * this._sJ1 + _8t1 * this._tJ1 * this._tJ1;
                this._uJ1._PQ._rC(_cG1, _eG1, _AJ1);
                this._uJ1._4V._rC(_eG1, _dG1, _BJ1);
                this._uJ1._ej1._rC(_AJ1, _BJ1, _CJ1)
            }
            if (this._2I1) {
                var _DJ1 = _Fj1(this._yt1, _cE);
                if (_3k1(this._nJ1 - this._mJ1) < 2.0 * _1i1) {
                    this._4I1 = _Xx1._rH1
                } else if (_DJ1 <= this._mJ1) {
                    if (this._4I1 != _Xx1._pH1) {
                        this._4I1 = _Xx1._pH1;
                        this._XH1._Mw = 0.0
                    }
                } else if (_DJ1 >= this._nJ1) {
                    if (this._4I1 != _Xx1._qH1) {
                        this._4I1 = _Xx1._qH1;
                        this._XH1._Mw = 0.0
                    }
                } else {
                    this._4I1 = _Xx1._oH1;
                    this._XH1._Mw = 0.0
                }
            } else {
                this._4I1 = _Xx1._oH1;
                this._XH1._Mw = 0.0
            }
            if (this._3I1 == !1) {
                this._YH1 = 0.0
            }
            if (data._vh1._8x1) {
                this._XH1.Multiply(data._vh1._5x1);
                this._YH1 *= data._vh1._5x1;
                var _1r1 = _Hi1._3C(_Hi1.Multiply(this._XH1.x, this._pJ1), _Hi1.Multiply((this._YH1 + this._XH1._Mw), this._yt1));
                var _EJ1 = this._XH1.x * this._qJ1 + this._XH1.y + (this._YH1 + this._XH1._Mw) * this._sJ1;
                var _FJ1 = this._XH1.x * this._rJ1 + this._XH1.y + (this._YH1 + this._XH1._Mw) * this._tJ1;
                _XF1._Pi1(_Hi1.Multiply(_UF1,
                    _1r1));
                _Hn1 -= _7t1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _FJ1
            } else {
                this._XH1._Ii1();
                this._YH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            if (this._3I1 && this._4I1 != _Xx1._rH1) {
                var _yI1 = _Fj1(this._yt1, _Hi1._Pi1(_ZF1, _XF1)) + this._tJ1 * _In1 - this._sJ1 * _Hn1;
                var _wv1 = this._dI1 * (this._1I1 - _yI1);
                var _zI1 = this._YH1;
                var _AI1 = data._vh1._3x1 * this._oJ1;
                this._YH1 = _ak1(this._YH1 + _wv1, -_AI1, _AI1);
                _wv1 = this._YH1 - _zI1;
                var _1r1 = _Hi1.Multiply(_wv1, this._yt1);
                var _EJ1 = _wv1 * this._sJ1;
                var _FJ1 = _wv1 * this._tJ1;
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _FJ1
            }
            var _BI1 = new _Hi1();
            _BI1.x = _Fj1(this._pJ1, _Hi1._Pi1(_ZF1, _XF1)) + this._rJ1 * _In1 - this._qJ1 * _Hn1;
            _BI1.y = _In1 - _Hn1;
            if (this._2I1 && this._4I1 != _Xx1._oH1) {
                var _CI1;
                _CI1 = _Fj1(this._yt1, _Hi1._Pi1(_ZF1, _XF1)) + this._tJ1 * _In1 - this._sJ1 * _Hn1;
                var _yI1 = new _Zi1(_BI1.x, _BI1.y, _CI1);
                var _GJ1 = this._XH1._Qr();
                var _HJ1 = this._uJ1._fj1(_yI1._Mi1());
                this._XH1._3C(_HJ1);
                if (this._4I1 == _Xx1._pH1) {
                    this._XH1._Mw = _8k1(this._XH1._Mw, 0.0)
                } else if (this._4I1 == _Xx1._qH1) {
                    this._XH1._Mw = _6k1(this._XH1._Mw, 0.0)
                }
                var _Nt = _Hi1._Pi1(_BI1._Mi1(), _Hi1.Multiply((this._XH1._Mw - _GJ1._Mw), new _Hi1(this._uJ1._ej1.x, this._uJ1._ej1.y)));
                var _IJ1 = _Hi1._3C(this._uJ1._ij1(_Nt),
                    new _Hi1(_GJ1.x, _GJ1.y));
                this._XH1.x = _IJ1.x;
                this._XH1.y = _IJ1.y;
                _HJ1 = _Zi1._Pi1(this._XH1, _GJ1);
                var _1r1 = _Hi1._3C(_Hi1.Multiply(_HJ1.x, this._pJ1), _Hi1.Multiply(_HJ1._Mw, this._yt1));
                var _EJ1 = _HJ1.x * this._qJ1 + _HJ1.y + _HJ1._Mw * this._sJ1;
                var _FJ1 = _HJ1.x * this._rJ1 + _HJ1.y + _HJ1._Mw * this._tJ1;
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _FJ1
            } else {
                var _HJ1 = this._uJ1._ij1(_BI1._Mi1());
                this._XH1.x += _HJ1.x;
                this._XH1.y += _HJ1.y;
                var _1r1 = _Hi1.Multiply(_HJ1.x, this._pJ1);
                var _EJ1 = _HJ1.x * this._qJ1 + _HJ1.y;
                var _FJ1 = _HJ1.x * this._rJ1 + _HJ1.y;
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _FJ1
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1;
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _cE = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, _Lo1), _ey1), _Ko1);
            var _wk1 = _Uj1(_vI1, this._kJ1);
            var _sd1 = _Gj1(_Hi1._3C(_cE, _Ko1), _wk1);
            var _td1 = _Gj1(_Lo1, _wk1);
            var _JJ1 = _Uj1(_vI1, this._lJ1);
            var _NL = _Gj1(_Hi1._3C(_cE, _Ko1), _JJ1);
            var _OL = _Gj1(_Lo1, _JJ1);
            var _wv1 = new _Zi1();
            var _KJ1 = new _Hi1();
            _KJ1.x = _Fj1(_JJ1, _cE);
            _KJ1.y = _YF1 - _WF1 - this._WH1;
            var _LJ1 = _3k1(_KJ1.x);
            var _FI1 = _3k1(_KJ1.y);
            var _hg = !1;
            var _MJ1 = 0.0;
            if (this._2I1) {
                var _cH1 = _Fj1(_wk1, _cE);
                if (_3k1(this._nJ1 - this._mJ1) < 2.0 * _1i1) {
                    _MJ1 = _ak1(_cH1, -_7i1, _7i1);
                    _LJ1 = _8k1(_LJ1, _3k1(_cH1));
                    _hg = !0
                } else if (_cH1 <= this._mJ1) {
                    _MJ1 = _ak1(_cH1 - this._mJ1 + _1i1, -_7i1, 0.0);
                    _LJ1 = _8k1(_LJ1, this._mJ1 - _cH1);
                    _hg = !0;
                } else if (_cH1 >= this._nJ1) {
                    _MJ1 = _ak1(_cH1 - this._nJ1 - _1i1, 0.0, _7i1);
                    _LJ1 = _8k1(_LJ1, _cH1 - this._nJ1);
                    _hg = !0
                }
            }
            if (_hg) {
                var _cG1 = _UF1 + _VF1 + _7t1 * _NL * _NL + _8t1 * _OL * _OL;
                var _eG1 = _7t1 * _NL + _8t1 * _OL;
                var _AJ1 = _7t1 * _NL * _sd1 + _8t1 * _OL * _td1;
                var _dG1 = _7t1 + _8t1;
                if (_dG1 == 0.0) {
                    _dG1 = 1.0
                }
                var _BJ1 = _7t1 * _sd1 + _8t1 * _td1;
                var _CJ1 = _UF1 + _VF1 + _7t1 * _sd1 * _sd1 + _8t1 * _td1 * _td1;
                var _AF1 = new _cj1();
                _AF1._PQ._rC(_cG1, _eG1, _AJ1);
                _AF1._4V._rC(_eG1, _dG1, _BJ1);
                _AF1._ej1._rC(_AJ1, _BJ1, _CJ1);
                var __j1 = new _Zi1();
                __j1.x = _KJ1.x;
                __j1.y = _KJ1.y;
                __j1._Mw = _MJ1;
                _wv1 = _AF1._fj1(__j1._Mi1())
            } else {
                var _cG1 = _UF1 + _VF1 + _7t1 * _NL * _NL + _8t1 * _OL * _OL;
                var _eG1 = _7t1 * _NL + _8t1 * _OL;
                var _dG1 = _7t1 + _8t1;
                if (_dG1 == 0.0) {
                    _dG1 = 1.0
                }
                var _AF1 = new _0j1();
                _AF1._PQ._rC(_cG1, _eG1);
                _AF1._4V._rC(_eG1, _dG1);
                var _NJ1 = _AF1._7j1(_KJ1._Mi1());
                _wv1.x = _NJ1.x;
                _wv1.y = _NJ1.y;
                _wv1._Mw = 0.0
            }
            var _1r1 = _Hi1._3C(_Hi1.Multiply(_wv1.x, _JJ1), _Hi1.Multiply(_wv1._Mw, _wk1));
            var _EJ1 = _wv1.x * _NL + _wv1.y + _wv1._Mw * _sd1;
            var _FJ1 = _wv1.x * _OL + _wv1.y + _wv1._Mw * _td1;
            _ey1._Pi1(_Hi1.Multiply(_UF1, _1r1));
            _WF1 -= _7t1 * _EJ1;
            _gy1._3C(_Hi1.Multiply(_VF1, _1r1));
            _YF1 += _8t1 * _FJ1;
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return _LJ1 <= _1i1 && _FI1 <= _2i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this,
                _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['localAxisA'] = this._kJ1._Vi1();
            _aP['referenceAngle'] = this._WH1;
            _aP['enableLimit'] = this._2I1;
            _aP['lowerTranslation'] = this._mJ1;
            _aP['upperTranslation'] = this._nJ1;
            _aP['enableMotor'] = this._3I1;
            _aP['maxMotorForce'] = this._oJ1;
            _aP['motorSpeed'] = this._1I1;
            return _aP
        }
    };
    _BH1._mh1(_Xx1);

    function _OJ1() {
        this.parent.call(this);
        this.type = _Xx1._xH1;
        this._LH1 = new _Hi1();
        this._MH1 = new _Hi1();
        this._JI1 = 0.0;
        this._PJ1 = 0.0;
        Object.seal(this)
    }

    _OJ1.prototype = {
        _ap1: function (_1z1, _2z1, anchor) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            this._LH1._Li1(this._2y1._Fv1(anchor));
            this._MH1._Li1(this._3y1._Fv1(anchor))
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._JI1 = data['maxForce'];
            this._PJ1 = data['maxTorque']
        }
    };
    _OJ1._mh1(_iH1);

    function _HH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._QJ1 = new _Hi1();
        this._RJ1 = 0.0;
        this._NI1 = _Vu1._JI1;
        this._SJ1 = _Vu1._PJ1;
        this._GE1 = 0;
        this._HE1 = 0;
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._TJ1 = new _0j1();
        this._UJ1 = 0
    }

    _HH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            return _Hi1.Multiply(_4x1, this._QJ1)
        }, _mH1: function (_4x1) {
            return _4x1 * this._RJ1
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1
        }, _VI1: function (_qv1) {
            _Th1(_xi1(_qv1) && _qv1 >= 0.0);
            this._NI1 = _qv1
        }, _WI1: function () {
            return this._NI1
        }, _VJ1: function (_uv1) {
            _Th1(_xi1(_uv1) && _uv1 >= 0.0);
            this._SJ1 = _uv1
        }, _WJ1: function () {
            return this._SJ1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            this._6I1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _AF1 = new _0j1();
            _AF1._PQ.x = _UF1 + _VF1 + _7t1 * this._5I1.y * this._5I1.y + _8t1 * this._6I1.y * this._6I1.y;
            _AF1._PQ.y = -_7t1 * this._5I1.x * this._5I1.y - _8t1 * this._6I1.x * this._6I1.y;
            _AF1._4V.x = _AF1._PQ.y;
            _AF1._4V.y = _UF1 + _VF1 + _7t1 * this._5I1.x * this._5I1.x + _8t1 * this._6I1.x * this._6I1.x;
            this._TJ1 = _AF1._4j1();
            this._UJ1 = _7t1 + _8t1;
            if (this._UJ1 > 0.0) {
                this._UJ1 = 1.0 / this._UJ1
            }
            if (data._vh1._8x1) {
                this._QJ1.Multiply(data._vh1._5x1);
                this._RJ1 *= data._vh1._5x1;
                var _1r1 = new _Hi1(this._QJ1.x, this._QJ1.y);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * (_Gj1(this._5I1, _1r1) + this._RJ1);
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * (_Gj1(this._6I1, _1r1) + this._RJ1)
            } else {
                this._QJ1._Ii1();
                this._RJ1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _w5 = data._vh1._3x1;
            {
                var _yI1 = _In1 - _Hn1;
                var _wv1 = -this._UJ1 * _yI1;
                var _zI1 = this._RJ1;
                var _AI1 = _w5 * this._SJ1;
                this._RJ1 = _ak1(this._RJ1 + _wv1, -_AI1,
                    _AI1);
                _wv1 = this._RJ1 - _zI1;
                _Hn1 -= _7t1 * _wv1;
                _In1 += _8t1 * _wv1
            }
            {
                var _yI1 = _Hi1._3C(_ZF1, _Hi1._Pi1(_Ij1(_In1, this._6I1), _Hi1._Pi1(_XF1, _Ij1(_Hn1, this._5I1))));
                var _wv1 = _Jj1(this._TJ1, _yI1)._Mi1();
                var _zI1 = this._QJ1._Qr();
                this._QJ1._3C(_wv1);
                var _AI1 = _w5 * this._NI1;
                if (this._QJ1._Qi1() > _AI1 * _AI1) {
                    this._QJ1._Ri1();
                    this._QJ1.Multiply(_AI1)
                }
                _wv1 = _Hi1._Pi1(this._QJ1, _zI1);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _wv1));
                _Hn1 -= _7t1 * _Gj1(this._5I1, _wv1);
                _ZF1._3C(_Hi1.Multiply(_VF1, _wv1));
                _In1 += _8t1 * _Gj1(this._6I1, _wv1)
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            return !0
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['maxForce'] = this._NI1;
            _aP['maxTorque'] = this._SJ1;
            return _aP
        }
    };
    _HH1._mh1(_Xx1);

    function _XJ1() {
        this.parent.call(this);
        this.type = _Xx1._wH1;
        this._LH1 = new _Hi1(0.0, 0.0);
        this._MH1 = new _Hi1(0.0, 0.0);
        this._NH1 = 0.0;
        this._KI1 = 0.0;
        this._LI1 = 0.0;
        Object.seal(this)
    }

    _XJ1.prototype = {
        _ap1: function (_1z1, _2z1, anchor) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            this._LH1._Li1(this._2y1._Fv1(anchor));
            this._MH1._Li1(this._3y1._Fv1(anchor));
            this._NH1 = this._3y1._qj1() - this._2y1._qj1()
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._NH1 = data['referenceAngle'];
            this._KI1 = data['frequencyHz'];
            this._LI1 = data['dampingRatio']
        }
    };
    _XJ1._mh1(_iH1);

    function _GH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._6J1 = 0;
        this._RI1 = 0;
        this._GE1 = 0;
        this._HE1 = 0;
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._Iu1 = new _cj1();
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._WH1 = _Vu1._NH1;
        this._OI1 = _Vu1._KI1;
        this._PI1 = _Vu1._LI1;
        this._XH1 = new _Zi1()
    }

    _GH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            var _1r1 = new _Hi1(this._XH1.x, this._XH1.y);
            return _Hi1.Multiply(_4x1, _1r1)
        }, _mH1: function (_4x1) {
            return _4x1 * this._XH1._Mw
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1
        }, _gI1: function () {
            return this._WH1
        }, _XI1: function (_YI1) {
            this._OI1 = _YI1
        }, _ZI1: function () {
            return this._OI1
        }, __I1: function (_3H1) {
            this._PI1 = _3H1
        }, _0J1: function () {
            return this._PI1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1._Li1(_Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1)));
            this._6I1._Li1(_Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1)));
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _AF1 = new _cj1();
            _AF1._PQ.x = _UF1 + _VF1 + this._5I1.y * this._5I1.y * _7t1 + this._6I1.y * this._6I1.y * _8t1;
            _AF1._4V.x = -this._5I1.y * this._5I1.x * _7t1 - this._6I1.y * this._6I1.x * _8t1;
            _AF1._ej1.x = -this._5I1.y * _7t1 - this._6I1.y * _8t1;
            _AF1._PQ.y = _AF1._4V.x;
            _AF1._4V.y = _UF1 + _VF1 + this._5I1.x * this._5I1.x * _7t1 + this._6I1.x * this._6I1.x * _8t1;
            _AF1._ej1.y = this._5I1.x * _7t1 + this._6I1.x * _8t1;
            _AF1._PQ._Mw = _AF1._ej1.x;
            _AF1._4V._Mw = _AF1._ej1.y;
            _AF1._ej1._Mw = _7t1 + _8t1;
            if (this._OI1 > 0.0) {
                _AF1._jj1(this._Iu1);
                var _YJ1 = _7t1 + _8t1;
                var _wt = _YJ1 > 0.0 ? 1.0 / _YJ1 : 0.0;
                var __j1 = _YF1 - _WF1 - this._WH1;
                var _1J1 = 2.0 * _Xh1 * this._OI1;
                var _cE = 2.0 * _wt * this._PI1 * _1J1;
                var _tC = _wt * _1J1 * _1J1;
                var _w5 = data._vh1._3x1;
                this._RI1 = _w5 * (_cE + _w5 * _tC);
                this._RI1 = this._RI1 != 0.0 ? 1.0 / this._RI1 : 0.0;
                this._6J1 = __j1 * _w5 * _tC * this._RI1;
                _YJ1 += this._RI1;
                this._Iu1._ej1._Mw = _YJ1 != 0.0 ? 1.0 / _YJ1 : 0.0
            } else {
                _AF1._lj1(this._Iu1);
                this._RI1 = 0.0;
                this._6J1 = 0.0
            }
            if (data._vh1._8x1) {
                this._XH1.Multiply(data._vh1._5x1);
                var _1r1 = new _Hi1(this._XH1.x, this._XH1.y);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * (_Gj1(this._5I1,
                    _1r1) + this._XH1._Mw);
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * (_Gj1(this._6I1, _1r1) + this._XH1._Mw)
            } else {
                this._XH1._Ii1()
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            if (this._OI1 > 0.0) {
                var _CI1 = _In1 - _Hn1;
                var _ZJ1 = -this._Iu1._ej1._Mw * (_CI1 + this._6J1 + this._RI1 * this._XH1._Mw);
                this._XH1._Mw += _ZJ1;
                _Hn1 -= _7t1 * _ZJ1;
                _In1 += _8t1 * _ZJ1;
                var _BI1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_ZF1, _Ij1(_In1, this._6I1)), _XF1), _Ij1(_Hn1, this._5I1));
                var _NJ1 = _Qj1(this._Iu1, _BI1)._Mi1();
                this._XH1.x += _NJ1.x;
                this._XH1.y += _NJ1.y;
                var _1r1 = _NJ1._Qr();
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * _Gj1(this._5I1, _1r1);
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _Gj1(this._6I1, _1r1)
            } else {
                var _BI1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_ZF1,
                    _Ij1(_In1, this._6I1)), _XF1), _Ij1(_Hn1, this._5I1));
                var _CI1 = _In1 - _Hn1;
                var _yI1 = new _Zi1(_BI1.x, _BI1.y, _CI1);
                var _wv1 = _Pj1(this._Iu1, _yI1)._Mi1();
                this._XH1._3C(_wv1);
                var _1r1 = new _Hi1(_wv1.x, _wv1.y);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * (_Gj1(this._5I1, _1r1) + _wv1._Mw);
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * (_Gj1(this._6I1, _1r1) + _wv1._Mw)
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _GI1, _FI1;
            var _AF1 = new _cj1();
            _AF1._PQ.x = _UF1 + _VF1 + _Ko1.y * _Ko1.y * _7t1 + _Lo1.y * _Lo1.y * _8t1;
            _AF1._4V.x = -_Ko1.y * _Ko1.x * _7t1 - _Lo1.y * _Lo1.x * _8t1;
            _AF1._ej1.x = -_Ko1.y * _7t1 - _Lo1.y * _8t1;
            _AF1._PQ.y = _AF1._4V.x;
            _AF1._4V.y = _UF1 + _VF1 + _Ko1.x * _Ko1.x * _7t1 + _Lo1.x * _Lo1.x * _8t1;
            _AF1._ej1.y = _Ko1.x * _7t1 + _Lo1.x * _8t1;
            _AF1._PQ._Mw = _AF1._ej1.x;
            _AF1._4V._Mw = _AF1._ej1.y;
            _AF1._ej1._Mw = _7t1 + _8t1;
            if (this._OI1 > 0.0) {
                var _KJ1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, _Lo1), _ey1), _Ko1);
                _GI1 = _KJ1.Length();
                _FI1 = 0.0;
                var _1r1 = _AF1._ij1(_KJ1)._Mi1();
                _ey1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _WF1 -= _7t1 * _Gj1(_Ko1, _1r1);
                _gy1._3C(_Hi1.Multiply(_VF1, _1r1));
                _YF1 += _8t1 * _Gj1(_Lo1, _1r1)
            } else {
                var _KJ1 = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1,
                    _Lo1), _ey1), _Ko1);
                var _MJ1 = _YF1 - _WF1 - this._WH1;
                _GI1 = _KJ1.Length();
                _FI1 = _3k1(_MJ1);
                var __j1 = new _Zi1(_KJ1.x, _KJ1.y, _MJ1);
                var _wv1 = _AF1._fj1(__j1)._Mi1();
                var _1r1 = new _Hi1(_wv1.x, _wv1.y);
                _ey1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _WF1 -= _7t1 * (_Gj1(_Ko1, _1r1) + _wv1._Mw);
                _gy1._3C(_Hi1.Multiply(_VF1, _1r1));
                _YF1 += _8t1 * (_Gj1(_Lo1, _1r1) + _wv1._Mw)
            }
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return _GI1 <= _1i1 && _FI1 <= _2i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['referenceAngle'] = this._WH1;
            _aP['frequencyHz'] = this._OI1;
            _aP['dampingRatio'] = this._PI1;
            return _aP
        }
    };
    _GH1._mh1(_Xx1);

    function __J1() {
        this.parent.call(this);
        this.type = _Xx1._vH1;
        this._LH1 = new _Hi1();
        this._MH1 = new _Hi1();
        this._gJ1 = new _Hi1(1.0, 0.0);
        this._TH1 = !1;
        this._QH1 = 0.0;
        this._RH1 = 0.0;
        this._KI1 = 2.0;
        this._LI1 = 0.7;
        Object.seal(this)
    }

    __J1.prototype = {
        _ap1: function (_1z1, _2z1,
                        anchor, _wk1) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            this._LH1._Li1(this._2y1._Fv1(anchor));
            this._MH1._Li1(this._3y1._Fv1(anchor));
            this._gJ1._Li1(this._2y1._Hv1(_wk1))
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._gJ1._Xi1(data['localAxisA']);
            this._TH1 = data['enableMotor'];
            this._QH1 = data['maxMotorTorque'];
            this._RH1 = data['motorSpeed'];
            this._KI1 = data['frequencyHz'];
            this._LI1 = data['dampingRatio']
        }
    };
    __J1._mh1(_iH1);

    function _FH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._GE1 = 0;
        this._HE1 = 0;
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._kJ1 = _Vu1._gJ1._Qr();
        this._lJ1 = _Ij1(1.0, this._kJ1);
        this._Iu1 = 0.0;
        this._XH1 = 0.0;
        this._dI1 = 0.0;
        this._YH1 = 0.0;
        this._0K1 = 0.0;
        this._1K1 = 0.0;
        this._0I1 = _Vu1._QH1;
        this._1I1 = _Vu1._RH1;
        this._3I1 = _Vu1._TH1;
        this._OI1 = _Vu1._KI1;
        this._PI1 = _Vu1._LI1;
        this._6J1 = 0.0;
        this._RI1 = 0.0;
        this._2K1 = new _Hi1();
        this._3K1 = new _Hi1();
        this._4K1 = this._5K1 = 0;
        this._6K1 = this._7K1 = 0
    }

    _FH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            return _Hi1.Multiply(_4x1, _Hi1._3C(_Hi1.Multiply(this._XH1, this._3K1), _Hi1.Multiply(this._1K1, this._2K1)))
        }, _mH1: function (_4x1) {
            return _4x1 * this._YH1;
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1
        }, _vJ1: function () {
            return this._kJ1
        }, _wJ1: function () {
            var _1z1 = this._0y1;
            var _2z1 = this._Zx1;
            var _Yn1 = _1z1._Cv1(this._UH1);
            var _Zn1 = _2z1._Cv1(this._VH1);
            var _cE = _Hi1._Pi1(_Zn1, _Yn1);
            var _wk1 = _1z1._Dv1(this._kJ1);
            var _cH1 = _Fj1(_cE, _wk1);
            return _cH1
        }, _iI1: function () {
            var _Hn1 = this._0y1._Au1;
            var _In1 = this._Zx1._Au1;
            return _In1 - _Hn1
        }, _oI1: function () {
            return this._3I1
        }, _pI1: function (_Wv1) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._3I1 = _Wv1
        }, _qI1: function (_Tb) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._1I1 = _Tb
        }, _rI1: function () {
            return this._1I1
        }, _sI1: function (_uv1) {
            this._0y1._B71(!0);
            this._Zx1._B71(!0);
            this._0I1 = _uv1
        }, _tI1: function () {
            return this._0I1
        }, _uI1: function (_4x1) {
            return _4x1 * this._YH1
        }, _8K1: function (_YI1) {
            this._OI1 = _YI1
        }, _9K1: function () {
            return this._OI1
        }, _aK1: function (_3H1) {
            this._PI1 = _3H1
        }, _bK1: function () {
            return this._PI1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _cE = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, _Lo1), _ey1), _Ko1);
            {
                this._3K1._Li1(_Uj1(_vI1,
                    this._lJ1));
                this._6K1 = _Gj1(_Hi1._3C(_cE, _Ko1), this._3K1);
                this._7K1 = _Gj1(_Lo1, this._3K1);
                this._Iu1 = _UF1 + _VF1 + _7t1 * this._6K1 * this._6K1 + _8t1 * this._7K1 * this._7K1;
                if (this._Iu1 > 0.0) {
                    this._Iu1 = 1.0 / this._Iu1
                }
            }
            this._0K1 = 0.0;
            this._6J1 = 0.0;
            this._RI1 = 0.0;
            if (this._OI1 > 0.0) {
                this._2K1._Li1(_Uj1(_vI1, this._kJ1));
                this._4K1 = _Gj1(_Hi1._3C(_cE, _Ko1), this._2K1);
                this._5K1 = _Gj1(_Lo1, this._2K1);
                var _cJ1 = _UF1 + _VF1 + _7t1 * this._4K1 * this._4K1 + _8t1 * this._5K1 * this._5K1;
                if (_cJ1 > 0.0) {
                    this._0K1 = 1.0 / _cJ1;
                    var __j1 = _Fj1(_cE, this._2K1);
                    var _1J1 = 2.0 * _Xh1 * this._OI1;
                    var _cE = 2.0 * this._0K1 * this._PI1 * _1J1;
                    var _tC = this._0K1 * _1J1 * _1J1;
                    var _w5 = data._vh1._3x1;
                    this._RI1 = _w5 * (_cE + _w5 * _tC);
                    if (this._RI1 > 0.0) {
                        this._RI1 = 1.0 / this._RI1
                    }
                    this._6J1 = __j1 * _w5 * _tC * this._RI1;
                    this._0K1 = _cJ1 + this._RI1;
                    if (this._0K1 > 0.0) {
                        this._0K1 = 1.0 / this._0K1
                    }
                }
            } else {
                this._1K1 = 0.0
            }
            if (this._3I1) {
                this._dI1 = _7t1 + _8t1;
                if (this._dI1 > 0.0) {
                    this._dI1 = 1.0 / this._dI1
                }
            } else {
                this._dI1 = 0.0;
                this._YH1 = 0.0
            }
            if (data._vh1._8x1) {
                this._XH1 *= data._vh1._5x1;
                this._1K1 *= data._vh1._5x1;
                this._YH1 *= data._vh1._5x1;
                var _1r1 = _Hi1._3C(_Hi1.Multiply(this._XH1, this._3K1), _Hi1.Multiply(this._1K1, this._2K1));
                var _EJ1 = this._XH1 * this._6K1 + this._1K1 * this._4K1 + this._YH1;
                var _FJ1 = this._XH1 * this._7K1 + this._1K1 * this._5K1 + this._YH1;
                _XF1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
                _Hn1 -= this._bI1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(this._aI1, _1r1));
                _In1 += this._cI1 * _FJ1
            } else {
                this._XH1 = 0.0;
                this._1K1 = 0.0;
                this._YH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }
        , _hG1: function (data) {
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            {
                var _yI1 = _Fj1(this._2K1, _Hi1._Pi1(_ZF1, _XF1)) + this._5K1 * _In1 - this._4K1 * _Hn1;
                var _wv1 = -this._0K1 * (_yI1 + this._6J1 + this._RI1 * this._1K1);
                this._1K1 += _wv1;
                var _1r1 = _Hi1.Multiply(_wv1, this._2K1);
                var _EJ1 = _wv1 * this._4K1;
                var _FJ1 = _wv1 * this._5K1;
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _FJ1
            }
            {
                var _yI1 = _In1 - _Hn1 - this._1I1;
                var _wv1 = -this._dI1 * _yI1;
                var _zI1 = this._YH1;
                var _AI1 = data._vh1._3x1 * this._0I1;
                this._YH1 = _ak1(this._YH1 + _wv1, -_AI1, _AI1);
                _wv1 = this._YH1 - _zI1;
                _Hn1 -= _7t1 * _wv1;
                _In1 += _8t1 * _wv1
            }
            {
                var _yI1 = _Fj1(this._3K1, _Hi1._Pi1(_ZF1, _XF1)) + this._7K1 * _In1 - this._6K1 * _Hn1;
                var _wv1 = -this._Iu1 * _yI1;
                this._XH1 += _wv1;
                var _1r1 = _Hi1.Multiply(_wv1, this._3K1);
                var _EJ1 = _wv1 * this._6K1;
                var _FJ1 = _wv1 * this._7K1;
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * _EJ1;
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * _FJ1
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _cE = _Hi1._3C(_Hi1._Pi1(_gy1,
                _ey1), _Hi1._Pi1(_Lo1, _Ko1));
            var _r21 = _Uj1(_vI1, this._lJ1);
            var _cK1 = _Gj1(_Hi1._3C(_cE, _Ko1), _r21);
            var _dK1 = _Gj1(_Lo1, _r21);
            var __j1 = _Fj1(_cE, _r21);
            var _tC = this._9I1 + this._aI1 + this._bI1 * this._6K1 * this._6K1 + this._cI1 * this._7K1 * this._7K1;
            var _wv1;
            if (_tC != 0.0) {
                _wv1 = -__j1 / _tC
            } else {
                _wv1 = 0.0
            }
            var _1r1 = _Hi1.Multiply(_wv1, _r21);
            var _EJ1 = _wv1 * _cK1;
            var _FJ1 = _wv1 * _dK1;
            _ey1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
            _WF1 -= this._bI1 * _EJ1;
            _gy1._3C(_Hi1.Multiply(this._aI1, _1r1));
            _YF1 += this._cI1 * _FJ1;
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return _3k1(__j1) <= _1i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['localAxisA'] = this._eK1._Vi1();
            _aP['enableMotor'] = this._3I1;
            _aP['maxMotorTorque'] = this._0I1;
            _aP['motorSpeed'] = this._1I1;
            _aP['frequencyHz'] = this._OI1;
            _aP['dampingRatio'] = this._PI1;
            return _aP
        }
    };
    _FH1._mh1(_Xx1);

    function _fK1() {
        this.parent.call(this);
        this.type = _Xx1._uH1;
        this._gK1 = null;
        this._hK1 = null;
        this._3H1 = 1.0;
        Object.seal(this)
    }

    _fK1.prototype = {
        _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._gK1 = data['joint1'];
            this._hK1 = data['joint2'];
            this._3H1 = data['ratio']
        }
    };
    _fK1._mh1(_iH1);

    function _EH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._iK1 = _Vu1._gK1;
        this._jK1 = _Vu1._hK1;
        this._kK1 = this._iK1._Xk1();
        this._lK1 = this._jK1._Xk1();
        _Th1(this._kK1 == _Xx1._sH1 || this._kK1 == _Xx1._tH1);
        _Th1(this._lK1 == _Xx1._sH1 || this._lK1 == _Xx1._tH1);
        var _mK1, _nK1;
        this._oK1 = this._iK1._cz1();
        this._0y1 = this._iK1._dz1();
        var _bp1 = this._0y1._nr1;
        var _WF1 = this._0y1._uu1._hv;
        var _pK1 = this._oK1._nr1;
        var _qK1 = this._oK1._uu1._hv;
        this._UH1 = new _Hi1();
        this._VH1 = new _Hi1();
        this._rK1 = new _Hi1();
        this._sK1 = new _Hi1();
        this._tK1 = new _Hi1();
        this._uK1 = new _Hi1();
        if (this._kK1 == _Xx1._sH1) {
            var _vK1 = _Vu1._gK1;
            this._rK1._Li1(_vK1._UH1);
            this._UH1._Li1(_vK1._VH1);
            this._wK1 = _vK1._WH1;
            this._tK1._Ii1();
            _mK1 = _WF1 - _qK1 - this._wK1
        } else {
            var _xK1 = _Vu1._gK1;
            this._rK1._Li1(_xK1._UH1);
            this._UH1._Li1(_xK1._VH1);
            this._wK1 = _xK1._WH1;
            this._tK1._Li1(_xK1._kJ1);
            var _yK1 = this._rK1;
            var _Yn1 = _Vj1(_pK1._7S, _Hi1._3C(_Uj1(_bp1._7S, this._UH1), _Hi1._Pi1(_bp1._lT, _pK1._lT)));
            _mK1 = _Fj1(_Hi1._Pi1(_Yn1, _yK1), this._tK1)
        }
        this._zK1 = this._jK1._cz1();
        this._Zx1 = this._jK1._dz1();
        var _dp1 = this._Zx1._nr1;
        var _YF1 = this._Zx1._uu1._hv;
        var _AK1 = this._zK1._nr1;
        var _BK1 = this._zK1._uu1._hv;
        if (this._lK1 == _Xx1._sH1) {
            var _vK1 = _Vu1._hK1;
            this._sK1._Li1(_vK1._UH1);
            this._VH1._Li1(_vK1._VH1);
            this._CK1 = _vK1._WH1;
            this._uK1._Ii1();
            _nK1 = _YF1 - _BK1 - this._CK1
        }
        else {
            var _xK1 = _Vu1._hK1;
            this._sK1._Li1(_xK1._UH1);
            this._VH1._Li1(_xK1._VH1);
            this._CK1 = _xK1._WH1;
            this._uK1._Li1(_xK1._kJ1);
            var _DK1 = this._sK1;
            var _Zn1 = _Vj1(_AK1._7S, _Hi1._3C(_Uj1(_dp1._7S, this._VH1), _Hi1._Pi1(_dp1._lT, _AK1._lT)));
            _nK1 = _Fj1(_Hi1._Pi1(_Zn1, _DK1), this._uK1)
        }
        this._EK1 = _Vu1._3H1;
        this._FK1 = _mK1 + this._EK1 * _nK1;
        this._XH1 = 0.0;
        this._GE1 = this._HE1 = this._GK1 = this._HK1 = 0;
        this._IK1 = new _Hi1();
        this._JK1 = new _Hi1();
        this._KK1 = new _Hi1();
        this._LK1 = new _Hi1();
        this._MK1 = this._NK1 = this._OK1 = this._PK1 = 0;
        this._QK1 = this._RK1 = this._SK1 = this._TK1 = 0;
        this._UK1 = new _Hi1(), this._VK1 = new _Hi1();
        this._WK1 = this._XK1 = this._YK1 = this._ZK1 = 0;
        this._Iu1 = 0
    }

    _EH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            var _1r1 = _Hi1.Multiply(this._XH1, this._UK1);
            return _Hi1.Multiply(_4x1, _1r1)
        }, _mH1: function (_4x1) {
            var __K1 = this._XH1 * this._WK1;
            return _4x1 * __K1
        }, _0L1: function () {
            return this._iK1
        }, _1L1: function () {
            return this._jK1
        }, _2L1: function (_3H1) {
            _Th1(_xi1(_3H1));
            this._EK1 = _3H1
        }, _3L1: function () {
            return this._EK1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._GK1 = this._oK1._lu1;
            this._HK1 = this._zK1._lu1;
            this._IK1._Li1(this._0y1._uu1._wj1);
            this._JK1._Li1(this._Zx1._uu1._wj1);
            this._KK1._Li1(this._oK1._uu1._wj1);
            this._LK1._Li1(this._zK1._uu1._wj1);
            this._MK1 = this._0y1._Ju1;
            this._NK1 = this._Zx1._Ju1;
            this._OK1 = this._oK1._Ju1;
            this._PK1 = this._zK1._Ju1;
            this._QK1 = this._0y1._Lu1;
            this._RK1 = this._Zx1._Lu1;
            this._SK1 = this._oK1._Lu1;
            this._TK1 = this._zK1._Lu1;
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _qK1 = data._cx1[this._GK1]._hv;
            var _4L1 = data._dx1[this._GK1]._uv._Qr();
            var _5L1 = data._dx1[this._GK1]._v5;
            var _BK1 = data._cx1[this._HK1]._hv;
            var _6L1 = data._dx1[this._HK1]._uv._Qr();
            var _7L1 = data._dx1[this._HK1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1), _8L1 = new _pj1(_qK1), _9L1 = new _pj1(_BK1);
            this._Iu1 = 0.0;
            if (this._kK1 == _Xx1._sH1) {
                this._UK1._Ii1();
                this._WK1 = 1.0;
                this._YK1 = 1.0;
                this._Iu1 += this._QK1 + this._SK1
            } else {
                var _sv = _Uj1(_8L1, this._tK1);
                var _aL1 = _Uj1(_8L1, _Hi1._Pi1(this._rK1, this._KK1));
                var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._IK1));
                this._UK1._Li1(_sv);
                this._YK1 = _Gj1(_aL1, _sv);
                this._WK1 = _Gj1(_Ko1, _sv);
                this._Iu1 += this._OK1 + this._MK1 + this._SK1 * this._YK1 * this._YK1 + this._QK1 * this._WK1 * this._WK1;
            }
            if (this._lK1 == _Xx1._sH1) {
                this._VK1._Ii1();
                this._XK1 = this._EK1;
                this._ZK1 = this._EK1;
                this._Iu1 += this._EK1 * this._EK1 * (this._RK1 + this._TK1)
            }
            else {
                var _sv = _Uj1(_9L1, this._uK1);
                var _bL1 = _Uj1(_9L1, _Hi1._Pi1(this._sK1, this._LK1));
                var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._JK1));
                this._VK1._Li1(_Hi1.Multiply(this._EK1, _sv));
                this._ZK1 = this._EK1 * _Gj1(_bL1, _sv);
                this._XK1 = this._EK1 * _Gj1(_Lo1, _sv);
                this._Iu1 += this._EK1 * this._EK1 * (this._PK1 + this._NK1) + this._TK1 * this._ZK1 * this._ZK1 + this._RK1 * this._XK1 * this._XK1
            }
            this._Iu1 = this._Iu1 > 0.0 ? 1.0 / this._Iu1 : 0.0;
            if (data._vh1._8x1) {
                _XF1._3C(_Hi1.Multiply((this._MK1 * this._XH1), this._UK1));
                _Hn1 += this._QK1 * this._XH1 * this._WK1;
                _ZF1._3C(_Hi1.Multiply((this._NK1 * this._XH1), this._VK1));
                _In1 += this._RK1 * this._XH1 * this._XK1;
                _4L1._Pi1(_Hi1.Multiply((this._OK1 * this._XH1), this._UK1));
                _5L1 -= this._SK1 * this._XH1 * this._YK1;
                _6L1._Pi1(_Hi1.Multiply((this._PK1 * this._XH1), this._VK1));
                _7L1 -= this._TK1 * this._XH1 * this._ZK1
            } else {
                this._XH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1;
            data._dx1[this._GK1]._uv._Li1(_4L1);
            data._dx1[this._GK1]._v5 = _5L1;
            data._dx1[this._HK1]._uv._Li1(_6L1);
            data._dx1[this._HK1]._v5 = _7L1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _4L1 = data._dx1[this._GK1]._uv._Qr();
            var _5L1 = data._dx1[this._GK1]._v5;
            var _6L1 = data._dx1[this._HK1]._uv._Qr();
            var _7L1 = data._dx1[this._HK1]._v5;
            var _yI1 = _Fj1(this._UK1, _Hi1._Pi1(_XF1, _4L1)) + _Fj1(this._VK1, _Hi1._Pi1(_ZF1, _6L1));
            _yI1 += (this._WK1 * _Hn1 - this._YK1 * _5L1) + (this._XK1 * _In1 - this._ZK1 * _7L1);
            var _wv1 = -this._Iu1 * _yI1;
            this._XH1 += _wv1;
            _XF1._3C(_Hi1.Multiply((this._MK1 * _wv1), this._UK1));
            _Hn1 += this._QK1 * _wv1 * this._WK1;
            _ZF1._3C(_Hi1.Multiply((this._NK1 * _wv1), this._VK1));
            _In1 += this._RK1 * _wv1 * this._XK1;
            _4L1._Pi1(_Hi1.Multiply((this._OK1 * _wv1), this._UK1));
            _5L1 -= this._SK1 * _wv1 * this._YK1;
            _6L1._Pi1(_Hi1.Multiply((this._PK1 * _wv1), this._VK1));
            _7L1 -= this._TK1 * _wv1 * this._ZK1;
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1;
            data._dx1[this._GK1]._uv._Li1(_4L1);
            data._dx1[this._GK1]._v5 = _5L1;
            data._dx1[this._HK1]._uv._Li1(_6L1);
            data._dx1[this._HK1]._v5 = _7L1
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _cL1 = data._cx1[this._GK1]._u5._Qr();
            var _qK1 = data._cx1[this._GK1]._hv;
            var _dL1 = data._cx1[this._HK1]._u5._Qr();
            var _BK1 = data._cx1[this._HK1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1), _8L1 = new _pj1(_qK1), _9L1 = new _pj1(_BK1);
            var _LJ1 = 0.0;
            var _mK1,
                _nK1;
            var _eL1 = new _Hi1(), _fL1 = new _Hi1();
            var _gL1, _hL1, _iL1, _jL1;
            var _Tk1 = 0.0;
            if (this._kK1 == _Xx1._sH1) {
                _eL1._Ii1();
                _gL1 = 1.0;
                _iL1 = 1.0;
                _Tk1 += this._QK1 + this._SK1;
                _mK1 = _WF1 - _qK1 - this._wK1
            } else {
                var _sv = _Uj1(_8L1, this._tK1);
                var _aL1 = _Uj1(_8L1, _Hi1._Pi1(this._rK1, this._KK1));
                var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._IK1));
                _eL1._Li1(_sv);
                _iL1 = _Gj1(_aL1, _sv);
                _gL1 = _Gj1(_Ko1, _sv);
                _Tk1 += this._OK1 + this._MK1 + this._SK1 * _iL1 * _iL1 + this._QK1 * _gL1 * _gL1;
                var _yK1 = _Hi1._Pi1(this._rK1, this._KK1);
                var _Yn1 = _Vj1(_8L1, _Hi1._3C(_Ko1,
                    _Hi1._Pi1(_ey1, _cL1)));
                _mK1 = _Fj1(_Hi1._Pi1(_Yn1, _yK1), this._tK1)
            }
            if (this._lK1 == _Xx1._sH1) {
                _fL1._Ii1();
                _hL1 = this._EK1;
                _jL1 = this._EK1;
                _Tk1 += this._EK1 * this._EK1 * (this._RK1 + this._TK1);
                _nK1 = _YF1 - _BK1 - this._CK1
            } else {
                var _sv = _Uj1(_9L1, this._uK1);
                var _bL1 = _Uj1(_9L1, _Hi1._Pi1(this._sK1, this._LK1));
                var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._JK1));
                _fL1._Li1(_Hi1.Multiply(this._EK1, _sv));
                _jL1 = this._EK1 * _Gj1(_bL1, _sv);
                _hL1 = this._EK1 * _Gj1(_Lo1, _sv);
                _Tk1 += this._EK1 * this._EK1 * (this._PK1 + this._NK1) + this._TK1 * _jL1 * _jL1 + this._RK1 * _hL1 * _hL1;
                var _DK1 = _Hi1._Pi1(this._sK1, this._LK1);
                var _Zn1 = _Vj1(_9L1, _Hi1._3C(_Lo1, _Hi1._Pi1(_gy1, _dL1)));
                _nK1 = _Fj1(_Hi1._Pi1(_Zn1, _DK1), this._uK1)
            }
            var __j1 = (_mK1 + this._EK1 * _nK1) - this._FK1;
            var _wv1 = 0.0;
            if (_Tk1 > 0.0) {
                _wv1 = -__j1 / _Tk1
            }
            _ey1._3C(_Hi1.Multiply(this._MK1, _Hi1.Multiply(_wv1, _eL1)));
            _WF1 += this._QK1 * _wv1 * _gL1;
            _gy1._3C(_Hi1.Multiply(this._NK1, _Hi1.Multiply(_wv1, _fL1)));
            _YF1 += this._RK1 * _wv1 * _hL1;
            _cL1._Pi1(_Hi1.Multiply(this._OK1, _Hi1.Multiply(_wv1, _eL1)));
            _qK1 -= this._SK1 * _wv1 * _iL1;
            _dL1._Pi1(_Hi1.Multiply(this._PK1,
                _Hi1.Multiply(_wv1, _fL1)));
            _BK1 -= this._TK1 * _wv1 * _jL1;
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            data._cx1[this._GK1]._u5._Li1(_cL1);
            data._cx1[this._GK1]._hv = _qK1;
            data._cx1[this._HK1]._u5._Li1(_dL1);
            data._cx1[this._HK1]._hv = _BK1;
            return _LJ1 < _1i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['joint1'] = this._iK1._kL1;
            _aP['joint2'] = this._jK1._kL1;
            _aP['ratio'] = this._EK1;
            return _aP
        }
    };
    _EH1._mh1(_Xx1);

    function _lL1() {
        this.parent.call(this);
        this.type = _Xx1._mz1;
        this._mL1 = new _Hi1();
        this._nL1 = 0.0;
        this._JI1 = 1.0;
        this._PJ1 = 1.0;
        this._oL1 = 0.3;
        Object.seal(this)
    }

    _lL1.prototype = {
        _ap1: function (_1z1, _2z1) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            var _pL1 = this._3y1._371();
            this._mL1._Li1(this._2y1._Fv1(_pL1));
            var _qL1 = this._2y1._qj1();
            var _rL1 = this._3y1._qj1();
            this._nL1 = _rL1 - _qL1
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._mL1._Xi1(data['linearOffset']);
            this._nL1 = data['angularOffset'];
            this._JI1 = data['maxForce'];
            this._PJ1 = data['maxTorque'];
            this._oL1 = data['correctionFactor']
        }
    };
    _lL1._mh1(_iH1);

    function _JH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._sL1 = _Vu1._mL1._Qr();
        this._tL1 = _Vu1._nL1;
        this._QJ1 = new _Hi1();
        this._RJ1 = 0.0;
        this._NI1 = _Vu1._JI1;
        this._SJ1 = _Vu1._PJ1;
        this._uL1 = _Vu1._oL1;
        this._GE1 = 0;
        this._HE1 = 0;
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._vL1 = new _Hi1();
        this._wL1 = 0;
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._TJ1 = new _0j1();
        this._UJ1 = 0
    }

    _JH1.prototype = {
        _ez1: function () {
            return this._0y1._371()
        }, _fz1: function () {
            return this._Zx1._371()
        }, _lH1: function (_4x1) {
            return _Hi1.Multiply(_4x1, this._QJ1)
        }, _mH1: function (_4x1) {
            return _4x1 * this._RJ1
        }, _xL1: function (_mL1) {
            if (_mL1.x != this._sL1.x || _mL1.y != this._sL1.y) {
                this._0y1._B71(!0);
                this._Zx1._B71(!0);
                this._sL1._Li1(_mL1)
            }
        }, _oz1: function () {
            return this._sL1
        }, _yL1: function (_nL1) {
            if (_nL1 != this._tL1) {
                this._0y1._B71(!0);
                this._Zx1._B71(!0);
                this._tL1 = _nL1
            }
        }, _zL1: function () {
            return this._tL1
        }, _VI1: function (_qv1) {
            _Th1(_xi1(_qv1) && _qv1 >= 0.0);
            this._NI1 = _qv1
        }, _WI1: function () {
            return this._NI1
        }, _VJ1: function (_uv1) {
            _Th1(_xi1(_uv1) && _uv1 >= 0.0);
            this._SJ1 = _uv1
        }, _WJ1: function () {
            return this._SJ1
        }, _AL1: function (_BL1) {
            _Th1(_xi1(_BL1) && 0.0 <= _BL1 && _BL1 <= 1.0);
            this._uL1 = _BL1
        }, _CL1: function () {
            return this._uL1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1._Li1(_Uj1(_vI1, this._7I1._Mi1()));
            this._6I1._Li1(_Uj1(_wI1, this._8I1._Mi1()));
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _AF1 = new _0j1();
            _AF1._PQ.x = _UF1 + _VF1 + _7t1 * this._5I1.y * this._5I1.y + _8t1 * this._6I1.y * this._6I1.y;
            _AF1._PQ.y = -_7t1 * this._5I1.x * this._5I1.y - _8t1 * this._6I1.x * this._6I1.y;
            _AF1._4V.x = _AF1._PQ.y;
            _AF1._4V.y = _UF1 + _VF1 + _7t1 * this._5I1.x * this._5I1.x + _8t1 * this._6I1.x * this._6I1.x;
            this._TJ1._Li1(_AF1._4j1());
            this._UJ1 = _7t1 + _8t1;
            if (this._UJ1 > 0.0) {
                this._UJ1 = 1.0 / this._UJ1
            }
            this._vL1.x = _gy1.x + this._6I1.x - _ey1.x - this._5I1.x - (_vI1._u5 * this._sL1.x - _vI1._ZN * this._sL1.y);
            this._vL1.y = _gy1.y + this._6I1.y - _ey1.y - this._5I1.y - (_vI1._ZN * this._sL1.x + _vI1._u5 * this._sL1.y);
            this._wL1 = _YF1 - _WF1 - this._tL1;
            if (data._vh1._8x1) {
                this._QJ1.Multiply(data._vh1._5x1);
                this._RJ1 *= data._vh1._5x1;
                var _1r1 = new _Hi1(this._QJ1.x, this._QJ1.y);
                _XF1._Pi1(_Hi1.Multiply(_UF1, _1r1));
                _Hn1 -= _7t1 * (_Gj1(this._5I1, _1r1) + this._RJ1);
                _ZF1._3C(_Hi1.Multiply(_VF1, _1r1));
                _In1 += _8t1 * (_Gj1(this._6I1, _1r1) + this._RJ1)
            } else {
                this._QJ1._Ii1();
                this._RJ1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _UF1 = this._9I1, _VF1 = this._aI1;
            var _7t1 = this._bI1, _8t1 = this._cI1;
            var _w5 = data._vh1._3x1;
            var _DL1 = data._vh1._4x1;
            {
                var _yI1 = _In1 - _Hn1 + _DL1 * this._uL1 * this._wL1;
                var _wv1 = -this._UJ1 * _yI1;
                var _zI1 = this._RJ1;
                var _AI1 = _w5 * this._SJ1;
                this._RJ1 = _ak1(this._RJ1 + _wv1, -_AI1, _AI1);
                _wv1 = this._RJ1 - _zI1;
                _Hn1 -= _7t1 * _wv1;
                _In1 += _8t1 * _wv1
            }
            {
                var _yI1 = new _Hi1(_ZF1.x + (-_In1 * this._6I1.x) - _XF1.x - (-_Hn1 * this._5I1.x) + _DL1 * this._uL1 * this._vL1.x,
                    _ZF1.y + (_In1 * this._6I1.y) - _XF1.y - (_Hn1 * this._5I1.y) + _DL1 * this._uL1 * this._vL1.y);
                var _wv1 = _Jj1(this._TJ1, _yI1)._Mi1();
                var _zI1 = this._QJ1._Qr();
                this._QJ1._3C(_wv1);
                var _AI1 = _w5 * this._NI1;
                if (this._QJ1._Qi1() > _AI1 * _AI1) {
                    this._QJ1._Ri1();
                    this._QJ1.Multiply(_AI1)
                }
                _wv1._Li1(_Hi1._Pi1(this._QJ1, _zI1));
                _XF1._Pi1(_Hi1.Multiply(_UF1, _wv1));
                _Hn1 -= _7t1 * _Gj1(this._5I1, _wv1);
                _ZF1._3C(_Hi1.Multiply(_VF1, _wv1));
                _In1 += _8t1 * _Gj1(this._6I1, _wv1)
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            return !0
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this, _aP);
            _aP['linearOffset'] = this._sL1._Vi1();
            _aP['angularOffset'] = this._tL1;
            _aP['maxForce'] = this._NI1;
            _aP['maxTorque'] = this._SJ1;
            _aP['correctionFactor'] = this._uL1;
            return _aP
        }
    };
    _JH1._mh1(_Xx1);
    var _EL1 = 2.0;

    function _FL1() {
        this.parent.call(this);
        this.type = _Xx1._hz1;
        this._GL1 = new _Hi1(-1.0, 1.0);
        this._HL1 = new _Hi1(1.0, 1.0);
        this._LH1 = new _Hi1(-1.0, 0.0);
        this._MH1 = new _Hi1(1.0, 0.0);
        this._IL1 = 0.0;
        this._JL1 = 0.0;
        this._3H1 = 1.0;
        this._4y1 = !0;
        Object.seal(this)
    }

    _FL1.prototype = {
        _ap1: function (_1z1, _2z1, _KL1, _LL1, _ML1, _NL1, _Kt) {
            this._2y1 = _1z1;
            this._3y1 = _2z1;
            this._GL1._Li1(_KL1);
            this._HL1._Li1(_LL1);
            this._LH1._Li1(this._2y1._Fv1(_ML1));
            this._MH1._Li1(this._3y1._Fv1(_NL1));
            var _OL1 = _Hi1._Pi1(_ML1, _KL1);
            this._IL1 = _OL1.Length();
            var _PL1 = _Hi1._Pi1(_NL1, _LL1);
            this._JL1 = _PL1.Length();
            this._3H1 = _Kt;
            _Th1(this._3H1 > _Wh1)
        }, _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1,
                _kH1);
            this._GL1._Xi1(data['groundAnchorA']);
            this._HL1._Xi1(data['groundAnchorB']);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._IL1 = data['lengthA'];
            this._JL1 = data['lengthB'];
            this._3H1 = data['ratio']
        }
    };
    _FL1._mh1(_iH1);

    function _DH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._GE1 = 0;
        this._HE1 = 0;
        this._QL1 = new _Hi1();
        this._RL1 = new _Hi1();
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0;
        this._Iu1 = 0;
        this._SL1 = _Vu1._GL1._Qr();
        this._TL1 = _Vu1._HL1._Qr();
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._UL1 = _Vu1._IL1;
        this._VL1 = _Vu1._JL1;
        _Th1(_Vu1._3H1 != 0.0);
        this._EK1 = _Vu1._3H1;
        this._FK1 = _Vu1._IL1 + this._EK1 * _Vu1._JL1;
        this._XH1 = 0.0
    }

    _DH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            var _1r1 = _Hi1.Multiply(this._XH1, this._RL1);
            return _Hi1.Multiply(_4x1, _1r1)
        }, _mH1: function (_4x1) {
            return 0.0
        }, _jz1: function () {
            return this._SL1
        }
        , _kz1: function () {
            return this._TL1
        }, _WL1: function () {
            return this._UL1
        }, _XL1: function () {
            return this._VL1
        }, _3L1: function () {
            return this._EK1
        }, _YL1: function () {
            var _lT = this._0y1._Cv1(this._UH1);
            var _ZN = this._SL1;
            var _cE = _Hi1._Pi1(_lT, _ZN);
            return _cE.Length()
        }, _ZL1: function () {
            var _lT = this._Zx1._Cv1(this._VH1);
            var _ZN = this._TL1;
            var _cE = _Hi1._Pi1(_lT, _ZN);
            return _cE.Length()
        }, _jn1: function (_kn1) {
            this._SL1._Pi1(_kn1);
            this._TL1._Pi1(_kn1)
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1._Li1(_Uj1(_vI1, _Hi1._Pi1(this._UH1,
                this._7I1)));
            this._6I1._Li1(_Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1)));
            this._QL1._Li1(_Hi1._3C(_ey1, _Hi1._Pi1(this._5I1, this._SL1)));
            this._RL1._Li1(_Hi1._3C(_gy1, _Hi1._Pi1(this._6I1, this._TL1)));
            var _IL1 = this._QL1.Length();
            var _JL1 = this._RL1.Length();
            if (_IL1 > 10.0 * _1i1) {
                this._QL1.Multiply(1.0 / _IL1)
            } else {
                this._QL1._Ii1()
            }
            if (_JL1 > 10.0 * _1i1) {
                this._RL1.Multiply(1.0 / _JL1)
            } else {
                this._RL1._Ii1();
            }
            var __L1 = _Gj1(this._5I1, this._QL1);
            var _0M1 = _Gj1(this._6I1, this._RL1);
            var _UF1 = this._9I1 + this._bI1 * __L1 * __L1;
            var _VF1 = this._aI1 + this._cI1 * _0M1 * _0M1;
            this._Iu1 = _UF1 + this._EK1 * this._EK1 * _VF1;
            if (this._Iu1 > 0.0) {
                this._Iu1 = 1.0 / this._Iu1
            }
            if (data._vh1._8x1) {
                this._XH1 *= data._vh1._5x1;
                var _1M1 = _Hi1.Multiply(-(this._XH1), this._QL1);
                var _2M1 = _Hi1.Multiply((-this._EK1 * this._XH1), this._RL1);
                _XF1._3C(_Hi1.Multiply(this._9I1, _1M1));
                _Hn1 += this._bI1 * _Gj1(this._5I1, _1M1);
                _ZF1._3C(_Hi1.Multiply(this._aI1, _2M1));
                _In1 += this._cI1 * _Gj1(this._6I1, _2M1)
            } else {
                this._XH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _dJ1 = _Hi1._3C(_XF1, _Ij1(_Hn1, this._5I1));
            var _eJ1 = _Hi1._3C(_ZF1, _Ij1(_In1, this._6I1));
            var _yI1 = -_Fj1(this._QL1, _dJ1) - this._EK1 * _Fj1(this._RL1, _eJ1);
            var _wv1 = -this._Iu1 * _yI1;
            this._XH1 += _wv1;
            var _1M1 = _Hi1.Multiply(-_wv1, this._QL1);
            var _2M1 = _Hi1.Multiply(-this._EK1, _Hi1.Multiply(_wv1, this._RL1));
            _XF1._3C(_Hi1.Multiply(this._9I1,
                _1M1));
            _Hn1 += this._bI1 * _Gj1(this._5I1, _1M1);
            _ZF1._3C(_Hi1.Multiply(this._aI1, _2M1));
            _In1 += this._cI1 * _Gj1(this._6I1, _2M1);
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _3M1 = _Hi1._3C(_ey1, _Hi1._Pi1(_Ko1, this._SL1));
            var _4M1 = _Hi1._3C(_gy1, _Hi1._Pi1(_Lo1, this._TL1));
            var _IL1 = _3M1.Length();
            var _JL1 = _4M1.Length();
            if (_IL1 > 10.0 * _1i1) {
                _3M1.Multiply(1.0 / _IL1)
            } else {
                _3M1._Ii1()
            }
            if (_JL1 > 10.0 * _1i1) {
                _4M1.Multiply(1.0 / _JL1)
            } else {
                _4M1._Ii1()
            }
            var __L1 = _Gj1(_Ko1, _3M1);
            var _0M1 = _Gj1(_Lo1, _4M1);
            var _UF1 = this._9I1 + this._bI1 * __L1 * __L1;
            var _VF1 = this._aI1 + this._cI1 * _0M1 * _0M1;
            var _Tk1 = _UF1 + this._EK1 * this._EK1 * _VF1;
            if (_Tk1 > 0.0) {
                _Tk1 = 1.0 / _Tk1
            }
            var __j1 = this._FK1 - _IL1 - this._EK1 * _JL1;
            var _LJ1 = _3k1(__j1);
            var _wv1 = -_Tk1 * __j1;
            var _1M1 = _Hi1.Multiply(-_wv1, _3M1);
            var _2M1 = _Hi1.Multiply(-this._EK1, _Hi1.Multiply(_wv1, _4M1));
            _ey1._3C(_Hi1.Multiply(this._9I1, _1M1));
            _WF1 += this._bI1 * _Gj1(_Ko1, _1M1);
            _gy1._3C(_Hi1.Multiply(this._aI1, _2M1));
            _YF1 += this._cI1 * _Gj1(_Lo1, _2M1);
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return _LJ1 < _1i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this,
                _aP);
            _aP['groundAnchorA'] = this._SL1._Vi1();
            _aP['groundAnchorB'] = this._TL1._Vi1();
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['lengthA'] = this._UL1;
            _aP['lengthB'] = this._VL1;
            _aP['ratio'] = this._EK1;
            return _aP
        }
    };
    _DH1._mh1(_Xx1);

    function _5M1() {
        this.parent.call(this);
        this.type = _Xx1._yH1;
        this._LH1 = new _Hi1(-1.0, 0.0);
        this._MH1 = new _Hi1(1.0, 0.0);
        this._6M1 = 0.0;
        Object.seal(this)
    }

    _5M1.prototype = {
        _Xi1: function (data, _8z1, _kH1) {
            this.parent.prototype._Xi1.call(this, data, _8z1, _kH1);
            this._LH1._Xi1(data['localAnchorA']);
            this._MH1._Xi1(data['localAnchorB']);
            this._6M1 = data['maxLength']
        }
    };
    _5M1._mh1(_iH1);

    function _IH1(_Vu1) {
        this.parent.call(this, _Vu1);
        this._UH1 = _Vu1._LH1._Qr();
        this._VH1 = _Vu1._MH1._Qr();
        this._7M1 = _Vu1._6M1;
        this._Iu1 = 0.0;
        this._XH1 = 0.0;
        this._8M1 = _Xx1._oH1;
        this._5J1 = 0.0;
        this._GE1 = 0;
        this._HE1 = 0;
        this._7J1 = new _Hi1();
        this._5I1 = new _Hi1();
        this._6I1 = new _Hi1();
        this._7I1 = new _Hi1();
        this._8I1 = new _Hi1();
        this._9I1 = 0;
        this._aI1 = 0;
        this._bI1 = 0;
        this._cI1 = 0
    }

    _IH1.prototype = {
        _ez1: function () {
            return this._0y1._Cv1(this._UH1)
        }, _fz1: function () {
            return this._Zx1._Cv1(this._VH1)
        }, _lH1: function (_4x1) {
            var _ct1 = _Hi1.Multiply((_4x1 * this._XH1), this._7J1);
            return _ct1
        }, _mH1: function (_4x1) {
            return 0.0
        }, _eI1: function () {
            return this._UH1
        }, _fI1: function () {
            return this._VH1
        }, _9M1: function (length) {
            this._7M1 = length
        }, _aM1: function () {
            return this._7M1
        }, _bM1: function () {
            return this._8M1
        }, __G1: function (data) {
            this._GE1 = this._0y1._lu1;
            this._HE1 = this._Zx1._lu1;
            this._7I1._Li1(this._0y1._uu1._wj1);
            this._8I1._Li1(this._Zx1._uu1._wj1);
            this._9I1 = this._0y1._Ju1;
            this._aI1 = this._Zx1._Ju1;
            this._bI1 = this._0y1._Lu1;
            this._cI1 = this._Zx1._Lu1;
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            this._5I1._Li1(_Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1)));
            this._6I1._Li1(_Uj1(_wI1,
                _Hi1._Pi1(this._VH1, this._8I1)));
            this._7J1._Li1(_Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, this._6I1), _ey1), this._5I1));
            this._5J1 = this._7J1.Length();
            var __j1 = this._5J1 - this._7M1;
            if (__j1 > 0.0) {
                this._8M1 = _Xx1._qH1
            } else {
                this._8M1 = _Xx1._oH1
            }
            if (this._5J1 > _1i1) {
                this._7J1.Multiply(1.0 / this._5J1)
            } else {
                this._7J1._Ii1();
                this._Iu1 = 0.0;
                this._XH1 = 0.0;
                return
            }
            var _cM1 = _Gj1(this._5I1, this._7J1);
            var _dM1 = _Gj1(this._6I1, this._7J1);
            var _cJ1 = this._9I1 + this._bI1 * _cM1 * _cM1 + this._aI1 + this._cI1 * _dM1 * _dM1;
            this._Iu1 = _cJ1 != 0.0 ? 1.0 / _cJ1 : 0.0;
            if (data._vh1._8x1) {
                this._XH1 *= data._vh1._5x1;
                var _1r1 = _Hi1.Multiply(this._XH1, this._7J1);
                _XF1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
                _Hn1 -= this._bI1 * _Gj1(this._5I1, _1r1);
                _ZF1._3C(_Hi1.Multiply(this._aI1, _1r1));
                _In1 += this._cI1 * _Gj1(this._6I1, _1r1)
            } else {
                this._XH1 = 0.0
            }
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1;
        }, _hG1: function (data) {
            var _XF1 = data._dx1[this._GE1]._uv._Qr();
            var _Hn1 = data._dx1[this._GE1]._v5;
            var _ZF1 = data._dx1[this._HE1]._uv._Qr();
            var _In1 = data._dx1[this._HE1]._v5;
            var _dJ1 = _Hi1._3C(_XF1, _Ij1(_Hn1, this._5I1));
            var _eJ1 = _Hi1._3C(_ZF1, _Ij1(_In1, this._6I1));
            var __j1 = this._5J1 - this._7M1;
            var _yI1 = _Fj1(this._7J1, _Hi1._Pi1(_eJ1, _dJ1));
            if (__j1 < 0.0) {
                _yI1 += data._vh1._4x1 * __j1
            }
            var _wv1 = -this._Iu1 * _yI1;
            var _zI1 = this._XH1;
            this._XH1 = _6k1(0.0, this._XH1 + _wv1);
            _wv1 = this._XH1 - _zI1;
            var _1r1 = _Hi1.Multiply(_wv1, this._7J1);
            _XF1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
            _Hn1 -= this._bI1 * _Gj1(this._5I1, _1r1);
            _ZF1._3C(_Hi1.Multiply(this._aI1, _1r1));
            _In1 += this._cI1 * _Gj1(this._6I1,
                _1r1);
            data._dx1[this._GE1]._uv._Li1(_XF1);
            data._dx1[this._GE1]._v5 = _Hn1;
            data._dx1[this._HE1]._uv._Li1(_ZF1);
            data._dx1[this._HE1]._v5 = _In1
        }, _CG1: function (data) {
            var _ey1 = data._cx1[this._GE1]._u5._Qr();
            var _WF1 = data._cx1[this._GE1]._hv;
            var _gy1 = data._cx1[this._HE1]._u5._Qr();
            var _YF1 = data._cx1[this._HE1]._hv;
            var _vI1 = new _pj1(_WF1), _wI1 = new _pj1(_YF1);
            var _Ko1 = _Uj1(_vI1, _Hi1._Pi1(this._UH1, this._7I1));
            var _Lo1 = _Uj1(_wI1, _Hi1._Pi1(this._VH1, this._8I1));
            var _sv = _Hi1._Pi1(_Hi1._Pi1(_Hi1._3C(_gy1, _Lo1), _ey1), _Ko1);
            var length = _sv._Ri1();
            var __j1 = length - this._7M1;
            __j1 = _ak1(__j1, 0.0, _7i1);
            var _wv1 = -this._Iu1 * __j1;
            var _1r1 = _Hi1.Multiply(_wv1, _sv);
            _ey1._Pi1(_Hi1.Multiply(this._9I1, _1r1));
            _WF1 -= this._bI1 * _Gj1(_Ko1, _1r1);
            _gy1._3C(_Hi1.Multiply(this._aI1, _1r1));
            _YF1 += this._cI1 * _Gj1(_Lo1, _1r1);
            data._cx1[this._GE1]._u5._Li1(_ey1);
            data._cx1[this._GE1]._hv = _WF1;
            data._cx1[this._HE1]._u5._Li1(_gy1);
            data._cx1[this._HE1]._hv = _YF1;
            return length - this._7M1 < _1i1
        }, _Vi1: function (_Wi1) {
            var _aP = _Wi1 || {};
            this.parent.prototype._Vi1.call(this,
                _aP);
            _aP['localAnchorA'] = this._UH1._Vi1();
            _aP['localAnchorB'] = this._VH1._Vi1();
            _aP['maxLength'] = this._7M1;
            return _aP
        }
    };
    _IH1._mh1(_Xx1);
    var _eM1 = Math.exp;

    function _fM1() {
        this.vertices = null;
        this._Gu = 0;
        this._gM1 = null;
        this._Zf = new _Hi1();
        this._xz1 = 0.1;
        this._hM1 = 0.9;
        this._iM1 = 0.1
    }

    function _jM1() {
        this._Gl1 = 0;
        this._kM1 = null;
        this._lM1 = null;
        this._mM1 = null;
        this._nM1 = null;
        this._oM1 = null;
        this._pM1 = null;
        this._qM1 = 0;
        this._ux1 = new _Hi1();
        this._rM1 = 1.0;
        this._sM1 = 0.1
    }

    _jM1.prototype = {
        _ap1: function (_Vu1) {
            _Th1(_Vu1._Gu >= 3);
            this._Gl1 = _Vu1._Gu;
            this._kM1 = new Array(this._Gl1);
            this._lM1 = new Array(this._Gl1);
            this._mM1 = new Array(this._Gl1);
            this._nM1 = new Array(this._Gl1);
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                this._kM1[_t5] = _Vu1.vertices[_t5]._Qr();
                this._lM1[_t5] = _Vu1.vertices[_t5]._Qr();
                this._mM1[_t5] = new _Hi1();
                var _wt = _Vu1._gM1[_t5];
                if (_wt > 0.0) {
                    this._nM1[_t5] = 1.0 / _wt
                } else {
                    this._nM1[_t5] = 0.0
                }
            }
            var _dq1 = this._Gl1 - 1;
            var _tM1 = this._Gl1 - 2;
            this._oM1 = new Array(_dq1);
            this._pM1 = new Array(_tM1);
            for (var _t5 = 0; _t5 < _dq1; ++_t5) {
                var _yk1 = this._kM1[_t5];
                var _zk1 = this._kM1[_t5 + 1];
                this._oM1[_t5] = _Lj1(_yk1, _zk1)
            }
            for (var _t5 = 0; _t5 < _tM1; ++_t5) {
                var _yk1 = this._kM1[_t5];
                var _zk1 = this._kM1[_t5 + 1];
                var _zm1 = this._kM1[_t5 + 2];
                var _pl1 = _Hi1._Pi1(_zk1, _yk1);
                var _6D1 = _Hi1._Pi1(_zm1, _zk1);
                var _hv = _Gj1(_pl1, _6D1);
                var _Nt = _Fj1(_pl1, _6D1);
                this._pM1[_t5] = _Fi1(_hv, _Nt)
            }
            this._ux1 = _Vu1._Zf._Qr();
            this._qM1 = _Vu1._xz1;
            this._rM1 = _Vu1._hM1;
            this._sM1 = _Vu1._iM1
        }, _5y1: function (_w5, _Fn1) {
            if (_w5 == 0.0) {
                return
            }
            var _cE = _eM1(-_w5 * this._qM1);
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                this._lM1[_t5]._Li1(this._kM1[_t5]);
                if (this._nM1[_t5] > 0.0) {
                    this._mM1[_t5]._3C(_Hi1.Multiply(_w5, this._ux1))
                }
                this._mM1[_t5].Multiply(_cE);
                this._kM1[_t5]._3C(_Hi1.Multiply(_w5, this._mM1[_t5]))
            }
            for (var _t5 = 0; _t5 < _Fn1; ++_t5) {
                this._uM1();
                this._vM1();
                this._uM1()
            }
            var _DL1 = 1.0 / _w5;
            for (var _t5 = 0; _t5 < this._Gl1; ++_t5) {
                this._mM1[_t5] = _Hi1.Multiply(_DL1, _Hi1._Pi1(this._kM1[_t5], this._lM1[_t5]))
            }
        }, _dz: function () {
            return this._Gl1
        }, _wM1: function () {
            return this._kM1
        }, _7v: function (_xM1) {
            var _u5 = new _ik1(0.4, 0.5, 0.7);
            for (var _t5 = 0; _t5 < this._Gl1 - 1; ++_t5) {
                _xM1._xk1(this._kM1[_t5],
                    this._kM1[_t5 + 1], _u5)
            }
        }, _yM1: function (angle) {
            var _tM1 = this._Gl1 - 2;
            for (var _t5 = 0; _t5 < _tM1; ++_t5) {
                this._pM1[_t5] = angle
            }
        }, _uM1: function () {
            var _dq1 = this._Gl1 - 1;
            for (var _t5 = 0; _t5 < _dq1; ++_t5) {
                var _yk1 = this._kM1[_t5];
                var _zk1 = this._kM1[_t5 + 1];
                var _cE = _Hi1._Pi1(_zk1, _yk1);
                var __K1 = _cE._Ri1();
                var _zM1 = this._nM1[_t5];
                var _AM1 = this._nM1[_t5 + 1];
                if (_zM1 + _AM1 == 0.0) {
                    continue
                }
                var _NL = _zM1 / (_zM1 + _AM1);
                var _OL = _AM1 / (_zM1 + _AM1);
                _yk1._Pi1(_Hi1.Multiply(this._rM1 * _NL * (this._oM1[_t5] - __K1), _cE));
                _zk1._3C(_Hi1.Multiply(this._rM1 * _OL * (this._oM1[_t5] - __K1),
                    _cE))
            }
        }, _vM1: function () {
            var _tM1 = this._Gl1 - 2;
            for (var _t5 = 0; _t5 < _tM1; ++_t5) {
                var _yk1 = this._kM1[_t5];
                var _zk1 = this._kM1[_t5 + 1];
                var _zm1 = this._kM1[_t5 + 2];
                var _BM1 = this._nM1[_t5];
                var _CM1 = this._nM1[_t5 + 1];
                var _DM1 = this._nM1[_t5 + 2];
                var _pl1 = _Hi1._Pi1(_zk1, _yk1);
                var _6D1 = _Hi1._Pi1(_zm1, _zk1);
                var _EM1 = _pl1._Qi1();
                var _FM1 = _6D1._Qi1();
                if (_EM1 * _FM1 == 0.0) {
                    continue
                }
                var _hv = _Gj1(_pl1, _6D1);
                var _Nt = _Fj1(_pl1, _6D1);
                var angle = _Fi1(_hv, _Nt);
                var _GM1 = _Hi1.Multiply((-1.0 / _EM1), _pl1._Ui1());
                var _HM1 = _Hi1.Multiply((1.0 / _FM1), _6D1._Ui1());
                var _IM1 = _Hi1._Mi1(_GM1);
                var _JM1 = _Hi1._Pi1(_GM1, _HM1);
                var _KM1 = _HM1;
                var _Tk1 = _BM1 * _Fj1(_IM1, _IM1) + _CM1 * _Fj1(_JM1, _JM1) + _DM1 * _Fj1(_KM1, _KM1);
                if (_Tk1 == 0.0) {
                    continue
                }
                _Tk1 = 1.0 / _Tk1;
                var __j1 = angle - this._pM1[_t5];
                while (__j1 > _Xh1) {
                    angle -= 2 * _Xh1;
                    __j1 = angle - this._pM1[_t5]
                }
                while (__j1 < -_Xh1) {
                    angle += 2.0 * _Xh1;
                    __j1 = angle - this._pM1[_t5]
                }
                var _wv1 = -this._sM1 * _Tk1 * __j1;
                _yk1._3C(_Hi1.Multiply((_BM1 * _wv1), _IM1));
                _zk1._3C(_Hi1.Multiply((_CM1 * _wv1), _JM1));
                _zm1._3C(_Hi1.Multiply((_DM1 * _wv1), _KM1))
            }
        }
    };
    var _LM1 = {
        _MM1: function (_ku1) {
            var _NM1 = [];
            var _t5;
            var _OM1;
            var _Nt;
            var _CO;
            var _gl1;
            for (_Nt = _ku1._py1(); _Nt; _Nt = _Nt._7w1()) {
                for (_CO = _Nt._4w1(); _CO; _CO = _CO._7w1()) {
                    _gl1 = _CO._rw1();
                    _CO._PM1 = _NM1.length;
                    _NM1.push(_gl1._Vi1())
                }
            }
            var _QM1 = [];
            for (_Nt = _ku1._py1(); _Nt; _Nt = _Nt._7w1()) {
                _Nt._RM1 = [];
                for (_CO = _Nt._4w1(); _CO; _CO = _CO._7w1()) {
                    _OM1 = _CO._Vi1();
                    _OM1['shape'] = _CO._PM1;
                    delete _CO._PM1;
                    _Nt._RM1.push(_QM1.length);
                    _QM1.push(_OM1)
                }
            }
            var _8z1 = [];
            for (_Nt = _ku1._py1(); _Nt; _Nt = _Nt._7w1()) {
                _OM1 = _Nt._Vi1();
                _OM1._QM1 = [];
                for (_t5 = 0; _t5 < _Nt._RM1.length; ++_t5) _OM1._QM1.push(_Nt._RM1[_t5]);
                delete _Nt._RM1;
                _Nt._SM1 = _8z1.length;
                _8z1.push(_OM1)
            }
            ;var _kH1 = [];
            var _Rt;
            for (_Rt = _ku1._5w1(), _t5 = 0; _Rt; _Rt = _Rt._7w1(), ++_t5) _Rt._kL1 = _t5;
            for (_Rt = _ku1._5w1(); _Rt; _Rt = _Rt._7w1()) {
                if (_Rt._Xk1() === _Xx1._lz1) continue;
                _OM1 = _Rt._Vi1();
                _OM1['bodyA'] = _Rt._cz1()._SM1;
                _OM1['bodyB'] = _Rt._dz1()._SM1;
                _kH1.push(_OM1)
            }
            for (_Rt = _ku1._5w1(); _Rt; _Rt = _Rt._7w1()) delete _Rt._kL1;
            for (_Nt = _ku1._py1(); _Nt; _Nt = _Nt._7w1()) delete _Nt._SM1;
            var _XB = {_NM1: _NM1, _QM1: _QM1, _8z1: _8z1, _kH1: _kH1};
            return _XB
        }, _TM1: function (_OM1, _ku1, clear) {
            var _UM1 = JSON.parse(_OM1);
            if (clear) {
                for (var _Nt = _ku1._py1(); _Nt;) {
                    var _yC = _Nt._7w1();
                    _ku1._Qx1(_Nt);
                    _Nt = _yC
                }
                for (var _Rt = _ku1._5w1(); _Rt;) {
                    var _yC = _Rt._7w1();
                    _ku1._Tx1(_Rt);
                    _Rt = _yC
                }
            }
            var _NM1 = [];
            for (var _t5 = 0; _t5 < _UM1._NM1.length; ++_t5) {
                var _VM1 = _UM1._NM1[_t5];
                var _gl1;
                switch (_VM1._L_) {
                    case _Vk1._9l1:
                        _gl1 = new _el1();
                        break;
                    case _Vk1._al1:
                        _gl1 = new _ql1();
                        break;
                    case _Vk1._cl1:
                        _gl1 = new _El1();
                        break;
                    case _Vk1._bl1:
                        _gl1 = new _Wl1();
                        break
                }
                _gl1._Xi1(_VM1);
                _NM1.push(_gl1)
            }
            var _QM1 = [];
            for (_t5 = 0; _t5 < _UM1._QM1.length; ++_t5) {
                var _WM1 = _UM1._QM1[_t5];
                var _d71 = new _Xu1();
                _d71._Xi1(_WM1);
                _d71._gl1 = _NM1[_WM1['shape']];
                _QM1.push(_d71)
            }
            var _8z1 = [];
            for (_t5 = 0; _t5 < _UM1._8z1.length; ++_t5) {
                var _XM1 = _UM1._8z1[_t5];
                var _Vu1 = new _7u1();
                _Vu1._Xi1(_XM1);
                var body = _ku1._T71(_Vu1);
                for (var x = 0; x < _XM1._QM1.length; ++x) body._Uu1(_QM1[_XM1._QM1[x]]);
                _8z1.push(body)
            }
            var _kH1 = [];
            var _YM1 = [];
            for (_t5 = 0; _t5 < _UM1._kH1.length; ++_t5) {
                var _ZM1 = _UM1._kH1[_t5];
                var __M1;
                switch (_ZM1.type) {
                    case _Xx1._sH1:
                        __M1 = new _KH1();
                        break;
                    case _Xx1._tH1:
                        __M1 = new _fJ1();
                        break;
                    case _Xx1._gz1:
                        __M1 = new _2J1();
                        break;
                    case _Xx1._hz1:
                        __M1 = new _FL1();
                        break;
                    case _Xx1._uH1:
                        __M1 = new _fK1();
                        break;
                    case _Xx1._vH1:
                        __M1 = new __J1();
                        break;
                    case _Xx1._wH1:
                        __M1 = new _XJ1();
                        break;
                    case _Xx1._xH1:
                        __M1 = new _OJ1();
                        break;
                    case _Xx1._yH1:
                        __M1 = new _5M1();
                        break;
                    case _Xx1._mz1:
                        __M1 = new _lL1();
                        break;
                    default :
                        throw new _aB('unknown joint')
                }
                __M1._Xi1(_ZM1, _8z1);
                if (_ZM1.type === _Xx1._uH1) {
                    _YM1.push([__M1, _kH1.length]);
                    _kH1.push(null)
                } else {
                    var _dw1 = _ku1._Wx1(__M1);
                    _kH1.push(_dw1)
                }
            }
            for (_t5 = 0; _t5 < _YM1.length; ++_t5) {
                _YM1[_t5][0]._gK1 = _kH1[_YM1[_t5][0]._gK1];
                _YM1[_t5][0]._hK1 = _kH1[_YM1[_t5][0]._hK1];
                _dw1 = _ku1._Wx1(_YM1[_t5][0]);
                _kH1[_YM1[_t5][1]] = _dw1;
            }
        }
    };
    var _0N1 = (function () {
            function _1N1(_aP) {
                return new _Hi1(_aP ? (_aP.x || 0) : 0, _aP ? (_aP.y || 0) : 0)
            }

            function _2N1(_aP) {
                var _3N1 = new Array(_aP.x.length);
                for (var _t5 = 0; _t5 < _3N1.length; ++_t5) _3N1[_t5] = new _Hi1(_aP.x[_t5], _aP.y[_t5]);
                return _3N1
            }

            function _4N1(_aP, _5N1) {
                var name = _aP.name;
                var _rz;
                if (typeof(_aP['int']) !== 'undefined') _rz = _aP['int']; else if (typeof(_aP['float']) !== 'undefined') _rz = _aP['float']; else if (typeof(_aP['string']) !== 'undefined') _rz = _aP['string']; else if (typeof(_aP['bool']) !== 'undefined') _rz = _aP['bool'];
                else if (typeof(_aP._6N1) !== 'undefined') _rz = _1N1(_aP._6N1); else throw new _aB("unknown property type");
                if (_5N1.hasOwnProperty(name)) throw new _aB("custom property possibly overwriting an existing one");
                _5N1[name] = _rz
            }

            function _7N1(_aP, body) {
                var _Vu1 = new _Xu1();
                _Vu1._5l1 = _aP._5l1 || 0;
                _Vu1._QG._gw1 = typeof(_aP['filter-categoryBits']) === 'undefined' ? 1 : _aP['filter-categoryBits'];
                _Vu1._QG._hw1 = typeof(_aP['filter-maskBits']) === 'undefined' ? 65535 : _aP['filter-maskBits'];
                _Vu1._QG._iw1 = typeof(_aP['filter-groupIndex']) === 'undefined' ? 0 : _aP['filter-groupIndex'];
                _Vu1._Sf = _aP._Sf || 0;
                _Vu1._jw1 = _aP._jw1 || 0;
                _Vu1._kw1 = _aP._sw1 || 0;
                var _gl1;
                if (typeof(_aP._nn1) !== 'undefined') {
                    _gl1 = new _el1();
                    _gl1._fl1 = _1N1(_aP._nn1._tk1);
                    _gl1._Wk1 = _aP._nn1._uk1 || 0
                } else if (typeof(_aP._on1) !== 'undefined') {
                    var vertices = _2N1(_aP._on1.vertices);
                    _gl1 = new _Wl1();
                    _gl1._rC(vertices, vertices.length)
                } else if (typeof(_aP._pn1) !== 'undefined') {
                    var vertices = _2N1(_aP._pn1.vertices);
                    _gl1 = new _El1();
                    _gl1._Gl1 = vertices.length;
                    _gl1._Fl1 = vertices;
                    if (_gl1._Kl1 = _aP._pn1._8N1) _gl1._Il1 = _1N1(_aP._pn1._Rl1);
                    if (_gl1._Jl1 = _aP._pn1._9N1) _gl1._Hl1 = _1N1(_aP._pn1._Pl1);
                } else throw new _aB("unknown shape type");
                _Vu1._gl1 = _gl1;
                var _d71 = body._Uu1(_Vu1);
                _d71.name = _aP.name;
                if (_aP._aN1) for (var _t5 = 0; _t5 < _aP._aN1.length; ++_t5) _4N1(_aP, _d71)
            }

            function _bN1(_aP, _ku1) {
                var _Vu1 = new _7u1();
                _Vu1.type = _aP.type || _8u1._9u1;
                _Vu1.angle = _aP.angle || 0;
                _Vu1._du1 = _aP._du1 || 0;
                _Vu1._bu1 = _aP._bu1 || 0;
                _Vu1._fu1 = _aP._fu1 || !1;
                _Vu1._hu1 = _aP._hu1 || !1;
                _Vu1._gu1 = _aP._gu1 || !1;
                _Vu1._cu1 = _aP._cu1 || !1;
                _Vu1._au1 = _1N1(_aP._au1);
                _Vu1._iu1 = typeof(_aP._iu1) !== 'undefined' ? _aP._iu1 : 1;
                var _cN1 = new _Sk1();
                _cN1._Tk1 = _aP['massData-mass'] || 0;
                _cN1._tk1 = _1N1(_aP['massData-center']);
                _cN1._Uk1 = _aP['massData-I'] || 0;
                _Vu1.position = _1N1(_aP.position);
                var body = _ku1._T71(_Vu1);
                body.name = _aP.name;
                body._Bv1(_cN1);
                if (_aP._d71) for (var _t5 = 0; _t5 < _aP._d71.length; ++_t5) _7N1(_aP._d71[_t5], body);
                if (_aP._aN1) for (_t5 = 0; _t5 < _aP._aN1.length; ++_t5) _4N1(_aP, body);
                return body
            }

            var _dN1 = {
                'revolute': _KH1,
                'distance': _2J1,
                'prismatic': _fJ1,
                'wheel': __J1,
                'rope': _5M1,
                'motor': _lL1,
                'weld': _XJ1,
                'friction': _OJ1
            };

            function _eN1(_aP, _ku1, _8z1) {
                if (!_dN1[_aP.type]) throw new _aB("unknown joint type");
                var _fN1 = new _dN1[_aP.type]();
                switch (_fN1.type) {
                    case _Xx1._sH1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._SH1 = _aP._SH1 || !1;
                        _fN1._TH1 = _aP._TH1 || !1;
                        _fN1._OH1 = _aP._gN1 || 0;
                        _fN1._QH1 = _aP._QH1 || 0;
                        _fN1._RH1 = _aP._RH1 || 0;
                        _fN1._NH1 = _aP._hN1 || 0;
                        _fN1._PH1 = _aP._iN1 || 0;
                        break;
                    case _Xx1._gz1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._LI1 = _aP._LI1 || 0;
                        _fN1._KI1 = _aP._jN1 || 0;
                        _fN1.length = _aP.length || 0;
                        break;
                    case _Xx1._tH1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._SH1 = _aP._SH1 || !1;
                        _fN1._TH1 = _aP._TH1 || !1;
                        _fN1._gJ1 = _1N1(_aP._gJ1);
                        _fN1._hJ1 = _aP._gN1 || 0;
                        _fN1._jJ1 = _aP._jJ1 || 0;
                        _fN1._RH1 = _aP._RH1 || 0;
                        _fN1._NH1 = _aP._hN1 || 0;
                        _fN1._iJ1 = _aP._iN1 || 0;
                        break;
                    case _Xx1._vH1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._TH1 = _aP._TH1 || !1;
                        _fN1._gJ1 = _1N1(_aP._gJ1);
                        _fN1._QH1 = _aP._QH1 || 0;
                        _fN1._RH1 = _aP._RH1 || 0;
                        _fN1._LI1 = _aP._kN1 || 0;
                        _fN1._KI1 = _aP._lN1 || 0;
                        break;
                    case _Xx1._yH1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._6M1 = _aP._6M1 || 0;
                        break;
                    case _Xx1._mz1:
                        _fN1._mL1 = _1N1(_aP._ML1);
                        _fN1._nL1 = _aP._hN1 || 0;
                        _fN1._JI1 = _aP._JI1 || 0;
                        _fN1._PJ1 = _aP._PJ1 || 0;
                        _fN1._oL1 = _aP._oL1 || 0;
                        break;
                    case _Xx1._wH1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._NH1 = _aP._hN1 || 0;
                        _fN1._LI1 = _aP._LI1 || 0;
                        _fN1._KI1 = _aP._KI1 || 0;
                        break;
                    case _Xx1._xH1:
                        _fN1._LH1 = _1N1(_aP._ML1);
                        _fN1._MH1 = _1N1(_aP._NL1);
                        _fN1._JI1 = _aP._JI1 || 0;
                        _fN1._PJ1 = _aP._PJ1 || 0;
                        break;
                    default :
                        throw new _aB("wat?")
                }
                _fN1._2y1 = _8z1[_aP._2y1 || 0];
                _fN1._3y1 = _8z1[_aP._3y1 || 0];
                _fN1._4y1 = _aP._4y1 || !1;
                var _dw1 = _ku1._Wx1(_fN1);
                _dw1.name = _aP.name;
                if (_aP._aN1) for (var _t5 = 0; _t5 < _aP._aN1.length;
                                   ++_t5) _4N1(_aP, _dw1);
                return _dw1
            }

            function _mN1() {
                this._ku1 = null;
                this._7x1 = 0;
                this._6x1 = 0;
                this._nN1 = 0;
                this._QM1 = {};
                this._8z1 = {};
                this._kH1 = {};
                Object.seal(this)
            }

            function _oN1(_aP, _ku1) {
                var _1M = new _mN1();
                _1M._ku1 = _ku1 = _ku1 || new _7v1(new _Hi1(0, 0));
                _1M._7x1 = _aP._7x1 || 0;
                _1M._6x1 = _aP._6x1 || 0;
                _1M._nN1 = _aP._nN1 || 0;
                if (_aP._Zf) _ku1._Cy1(_1N1(_aP._Zf));
                _ku1._qy1(_aP._eu1 || !1);
                _ku1._Ey1(_aP._pN1 || !1);
                _ku1._sy1(_aP._8x1 || !1);
                _ku1._uy1(_aP._qN1 || !1);
                _ku1._wy1(_aP._rN1 || !1);
                var _8z1 = [];
                var _sN1 = _aP.body;
                if (_sN1) {
                    for (var _t5 = 0;
                         _t5 < _sN1.length; ++_t5) {
                        var body = _bN1(_sN1[_t5], _ku1);
                        _8z1.push(body);
                        for (var _CO = body._4w1(); _CO; _CO = _CO._7w1()) {
                            if (!_1M._QM1[_CO.name]) _1M._QM1[_CO.name] = [];
                            _1M._QM1[_CO.name].push(_CO)
                        }
                        if (!_1M._8z1[body.name]) _1M._8z1[body.name] = [];
                        _1M._8z1[body.name].push(body)
                    }
                }
                var _kH1 = [];
                var _tN1 = _aP._dw1;
                if (_tN1) {
                    for (_t5 = 0; _t5 < _tN1.length; ++_t5) {
                        var _dw1 = _eN1(_tN1[_t5], _ku1, _8z1);
                        _kH1.push(_dw1);
                        if (!_1M._kH1[_dw1.name]) _1M._kH1[_dw1.name] = [];
                        _1M._kH1[_dw1.name].push(_dw1)
                    }
                }
                return _1M
            }

            var _XB = {_oN1: _oN1};
            return _XB
        }
    )();
    var _uN1 = [{"trimmed": "version", "name": "b2_version", "def": _wi1}, {
        "trimmed": "Vec2",
        "name": "b2Vec2",
        "def": _Hi1
    }, {"trimmed": "Vec3", "name": "b2Vec3", "def": _Zi1}, {
        "trimmed": "Mat22",
        "name": "b2Mat22",
        "def": _0j1
    }, {"trimmed": "Mat33", "name": "b2Mat33", "def": _cj1}, {
        "trimmed": "Rot",
        "name": "b2Rot",
        "def": _pj1
    }, {"trimmed": "Transform", "name": "b2Transform", "def": _tj1}, {
        "trimmed": "Sweep",
        "name": "b2Sweep",
        "def": _vj1
    }, {"trimmed": "Dot_v2_v2", "name": "b2Dot_v2_v2", "def": _Fj1}, {
        "trimmed": "Cross_v2_v2", "name": "b2Cross_v2_v2",
        "def": _Gj1
    }, {"trimmed": "Cross_v2_f", "name": "b2Cross_v2_f", "def": _Hj1}, {
        "trimmed": "Cross_f_v2",
        "name": "b2Cross_f_v2",
        "def": _Ij1
    }, {"trimmed": "Mul_m22_v2", "name": "b2Mul_m22_v2", "def": _Jj1}, {
        "trimmed": "MulT_m22_v2",
        "name": "b2MulT_m22_v2",
        "def": _Kj1
    }, {"trimmed": "Distance", "name": "b2Distance", "def": _Lj1}, {
        "trimmed": "DistanceSquared",
        "name": "b2DistanceSquared",
        "def": _Mj1
    }, {"trimmed": "Dot_v3_v3", "name": "b2Dot_v3_v3", "def": _gj1}, {
        "trimmed": "Cross_v3_v3",
        "name": "b2Cross_v3_v3",
        "def": _hj1
    }, {
        "trimmed": "Mul_m22_m22",
        "name": "b2Mul_m22_m22", "def": _Nj1
    }, {"trimmed": "MulT_m22_m22", "name": "b2MulT_m22_m22", "def": _Oj1}, {
        "trimmed": "Mul_m33_v3",
        "name": "b2Mul_m33_v3",
        "def": _Pj1
    }, {"trimmed": "Mul22_m33_v2", "name": "b2Mul22_m33_v2", "def": _Qj1}, {
        "trimmed": "Mul_r_r",
        "name": "b2Mul_r_r",
        "def": _Rj1
    }, {"trimmed": "MulT_r_r", "name": "b2MulT_r_r", "def": _Tj1}, {
        "trimmed": "Mul_r_v2",
        "name": "b2Mul_r_v2",
        "def": _Uj1
    }, {"trimmed": "MulT_r_v2", "name": "b2MulT_r_v2", "def": _Vj1}, {
        "trimmed": "Mul_t_v2",
        "name": "b2Mul_t_v2",
        "def": _Wj1
    }, {
        "trimmed": "Min_v2",
        "name": "b2Min_v2", "def": _7k1
    }, {"trimmed": "Max_v2", "name": "b2Max_v2", "def": _9k1}, {
        "trimmed": "Clamp",
        "name": "b2Clamp",
        "def": _ak1
    }, {"trimmed": "MulT_t_v2", "name": "b2MulT_t_v2", "def": _Yj1}, {
        "trimmed": "Mul_t_t",
        "name": "b2Mul_t_t",
        "def": _Zj1
    }, {"trimmed": "MulT_t_t", "name": "b2MulT_t_t", "def": _0k1}, {
        "trimmed": "Clamp_v2",
        "name": "b2Clamp_v2",
        "def": _bk1
    }, {"trimmed": "NextPowerOfTwo", "name": "b2NextPowerOfTwo", "def": _ck1}, {
        "trimmed": "Abs_v2",
        "name": "b2Abs_v2",
        "def": _4k1
    }, {
        "trimmed": "Abs_m22", "name": "b2Abs_m22",
        "def": _5k1
    }, {"trimmed": "IsPowerOfTwo", "name": "b2IsPowerOfTwo", "def": _dk1}, {
        "trimmed": "RandomFloat",
        "name": "b2RandomFloat",
        "def": _fk1
    }, {"trimmed": "Timer", "name": "b2Timer", "def": _Pk1}, {
        "trimmed": "Color",
        "name": "b2Color",
        "def": _ik1
    }, {"trimmed": "Draw", "name": "b2Draw", "def": _jk1}, {
        "trimmed": "ContactID",
        "name": "b2ContactID",
        "def": _No1
    }, {"trimmed": "ManifoldPoint", "name": "b2ManifoldPoint", "def": _So1}, {
        "trimmed": "Manifold",
        "name": "b2Manifold",
        "def": _Xo1
    }, {
        "trimmed": "WorldManifold", "name": "b2WorldManifold",
        "def": _8p1
    }, {"trimmed": "GetPointStates", "name": "b2GetPointStates", "def": _tp1}, {
        "trimmed": "ClipVertex",
        "name": "b2ClipVertex",
        "def": _yp1
    }, {"trimmed": "RayCastInput", "name": "b2RayCastInput", "def": _zp1}, {
        "trimmed": "RayCastOutput",
        "name": "b2RayCastOutput",
        "def": _Ap1
    }, {"trimmed": "AABB", "name": "b2AABB", "def": _Bp1}, {
        "trimmed": "CollideCircles",
        "name": "b2CollideCircles",
        "def": _Rp1
    }, {"trimmed": "CollidePolygonAndCircle", "name": "b2CollidePolygonAndCircle", "def": _Vp1}, {
        "trimmed": "FindMaxSeparation", "name": "b2FindMaxSeparation",
        "def": _6q1
    }, {"trimmed": "FindIncidentEdge", "name": "b2FindIncidentEdge", "def": _kq1}, {
        "trimmed": "CollidePolygons",
        "name": "b2CollidePolygons",
        "def": _uq1
    }, {"trimmed": "CollideEdgeAndCircle", "name": "b2CollideEdgeAndCircle", "def": __q1}, {
        "trimmed": "EPAxis",
        "name": "b2EPAxis",
        "def": _dr1
    }, {"trimmed": "TempPolygon", "name": "b2TempPolygon", "def": _hr1}, {
        "trimmed": "ReferenceFace",
        "name": "b2ReferenceFace",
        "def": _ir1
    }, {"trimmed": "EPCollider", "name": "b2EPCollider", "def": _lr1}, {
        "trimmed": "CollideEdgeAndPolygon", "name": "b2CollideEdgeAndPolygon",
        "def": _0s1
    }, {"trimmed": "ClipSegmentToLine", "name": "b2ClipSegmentToLine", "def": _Xq1}, {
        "trimmed": "TestShapeOverlap",
        "name": "b2TestShapeOverlap",
        "def": _9s1
    }, {"trimmed": "TestOverlap", "name": "b2TestOverlap", "def": _2n1}, {
        "trimmed": "Shape",
        "name": "b2Shape",
        "def": _Vk1
    }, {"trimmed": "MassData", "name": "b2MassData", "def": _Sk1}, {
        "trimmed": "CircleShape",
        "name": "b2CircleShape",
        "def": _el1
    }, {"trimmed": "EdgeShape", "name": "b2EdgeShape", "def": _ql1}, {
        "trimmed": "ChainShape",
        "name": "b2ChainShape",
        "def": _El1
    }, {
        "trimmed": "PolygonShape",
        "name": "b2PolygonShape", "def": _Wl1
    }, {"trimmed": "Pair", "name": "b2Pair", "def": _Am1}, {
        "trimmed": "PairLessThan",
        "name": "b2PairLessThan",
        "def": _Dm1
    }, {"trimmed": "BroadPhase", "name": "b2BroadPhase", "def": _Gm1}, {
        "trimmed": "DistanceProxy",
        "name": "b2DistanceProxy",
        "def": _mn1
    }, {"trimmed": "SimplexCache", "name": "b2SimplexCache", "def": _sn1}, {
        "trimmed": "DistanceInput",
        "name": "b2DistanceInput",
        "def": _wn1
    }, {"trimmed": "DistanceOutput", "name": "b2DistanceOutput", "def": _Cn1}, {
        "trimmed": "SimplexVertex", "name": "b2SimplexVertex",
        "def": _Gn1
    }, {"trimmed": "Simplex", "name": "b2Simplex", "def": _Jn1}, {
        "trimmed": "DistanceFunc",
        "name": "b2DistanceFunc",
        "def": _vo1
    }, {"trimmed": "TreeNode", "name": "b2TreeNode", "def": _ds1}, {
        "trimmed": "DynamicTree",
        "name": "b2DynamicTree",
        "def": _Im1
    }, {"trimmed": "TOIInput", "name": "b2TOIInput", "def": _jt1}, {
        "trimmed": "TOIOutput",
        "name": "b2TOIOutput",
        "def": _nt1
    }, {"trimmed": "SeparationFunction", "name": "b2SeparationFunction", "def": _st1}, {
        "trimmed": "TimeOfImpact",
        "name": "b2TimeOfImpact",
        "def": _Qt1
    }, {
        "trimmed": "BodyDef",
        "name": "b2BodyDef", "def": _7u1
    }, {"trimmed": "Body", "name": "b2Body", "def": _8u1}, {
        "trimmed": "Filter",
        "name": "b2Filter",
        "def": _fw1
    }, {"trimmed": "FixtureDef", "name": "b2FixtureDef", "def": _Xu1}, {
        "trimmed": "Fixture",
        "name": "b2Fixture",
        "def": _Zu1
    }, {"trimmed": "DestructionListener", "name": "b2DestructionListener", "def": _Hw1}, {
        "trimmed": "ContactFilter",
        "name": "b2ContactFilter",
        "def": _Mw1
    }, {"trimmed": "ContactImpulse", "name": "b2ContactImpulse", "def": _Qw1}, {
        "trimmed": "ContactListener",
        "name": "b2ContactListener",
        "def": _Tw1
    }
        , {"trimmed": "QueryCallback", "name": "b2QueryCallback", "def": _Zw1}, {
            "trimmed": "RayCastCallback",
            "name": "b2RayCastCallback",
            "def": _1x1
        }, {"trimmed": "TimeStep", "name": "b2TimeStep", "def": _2x1}, {
            "trimmed": "Position",
            "name": "b2Position",
            "def": _9x1
        }, {"trimmed": "Velocity", "name": "b2Velocity", "def": _ax1}, {
            "trimmed": "SolverData",
            "name": "b2SolverData",
            "def": _bx1
        }, {"trimmed": "World", "name": "b2World", "def": _7v1}, {
            "trimmed": "MixFriction",
            "name": "b2MixFriction",
            "def": _sE1
        }, {
            "trimmed": "MixRestitution", "name": "b2MixRestitution",
            "def": _vE1
        }, {"trimmed": "ContactRegister", "name": "b2ContactRegister", "def": _yE1}, {
            "trimmed": "ContactEdge",
            "name": "b2ContactEdge",
            "def": _AE1
        }, {"trimmed": "Contact", "name": "b2Contact", "def": _Hy1}, {
            "trimmed": "CircleContact",
            "name": "b2CircleContact",
            "def": _ZE1
        }, {"trimmed": "PolygonContact", "name": "b2PolygonContact", "def": _7F1}, {
            "trimmed": "ChainAndCircleContact",
            "name": "b2ChainAndCircleContact",
            "def": _2F1
        }, {"trimmed": "ChainAndPolygonContact", "name": "b2ChainAndPolygonContact", "def": _3F1}, {
            "trimmed": "EdgeAndCircleContact",
            "name": "b2EdgeAndCircleContact", "def": _4F1
        }, {
            "trimmed": "EdgeAndPolygonContact",
            "name": "b2EdgeAndPolygonContact",
            "def": _5F1
        }, {
            "trimmed": "PolygonAndCircleContact",
            "name": "b2PolygonAndCircleContact",
            "def": _6F1
        }, {"trimmed": "defaultFilter", "name": "b2_defaultFilter", "def": _hF1}, {
            "trimmed": "defaultListener",
            "name": "b2_defaultListener",
            "def": _iF1
        }, {
            "trimmed": "ContactManager",
            "name": "b2ContactManager",
            "def": _jx1
        }, {"trimmed": "VelocityConstraintPoint", "name": "b2VelocityConstraintPoint", "def": _nF1}, {
            "trimmed": "ContactPositionConstraint",
            "name": "b2ContactPositionConstraint", "def": _rF1
        }, {
            "trimmed": "ContactVelocityConstraint",
            "name": "b2ContactVelocityConstraint",
            "def": _zF1
        }, {
            "trimmed": "PositionSolverManifold",
            "name": "b2PositionSolverManifold",
            "def": _DF1
        }, {"trimmed": "ContactSolverDef", "name": "b2ContactSolverDef", "def": _GF1}, {
            "trimmed": "ContactSolver",
            "name": "b2ContactSolver",
            "def": _IF1
        }, {"trimmed": "Island", "name": "b2Island", "def": _zx1}, {
            "trimmed": "Jacobian",
            "name": "b2Jacobian",
            "def": _eH1
        }, {
            "trimmed": "JointEdge", "name": "b2JointEdge",
            "def": _hH1
        }, {"trimmed": "JointDef", "name": "b2JointDef", "def": _iH1}, {
            "trimmed": "Joint",
            "name": "b2Joint",
            "def": _Xx1
        }, {"trimmed": "RevoluteJointDef", "name": "b2RevoluteJointDef", "def": _KH1}, {
            "trimmed": "RevoluteJoint",
            "name": "b2RevoluteJoint",
            "def": _CH1
        }, {"trimmed": "MouseJointDef", "name": "b2MouseJointDef", "def": _II1}, {
            "trimmed": "MouseJoint",
            "name": "b2MouseJoint",
            "def": _AH1
        }, {"trimmed": "DistanceJointDef", "name": "b2DistanceJointDef", "def": _2J1}, {
            "trimmed": "DistanceJoint",
            "name": "b2DistanceJoint",
            "def": _zH1
        }
        , {"trimmed": "PrismaticJointDef", "name": "b2PrismaticJointDef", "def": _fJ1}, {
            "trimmed": "PrismaticJoint",
            "name": "b2PrismaticJoint",
            "def": _BH1
        }, {"trimmed": "FrictionJointDef", "name": "b2FrictionJointDef", "def": _OJ1}, {
            "trimmed": "FrictionJoint",
            "name": "b2FrictionJoint",
            "def": _HH1
        }, {"trimmed": "WeldJointDef", "name": "b2WeldJointDef", "def": _XJ1}, {
            "trimmed": "WeldJoint",
            "name": "b2WeldJoint",
            "def": _GH1
        }, {"trimmed": "WheelJointDef", "name": "b2WheelJointDef", "def": __J1}, {
            "trimmed": "WheelJoint", "name": "b2WheelJoint",
            "def": _FH1
        }, {"trimmed": "GearJointDef", "name": "b2GearJointDef", "def": _fK1}, {
            "trimmed": "GearJoint",
            "name": "b2GearJoint",
            "def": _EH1
        }, {"trimmed": "MotorJointDef", "name": "b2MotorJointDef", "def": _lL1}, {
            "trimmed": "MotorJoint",
            "name": "b2MotorJoint",
            "def": _JH1
        }, {"trimmed": "PulleyJointDef", "name": "b2PulleyJointDef", "def": _FL1}, {
            "trimmed": "PulleyJoint",
            "name": "b2PulleyJoint",
            "def": _DH1
        }, {"trimmed": "RopeJointDef", "name": "b2RopeJointDef", "def": _5M1}, {
            "trimmed": "RopeJoint",
            "name": "b2RopeJoint",
            "def": _IH1
        }, {
            "trimmed": "RopeDef",
            "name": "b2RopeDef", "def": _fM1
        }, {"trimmed": "Rope", "name": "b2Rope", "def": _jM1}, {
            "trimmed": "maxManifoldPoints",
            "name": "b2_maxManifoldPoints",
            "def": _Yh1
        }, {"trimmed": "maxPolygonVertices", "name": "b2_maxPolygonVertices", "def": _Zh1}, {
            "trimmed": "aabbExtension",
            "name": "b2_aabbExtension",
            "def": __h1
        }, {"trimmed": "aabbMultiplier", "name": "b2_aabbMultiplier", "def": _0i1}, {
            "trimmed": "linearSlop",
            "name": "b2_linearSlop",
            "def": _1i1
        }, {"trimmed": "angularSlop", "name": "b2_angularSlop", "def": _2i1}, {
            "trimmed": "polygonRadius",
            "name": "b2_polygonRadius", "def": _3i1
        }, {"trimmed": "maxSubSteps", "name": "b2_maxSubSteps", "def": _4i1}, {
            "trimmed": "maxTOIContacts",
            "name": "b2_maxTOIContacts",
            "def": _5i1
        }, {
            "trimmed": "velocityThreshold",
            "name": "b2_velocityThreshold",
            "def": _6i1
        }, {
            "trimmed": "maxLinearCorrection",
            "name": "b2_maxLinearCorrection",
            "def": _7i1
        }, {
            "trimmed": "maxAngularCorrection",
            "name": "b2_maxAngularCorrection",
            "def": _8i1
        }, {"trimmed": "maxTranslation", "name": "b2_maxTranslation", "def": _9i1}, {
            "trimmed": "maxTranslationSquared", "name": "b2_maxTranslationSquared",
            "def": _ai1
        }, {"trimmed": "maxRotation", "name": "b2_maxRotation", "def": _bi1}, {
            "trimmed": "maxRotationSquared",
            "name": "b2_maxRotationSquared",
            "def": _ci1
        }, {"trimmed": "baumgarte", "name": "b2_baumgarte", "def": _di1}, {
            "trimmed": "toiBaugarte",
            "name": "b2_toiBaugarte",
            "def": _ei1
        }, {"trimmed": "timeToSleep", "name": "b2_timeToSleep", "def": _fi1}, {
            "trimmed": "linearSleepTolerance",
            "name": "b2_linearSleepTolerance",
            "def": _gi1
        }, {"trimmed": "angularSleepTolerance", "name": "b2_angularSleepTolerance", "def": _hi1}, {
            "trimmed": "epsilon",
            "name": "b2_epsilon", "def": _Wh1
        }, {"trimmed": "JsonSerializer", "name": "b2JsonSerializer", "def": _LM1}, {
            "trimmed": "RUBELoader",
            "name": "b2RUBELoader",
            "def": _0N1
        }, {"trimmed": "Profiler", "name": "b2Profiler", "def": _Ah1}, {
            "trimmed": "ParticleDef",
            "name": "b2ParticleDef",
            "def": _PA1
        }, {"trimmed": "ParticleColor", "name": "b2ParticleColor", "def": _GA1}, {
            "trimmed": "ParticleGroupDef",
            "name": "b2ParticleGroupDef",
            "def": __A1
        }, {"trimmed": "ParticleGroup", "name": "b2ParticleGroup", "def": _3B1}, {
            "trimmed": "ParticleSystem", "name": "b2ParticleSystem",
            "def": _Bx1
        }];
    if (typeof(_vN1) !== "undefined" && typeof(window) !== "undefined") {
        for (var _t5 = 0; _t5 < _uN1.length; ++_t5) window[_uN1[_t5]["name"]] = _uN1[_t5]["def"]
    } else {
        var __Q = {};
        for (var _t5 = 0; _t5 < _uN1.length; ++_t5) __Q[_uN1[_t5]["trimmed"]] = _uN1[_t5]["def"];
        if (typeof(_wN1) !== "undefined") _wN1._xN1 = __Q; else window["b2"] = __Q
    }
})();

function _yN1() {
    var _zN1 = "#define MATRIX_VIEW 0\n" + "#define MATRIX_PROJECTION 1\n" + "#define MATRIX_WORLD 2\n" + "#define MATRIX_WORLD_VIEW 3\n" + "#define MATRIX_WORLD_VIEW_PROJECTION 4\n" + "#define MATRICES_MAX 5\n" + "#define FOG_SETTINGS 0\n" + "#define FOG_COLOUR 1\n" + "\n" + "uniform mat4 matrices[MATRICES_MAX];\n" + "uniform vec4 fogParameters[2];\n" + "\n" + "attribute vec3 vertex;\n" + "attribute vec4 color;\n" + "attribute vec2 UV;\n" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "float CalcFogFactor(vec4 pos)\n" + "{\n" + "	vec4 viewpos = matrices[MATRIX_WORLD_VIEW] * pos;\n" + "   vec4 fogParams = fogParameters[FOG_SETTINGS];\n" + "	return (1.0 - ((fogParams.z - viewpos.z) * fogParams.y)) * fogParams.x;\n" + "}\n" + "\n" + "void main(void)\n" + "{\n" + "    fcolor = color;\n" + "    texc   = UV;\n" + "    vec4 pos = vec4(vertex.xyz, 1);\n" + "    fogFactor = CalcFogFactor(pos);\n" + "    fogColor = vec4(fogParameters[FOG_COLOUR].xyz, 1);\n" + "    gl_Position = matrices[MATRIX_WORLD_VIEW_PROJECTION] * pos;\n" + "    gl_PointSize = 1.0;\n" + "}";
    return _zN1
}

function _AN1() {
    var _BN1 = "precision mediump float;\n" + "uniform sampler2D pTexure;\n" + "uniform bool alphaTestEnabled;\n" + "uniform float alphaRefValue;" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "void DoAlphaTest(vec4 SrcColour)\n" + "{\n" + "    if (alphaTestEnabled)\n" + "    {\n" + "        if (SrcColour.a <= alphaRefValue)\n" + "        {\n" + "	        discard;\n" + "        }\n" + "    }\n" + "}\n" + "\n" + "void main(void)\n" + "{\n" + "    vec4 color   = texture2D(pTexure, texc).rgba * fcolor.rgba;\n" + "    DoAlphaTest(color);\n" + "    gl_FragColor = vec4(mix(color.rgb, fogColor.rgb, fogFactor), color.a);\n" + "}\n";
    return _BN1
}

function _CN1() {
    var _DN1 = "#define LIGHTS_MAX 8\n" + "#define MATRIX_VIEW 0\n" + "#define MATRIX_PROJECTION 1\n" + "#define MATRIX_WORLD 2\n" + "#define MATRIX_WORLD_VIEW 3\n" + "#define MATRIX_WORLD_VIEW_PROJECTION 4\n" + "#define MATRICES_MAX 5\n" + "#define FOG_SETTINGS 0\n" + "#define FOG_COLOUR 1\n" + "\n" + "uniform mat4 matrices[MATRICES_MAX];\n" + "uniform vec4 fogParameters[2];\n" + "\n" + "uniform vec4 dirlightdir[LIGHTS_MAX];\n" + "uniform vec4 pointlightpos[LIGHTS_MAX];\n" + "uniform vec4 lightcol[LIGHTS_MAX];\n" + "uniform vec4 ambientcol;\n" + "\n" + "attribute vec3 vertex;\n" + "attribute vec3 normal;\n" + "attribute vec4 color;\n" + "attribute vec2 UV;\n" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "float CalcFogFactor(vec4 pos)\n" + "{\n" + "	vec4 viewpos = matrices[MATRIX_WORLD_VIEW] * pos;\n" + "   vec4 fogParams = fogParameters[FOG_SETTINGS];\n" + "	return (1.0 - ((fogParams.z - viewpos.z) * fogParams.y)) * fogParams.x;\n" + "}\n" + "\n" + "vec4 DoDirLight(vec3 ws_normal, vec4 dir, vec4 diffusecol)\n" + "{\n" + "    float dotresult = dot(ws_normal, dir.xyz);\n" + "    dotresult = max(0.0, dotresult);\n" + "    return dotresult * diffusecol;\n" + "}\n" + "\n" + "vec4 DoPointLight(vec3 ws_pos, vec3 ws_normal, vec4 posrange, vec4 diffusecol)\n" + "{\n" + "	float atten = 0.0;\n" + "\n" + "	vec3 diffvec = ws_pos - posrange.xyz;\n" + "	float veclen = length(diffvec);\n" + "	if (veclen <= posrange.w)\n" + "	{\n" + "        atten = 1.0 / (1.0 + (veclen / posrange.w));\n" + "	}\n" + "\n" + "	diffvec /= veclen;\n" + "	float dotresult = dot(ws_normal, diffvec);\n" + "	dotresult = max(0.0, dotresult);\n" + "\n" + "	return (diffusecol * dotresult * atten);\n" + "}\n" + "\n" + "vec4 DoLighting(vec4 vertexcolour, vec4 objectspacepos, vec3 objectspacenormal)\n" + "{\n" + "    vec3 ws_normal;\n" + "    vec3 ws_pos;\n" + "    vec4 objectspacenormal4 = vec4(objectspacenormal, 0.0);\n" + "\n" + "    ws_normal = (matrices[MATRIX_WORLD] * objectspacenormal4).xyz;\n" + "    ws_normal = -normalize(ws_normal);\n" + "    ws_pos = (matrices[MATRIX_WORLD] * objectspacepos).xyz;\n" + "\n" + "    vec4 accumcol = vec4(0.0, 0.0, 0.0, 0.0);\n" + "    for(int i = 0; i < LIGHTS_MAX; i++)\n" + "    {\n" + "    	accumcol += DoDirLight(ws_normal, dirlightdir[i], lightcol[i]);\n" + "    }\n" + "    for(int i = 0; i < LIGHTS_MAX; i++)\n" + "    {\n" + "    	accumcol += DoPointLight(ws_pos, ws_normal, pointlightpos[i], lightcol[i]);\n" + "    }\n" + "    accumcol *= vertexcolour;\n" + "    accumcol += ambientcol;\n" + "    return min(vec4(1.0, 1.0, 1.0, 1.0), accumcol);\n" + "}\n" + "\n" + "void main(void)\n" + "{\n" + "    vec4 pos = vec4(vertex.xyz, 1);\n" + "    vec4 lcolor = DoLighting(color, pos, normal);\n" + "    fcolor = vec4(lcolor.xyz, 1);\n" + "    fogFactor = CalcFogFactor(pos);\n" + "    fogColor = vec4(fogParameters[FOG_COLOUR].xyz, 1);\n" + "    texc = UV;\n" + "    gl_Position = matrices[MATRIX_WORLD_VIEW_PROJECTION] * pos;\n" + "    gl_PointSize = 1.0;\n" + "}";
    return _DN1
}

function _EN1() {
    var _BN1 = "precision mediump float;\n" + "uniform sampler2D pTexure;\n" + "uniform bool alphaTestEnabled;\n" + "uniform float alphaRefValue;" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "void DoAlphaTest(vec4 SrcColour)\n" + "{\n" + "    if (alphaTestEnabled)\n" + "    {\n" + "        if (SrcColour.a <= alphaRefValue)\n" + "        {\n" + "	        discard;\n" + "        }\n" + "    }\n" + "}\n" + "\n" + "\n" + "void main(void)\n" + "{\n" + "    vec4 color   = texture2D( pTexure, texc ).rgba * fcolor.rgba;\n" + "    DoAlphaTest(color);\n" + "    gl_FragColor = vec4(mix(color.rgb, fogColor.rgb, fogFactor), color.a);\n" + "}\n";
    return _BN1
}

function _FN1(_GN1, _if1) {
    var _HN1 = null;
    var _IN1 = null, _JN1 = null, _KN1 = null;
    var _LN1 = 0;
    var _MN1, _NN1;
    var _ON1, _PN1, _QN1 = [];
    var _RN1, _SN1, _TN1, _UN1;
    var _VN1, _WN1;
    Object.defineProperties(this, {
        _XN1: {
            get: function () {
                return _HN1
            }
        }, _YN1: {
            get: function () {
                return (_HN1 !== null && _HN1 !== undefined)
            }
        }, _TL: {
            get: function () {
                return _KN1
            }
        }, _iw: {
            get: function () {
                return _ON1
            }
        }, _Yx: {
            get: function () {
                return _PN1
            }
        }, _ZN1: {
            get: function () {
                return _MN1
            }
        }, __N1: {
            get: function () {
                return _NN1
            }
        }, _0O1: {
            get: function () {
                return _RN1
            }
        }, _1O1: {
            get: function () {
                return _SN1
            }
        }, _2O1: {
            get: function () {
                return _TN1
            }, set: function (_rz) {
                _TN1 = _rz
            }
        }, _3O1: {
            get: function () {
                return _UN1
            }, set: function (_rz) {
                _UN1 = _rz
            }
        }, _FM: {
            get: function () {
                return _VN1
            }
        }
    });
    (function () {
        _HN1 = _4O1(_GN1, _if1);
        if (_HN1) {
            _5O1(_HN1);
            var _6O1 = _HN1.getParameter(_HN1.MAX_TEXTURE_IMAGE_UNITS);
            _VN1 = (_6O1 < _gw._7O1) ? _6O1 : _gw._7O1;
            _WN1 = _HN1.getParameter(_HN1.MAX_TEXTURE_SIZE);
            _JN1 = new _8O1(_if1._9O1);
            _KN1 = new _aO1(_VN1, 32, _JN1, _if1._9O1);
            _IN1 = new _bO1(_JN1, _KN1);
            _cO1();
            _dO1();
            _eO1();
            _JN1.__J(_MN1);
        }
    })();

    function _5O1(_fO1) {
        _8O1.prototype._fO1 = _fO1;
        _bO1.prototype._fO1 = _fO1;
        _Hx.prototype._fO1 = _fO1;
        _gO1.prototype._fO1 = _fO1;
        _hO1.prototype._fO1 = _fO1;
        _iO1.prototype._fO1 = _fO1
    };

    function _jO1() {
        var userAgent = navigator.userAgent.toString().toLowerCase();
        var _kO1 = userAgent.indexOf("trident/");
        if (_kO1 >= 0) {
            var version = parseFloat(userAgent.slice(_kO1 + "trident/".length));
            if (version == 7) {
                return true
            }
        }
        return false
    };

    function _4O1(_GN1, _if1) {
        if (_jO1()) return null;
        var _lO1 = null;
        var _mO1 = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"];
        {
            for (var _t5 = 0;
                 _t5 < _mO1.length; _t5++) {
                try {
                    var _nO1 = {
                        alpha: true,
                        stencil: _if1._oO1,
                        antialias: false,
                        premultipliedAlpha: false,
                        preserveDrawingBuffer: _if1._pO1
                    };
                    _lO1 = _GN1.getContext(_mO1[_t5], _nO1);
                    if (_lO1) {
                        break
                    }
                } catch (_PQ) {
                    return null
                }
            }
        }
        if (_lO1) {
            _RN1 = _GN1.width;
            _SN1 = _GN1.height;
            _TN1 = _RN1;
            _UN1 = _SN1
        }
        return _lO1
    };

    function _cO1() {
        var _qO1 = new _hO1(), _rO1 = new _hO1();
        _qO1._sO1();
        _qO1._tO1();
        _qO1._uO1();
        _rO1._sO1();
        _rO1._tO1();
        _rO1._uO1();
        _rO1._vO1();
        _ON1 = _QN1.push(_qO1) - 1;
        _PN1 = _QN1.push(_rO1) - 1;
        _IN1._wO1(_ON1);
        _IN1._wO1(_PN1);
        _qO1._xO1 = _rO1._xO1 = true
    };this._yO1 = function (_zO1) {
        for (var _t5 in _QN1) {
            if (!_QN1.hasOwnProperty(_t5)) continue;
            if (_QN1[_t5]._Yi1(_zO1)) {
                return _t5
            }
        }
        var _AO1 = _QN1.push(_zO1) - 1;
        _IN1._wO1(_AO1);
        return _AO1
    };
    this._Jx = function (_Cy) {
        return _QN1[_Cy]
    };

    function _BO1(_CO1) {
        while (((_CO1 & 0x1) == 0) && (_CO1 > 1)) {
            _CO1 >>= 1
        }
        return (_CO1 == 1)
    };this._DO1 = function () {
        return _WN1
    };
    this._EO1 = function (_FO1, _GO1, _HO1, _IO1) {
        _IN1._kd1();
        _JN1._EO1(_FO1, _GO1, _HO1, _IO1)
    };

    function _JO1(_KO1, type, source) {
        var _ZN = _HN1.createShader((type == 'vertex') ? _HN1.VERTEX_SHADER : _HN1.FRAGMENT_SHADER);
        _HN1.shaderSource(_ZN, source);
        _HN1.compileShader(_ZN);
        if (!_HN1.getShaderParameter(_ZN, _HN1.COMPILE_STATUS)) {
            alert("Could not compile " + type + " shader:\n\n" + _HN1.getShaderInfoLog(_ZN));
            return
        }
        _HN1.attachShader(_KO1, _ZN)
    };

    function _dO1() {
        var _DN1 = _yN1();
        var _BN1 = _AN1();
        var _LO1 = _HN1.createProgram();
        var error = _HN1.getError();
        _JO1(_LO1, "vertex", _DN1);
        _JO1(_LO1, "fragment", _BN1);
        _HN1.linkProgram(_LO1);
        error = _HN1.getError();
        if (!_HN1.getProgramParameter(_LO1, _HN1.LINK_STATUS)) {
            alert("Could not initialise shaders\n\n");
            return false
        }
        _HN1.useProgram(_LO1);
        _MN1 = _LO1;
        _LO1._MO1 = _HN1.getAttribLocation(_LO1, "vertex");
        _LO1._NO1 = _HN1.getAttribLocation(_LO1, "normal");
        _LO1._OO1 = _HN1.getAttribLocation(_LO1, "UV");
        _LO1._PO1 = _HN1.getAttribLocation(_LO1, "color");
        _LO1._QO1 = _HN1.getUniformLocation(_LO1, "pTexure");
        _LO1._RO1 = _HN1.getUniformLocation(_LO1, "matrices");
        _LO1._SO1 = _HN1.getUniformLocation(_LO1, "fogParameters");
        _LO1._TO1 = _HN1.getUniformLocation(_LO1, "alphaTestEnabled");
        _LO1._UO1 = _HN1.getUniformLocation(_LO1, "alphaRefValue");
        _LO1._VO1 = [];
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "vertex"));
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "color"));
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "UV"));
        return true
    };

    function _eO1() {
        var _zN1 = _CN1();
        var _BN1 = _EN1();
        var _LO1 = _HN1.createProgram();
        var error = _HN1.getError();
        _JO1(_LO1, "vertex", _zN1);
        _JO1(_LO1, "fragment", _BN1);
        _HN1.linkProgram(_LO1);
        error = _HN1.getError();
        if (!_HN1.getProgramParameter(_LO1, _HN1.LINK_STATUS)) {
            alert("Could not initialise 3D shader\n\n");
            return false
        }
        _HN1.useProgram(_LO1);
        _LO1._WO1 = _HN1.getUniformLocation(_LO1, "ViewMatrix");
        _NN1 = _LO1;
        _LO1._MO1 = _HN1.getAttribLocation(_LO1, "vertex");
        _LO1._NO1 = _HN1.getAttribLocation(_LO1, "normal");
        _LO1._OO1 = _HN1.getAttribLocation(_LO1, "UV");
        _LO1._PO1 = _HN1.getAttribLocation(_LO1, "color");
        _LO1._QO1 = _HN1.getUniformLocation(_LO1, "pTexure");
        _LO1._RO1 = _HN1.getUniformLocation(_LO1, "matrices");
        _LO1._XO1 = _HN1.getUniformLocation(_LO1, "dirlightdir");
        _LO1._YO1 = _HN1.getUniformLocation(_LO1, "pointlightpos");
        _LO1._ZO1 = _HN1.getUniformLocation(_LO1,
            "lightcol");
        _LO1.__O1 = _HN1.getUniformLocation(_LO1, "ambientcol");
        _LO1._SO1 = _HN1.getUniformLocation(_LO1, "fogParameters");
        _LO1._TO1 = _HN1.getUniformLocation(_LO1, "alphaTestEnabled");
        _LO1._UO1 = _HN1.getUniformLocation(_LO1, "alphaRefValue");
        _LO1._VO1 = [];
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "vertex"));
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "normal"));
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "color"));
        _LO1._VO1.push(_HN1.getAttribLocation(_LO1, "UV"));
        return true
    };this._0P1 = function (_1P1, _2P1,
                            _3P1) {
        if (_1P1 == "None" || _2P1 == "None") {
            var _4P1 = {_5P1: null, _6P1: null};
            return _4P1
        }
        var _LO1 = _HN1.createProgram();
        var error = _HN1.getError();
        _JO1(_LO1, "vertex", _1P1);
        _JO1(_LO1, "fragment", _2P1);
        _HN1.linkProgram(_LO1);
        error = _HN1.getError();
        if (!_HN1.getProgramParameter(_LO1, _HN1.LINK_STATUS)) {
            var _4P1 = {_5P1: null, _6P1: null};
            return _4P1
        }
        _HN1.useProgram(_LO1);
        _LO1._RO1 = _HN1.getUniformLocation(_LO1, "gm_Matrices");
        _LO1._XO1 = _HN1.getUniformLocation(_LO1, "gm_Lights_Direction");
        _LO1._YO1 = _HN1.getUniformLocation(_LO1,
            "gm_Lights_PosRange");
        _LO1._ZO1 = _HN1.getUniformLocation(_LO1, "gm_Lights_Colour");
        _LO1.__O1 = _HN1.getUniformLocation(_LO1, "gm_AmbientColour");
        _LO1._MO1 = _HN1.getAttribLocation(_LO1, "in_Position");
        _LO1._NO1 = _HN1.getAttribLocation(_LO1, "in_Normal");
        _LO1._OO1 = _HN1.getAttribLocation(_LO1, "in_TextureCoord");
        _LO1._PO1 = _HN1.getAttribLocation(_LO1, "in_Colour");
        _LO1._VO1 = [];
        for (var _7P1 = 0; _7P1 < _3P1.length; _7P1++) {
            _LO1._VO1.push(_HN1.getAttribLocation(_LO1, _3P1[_7P1]))
        }
        var _8P1 = "gm_BaseTexture";
        var _EM = [_8P1];
        var _9P1 = 0;
        var _aP1 = [];
        var _bP1 = _HN1.getUniformLocation(_LO1, _8P1);
        _HN1.uniform1iv(_bP1, [_9P1++]);
        _LO1._QO1 = _bP1;
        _LO1._cP1 = {_dP1: []};
        for (var _sv = 0, _eP1 = _HN1.getProgramParameter(_LO1, _HN1.ACTIVE_UNIFORMS); _sv < _eP1; _sv++) {
            var _fP1 = _HN1.getActiveUniform(_LO1, _sv), _gP1 = _fP1["name"];
            if (_fP1["size"] > 1) {
                var _tE = _gP1.indexOf('[');
                if (_tE > 0) {
                    _gP1 = _gP1.substring(0, _tE)
                }
            }
            if ((_fP1["type"] == _HN1.SAMPLER_2D) || (_fP1["type"] == _HN1.SAMPLER_CUBE)) {
                if (_gP1 != _8P1) {
                    _EM[_9P1] = _gP1;
                    var _7P1 = _HN1.getUniformLocation(_LO1, _gP1);
                    _HN1.uniform1iv(_7P1,
                        [_9P1++])
                }
            }
            _LO1._cP1._dP1[_sv] = _gP1;
            _LO1._cP1[_gP1] = {index: _sv, location: _HN1.getUniformLocation(_LO1, _gP1), _hP1: _fP1}
        }
        _4P1 = {_5P1: _LO1, _6P1: _EM};
        return _4P1
    };
    this._iP1 = function () {
        _LN1++
    };
    this._jP1 = function () {
        _IN1._kd1();
        _JN1._fs++;
        _JN1._kP1();
        _JN1._xS();
        _HN1.clearColor(1, 1, 1, 1);
        _HN1.colorMask(false, false, false, true);
        _HN1.clear(_HN1.COLOR_BUFFER_BIT);
        _HN1.colorMask(true, true, true, true)
    };
    this._lP1 = function () {
        _IN1._kd1();
        _JN1._kP1()
    };
    this._mP1 = function (_LB, _jM) {
        _KN1._UL(_gw._9M, _LB);
        _KN1._UL(_gw._bM,
            _jM);
        _KN1._UL(_gw._dM, _LB);
        _KN1._UL(_gw._eM, _jM)
    };
    this._nP1 = function (_XJ) {
        _oP1._UL(_gw._VL, _XJ)
    };
    this._LJ = function (_pP1) {
        _KN1._UL(_gw._WL, _pP1)
    };
    this._PJ = function (_pP1) {
        _KN1._UL(_gw._7M, _pP1 ? _gw._qP1 : _gw._rP1)
    };
    this._sP1 = function (_tP1) {
    };
    this._NJ = function (_pP1) {
        _KN1._UL(_gw._ZL, _pP1)
    };
    this._WJ = function (_uP1, _vP1, _wP1, _xP1) {
        var _xM = {_nE: _uP1, _oE: _vP1, _pE: _wP1, alpha: _xP1};
        _KN1._UL(_gw._yM, _xM)
    };
    this._FK = function (_Os, _yP1, _zP1, _AP1) {
        _IN1._kd1();
        _JN1._FK(_Os, _yP1, _zP1, _AP1)
    };
    this._HK = function (_Os, _pP1,
                         _BP1) {
        _IN1._kd1();
        _JN1._HK(_Os, _pP1, _BP1)
    };
    this._JK = function (_BP1) {
        _IN1._kd1();
        _JN1._CP1(_BP1)
    };
    this._LK = function (_DP1) {
        var _EP1 = _DP1[0];
        var end = _DP1[2];
        var start = end;
        if (_DP1[1] != 0.0) start = end - (1.0 / _DP1[1]);
        var _Ub = (_DP1[4] * 255) | ((_DP1[5] * 255) << 8) | ((_DP1[6] * 255) << 16) | ((_DP1[7] * 255) << 24);
        _KN1._UL(_gw._2M, _EP1);
        _KN1._UL(_gw._4M, start);
        _KN1._UL(_gw._5M, end);
        _KN1._UL(_gw._3M, _Ub)
    };
    this._FP1 = function (_XJ, _GP1) {
        _KN1._UL(_gw._zM, _XJ);
        _KN1._UL(_gw._BM, (_GP1 * 255) | 0)
    };
    this._HP1 = function (_IP1, _JP1) {
        if (_JP1) {
            _KN1._GM(_IP1,
                _gw._NM, _gw._OM);
            _KN1._GM(_IP1, _gw._PM, _gw._OM)
        } else {
            _KN1._GM(_IP1, _gw._NM, _gw._QM);
            _KN1._GM(_IP1, _gw._PM, _gw._QM)
        }
    };
    this._KP1 = function (_IP1, _LP1) {
        _KN1._GM(_IP1, _gw._HM, _LP1);
        _KN1._GM(_IP1, _gw._JM, _LP1)
    };
    this._MP1 = function () {
        return _VN1
    };
    this._NP1 = function (_XJ) {
        _KN1._UL(_gw._OP1, _XJ)
    };
    this._PP1 = function (_AO) {
        _KN1._UL(_gw._QP1, _AO)
    };
    this._RP1 = function (_SP1) {
        _KN1._UL(_gw._TP1, _SP1)
    };
    this._UP1 = function (_VP1) {
        _KN1._UL(_gw._WP1, _VP1)
    };
    this.__J = function (_XP1) {
        _IN1._kd1();
        _JN1.__J(_XP1);
    };
    this._YP1 = function (_XP1,
                          _ZP1) {
        var __P1 = _XP1._cP1[_ZP1];
        if (__P1) {
            return __P1.index
        }
        return -1
    };
    this._0Q1 = function (_C91, _1Q1) {
        if (_C91 != -1) {
            _IN1._kd1();
            _JN1._0Q1(_C91, _1Q1)
        }
    };
    this._2Q1 = function (_C91, _1Q1) {
        if (_C91 != -1) {
            _IN1._kd1();
            _JN1._2Q1(_C91, _1Q1)
        }
    };
    this._3Q1 = function (_C91, _1Q1) {
        if (_C91 != -1) {
            _IN1._kd1();
            _JN1._3Q1(_C91, _1Q1)
        }
    };
    this._4Q1 = function (_C91, _1Q1) {
        if (_C91 != -1) {
            _IN1._kd1();
            _JN1._4Q1(_C91, _1Q1)
        }
    };
    this._5Q1 = function (_C91, _1Q1) {
        if (_C91 != -1) {
            _IN1._kd1();
            _JN1._5Q1(_C91, _1Q1)
        }
    };
    this._6Q1 = function (_zP) {
        _IN1._kd1();
        _JN1._6Q1(_zP)
    }
    ;this._kd1 = function () {
        _IN1._kd1()
    };
    this._7Q1 = function (_8z, _Ps, _Qs, _HB, _IB, _GN1) {
        _JN1._7Q1(_8z, _Ps, _Qs, _HB, _IB, _GN1)
    };
    this._8Q1 = function (_IP1, _8z) {
        _gw._9Q1(_8z instanceof _gO1, "Texture is not a yyGLTexture", _gw._aQ1);
        _IN1._kd1();
        _JN1._8Q1(_IP1, _8z)
    };
    this._6K = function (_OF) {
        _IN1._kd1();
        _JN1._bQ1(_OF)
    };
    this._dK = function (_OF) {
        _IN1._kd1();
        _JN1._cQ1(_OF)
    };
    this._dQ1 = function (_OF) {
        _IN1._kd1();
        _JN1._eQ1(_OF)
    };
    this._fQ1 = function (_gQ1) {
        var _XB = new _gO1(undefined, _gQ1.width, _gQ1.height, _BO1(_gQ1.width) && _BO1(_gQ1.height),
            _gQ1);
        return _XB
    };
    this._hQ1 = function (_iQ1) {
        var _jQ1 = _HN1.getParameter(_HN1.TEXTURE_BINDING_2D);
        var _Xx = _HN1.createTexture();
        _HN1.bindTexture(_HN1.TEXTURE_2D, _Xx);
        if (_iQ1.Image instanceof Uint8Array) {
            _HN1.texImage2D(_HN1.TEXTURE_2D, 0, _HN1.RGBA, _iQ1._kQ1, _iQ1._lQ1, 0, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _iQ1.Image)
        } else {
            _HN1.texImage2D(_HN1.TEXTURE_2D, 0, _HN1.RGBA, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _iQ1.Image)
        }
        _iQ1._mQ1 = _Xx;
        _iQ1._nQ1._oQ1(_HN1.TEXTURE_2D);
        _HN1.bindTexture(_HN1.TEXTURE_2D, _jQ1)
    };
    this._pQ1 = function (_Nx,
                          _w01, _qQ1, _2y) {
        var _AR = 0;
        if (_Nx) {
            _AR |= _HN1.COLOR_BUFFER_BIT
        }
        if (_w01) {
            _AR |= _HN1.DEPTH_BUFFER_BIT
        }
        _JN1._pQ1(_AR, _2y)
    };
    this._rQ1 = function (_hf1) {
        _IN1._kd1();
        _JN1._rQ1(_hf1)
    };

    function _sQ1(_tQ1, _HB, _IB) {
        if ((_HB == 0) || (_IB == 0)) {
            return
        }
        var _uQ1 = _tQ1[(_IB - 1) * _HB] & 0xffffff;
        for (_t5 = 0; _t5 < (_HB * _IB); _t5++) {
            if ((_tQ1[_t5] & 0xffffff) == _uQ1) {
                _tQ1[_t5] = _tQ1[_t5] & 0xffffff
            }
        }
    };

    function _vQ1(_9y) {
        var max = _WN1;
        var _l5 = 1;
        while (_l5 <= max) {
            if (_9y <= _l5) return _l5;
            _l5 = _l5 << 1
        }
        return max
    };this._wQ1 = function (_gQ1, _Ps, _Qs, _HB, _IB, _tD, _uD,
                            _xQ1) {
        this._kd1();
        var _yQ1 = new Uint8Array(_HB * _IB * 4);
        _HN1.readPixels(_Ps, _UN1 - (_Qs + _IB), _HB, _IB, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _yQ1);
        var _zQ1;
        if (_xQ1) {
            var _AQ1 = new ArrayBuffer(_HB * _IB * 4);
            _zQ1 = new Uint8Array(_AQ1);
            for (var _uv = 0; _uv < _IB; _uv++) {
                var _BQ1 = _yQ1.subarray(_uv * _HB * 4, (_uv + 1) * _HB * 4);
                var _CQ1 = _zQ1.subarray((_IB - 1 - _uv) * _HB * 4, (_IB - _uv) * _HB * 4);
                _CQ1.set(_BQ1)
            }
            if (_tD) {
                _sQ1(new Int32Array(_AQ1), _HB, _IB)
            }
        } else {
            _zQ1 = _yQ1
        }
        var _v5 = _vQ1(_HB);
        var _w5 = _vQ1(_IB);
        var _jQ1 = _HN1.getParameter(_HN1.TEXTURE_BINDING_2D);
        var _XB = new _gO1(undefined,
            _v5, _w5, (_v5 == _HB) && (_w5 == _IB), _zQ1);
        _gQ1.width = _v5;
        _gQ1.height = _w5;
        _HN1.bindTexture(_HN1.TEXTURE_2D, _jQ1);
        _JN1._xS();
        return _XB
    };
    this._DQ1 = function (_gQ1, _EQ1, _Ps, _Qs, _HB, _IB, _tD, _uD) {
        this._lP1();
        var _FQ1 = _HN1.getParameter(_HN1.FRAMEBUFFER_BINDING);
        var _AQ1 = new ArrayBuffer(_HB * _IB * 4);
        var _zQ1 = new Uint8Array(_AQ1);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _EQ1);
        _HN1.readPixels(_Ps, _Qs, _HB, _IB, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _zQ1);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _FQ1);
        if (_tD) {
            _sQ1(new Int32Array(_AQ1), _HB,
                _IB)
        }
        var _v5 = _vQ1(_HB);
        var _w5 = _vQ1(_IB);
        var _jQ1 = _HN1.getParameter(_HN1.TEXTURE_BINDING_2D);
        var _GQ1 = new ArrayBuffer(_v5 * _w5 * 4);
        var _HQ1 = new Uint8Array(_GQ1);
        var y;
        var _eC = 0;
        var _IQ1 = 0;
        for (y = 0; y < _IB; y++) {
            var x;
            for (x = 0; x < _HB; x++) {
                _HQ1[_eC++] = _zQ1[_IQ1++];
                _HQ1[_eC++] = _zQ1[_IQ1++];
                _HQ1[_eC++] = _zQ1[_IQ1++];
                _HQ1[_eC++] = _zQ1[_IQ1++]
            }
            for (; x < _v5; x++) {
                _HQ1[_eC++] = 0;
                _HQ1[_eC++] = 0;
                _HQ1[_eC++] = 0;
                _HQ1[_eC++] = 0
            }
        }
        for (; y < _w5; y++) {
            var x;
            for (x = 0; x < _v5; x++) {
                _HQ1[_eC++] = 0;
                _HQ1[_eC++] = 0;
                _HQ1[_eC++] = 0;
                _HQ1[_eC++] = 0
            }
        }
        var _XB = new _gO1(undefined,
            _v5, _w5, (_v5 == _HB) && (_w5 == _IB), _HQ1);
        _gQ1.width = _v5;
        _gQ1.height = _w5;
        _HN1.bindTexture(_HN1.TEXTURE_2D, _jQ1);
        this._lP1();
        _JN1._xS();
        return _XB
    };
    this._JQ1 = function (_gQ1, _KQ1, _HB, _IB) {
        var _v5 = _vQ1(_HB);
        var _w5 = _vQ1(_IB);
        var _jQ1 = _HN1.getParameter(_HN1.TEXTURE_BINDING_2D);
        var _XB = new _gO1(undefined, _v5, _w5, (_v5 == _HB) && (_w5 == _IB), _KQ1);
        _gQ1.width = _v5;
        _gQ1.height = _w5;
        _HN1.bindTexture(_HN1.TEXTURE_2D, _jQ1);
        _JN1._xS();
        return _XB
    };
    this._LQ1 = function (_gQ1, _KQ1, _HB, _IB) {
        var _AQ1 = new ArrayBuffer(_HB * _IB * 4);
        var _MQ1 = new DataView(_AQ1);
        for (var _tt = 0; _tt < _HB * _IB; _tt++) {
            _MQ1.setUint32(_tt * 4, ~~_KQ1[_tt], true)
        }
        return this._JQ1(_gQ1, new Uint8Array(_AQ1), _HB, _IB)
    };
    this._NQ1 = function (_8z, _Ox) {
        _gw._9Q1(_8z instanceof _gO1, "Texture is not a yyGLTexture", _gw._aQ1);
        if (!_OQ1(_8z)) {
            _PQ1(_8z)
        }
        var _Xx = _8z._mQ1;
        var _v5 = _8z._kQ1;
        var _w5 = _8z._lQ1;
        var _FQ1 = _HN1.getParameter(_HN1.FRAMEBUFFER_BINDING);
        var _QQ1 = _HN1.createFramebuffer();
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _QQ1);
        _HN1.framebufferTexture2D(_HN1.FRAMEBUFFER, _HN1.COLOR_ATTACHMENT0, _HN1.TEXTURE_2D,
            _Xx, 0);
        var _zQ1 = new Uint8Array(_v5 * _w5 * 4);
        _HN1.readPixels(0, 0, _v5, _w5, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _zQ1);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _FQ1);
        _HN1.deleteFramebuffer(_QQ1);
        for (var _t5 = 0; _t5 < (_v5 * _w5); _t5++) {
            _zQ1[(_t5 * 4) + 3] = _Ox[_t5]
        }
        var _1o1 = _vQ1(_v5);
        var _xR = _vQ1(_w5);
        var _jQ1 = _HN1.getParameter(_HN1.TEXTURE_BINDING_2D);
        var _XB = new _gO1(undefined, _1o1, _xR, (_1o1 == _v5) && (_xR == _w5), _zQ1);
        _HN1.deleteTexture(_8z._mQ1);
        _HN1.bindTexture(_HN1.TEXTURE_2D, _jQ1);
        return _XB
    };
    this._RQ1 = function (_Ps, _Qs) {
        this._kd1();
        var _zQ1 = new Uint8Array(16);
        _HN1.readPixels(_Ps, _UN1 - _Qs, 1, 1, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _zQ1);
        var _2v = (_zQ1[0]) | (_zQ1[1] << 8) | (_zQ1[2] << 16) | (_zQ1[3] << 24);
        _JN1._xS();
        return _2v
    };
    this._SQ1 = function (_EQ1, _Ps, _Qs) {
        this._kd1();
        var _FQ1 = _HN1.getParameter(_HN1.FRAMEBUFFER_BINDING);
        var _zQ1 = new Uint8Array(16);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _EQ1);
        _HN1.readPixels(_Ps, _Qs, 1, 1, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _zQ1);
        var _2v = (_zQ1[0]) | (_zQ1[1] << 8) | (_zQ1[2] << 16) | (_zQ1[3] << 24);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER,
            _FQ1);
        _JN1._xS();
        return _2v
    };
    this._TQ1 = function (_EQ1, _Ps, _Qs, _HB, _IB) {
        this._lP1();
        var _FQ1 = _HN1.getParameter(_HN1.FRAMEBUFFER_BINDING);
        var _zQ1 = new Uint8Array(_HB * _IB * 4);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _EQ1);
        _HN1.readPixels(_Ps, _Qs, _HB, _IB, _HN1.RGBA, _HN1.UNSIGNED_BYTE, _zQ1);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _FQ1);
        _JN1._xS();
        return _zQ1
    };
    this._UQ1 = function (_HB, _IB) {
        var _jQ1 = _HN1.getParameter(_HN1.TEXTURE_BINDING_2D);
        var _FQ1 = _HN1.getParameter(_HN1.FRAMEBUFFER_BINDING);
        var _VQ1 = _HN1.getParameter(_HN1.RENDERBUFFER_BINDING);
        {
            var _WQ1 = _HN1.createFramebuffer();
            _WQ1.width = _HB;
            _WQ1.height = _IB;
            _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _WQ1);
            var _XQ1 = _HN1.createTexture();
            _HN1.bindTexture(_HN1.TEXTURE_2D, _XQ1);
            _HN1.texImage2D(_HN1.TEXTURE_2D, 0, _HN1.RGBA, _HB, _IB, 0, _HN1.RGBA, _HN1.UNSIGNED_BYTE, null);
            var _YQ1 = new _gO1(_XQ1, _HB, _IB, _BO1(_HB) && _BO1(_IB), null);
            var _ZQ1 = _HN1.createRenderbuffer();
            _HN1.bindRenderbuffer(_HN1.RENDERBUFFER, _ZQ1);
            _HN1.renderbufferStorage(_HN1.RENDERBUFFER, _HN1.DEPTH_STENCIL, _WQ1.width, _WQ1.height);
            _HN1.framebufferTexture2D(_HN1.FRAMEBUFFER,
                _HN1.COLOR_ATTACHMENT0, _HN1.TEXTURE_2D, _XQ1, 0);
            _HN1.framebufferRenderbuffer(_HN1.FRAMEBUFFER, _HN1.DEPTH_STENCIL_ATTACHMENT, _HN1.RENDERBUFFER, _ZQ1)
        }
        _HN1.bindTexture(_HN1.TEXTURE_2D, _jQ1);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _FQ1);
        _HN1.bindRenderbuffer(_HN1.RENDERBUFFER, _VQ1);
        var __Q1 = {_0R1: _WQ1, _1R1: _ZQ1, _mQ1: _YQ1};
        return __Q1
    };
    this._2R1 = function (_EQ1) {
        _HN1.deleteFramebuffer(_EQ1._0R1);
        _HN1.deleteRenderbuffer(_EQ1._1R1);
        _HN1.deleteTexture(_EQ1._mQ1._mQ1);
        _EQ1._mQ1 = null
    };
    this._3R1 = function (_4R1) {
        _HN1.deleteTexture(_4R1)
    }
    ;this._5R1 = function (_8z) {
        _gw._9Q1(_8z instanceof _gO1, "NULL texture is not a yyGLTexture", _gw._aQ1);
        _JN1._6R1 = _8z
    };
    this._fw = function (_xx, _8z, _Cy, _7R1) {
        _gw._9Q1((_8z == null) || (_8z instanceof _gO1), "Texture is not a yyGLTexture", _gw._aQ1);
        return _IN1._fw(_xx, _8z, _Cy, _7R1, _QN1[_Cy], _LN1)
    };
    this._9z = function (_xx, _8z, _8R1, _9R1) {
        _gw._9Q1((_8z == null) || (_8z instanceof _gO1), "Texture is not a yyGLTexture", _gw._aQ1);
        _IN1._aR1(_xx, _8z, _8R1, _9R1)
    };
    this._bR1 = function (_9c1) {
        var _Iu = _9c1._Iu._bw;
        if (!_OQ1(_Iu)) {
            _PQ1(_Iu)
        }
        var _Xx = _Iu._mQ1;
        var _v5 = _Iu._kQ1;
        var _w5 = _Iu._lQ1;
        var _FQ1 = _HN1.getParameter(_HN1.FRAMEBUFFER_BINDING);
        var _QQ1 = _HN1.createFramebuffer();
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _QQ1);
        _HN1.framebufferTexture2D(_HN1.FRAMEBUFFER, _HN1.COLOR_ATTACHMENT0, _HN1.TEXTURE_2D, _Xx, 0);
        data = new Uint8Array(_v5 * _w5 * 4);
        _HN1.readPixels(0, 0, _v5, _w5, _HN1.RGBA, _HN1.UNSIGNED_BYTE, data);
        _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _FQ1);
        _HN1.deleteFramebuffer(_QQ1);
        return data
    }
}

var _gw = {
    _cR1: 8,
    _7O1: 8,
    _dR1: -1,
    _hw: 0,
    _Cx: 1,
    _Bx: 2,
    _zx: 3,
    _Ax: 4,
    _yx: 5,
    _Fy: 1,
    _Ky: 2,
    _Uy: 3,
    _Sy: 4,
    _eR1: 5,
    _fR1: 6,
    _gR1: 7,
    _hR1: 8,
    _iR1: 9,
    _jR1: 10,
    _kR1: 11,
    _lR1: 12,
    _mR1: 13,
    _nR1: 14,
    _oR1: 14,
    _Wy: 1,
    _Gy: 2,
    _Iy: 3,
    __y: 4,
    _Ly: 5,
    _1z: 6,
    _pR1: 6,
    _hM: 1,
    _cM: 2,
    _qR1: 3,
    _gM: 4,
    _aM: 5,
    _iM: 6,
    _rR1: 7,
    _sR1: 8,
    _tR1: 9,
    _uR1: 10,
    _vR1: 11,
    _wR1: 12,
    _xR1: 13,
    _yR1: 14,
    _zR1: 15,
    _AR1: 16,
    _BR1: 16,
    _CR1: 0,
    _WL: 1,
    _DR1: 2,
    _ER1: 3,
    _ZL: 4,
    _zM: 5,
    _9M: 6,
    _bM: 7,
    _7M: 8,
    _YL: 9,
    _BM: 10,
    _CM: 11,
    _VL: 12,
    _2M: 13,
    _FR1: 14,
    _3M: 15,
    _GR1: 16,
    _4M: 17,
    _5M: 18,
    _HR1: 19,
    _IR1: 20,
    _JR1: 21,
    _KR1: 22,
    _LR1: 23,
    _yM: 24,
    _OP1: 25,
    _MR1: 26,
    _NR1: 27,
    _TP1: 28,
    _QP1: 29,
    _WP1: 30,
    _OR1: 31,
    _PR1: 32,
    _fM: 33,
    _dM: 34,
    _eM: 35,
    _QR1: 36,
    _RR1: 37,
    _SR1: 1,
    _TR1: 2,
    _UR1: 3,
    _VR1: 4,
    _WR1: 5,
    _XR1: 6,
    _YR1: 7,
    _ZR1: 8,
    __R1: 1,
    _0S1: 2,
    _1S1: 3,
    _2S1: 4,
    _3S1: 5,
    _4S1: 6,
    _5S1: 7,
    _6S1: 8,
    _OM: 0,
    _QM: 1,
    _HM: 0,
    _JM: 1,
    _NM: 2,
    _PM: 3,
    _7S1: 4,
    _IM: 0,
    _KM: 1,
    _rP1: 0,
    _8S1: 1,
    _qP1: 2,
    _9S1: 0,
    _aS1: 1,
    _bS1: 2,
    _cS1: 0,
    _dS1: 1,
    _eS1: 0,
    _fS1: 1,
    _gS1: 0,
    _hS1: 1,
    _iS1: 2,
    _jS1: 3,
    _kS1: 0,
    _lS1: 1,
    _mS1: 2,
    _nS1: 4,
    _oS1: 8,
    _pS1: 0,
    _qS1: 1,
    _aQ1: 2,
    _9Q1: function (_rS1, _sS1, _tS1) {
        if (!_rS1) {
            throw new _aB(_sS1)
        }
    }
};
Object.freeze(_gw);

function _8O1(_uS1) {
    var _HN1 = this._fO1;
    var _vS1 = 0,
        _wS1 = 1, _xS1 = 2, _yS1 = 3, _zS1 = 4, _AS1 = 5, _BS1 = 6, _CS1 = 7, _DS1 = 8, _ES1 = 9, _FS1 = 10, _GS1 = 11,
        _HS1 = 12, _IS1 = 13, _JS1 = 14, _KS1 = 15, _LS1 = 16, _MS1 = 17, _NS1 = 18, _OS1 = 19, _PS1 = 20, _QS1 = 21,
        _RS1 = 22, _SS1 = 23, _TS1 = 24, _US1 = 25, _VS1 = 26, _WS1 = 27;
    var _XS1 = 0, _YS1 = 1, _ZS1 = 2, __S1 = 3, _0T1 = 4, _1T1 = 5;
    var _2T1 = 1, _3T1 = 2, _4T1 = 4, _5T1 = 8;
    var _6T1 = [];
    var _7T1 = [], _8T1, _9T1;
    var _aT1, _bT1 = [], _cT1 = [], _dT1 = [], _eT1 = new Float32Array(_gw._cR1 * 4),
        _fT1 = new Float32Array(_gw._cR1 * 4), _gT1 = new Float32Array(_gw._cR1 * 4), _hT1 = new Float32Array(4),
        _iT1 = new Float32Array(8), _jT1 = false,
        _kT1 = 0.0, _lT1, _mT1 = _HN1.SRC_ALPHA, _nT1 = _HN1.ONE_MINUS_SRC_ALPHA, _oT1 = _HN1.SRC_ALPHA,
        _pT1 = _HN1.ONE_MINUS_SRC_ALPHA;
    var _LN1 = 0, _qT1;
    Object.defineProperties(this, {
        _fs: {
            get: function () {
                return _LN1
            }, set: function (_rz) {
                _LN1 = _rz
            }
        }, _6R1: {
            get: function () {
                return _qT1
            }, set: function (_rz) {
                _qT1 = _rz
            }
        }
    });
    (function () {
        _rT1();
        var _6O1 = _HN1.getParameter(_HN1.MAX_TEXTURE_IMAGE_UNITS);
        if (_6O1 > _gw._7O1) {
            _6O1 = _gw._7O1
        }
        for (var _9P1 = 0; _9P1 < _6O1; _9P1++) {
            _dT1[_9P1] = new _iO1(_uS1)
        }
        var _sT1 = _tT1(_gw._SR1);
        _lT1 = {
            _YO: 0, _uT1: 0xffffffff, _vT1: 0xffffffff,
            _wT1: _xT1(_gw._6S1), _yT1: _sT1, _zT1: _sT1, _AT1: _sT1
        };
        for (var _t5 = 0; _t5 < _1T1; _t5++) {
            _cT1[_t5] = new _JJ()
        }
    })();

    function _rT1() {
        _7T1 = [];
        _9T1 = undefined;
        _8T1 = undefined;
        _7T1[0] = 1;
        _7T1[1] = 1
    };this._xS = function () {
        _rT1()
    };
    this.__J = function (_BT1) {
        if (_BT1 != _8T1) {
            _9T1 = null;
            _6T1.push(_MS1);
            _6T1.push(_BT1);
            _8T1 = _BT1
        }
    };
    this._8Q1 = function (_IP1, _8z) {
        if (_7T1[_IP1] == _8z) {
            return
        }
        _7T1[_IP1] = _8z;
        _6T1.push(_wS1);
        _6T1.push(_8z);
        _6T1.push(_IP1)
    };
    this._6Q1 = function (_PN) {
        _6T1.push(_PN)
    };
    this._7Q1 = function (_8z, _Ps, _Qs, _HB, _IB, _CT1) {
        _6T1.push(_WS1);
        _6T1.push(_8z);
        _6T1.push(_Ps);
        _6T1.push(_Qs);
        _6T1.push(_HB);
        _6T1.push(_IB);
        _6T1.push(_CT1);
    };
    this._DT1 = function (_ET1) {
        if (_9T1 == _ET1) return;
        _9T1 = _ET1;
        _6T1.push(_HS1);
        _6T1.push(_ET1)
    };
    this._FT1 = function (__L, _GT1) {
        _6T1.push(_xS1);
        _6T1.push(__L);
        _6T1.push(_GT1)
    };
    this._HT1 = function (__L, _GT1) {
        _6T1.push(_yS1);
        _6T1.push(__L);
        _6T1.push(_GT1)
    };
    this._IT1 = function (__L, _GT1) {
        _6T1.push(_zS1);
        _6T1.push(__L);
        _6T1.push(_GT1)
    };
    this._JT1 = function (__L, _GT1) {
        _6T1.push(_AS1);
        _6T1.push(__L);
        _6T1.push(_GT1)
    }
    ;this._KT1 = function (__L, _GT1) {
        _6T1.push(_BS1);
        _6T1.push(__L);
        _6T1.push(_GT1)
    };
    this._nz1 = function (__L, _GT1) {
        _6T1.push(_CS1);
        _6T1.push(__L);
        _6T1.push(_GT1)
    };
    this._cQ1 = function (_OF) {
        _6T1.push(_ES1);
        _6T1.push(new _JJ(_OF))
    };
    this._bQ1 = function (_OF) {
        _6T1.push(_FS1);
        _LT1 = new _JJ(_OF);
        _6T1.push(new _JJ(_OF))
    };
    this._eQ1 = function (_OF) {
        _6T1.push(_DS1);
        _6T1.push(new _JJ(_OF))
    };
    this._EO1 = function (_Ps, _Qs, _HB, _IB) {
        _6T1.push(_GS1);
        _6T1.push(_Ps);
        _6T1.push(_Qs);
        _6T1.push(_HB);
        _6T1.push(_IB)
    };
    this._pQ1 = function (_MT1,
                          _2y) {
        _6T1.push(_IS1);
        _6T1.push(_MT1);
        _6T1.push(~~_2y)
    };
    this._rQ1 = function (_NT1) {
        _6T1.push(_JS1);
        _6T1.push(_NT1)
    };
    this._OT1 = function (_Ox, _qM, _rM, _sM) {
        _6T1.push(_KS1);
        _6T1.push(_Ox);
        _6T1.push(_qM);
        _6T1.push(_rM);
        _6T1.push(_sM)
    };
    this._mP1 = function (_LB, _jM) {
        _6T1.push(_LS1);
        _6T1.push(_LB);
        _6T1.push(_jM)
    };
    this._0Q1 = function (_PT1, _1Q1) {
        _6T1.push(_NS1);
        _6T1.push(_PT1);
        _6T1.push(_1Q1)
    };
    this._2Q1 = function (_PT1, _1Q1) {
        _6T1.push(_OS1);
        _6T1.push(_PT1);
        _6T1.push(_1Q1)
    };
    this._4Q1 = function (_PT1, _1Q1) {
        _6T1.push(_NS1);
        _6T1.push(_PT1);
        _6T1.push(_1Q1)
    };
    this._5Q1 = function (_PT1, _1Q1) {
        _6T1.push(_OS1);
        _6T1.push(_PT1);
        _6T1.push(_1Q1)
    };
    this._3Q1 = function (_PT1, _1Q1) {
        _6T1.push(_OS1);
        _6T1.push(_PT1);
        _6T1.push(_1Q1)
    };
    this._UL = function (_QT1, _RT1) {
        _6T1.push(_PS1);
        _6T1.push(_QT1);
        _6T1.push(_RT1)
    };
    this._GM = function (_IP1, _ST1, _TT1) {
        _6T1.push(_QS1);
        _6T1.push(_IP1);
        _6T1.push(_ST1);
        _6T1.push(_TT1)
    };
    this._FK = function (_tE, _UT1, _VT1, _WT1) {
        _6T1.push(_RS1);
        _6T1.push(_tE);
        _6T1.push(new Float32Array(_UT1));
        _6T1.push(new Float32Array(_VT1));
        _6T1.push(new Float32Array(_WT1))
    };
    this._CP1 = function (_Ub) {
        _6T1.push(_SS1);
        _6T1.push(new Float32Array(_Ub));
    };
    this._XT1 = function (_YT1) {
        _6T1.push(_TS1);
        _6T1.push(new Float32Array(_YT1))
    };
    this._HK = function (_tE, enable, _Ub) {
        _6T1.push(_US1);
        _6T1.push(_tE);
        _6T1.push(enable);
        _6T1.push(_Ub)
    };
    this._FP1 = function (_XJ, _ZT1) {
        _6T1.push(_VS1);
        _6T1.push(_XJ);
        _6T1.push(_ZT1)
    };

    function __T1(_AM) {
        switch (_AM) {
            case _gw._hM:
                return _HN1.ZERO;
            case _gw._cM:
                return _HN1.ONE;
            case _gw._qR1:
                return _HN1.SRC_COLOR;
            case _gw._gM:
                return _HN1.ONE_MINUS_SRC_COLOR;
            case _gw._aM:
                return _HN1.SRC_ALPHA;
            case _gw._iM:
                return _HN1.ONE_MINUS_SRC_ALPHA;
            case _gw._rR1:
                return _HN1.DST_ALPHA;
            case _gw._sR1:
                return _HN1.ONE_MINUS_DST_ALPHA;
            case _gw._tR1:
                return _HN1.DST_COLOR;
            case _gw._uR1:
                return _HN1.ONE_MINUS_DST_COLOR;
            case _gw._vR1:
                return _HN1.SRC_ALPHA_SATURATE;
            case _gw._wR1:
                return 0;
            case _gw._xR1:
                return 0;
            case _gw._yR1:
                return 0;
            case _gw._zR1:
                return 0;
            case _gw._AR1:
                return 0;
            case _gw._BR1:
                return 0
        }
        return 0
    }

    function _tT1(_AM) {
        switch (_AM) {
            case _gw._SR1:
                return _HN1.KEEP;
            case _gw._TR1:
                return _HN1.ZERO;
            case _gw._UR1:
                return _HN1.REPLACE;
            case _gw._VR1:
                return _HN1.INCR;
            case _gw._WR1:
                return _HN1.DECR;
            case _gw._XR1:
                return _HN1.INVERT;
            case _gw._YR1:
                return _HN1.INCR;
            case _gw._ZR1:
                return _HN1.DECR;
            default :
                return _HN1.KEEP
        }
    }

    function _xT1(_AM) {
        switch (_AM) {
            case _gw.__R1:
                return _HN1.NEVER;
            case _gw._0S1:
                return _HN1.LESS;
            case _gw._1S1:
                return _HN1.EQUAL;
            case _gw._2S1:
                return _HN1.LEQUAL;
            case _gw._3S1:
                return _HN1.GREATER;
            case _gw._4S1:
                return _HN1.NOTEQUAL;
            case _gw._5S1:
                return _HN1.GEQUAL;
            case _gw._6S1:
            default :
                return _HN1.ALWAYS
        }
    }

    function _0U1(_QT1, _RT1) {
        switch (_QT1) {
            case _gw._WL:
                if (_RT1) {
                    _HN1.enable(_HN1.DEPTH_TEST)
                } else {
                    _HN1.disable(_HN1.DEPTH_TEST);
                }
                break;
            case _gw._ZL:
                _HN1.depthMask(_RT1);
                break;
            case _gw._zM:
                _jT1 = _RT1;
                _1U1(_5T1);
                break;
            case _gw._9M:
                _mT1 = __T1(_RT1);
                _HN1.blendFuncSeparate(_mT1, _nT1, _oT1, _pT1);
                break;
            case _gw._bM:
                _nT1 = __T1(_RT1);
                _HN1.blendFuncSeparate(_mT1, _nT1, _oT1, _pT1);
                break;
            case _gw._7M:
                if (_RT1 != _gw._rP1) {
                    _HN1.enable(_HN1.CULL_FACE);
                    _HN1.frontFace((_RT1 === _gw._8S1) ? _HN1.CW : _HN1.CCW)
                } else {
                    _HN1.disable(_HN1.CULL_FACE)
                }
                break;
            case _gw._YL:
                _HN1.depthFunc(_xT1(_RT1));
                break;
            case _gw._BM:
                _kT1 = _RT1 / 255.0;
                _1U1(_5T1);
                break;
            case _gw._CM:
                break;
            case _gw._VL:
                if (_RT1) {
                    _HN1.enable(_HN1.BLEND)
                } else {
                    _HN1.disable(_HN1.BLEND)
                }
                break;
            case _gw._2M:
                break;
            case _gw._FR1:
                break;
            case _gw._3M:
                break;
            case _gw._GR1:
                break;
            case _gw._4M:
                break;
            case _gw._5M:
                break;
            case _gw._HR1:
                break;
            case _gw._IR1:
                break;
            case _gw._JR1:
                break;
            case _gw._KR1:
                break;
            case _gw._LR1:
                break;
            case _gw._yM:
                _HN1.colorMask(_RT1._nE, _RT1._oE, _RT1._pE, _RT1.alpha);
                break;
            case _gw._OP1:
                if (_RT1) {
                    _HN1.enable(_HN1.STENCIL_TEST)
                } else {
                    _HN1.disable(_HN1.STENCIL_TEST)
                }
                break;
            case _gw._MR1:
                _lT1._yT1 = _tT1(_RT1);
                _HN1.stencilOp(_lT1._yT1, _lT1._zT1, _lT1._AT1);
                break;
            case _gw._NR1:
                _lT1._zT1 = _tT1(_RT1);
                _HN1.stencilOp(_lT1._yT1, _lT1._zT1, _lT1._AT1);
                break;
            case _gw._TP1:
                _lT1._AT1 = _tT1(_RT1);
                _HN1.stencilOp(_lT1._yT1, _lT1._zT1, _lT1._AT1);
                break;
            case _gw._QP1:
                _lT1._wT1 = _xT1(_RT1);
                _HN1.stencilFunc(_lT1._wT1, _lT1._YO, _lT1._uT1);
                break;
            case _gw._WP1:
                _lT1._YO = _RT1;
                _HN1.stencilFunc(_lT1._wT1, _lT1._YO, _lT1._uT1);
                break;
            case _gw._OR1:
                _lT1._uT1 = _RT1;
                _HN1.stencilFunc(_lT1._wT1, _lT1._YO, _lT1._uT1);
                break;
            case _gw._PR1:
                _HN1.stencilMask(_RT1);
                break;
            case _gw._fM:
                break;
            case _gw._dM:
                _oT1 = __T1(_RT1);
                _HN1.blendFuncSeparate(_mT1, _nT1, _oT1, _pT1);
                break;
            case _gw._eM:
                _pT1 = __T1(_RT1);
                _HN1.blendFuncSeparate(_mT1, _nT1, _oT1, _pT1);
                break;
            case _gw._QR1:
                if (_RT1 != _gw._rP1) {
                    _HN1.enable(_HN1.CULL_FACE);
                    _HN1.frontFace((_RT1 === _gw._8S1) ? _HN1.CW : _HN1.CCW)
                } else {
                    _HN1.disable(_HN1.CULL_FACE)
                }
                break
        }
    }

    function _2U1() {
        if (_aT1 && _aT1._RO1) {
            _cT1[__S1].Multiply(_cT1[_ZS1], _cT1[_XS1]);
            _cT1[_0T1].Multiply(_cT1[__S1], _cT1[_YS1]);
            var _3U1 = new Float32Array(16 * _1T1);
            for (var _t5 = 0; _t5 < _1T1; _t5++) {
                _3U1.set(_cT1[_t5]._wt, _t5 * 16)
            }
            _HN1.uniformMatrix4fv(_aT1._RO1, _HN1._4U1, _3U1)
        }
    }

    function _1U1(_5U1) {
        if (_5U1 & _5T1) {
            if (_aT1._TO1 !== undefined) {
                _HN1.uniform1i(_aT1._TO1, _jT1)
            }
            if (_aT1._UO1 !== undefined) {
                _HN1.uniform1f(_aT1._UO1, _kT1)
            }
        }
        if ((_5U1 & _2T1) && (_aT1._SO1 !== undefined)) {
            _HN1.uniform4fv(_aT1._SO1, _iT1)
        }
        if (_5U1 & _3T1) {
            if (_aT1._YO1 !== undefined) {
                _HN1.uniform4fv(_aT1._YO1, _eT1)
            }
            if (_aT1._XO1 !== undefined) {
                _HN1.uniform4fv(_aT1._XO1, _fT1)
            }
            if (_aT1._ZO1 !== undefined) {
                _HN1.uniform4fv(_aT1._ZO1,
                    _gT1)
            }
        }
        if ((_5U1 & _4T1) && (_aT1.__O1 !== undefined)) {
            _HN1.uniform4fv(_aT1.__O1, _hT1)
        }
    }

    function _6U1(_8z, _IP1) {
        if (_8z === null || _8z === undefined) {
            return
        }
        var _7U1 = _dT1[_IP1];
        if (_7U1 === null || _7U1 === undefined) {
            return
        }
        var _8U1 = _7U1._9U1;
        var _aU1 = _8z._nQ1._9U1;
        if (_8U1[_gw._HM] != _aU1[_gw._HM]) {
            _HN1.texParameteri(_HN1.TEXTURE_2D, _HN1.TEXTURE_MAG_FILTER, (_8U1[_gw._HM] == _gw._IM) ? _HN1.LINEAR : _HN1.NEAREST);
            _aU1[_gw._HM] = _8U1[_gw._HM]
        }
        if (_8U1[_gw._JM] != _aU1[_gw._JM]) {
            _HN1.texParameteri(_HN1.TEXTURE_2D, _HN1.TEXTURE_MIN_FILTER,
                (_8U1[_gw._JM] == _gw._IM) ? _HN1.LINEAR : _HN1.NEAREST);
            _aU1[_gw._JM] = _8U1[_gw._JM]
        }
        if (_8U1[_gw._NM] != _aU1[_gw._NM]) {
            if (_8z._bU1) {
                var _cU1 = (_8U1[_gw._NM] == _gw._QM) ? _HN1.CLAMP_TO_EDGE : _HN1.REPEAT;
                _HN1.texParameteri(_HN1.TEXTURE_2D, _HN1.TEXTURE_WRAP_S, _cU1)
            }
            _aU1[_gw._NM] = _8U1[_gw._NM]
        }
        if (_8U1[_gw._PM] != _aU1[_gw._PM]) {
            if (_8z._bU1) {
                var _cU1 = (_8U1[_gw._PM] == _gw._QM) ? _HN1.CLAMP_TO_EDGE : _HN1.REPEAT;
                _HN1.texParameteri(_HN1.TEXTURE_2D, _HN1.TEXTURE_WRAP_T, _cU1)
            }
            _aU1[_gw._PM] = _8U1[_gw._PM]
        }
    }

    var _dU1 = null;

    function _DT1(_eU1) {
        _HN1.bindBuffer(_HN1.ARRAY_BUFFER, _eU1._fU1);
        if (_dU1 != null) {
            if (_dU1._xO1 === true) {
                var _gU1, _hU1, _iU1 = _dU1._qy.length;
                ;
                for (_gU1 = 0; _gU1 < _iU1; ++_gU1) {
                    switch (_gU1) {
                        case 0:
                            _hU1 = _aT1._MO1;
                            break;
                        case 1:
                            _hU1 = _aT1._PO1;
                            break;
                        case 2:
                            _hU1 = _aT1._OO1;
                            break;
                        case 3:
                            _hU1 = _aT1._NO1;
                            break;
                        default :
                            _hU1 = -1;
                            break
                    }
                    if (_hU1 >= 0) {
                        _HN1.disableVertexAttribArray(_hU1)
                    }
                }
            } else {
                var _gU1, _hU1, _iU1 = _dU1._qy.length;
                ;
                for (_gU1 = 0; _gU1 < _iU1; ++_gU1) {
                    _hU1 = _aT1._VO1[_gU1];
                    if (_hU1 >= 0) {
                        _HN1.disableVertexAttribArray(_hU1)
                    }
                }
            }
        }
        var _jU1 = _eU1._kU1;
        _dU1 = _jU1;
        if (_jU1._xO1 === true) {
            var _gU1, _hU1, _lU1, _iU1 = _jU1._qy.length;
            for (_gU1 = 0; _gU1 < _iU1; ++_gU1) {
                _lU1 = _jU1._qy[_gU1];
                switch (_gU1) {
                    case 0:
                        _hU1 = _aT1._MO1;
                        break;
                    case 1:
                        _hU1 = _aT1._PO1;
                        break;
                    case 2:
                        _hU1 = _aT1._OO1;
                        break;
                    case 3:
                        _hU1 = _aT1._NO1;
                        break;
                    default :
                        _hU1 = -1;
                        break
                }
                if (_hU1 >= 0) {
                    _HN1.enableVertexAttribArray(_hU1);
                    _HN1.vertexAttribPointer(_hU1, _lU1._mU1, _lU1._nU1, _lU1._oU1, _jU1._wy, _lU1.offset)
                }
            }
        } else {
            var _gU1, _hU1, _lU1, _iU1 = _jU1._qy.length;
            for (_gU1 = 0; _gU1 < _iU1; ++_gU1) {
                _lU1 = _jU1._qy[_gU1];
                _hU1 = _aT1._VO1[_gU1];
                if (_hU1 >= 0) {
                    _HN1.enableVertexAttribArray(_hU1);
                    _HN1.vertexAttribPointer(_hU1, _lU1._mU1, _lU1._nU1, _lU1._oU1, _jU1._wy, _lU1.offset)
                }
            }
        }
    }

    this._kP1 = function () {
        var _t5, error, _1P, _aP1, _pU1, _9P1, _Iu, _ew, _tE, _2v, enable, _qU1, __P1;
        _t5 = 0;
        while (_t5 < _6T1.length) {
            switch (_6T1[_t5]) {
                case _MS1: {
                    _aT1 = _6T1[_t5 + 1];
                    _qU1 = _aT1._cP1;
                    _t5 += 2;
                    _HN1.useProgram(_aT1);
                    _2U1();
                    _1U1(0xff);
                    break
                }
                case _GS1: {
                    _HN1.viewport(_6T1[_t5 + 1], _6T1[_t5 + 2], _6T1[_t5 + 3], _6T1[_t5 + 4]);
                    _HN1.scissor(_6T1[_t5 + 1], _6T1[_t5 + 2], _6T1[_t5 + 3], _6T1[_t5 + 4]);
                    _t5 += 5;
                    break
                }
                case _IS1: {
                    _2v = _6T1[_t5 + 2];
                    _HN1.clearColor((_2v & 0xff) / 255.0, ((_2v >> 8) & 0xff) / 255.0, ((_2v >> 16) & 0xff) / 255.0, ((_2v >> 24) & 0xff) / 255.0);
                    _HN1.clear(_6T1[_t5 + 1]);
                    _t5 += 3;
                    break
                }
                case _ES1: {
                    _cT1[_YS1] = _6T1[_t5 + 1];
                    _2U1();
                    _t5 += 2;
                    break
                }
                case _FS1: {
                    _cT1[_XS1] = _6T1[_t5 + 1];
                    _2U1();
                    _t5 += 2;
                    break
                }
                case _DS1: {
                    _cT1[_ZS1] = _6T1[_t5 + 1];
                    _2U1();
                    _t5 += 2;
                    break
                }
                case _wS1: {
                    _Iu = _6T1[_t5 + 1];
                    _9P1 = _6T1[_t5 + 2];
                    _t5 += 3;
                    if (_Iu === null) {
                        _Iu = _qT1;
                        _HN1.activeTexture(_HN1.TEXTURE0 + _9P1);
                        if (!_OQ1(_Iu)) {
                            _PQ1(_Iu)
                        }
                        _HN1.bindTexture(_HN1.TEXTURE_2D, _Iu._mQ1);
                        _HN1.uniform1i(_aT1._QO1,
                            0);
                        _bT1[_9P1] = null
                    } else {
                        _HN1.activeTexture(_HN1.TEXTURE0 + _9P1);
                        if (!_OQ1(_Iu)) {
                            _PQ1(_Iu)
                        }
                        _HN1.bindTexture(_HN1.TEXTURE_2D, _Iu._mQ1);
                        _HN1.uniform1i(_aT1._QO1, 0);
                        _6U1(_Iu, _9P1);
                        _bT1[_9P1] = _Iu
                    }
                    break
                }
                case _HS1: {
                    _ew = _6T1[_t5 + 1];
                    _t5 += 2;
                    if (_ew._rU1) {
                        _ew._sU1()
                    }
                    _ew._tU1 = this._fs;
                    _DT1(_ew)
                }
                    break;
                case _xS1: {
                    _HN1.drawArrays(_HN1.TRIANGLES, _6T1[_t5 + 1], _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _yS1: {
                    _HN1.drawArrays(_HN1.TRIANGLE_FAN, _6T1[_t5 + 1], _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _zS1: {
                    _HN1.drawArrays(_HN1.TRIANGLE_STRIP, _6T1[_t5 + 1],
                        _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _AS1: {
                    _HN1.drawArrays(_HN1.LINES, _6T1[_t5 + 1], _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _BS1: {
                    _HN1.drawArrays(_HN1.LINE_STRIP, _6T1[_t5 + 1], _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _CS1: {
                    _HN1.drawArrays(_HN1.POINTS, _6T1[_t5 + 1], _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _JS1: {
                    _HN1.bindFramebuffer(_HN1.FRAMEBUFFER, _6T1[_t5 + 1]);
                    _t5 += 2;
                    break
                }
                case _KS1: {
                    _HN1.colorMask(_6T1[_t5 + 2], _6T1[_t5 + 3], _6T1[_t5 + 4], _6T1[_t5 + 1]);
                    _t5 += 5;
                    break
                }
                case _LS1: {
                    _HN1.blendFunc(__T1(_6T1[_t5 + 1]), __T1(_6T1[_t5 + 2]));
                    _t5 += 3;
                    break
                }
                case _PS1: {
                    _0U1(_6T1[_t5 + 1], _6T1[_t5 + 2]);
                    _t5 += 3;
                    break
                }
                case _NS1: {
                    _1P = _6T1[_t5 + 1];
                    _aP1 = _6T1[_t5 + 2];
                    _t5 += 3;
                    __P1 = _qU1[_qU1._dP1[_1P]];
                    switch (__P1._hP1["type"]) {
                        case _HN1.INT:
                            _HN1.uniform1iv(__P1.location, _aP1);
                            break;
                        case _HN1.INT_VEC2:
                            _HN1.uniform2iv(__P1.location, _aP1);
                            break;
                        case _HN1.INT_VEC3:
                            _HN1.uniform3iv(__P1.location, _aP1);
                            break;
                        case _HN1.INT_VEC4:
                            _HN1.uniform4iv(__P1.location, _aP1);
                            break
                    }
                    break
                }
                case _OS1: {
                    _1P = _6T1[_t5 + 1];
                    _aP1 = _6T1[_t5 + 2];
                    _t5 += 3;
                    __P1 = _qU1[_qU1._dP1[_1P]];
                    switch (__P1._hP1["type"]) {
                        case _HN1.FLOAT:
                            _HN1.uniform1fv(__P1.location,
                                _aP1);
                            break;
                        case _HN1.FLOAT_VEC2:
                            _HN1.uniform2fv(__P1.location, _aP1);
                            break;
                        case _HN1.FLOAT_VEC3:
                            _HN1.uniform3fv(__P1.location, _aP1);
                            break;
                        case _HN1.FLOAT_VEC4:
                            _HN1.uniform4fv(__P1.location, _aP1);
                            break;
                        case _HN1.FLOAT_MAT2:
                            _HN1.uniformMatrix2fv(__P1.location, false, _aP1);
                            break;
                        case _HN1.FLOAT_MAT3:
                            _HN1.uniformMatrix3fv(__P1.location, false, _aP1);
                            break;
                        case _HN1.FLOAT_MAT4:
                            _HN1.uniformMatrix4fv(__P1.location, false, _aP1);
                            break
                    }
                    break
                }
                case _QS1: {
                    _9P1 = _6T1[_t5 + 1];
                    var _c31 = _6T1[_t5 + 2];
                    var _4H = _6T1[_t5 + 3];
                    _t5 += 4;
                    var _7U1 = _dT1[_9P1];
                    _7U1._9U1[_c31] = _4H;
                    _6U1(_bT1[_9P1], _9P1);
                    break
                }
                case _RS1: {
                    _tE = _6T1[_t5 + 1];
                    _eT1.set(_6T1[_t5 + 2], _tE * 4);
                    _fT1.set(_6T1[_t5 + 3], _tE * 4);
                    _gT1.set(_6T1[_t5 + 4], _tE * 4);
                    _t5 += 5;
                    _1U1(_3T1);
                    break
                }
                case _SS1: {
                    _hT1.set(_6T1[_t5 + 1]);
                    _t5 += 2;
                    _1U1(_4T1);
                    break
                }
                case _TS1: {
                    _iT1.set(_6T1[_t5 + 1]);
                    _t5 += 2;
                    _1U1(_2T1);
                    break
                }
                case _US1: {
                    _tE = _6T1[_t5 + 1];
                    enable = _6T1[_t5 + 2];
                    _2v = _6T1[_t5 + 3];
                    _t5 += 4;
                    if (enable) {
                        _gT1.set(_2v, _tE * 4)
                    } else {
                        var _yK = _tE * 4;
                        _gT1[_yK + 0] = 0;
                        _gT1[_yK + 1] = 0;
                        _gT1[_yK + 2] = 0;
                        _gT1[_yK + 3] = 0
                    }
                    _1U1(_3T1);
                    break
                }
                case _VS1: {
                    _jT1 = _6T1[_t5 + 1];
                    _kT1 = _6T1[_t5 + 2];
                    _t5 += 3;
                    _1U1(_5T1);
                    break
                }
                case _WS1: {
                    _Iu = _6T1[_t5 + 1];
                    var _St = _6T1[_t5 + 2];
                    var _Ut = _6T1[_t5 + 3];
                    var _9u = _6T1[_t5 + 4];
                    var _au = _6T1[_t5 + 5];
                    var canvas = _6T1[_t5 + 6];
                    _t5 += 7;
                    if (!_OQ1(_Iu)) {
                        _PQ1(_Iu)
                    }
                    _HN1.activeTexture(_HN1.TEXTURE0);
                    _HN1.bindTexture(_HN1.TEXTURE_2D, _Iu._mQ1);
                    _HN1.texSubImage2D(_HN1.TEXTURE_2D, 0, _St, _Ut, _9u, _au, _HN1.RGBA, _HN1.UNSIGNED_BYTE, canvas);
                    if (_bT1.length > 0) {
                        if (_bT1[0] != null) {
                            _HN1.bindTexture(_HN1.TEXTURE_2D, _bT1[0]._mQ1)
                        }
                    }
                    break
                }
            }
        }
        _6T1.length = 0
    }
}

function _gO1(_uU1, _Cu, _Du, _vU1,
              _gQ1) {
    var _HN1 = this._fO1;
    var _wU1, _xU1, _e21, _g21, _yU1, _zU1;
    Object.defineProperties(this, {
        _nQ1: {
            get: function () {
                return _wU1
            }
        }, _mQ1: {
            get: function () {
                return _xU1
            }, set: function (_qs) {
                _xU1 = _qs
            }
        }, _kQ1: {
            get: function () {
                return _e21
            }
        }, _lQ1: {
            get: function () {
                return _g21
            }
        }, _bU1: {
            get: function () {
                return _yU1
            }
        }, Image: {
            get: function () {
                return _zU1
            }
        }
    });
    (function () {
        _xU1 = _uU1;
        _e21 = _Cu;
        _g21 = _Du;
        _yU1 = _vU1;
        _zU1 = _gQ1;
        _wU1 = new _iO1();
        if (_xU1) {
            _wU1._oQ1(_HN1.TEXTURE_2D)
        }
    })()
}

function _AU1(_BU1) {
    var _CU1 = [];
    var _DU1;
    (function () {
        if (_BU1 == undefined) _BU1 = 32;
        _DU1 = ~~(_BU1 / 32);
        if (_DU1 == 0) _DU1 = 1;
        _CU1 = new Array(_DU1);
        for (var _t5 = 0; _t5 < _DU1; _t5++) {
            _CU1[_t5] = 0x0
        }
    })();
    this._EU1 = function () {
        return _BU1
    };
    this._FU1 = function (_GU1) {
        if (_GU1 >= _BU1) return;
        var _wC = ~~(_GU1 / 32);
        var _HU1 = _GU1 - (_wC * 32);
        _CU1[_wC] |= 1 << _HU1
    };
    this._IU1 = function (_GU1) {
        if (_GU1 >= _BU1) return;
        var _wC = ~~(_GU1 / 32);
        var _HU1 = _GU1 - (_wC * 32);
        _CU1[_wC] &= ~(1 << _HU1)
    };
    this._JU1 = function (_GU1) {
        if (_GU1 >= _BU1) return 0;
        var _wC = ~~(_GU1 / 32);
        var _KU1 = _GU1 - (_wC * 32);
        var _rz = (_CU1[_wC] >> _KU1) & 0x1;
        return _rz
    };
    this._LU1 = function () {
        var _t5;
        for (_t5 = 0; _t5 < (_DU1 - 1); _t5++) {
            _CU1[_t5] = 0xffffffff
        }
        var _MU1 = _BU1 - (_t5 * 32);
        var _Rt;
        var _ty = 1;
        for (_Rt = 0; _Rt < _MU1; _Rt++) {
            _CU1[_t5] |= _ty;
            _ty <<= 1
        }
    };
    this._NU1 = function () {
        for (var _t5 = 0; _t5 < _DU1; _t5++) {
            _CU1[_t5] = 0x0
        }
    };
    this._OU1 = function () {
        var _t5;
        for (_t5 = 0; _t5 < _DU1; _t5++) {
            if (_CU1[_t5] != 0) return 1
        }
        return 0
    };
    this._PU1 = function (_dR) {
        var _QU1 = _dR._EU1() > this._EU1() ? _dR._EU1() : this._EU1();
        var _RU1 = new _AU1(_QU1);
        for (var _t5 = 0; _t5 < _QU1; _t5++) {
            var _SU1 = this._JU1(_t5) | _dR._JU1(_t5);
            if (_SU1 == 1) {
                _RU1._FU1(_t5)
            }
        }
        return _RU1
    }
    ;this._TU1 = function (_dR) {
        var _QU1 = _dR._EU1() > this._EU1() ? _dR._EU1() : this._EU1();
        var _RU1 = new _AU1(_QU1);
        for (var _t5 = 0; _t5 < _QU1; _t5++) {
            var _SU1 = this._JU1(_t5) & _dR._JU1(_t5);
            if (_SU1 == 1) {
                _RU1._FU1(_t5)
            }
        }
        return _RU1;
    }
}

function _UU1(_VU1, _WU1, _XU1) {
    var _YU1 = [];
    var _ZU1 = [];
    (function () {
        _YU1 = new Array(_VU1);
        _ZU1 = new Array(_WU1 * _XU1)
    })();
    Object.defineProperties(this, {
        __U1: {
            get: function () {
                return _YU1
            }, set: function (_rz) {
                _YU1 = _rz
            }
        }, _0V1: {
            get: function () {
                return _ZU1
            }, set: function (_rz) {
                _ZU1 = _rz
            }
        },
    })
}

function _aO1(_1V1, _2V1,
              _3V1, _uS1) {
    var _HN1 = this._fO1;
    var _4V1 = null;
    var _yu1 = null;
    var _5V1 = [];
    var _6V1;
    var _7V1 = null;
    var _8V1 = null;
    var _9V1 = false;
    var _aV1 = _3V1;
    (function () {
        _7V1 = new _AU1(64);
        _8V1 = new _AU1(64);
        _4V1 = new _UU1(_gw._RR1, _1V1, _gw._7S1);
        _yu1 = new _UU1(_gw._RR1, _1V1, _gw._7S1);
        _5V1 = new Array(_2V1);
        for (var _t5 = 0; _t5 < _2V1; _t5++) {
            _5V1[_t5] = new _UU1(_gw._RR1, _1V1, _gw._7S1)
        }
        _rT1()
    })();

    function _rT1() {
        _7V1._LU1();
        _8V1._LU1();
        _9V1 = true;
        _6V1 = 0;
        _4V1.__U1[_gw._WL] = false;
        _4V1.__U1[_gw._DR1] = _gw._bS1;
        _4V1.__U1[_gw._ER1] = _gw._dS1;
        _4V1.__U1[_gw._ZL] = true;
        _4V1.__U1[_gw._zM] = false;
        _4V1.__U1[_gw._9M] = _gw._aM;
        _4V1.__U1[_gw._bM] = _gw._iM;
        _4V1.__U1[_gw._7M] = _gw._rP1;
        _4V1.__U1[_gw._YL] = _gw._2S1;
        _4V1.__U1[_gw._BM] = 0;
        _4V1.__U1[_gw._CM] = _gw._3S1;
        _4V1.__U1[_gw._VL] = true;
        _4V1.__U1[_gw._2M] = false;
        _4V1.__U1[_gw._FR1] = false;
        _4V1.__U1[_gw._3M] = 0x00000000;
        _4V1.__U1[_gw._GR1] = _gw._jS1;
        _4V1.__U1[_gw._4M] = 0.0;
        _4V1.__U1[_gw._5M] = 1.0;
        _4V1.__U1[_gw._HR1] = 0;
        _4V1.__U1[_gw._IR1] = false;
        _4V1.__U1[_gw._JR1] = false;
        _4V1.__U1[_gw._KR1] = 0x00000000;
        _4V1.__U1[_gw._LR1] = _gw._jS1;
        _4V1.__U1[_gw._yM] = _gw._lS1 | _gw._nS1 | _gw._mS1 | _gw._oS1;
        _4V1.__U1[_gw._OP1] = false;
        _4V1.__U1[_gw._MR1] = _gw._SR1;
        _4V1.__U1[_gw._NR1] = _gw._SR1;
        _4V1.__U1[_gw._TP1] = _gw._SR1;
        _4V1.__U1[_gw._QP1] = _gw._6S1;
        _4V1.__U1[_gw._WP1] = 0;
        _4V1.__U1[_gw._OR1] = 0xffffffff;
        _4V1.__U1[_gw._PR1] = 0xffffffff;
        _4V1.__U1[_gw._fM] = false;
        _4V1.__U1[_gw._dM] = _gw._aM;
        _4V1.__U1[_gw._eM] = _gw._iM;
        _4V1.__U1[_gw._QR1] = 0;
        var _t5;
        for (_t5 = 0; _t5 < _gw._RR1; _t5++) {
            _yu1.__U1[_t5] = _4V1.__U1[_t5]
        }
        for (_t5 = 0; _t5 < _1V1; _t5++) {
            var index = _t5 * 4;
            _4V1._0V1[index + _gw._HM] = _uS1 == true ? _gw._IM : _gw._KM;
            _4V1._0V1[index + _gw._JM] = _uS1 == true ? _gw._IM : _gw._KM;
            _4V1._0V1[index + _gw._NM] = _gw._QM;
            _4V1._0V1[index + _gw._PM] = _gw._QM
        }
        for (_t5 = 0; _t5 < (_gw._7S1 * _1V1); _t5++) {
            _yu1._0V1[_t5] = _4V1._0V1[_t5]
        }
        _bV1 = 0
    };this._xS = function () {
        _rT1()
    };
    this._cV1 = function () {
        return _7V1
    };
    this._dV1 = function () {
        return _8V1
    };
    this._eV1 = function () {
        return _9V1
    };
    this._UL = function (_ST1, _AM) {
        if (_yu1.__U1[_ST1] == _AM) return;
        if (_4V1.__U1[_ST1] != _AM) {
            _7V1._FU1(_ST1)
        } else {
            _7V1._IU1(_ST1)
        }
        _yu1.__U1[_ST1] = _AM;
        _9V1 = _7V1._OU1() || _8V1._OU1()
    };
    this._GM = function (_IP1, _ST1, _AM) {
        var index = (_IP1 * _gw._7S1) + _ST1;
        if (_yu1._0V1[index] == _AM) return;
        if (_4V1._0V1[index] != _AM) {
            _8V1._FU1(index)
        } else {
            _8V1._IU1(index)
        }
        _yu1._0V1[index] = _AM;
        _9V1 = _7V1._OU1() || _8V1._OU1()
    };
    this._RM = function (_ST1) {
        return _yu1.__U1[_ST1]
    };
    this._XM = function (_IP1, _ST1) {
        return _yu1._0V1[(_IP1 * _gw._7S1) + _ST1]
    };
    this._YM = function () {
        _5V1[_6V1].__U1 = _yu1.__U1.slice();
        _5V1[_6V1]._0V1 = _yu1._0V1.slice();
        if (_6V1 < _2V1) {
            _6V1++
        } else {
            debug("GPU state stack has run out of space")
        }
    };
    this._ZM = function () {
        if (_6V1 > 0) {
            _6V1--
        } else {
            debug("Attempting to drop below bottom of GPU state stack")
        }
        var _t5;
        for (_t5 = 0; _t5 < _gw._RR1; _t5++) {
            this._UL(_t5, _5V1[_6V1].__U1[_t5])
        }
        for (_t5 = 0; _t5 < _1V1; _t5++) {
            var _Rt;
            for (_Rt = 0; _Rt < _gw._7S1; _Rt++) {
                this._GM(_t5, _Rt, _5V1[_6V1]._0V1[(_t5 * _1V1) + _Rt]);
            }
        }
    };
    this._kd1 = function () {
        var _t5;
        if (_7V1._OU1()) {
            for (_t5 = 0; _t5 < _gw._RR1; _t5++) {
                if (_7V1._JU1(_t5) != 0) {
                    _aV1._UL(_t5, _yu1.__U1[_t5]);
                    _4V1.__U1[_t5] = _yu1.__U1[_t5]
                }
            }
            _7V1._NU1()
        }
        if (_8V1._OU1()) {
            for (_t5 = 0; _t5 < (_1V1 * _gw._7S1); _t5++) {
                if (_8V1._JU1(_t5) != 0) {
                    var _9P1 = ~~(_t5 / _gw._7S1);
                    var _c31 = _t5 - _9P1;
                    _aV1._GM(_9P1, _c31, _yu1._0V1[_t5]);
                    _4V1._0V1[_t5] = _yu1._0V1[_t5]
                }
            }
            _8V1._NU1()
        }
        _9V1 = false
    }
}

function _iO1(_uS1) {
    var _HN1 = this._fO1;
    var _fV1 = [];
    Object.defineProperties(this, {
        _9U1: {
            get: function () {
                return _fV1
            }
        }
    });
    (function () {
        if (_uS1) {
            _fV1[_gw._HM] = _gw._IM;
            _fV1[_gw._JM] = _gw._IM
        } else {
            _fV1[_gw._HM] = _gw._KM;
            _fV1[_gw._JM] = _gw._KM
        }
        _fV1[_gw._NM] = _gw._QM;
        _fV1[_gw._PM] = _gw._QM
    })();
    this._oQ1 = function (_hf1) {
        var _gV1 = _fV1;
        _HN1.texParameteri(_hf1, _HN1.TEXTURE_MAG_FILTER, (_gV1[_gw._HM] == _gw._IM) ? _HN1.LINEAR : _HN1.NEAREST);
        _HN1.texParameteri(_hf1, _HN1.TEXTURE_MIN_FILTER,
            (_gV1[_gw._JM] == _gw._IM) ? _HN1.LINEAR : _HN1.NEAREST);
        _HN1.texParameteri(_hf1, _HN1.TEXTURE_WRAP_S, (_gV1[_gw._NM] == _gw._QM) ? _HN1.CLAMP_TO_EDGE : _HN1.REPEAT);
        _HN1.texParameteri(_hf1, _HN1.TEXTURE_WRAP_T, (_gV1[_gw._PM] == _gw._QM) ? _HN1.CLAMP_TO_EDGE : _HN1.REPEAT);
    }
}

function _Hx(_9y, _hV1, _iV1) {
    var _HN1 = this._fO1;
    this._jV1 = null;
    this._Wx = null;
    this._fU1 = null;
    this._nw = null;
    this._pw = null;
    this._1y = null;
    this._rw = null;
    this._kU1 = _hV1;
    this._tU1 = -1;
    this._lw = 0;
    this._kV1 = _9y;
    this._rU1 = false;
    _lV1(this);

    function _lV1(_pd1) {
        _mV1(_pd1);
        _nV1(_pd1);
        if (_iV1) {
            _oV1(_pd1)
        }
    }

    function _mV1(_pd1) {
        var _pV1 = _pd1._kU1._wy;
        _pd1._jV1 = new ArrayBuffer(_9y * _pV1);
        _pd1._Wx = new Int8Array(_pd1._jV1)
    }

    function _oV1(_pd1) {
        _pd1._fU1 = _HN1.createBuffer();
        _HN1.bindBuffer(_HN1.ARRAY_BUFFER, _pd1._fU1);
        _HN1.bufferData(_HN1.ARRAY_BUFFER, _pd1._Wx, _HN1.DYNAMIC_DRAW)
    }

    function _nV1(_pd1) {
        var _qV1 = _pd1._kU1._qy;
        for (var _tt = 0; _tt < _qV1.length; _tt++) {
            var _lU1 = _qV1[_tt];
            switch (_lU1._sy) {
                case _gw._Fy:
                    _pd1._nw = _rV1(_lU1._nU1, _pd1._jV1, _lU1.offset);
                    break;
                case _gw._Ky:
                    _pd1._pw = _rV1(_lU1._nU1,
                        _pd1._jV1, _lU1.offset);
                    break;
                case _gw._Uy:
                    _pd1._1y = _rV1(_lU1._nU1, _pd1._jV1, _lU1.offset);
                    break;
                case _gw._Sy:
                    _pd1._rw = _rV1(_lU1._nU1, _pd1._jV1, _lU1.offset);
                    break
            }
        }
    }

    function _rV1(_sV1, _tV1, _uV1) {
        switch (_sV1) {
            case _HN1.UNSIGNED_BYTE:
                return (new Int32Array(_tV1, _uV1));
                break;
            case _HN1.FLOAT:
                return (new Float32Array(_tV1, _uV1));
                break
        }
        return false
    }

    this._vV1 = function (_8R1) {
        if (_8R1._kw() === this._kw()) {
            var _4z = _8R1._lw * _8R1._kw();
            var offset = this._lw * this._kw();
            if ((offset + _4z) > this._Wx.length) {
                var _wV1 = new ArrayBuffer(this._Wx.length * 2);
                var _Vx = new Int8Array(_wV1);
                _Vx.set(this._Wx);
                this._Wx = _Vx;
                this._jV1 = _wV1;
                _nV1(this)
            }
            this._Wx.set(_8R1._Wx.subarray(0, _4z), offset);
            this._lw += _8R1._lw
        }
    };
    this._2z = function () {
        if (this._lw < this.max) {
            var _4z = this._lw * this._kw();
            var _xV1 = new ArrayBuffer(_4z);
            var _yV1 = new Int8Array(_xV1);
            _yV1.set(this._Wx.subarray(0, _4z));
            this._Wx = _yV1;
            this._jV1 = _xV1
        }
        this._fU1 = _HN1.createBuffer();
        _HN1.bindBuffer(_HN1.ARRAY_BUFFER, this._fU1);
        _HN1.bufferData(_HN1.ARRAY_BUFFER, this._Wx, _HN1.STATIC_DRAW);
        this._nw = null;
        this._pw = null;
        this._1y = null;
        this._rw = null
    };
    this._Kx = function (_zV1) {
        if ((this._lw + _zV1) > this.max) {
            var _AV1 = this.max * 2;
            this.max = _AV1;
            var _yy = new ArrayBuffer(_AV1);
            var _Ay = new Int8Array(_yy);
            _Ay.set(this._Wx);
            this._jV1 = _yy;
            _nV1(this)
        }
        this._lw += _zV1
    };
    this._kw = function () {
        return this._kU1._wy
    };
    this._sU1 = function () {
        _HN1.bindBuffer(_HN1.ARRAY_BUFFER, this._fU1);
        var _BV1 = new Int8Array(this._jV1, 0, this._lw * this._kU1._wy);
        _HN1.bufferSubData(_HN1.ARRAY_BUFFER, 0, _BV1);
        this._lw = 0;
        this._rU1 = false
    }
}

function _bO1(_3V1, _CV1) {
    var _HN1 = this._fO1;
    var _DV1 = [];
    var _EV1 = 0, _7T1 = null, _FV1 = null, _GV1 = _gw._dR1, _8T1 = null;
    var _aV1 = _3V1;
    var _HV1 = _CV1;
    this._wO1 = function (_Cy) {
        if (_DV1[_Cy]) {
            debug("WARNING: Vertex format has already been registered\n")
        } else {
            _DV1[_Cy] = new _0C()
        }
    };
    this._aR1 = function (_xx, _8z, _8R1, _9R1) {
        var _l5 = _8R1._lw - _9R1;
        switch (_xx) {
            case _gw._hw:
                _aV1._8Q1(0, _8z);
                _aV1._DT1(_8R1);
                _aV1._FT1(_9R1, _l5);
                break;
            case _gw._Cx:
                _aV1._8Q1(0, _8z);
                _aV1._DT1(_8R1);
                _aV1._HT1(_9R1, _l5);
                break;
            case _gw._Bx:
                _aV1._8Q1(0, _8z);
                _aV1._DT1(_8R1);
                _aV1._IT1(_9R1, _l5);
                break;
            case _gw._zx:
                _aV1._8Q1(0, null);
                _aV1._DT1(_8R1);
                _aV1._JT1(_9R1, _l5);
                break;
            case _gw._Ax:
                _aV1._8Q1(0, null);
                _aV1._DT1(_8R1);
                _aV1._KT1(_9R1, _l5);
                break;
            case _gw._yx:
                _aV1._8Q1(0, null);
                _aV1._DT1(_8R1);
                _aV1._nz1(_9R1, _l5);
                break
        }
    };
    this._kd1 = function () {
        if (_FV1 == null) {
            _HV1._kd1();
            return
        }
        this._aR1(_GV1, _7T1, _FV1, _EV1);
        _FV1 = _7T1 = null;
        _GV1 = _gw._dR1;
        _HV1._kd1()
    };
    this._fw = function (_xx, _IV1, _Cy, _JV1, _hV1, _KV1) {
        var _t5, _LV1, _ew, _MV1;
        _MV1 = _IV1;
        if (_FV1 != null) {
            if ((_FV1._AO1 == _Cy) && ((_FV1._lw + _JV1) <= _FV1._kV1) && (_7T1 == _MV1) && (_GV1 == _xx) && ((_xx != _gw._Ax) && (_xx != _gw._Bx) && (_xx != _gw._Cx)) && (_HV1._eV1() == false)) {
                return _FV1
            } else {
                var _NV1 = _FV1;
                _uu._kd1();
                if ((_NV1._AO1 == _Cy) && ((_NV1._lw + _JV1) <= _NV1._kV1)) {
                    _FV1 = _NV1;
                    _EV1 = _NV1._lw;
                    _GV1 = _xx;
                    _7T1 = _MV1;
                    return _FV1
                }
            }
        } else this._kd1();
        _GV1 = _xx;
        _7T1 = _MV1;
        _LV1 = _DV1[_Cy]._gC;
        for (_t5 = _LV1.length - 1; _t5 >= 0; _t5--) {
            _ew = _LV1[_t5];
            if ((_ew._tU1 != _KV1) && (_ew._lw + _JV1) <= _ew._kV1) {
                _ew._rU1 = true;
                _EV1 = _ew._lw;
                _FV1 = _ew;
                return _ew
            }
        }
        if (_JV1 < _Ix) {
            _JV1 = _Ix
        }
        _ew = new _Hx(_JV1, _hV1, true);
        _ew._AO1 = _Cy;
        _ew._rU1 = true;
        _EV1 = _ew._lw;
        _FV1 = _ew;
        _DV1[_Cy]._3C(_ew);
        return _ew
    }
}

function _hO1() {
    var _HN1 = this._fO1;
    var _OV1 = 1, _PV1 = false, _QV1 = [], _RV1 = 0, _SV1 = 0;
    Object.defineProperties(this, {
        _qy: {
            get: function () {
                return _QV1
            }, set: function (_rz) {
                _QV1 = _rz
            }
        }, _vy: {
            get: function () {
                return _SV1
            }, set: function (_rz) {
                _SV1 = _rz
            }
        }, _wy: {
            get: function () {
                return _RV1
            }, set: function (_rz) {
                _RV1 = _rz
            }
        }, _xO1: {
            get: function () {
                return _PV1
            }, set: function (_rz) {
                _PV1 = _rz
            }
        }
    });

    function _TV1(_ny, _my, _UV1) {
        var _ry = {offset: _RV1, type: _ny, _sy: _my, _ty: _UV1, _nU1: 0, _mU1: 0, _oU1: false};
        return _ry
    }

    function _3C(_ny, _my, _UV1) {
        _SV1 |= _UV1;
        var _lU1 = _TV1(_ny, _my, _UV1);
        switch (_ny) {
            case _gw._Ly:
            case _gw._1z:
                _RV1 += 4;
                _lU1._nU1 = _HN1.UNSIGNED_BYTE;
                _lU1._mU1 = 4;
                _lU1._oU1 = true;
                break;
            case _gw._Wy:
                _RV1 += 4;
                _lU1._nU1 = _HN1.FLOAT;
                _lU1._mU1 = 1;
                _lU1._oU1 = false;
                break;
            case _gw._Gy:
                _RV1 += 8;
                _lU1._nU1 = _HN1.FLOAT;
                _lU1._mU1 = 2;
                _lU1._oU1 = false;
                break;
            case _gw._Iy:
                _RV1 += 12;
                _lU1._nU1 = _HN1.FLOAT;
                _lU1._mU1 = 3;
                _lU1._oU1 = false;
                break;
            case _gw.__y:
                _RV1 += 16;
                _lU1._nU1 = _HN1.FLOAT;
                _lU1._mU1 = 4;
                _lU1._oU1 = false;
                break
        }
        _QV1.push(_lU1)
    }

    this._VV1 = function () {
        _3C(_gw._Gy, _gw._Fy, _OV1);
        _OV1 = _OV1 << 1
    };
    this._sO1 = function () {
        _3C(_gw._Iy,
            _gw._Fy, _OV1);
        _OV1 = _OV1 << 1
    };
    this._tO1 = function () {
        _3C(_gw._Ly, _gw._Ky, _OV1);
        _OV1 = _OV1 << 1
    };
    this._vO1 = function () {
        _3C(_gw._Iy, _gw._Uy, _OV1);
        _OV1 = _OV1 << 1
    };
    this._uO1 = function () {
        _3C(_gw._Gy, _gw._Sy, _OV1);
        _OV1 = _OV1 << 1;
    };
    this._WV1 = function (_ny, _my) {
        if ((_ny < _gw._Wy) || (_ny > _gw._pR1)) {
            debug("ERROR vertex_format_add_custom: illegal types");
            return
        }
        if ((_my < _gw._Fy) || (_my > _gw._oR1)) {
            debug("ERROR vertex_format_add_custom: illegal usage");
            return
        }
        _3C(_ny, _my, _OV1);
        _OV1 = _OV1 << 1
    };
    this._Yi1 = function (_zO1) {
        if (_QV1.length !== _zO1._qy.length) {
            return false
        }
        for (var _t5 = 0; _t5 < _QV1.length; _t5++) {
            var _XV1 = _QV1[_t5];
            var _YV1 = _zO1._qy[_t5];
            if ((_XV1.offset !== _YV1.offset) || (_XV1.type !== _YV1.type) || (_XV1._sy !== _YV1._sy) || (_XV1._ty !== _YV1._ty) || (_XV1._nU1 !== _YV1._nU1) || (_XV1._mU1 !== _YV1._mU1)) {
                return false
            }
        }
        return true
    }
}

function _ZV1(color) {
    return (((color._Kt * 255) & 0xff) << 0) | (((color._gv * 255) & 0xff) << 8) | (((color._Nt * 255) & 0xff) << 16)
}

function __V1(vertices, vertexCount, color) {
    _Bh(_ZV1(color));
    var scale = 1.0 / this._0W1._G71;
    for (var _tt = 0; _tt < vertexCount; ++_tt) {
        var _1W1 = vertices[_tt];
        var _2W1 = vertices[(_tt + 1) % vertexCount];
        _Io(_1W1.x * scale, _1W1.y * scale, _2W1.x * scale, _2W1.y * scale)
    }
}

function _3W1(vertices, vertexCount, color) {
    _Bh(_ZV1(color));
    var scale = 1.0 / this._0W1._G71;
    var _1W1 = vertices[0];
    for (var _tt = 2; _tt < vertexCount; ++_tt) {
        var _2W1 = vertices[_tt - 1];
        var _4W1 = vertices[_tt];
        _hp(_1W1.x * scale, _1W1.y * scale, _2W1.x * scale, _2W1.y * scale, _4W1.x * scale, _4W1.y * scale, false)
    }
}

function _5W1(_tk1, _uk1, color) {
    _Bh(_ZV1(color));
    var scale = 1.0 / this._0W1._G71;
    _yU((_tk1.x - _uk1) * scale, (_tk1.y - _uk1) * scale, (_tk1.x + _uk1) * scale,
        (_tk1.y + _uk1) * scale, true)
}

function _6W1(_tk1, _uk1, _wk1, color) {
    _Bh(_ZV1(color));
    var scale = 1.0 / this._0W1._G71;
    _yU((_tk1.x - _uk1) * scale, (_tk1.y - _uk1) * scale, (_tk1.x + _uk1) * scale, (_tk1.y + _uk1) * scale, false)
}

function _7W1(_yk1, _zk1, color) {
    _Bh(_ZV1(color));
    var scale = 1.0 / this._0W1._G71;
    _Io(_yk1.x * scale, _yk1.y * scale, _zk1.x * scale, _zk1.y * scale)
}

function _8W1(_uj1) {
    var _9W1 = 0.4;
    var scale = 1.0 / this._0W1._G71;
    var _yk1 = _uj1._lT, _zk1 = new _aW1._bW1();
    _zk1.x = _yk1.x + _9W1 * _uj1._7S._rj1().x;
    _zk1.y = _yk1.y + _9W1 * _uj1._7S._rj1().y;
    _Bh(_cW1);
    _Io(_yk1.x * scale, _yk1.y * scale, _zk1.x * scale, _zk1.y * scale);
    _zk1.x = _yk1.x + _9W1 * _uj1._7S._sj1().x;
    _zk1.y = _yk1.y + _9W1 * _uj1._7S._sj1().y;
    _Bh(_dW1);
    _Io(_yk1.x * scale, _yk1.y * scale, _zk1.x * scale, _zk1.y * scale)
}

function _eW1(_Ck1, _uk1, _Dk1, _Gu) {
    for (var _tt = 0; _tt < _Gu; _tt++) {
        var scale = 1.0 / this._0W1._G71;
        _Bh(((_Dk1[_tt]._Kt & 0xff) << 0) | ((_Dk1[_tt]._gv & 0xff) << 8) | ((_Dk1[_tt]._Nt & 0xff) << 16));
        _yU((_Ck1[_tt].x - _uk1) * scale, (_Ck1[_tt].y - _uk1) * scale, (_Ck1[_tt].x + _uk1) * scale, (_Ck1[_tt].y + _uk1) * scale, true)
    }
}

function _a71(_c71) {
    this._Bu1 = 0;
    this._Cu1 = 0;
    this._fW1 = _c71;
    this._gW1 = false;
    this._hW1 = true;
    this._iW1 = false;
    this._jW1 = new _aW1._kW1();
    this._Fl1 = null
};_a71.prototype._E71 = function (_lW1) {
    this._Fl1 = null;
    this._jW1._gl1 = new _aW1._mW1();
    this._jW1._gl1._Wk1 = _lW1
};
_a71.prototype._I71 = function () {
    this._Fl1 = [];
    this._jW1._gl1 = new _aW1._nW1()
};
_a71.prototype._M71 = function (_Ps, _Qs) {
    var vertexCount = this._Fl1.length;
    this._Fl1[vertexCount] = new _aW1._bW1(_Ps, _Qs)
};
_a71.prototype._oW1 = function () {
    if (this._Fl1 === null || this._Fl1 === undefined) {
        return true
    }
    if (this._jW1._gl1._L_ === _aW1._pW1._bl1) {
        if (this._Fl1.length > 2) {
            this._jW1._gl1._rC(this._Fl1, this._Fl1.length);
            return true
        }
    } else if (this._jW1._gl1._L_ === _aW1._pW1._cl1) {
        if (this._iW1) {
            if (this._Fl1.length >= 3) {
                this._jW1._gl1._Ml1(this._Fl1, this._Fl1.length);
                return true
            }
        } else {
            if (this._Fl1.length >= 2) {
                this._jW1._gl1._Nl1(this._Fl1, this._Fl1.length);
                return true
            }
        }
    }
    return false
};
_a71.prototype._q71 = function (_p71) {
    this._jW1._QG._iw1 = _p71
};
_a71.prototype._n71 = function (_m71) {
    this._jW1._Sf = _m71
};
_a71.prototype._k71 = function (_j71) {
    this._jW1._jw1 = _j71
};
_a71.prototype._h71 = function (_g71) {
    this._jW1._5l1 = _g71
};
_a71.prototype._t71 = function (_qW1) {
    this._jW1._kw1 = _qW1
};
_a71.prototype._w71 = function (_v71) {
    this._Bu1 = _v71
};
_a71.prototype._y71 = function (_v71) {
    this._Cu1 = _v71
};
_a71.prototype._y71 = function (_v71) {
    this._Cu1 = _v71
};
_a71.prototype._B71 = function (_A71) {
    this._hW1 = _A71
};
_a71.prototype._e71 = function () {
    this._gW1 = true
};
var _rW1 = 0, _sW1 = 1, _tW1 = 2, _uW1 = 3, _vW1 = 4, _wW1 = 5, _xW1 = 6, _yW1 = 7, _zW1 = 8, _AW1 = 9, _BW1 = 10,
    _CW1 = 11, _DW1 = 12, _EW1 = 13, _FW1 = 14, _GW1 = 15,
    _HW1 = 16, _IW1 = 17, _JW1 = 18, _KW1 = 19, _LW1 = 20, _MW1 = 21, _NW1 = 22, _OW1 = 23, _PW1 = 24;

function _QW1(_RW1) {
    this._SW1 = _RW1
};_QW1.prototype._pI1 = function (_TW1) {
    if ((this._SW1 instanceof _aW1._UW1) || (this._SW1 instanceof _aW1._VW1) || (this._SW1 instanceof _aW1._WW1)) {
        this._SW1._cz1()._B71(true);
        this._SW1._dz1()._B71(true);
        this._SW1._pI1(_TW1)
    }
};

function _XW1(_YW1, _ZW1, _O71, _P71) {
    this.__W1 = _YW1;
    this._0X1 = _ZW1;
    this._1X1 = new _aW1._bW1(_O71, _P71);
    this._2X1 = []
};_XW1.prototype._pv1 = function (_3X1, _4X1, _5X1, _6X1) {
    this.__W1._pv1(new _aW1._bW1(_5X1,
        _6X1), new _aW1._bW1(_3X1, _4X1), true)
};
_XW1.prototype._xv1 = function (_7X1) {
    this.__W1._xv1(_7X1, true)
};
_XW1.prototype._tv1 = function (_8X1) {
    this.__W1._tv1(_8X1, true)
};
_XW1.prototype._9X1 = function (_aX1) {
    var position = this.__W1._371();
    this.__W1._hv1(position, (_aX1 * Math.PI) / 180.0);
    this.__W1._B71(true)
};
_XW1.prototype._bX1 = function (_dC) {
    var angle = this.__W1._qj1();
    var _nv = this.__W1._371().y;
    this.__W1._hv1(new _aW1._bW1(_dC, _nv), angle);
    this.__W1._B71(true)
};
_XW1.prototype._cX1 = function (_dC) {
    var angle = this.__W1._qj1();
    var _mv = this.__W1._371().x;
    this.__W1._hv1(new _aW1._bW1(_mv, _dC), angle);
    this.__W1._B71(true)
};
_XW1.prototype._nv1 = function (_dX1) {
    this.__W1._nv1((_dX1 * Math.PI) / 180.0);
    this.__W1._B71(true)
};
_XW1.prototype._eX1 = function (_fX1) {
    var _gX1 = this.__W1._mv1();
    this.__W1._lv1(new _aW1._bW1(_fX1, _gX1.y));
    this.__W1._B71(true)
};
_XW1.prototype._hX1 = function (_fX1) {
    var _gX1 = this.__W1._mv1();
    this.__W1._lv1(new _aW1._bW1(_gX1.x, _fX1));
    this.__W1._B71(true)
};
_XW1.prototype._Vv1 = function (_iX1) {
    this.__W1._Vv1(_iX1)
};
_XW1.prototype._2w1 = function (_jX1) {
    this.__W1._2w1(_jX1)
};
_XW1.prototype._0w1 = function (_kX1) {
    this.__W1._0w1(_kX1)
};
_XW1.prototype._lX1 = function (_mX1) {
    var _d71 = this.__W1._4w1();
    while ((_d71 != null) && (_d71 != undefined)) {
        var _gl1 = _d71._rw1();
        var _nX1 = this.__W1._371();
        if (_gl1 instanceof _aW1._mW1) {
            _yU((_nX1.x - _gl1._Wk1) * _mX1, (_nX1.y - _gl1._Wk1) * _mX1, (_nX1.x + _gl1._Wk1) * _mX1, (_nX1.y + _gl1._Wk1) * _mX1, true)
        } else if (_gl1 instanceof _aW1._nW1) {
            var _oX1 = Math.sin(this.__W1._qj1());
            var _pX1 = Math.cos(this.__W1._qj1());
            for (var _tt = 0; _tt < _gl1._Gl1; ++_tt) {
                var _1W1 = _gl1._Fl1[_tt];
                var _2W1 = _gl1._Fl1[(_tt + 1) % _gl1._Gl1];
                _Io((_nX1.x + ((_1W1.x * _pX1) - (_1W1.y * _oX1))) * _mX1, (_nX1.y + ((_1W1.x * _oX1) + (_1W1.y * _pX1))) * _mX1, (_nX1.x + ((_2W1.x * _pX1) - (_2W1.y * _oX1))) * _mX1, (_nX1.y + ((_2W1.x * _oX1) + (_2W1.y * _pX1))) * _mX1)
            }
        }
        _d71 = _d71._yu1
    }
};
_XW1.prototype._qX1 = function (_mX1) {
    var _cw1 = this.__W1._vu1;
    while ((_cw1 != null) && (_cw1 != undefined)) {
        var _dw1 = _cw1._dw1;
        if (_dw1 instanceof _aW1._UW1) {
            this._rX1(_dw1, _mX1)
        } else if (_dw1 instanceof _aW1._VW1) {
            this._sX1(_dw1, _mX1)
        } else if (_dw1 instanceof _aW1._tX1) {
            this._uX1(_dw1,
                _mX1)
        } else if (_dw1 instanceof _aW1._vX1) {
            this._wX1(_dw1, _mX1)
        } else if (_dw1 instanceof _aW1._xX1) {
            if (_dw1._yX1 != null) {
                this._rX1(_dw1._yX1, _mX1)
            }
            if (_dw1._zX1 != null) {
                this._rX1(_dw1._zX1, _mX1)
            }
            if (_dw1._AX1 != null) {
                this._sX1(_dw1._AX1, _mX1)
            }
            if (_dw1._BX1 != null) {
                this._sX1(_dw1._BX1, _mX1)
            }
        }
        _cw1 = _cw1._yu1
    }
};
_XW1.prototype._uX1 = function (_CX1, _mX1) {
    var _3J1 = _CX1._ez1();
    var _4J1 = _CX1._fz1();
    _Io(_3J1.x * _mX1, _3J1.y * _mX1, _4J1.x * _mX1, _4J1.y * _mX1)
};
_XW1.prototype._rX1 = function (_CX1, _mX1) {
    var anchor = _CX1._ez1();
    _Io((anchor.x * _mX1) - 2,
        (anchor.y * _mX1) - 2, (anchor.x * _mX1) + 2, (anchor.y * _mX1) + 2);
    _Io((anchor.x * _mX1) - 2, (anchor.y * _mX1) + 2, (anchor.x * _mX1) + 2, (anchor.y * _mX1) - 2)
};
_XW1.prototype._sX1 = function (_CX1, _mX1) {
    var _3J1 = _CX1._ez1();
    var _4J1 = this.__W1._371();
    _Io(_3J1.x * _mX1, _3J1.y * _mX1, _4J1.x * _mX1, _4J1.y * _mX1)
};
_XW1.prototype._wX1 = function (_CX1, _mX1) {
    var anchor, _DX1;
    if (_CX1._EX1() == this.__W1) {
        anchor = _CX1._ez1();
        _DX1 = _CX1._jz1()
    } else {
        anchor = _CX1._fz1();
        _DX1 = _CX1._kz1()
    }
    _Io(anchor.x * _mX1, anchor.y * _mX1, _DX1.x * _mX1, _DX1.y * _mX1);
    _Io(_CX1._jz1().x * _mX1,
        _CX1._jz1().y * _mX1, _CX1._kz1().x * _mX1, _CX1._kz1().y * _mX1)
};
_XW1.prototype._FX1 = function (_GX1) {
    for (var _t5 = 0; _t5 < this._2X1.length; _t5++) {
        if (this._2X1[_t5] == null || this._2X1[_t5] == undefined) {
            this._2X1[_t5] = _GX1;
            return _t5
        }
    }
    return (this._2X1.push(_GX1) - 1)
};
_XW1.prototype._HX1 = function (_IX1) {
    if (this._2X1[_IX1]) {
        this.__W1._9v1(this._2X1[_IX1]);
        this._2X1[_IX1] = undefined
    }
};
_XW1.prototype._Aw1 = function (_IX1) {
    if (this._2X1[_IX1]) {
        return this._2X1[_IX1]._Aw1()
    }
    return 0.0
};
_XW1.prototype._zw1 = function (_IX1) {
    if (this._2X1[_IX1]) {
        return this._2X1[_IX1]._zw1()
    }
    return 0.0
};
_XW1.prototype._Bw1 = function (_IX1) {
    if (this._2X1[_IX1]) {
        return this._2X1[_IX1]._Bw1()
    }
    return 0.0
};
_XW1.prototype._n71 = function (_IX1, _qs) {
    if (this._2X1[_IX1]) {
        this._2X1[_IX1]._n71(_qs)
    }
};
_XW1.prototype._h71 = function (_IX1, _qs) {
    if (this._2X1[_IX1]) {
        this._2X1[_IX1]._h71(_qs);
        this.__W1._6v1()
    }
};
_XW1.prototype._k71 = function (_IX1, _qs) {
    if (this._2X1[_IX1]) {
        this._2X1[_IX1]._k71(_qs)
    }
};
var _JX1 = 10, _KX1 = 32, _LX1 = (1 << 0), _MX1 = (1 << 1), _NX1 = (1 << 2), _OX1 = (1 << 3), _PX1 = (1 << 4),
    _QX1 = (1 << 5),
    _RX1 = (1 << 6);
var _aW1 = null;

function _SX1() {
    if (_aW1 === null) {
        var __Q = window["b2"];
        _aW1 = {};
        _aW1.version = __Q["version"];
        _aW1._bW1 = __Q["Vec2"];
        _aW1._TX1 = __Q["Vec3"];
        _aW1._UX1 = __Q["Mat22"];
        _aW1._VX1 = __Q["Mat33"];
        _aW1._WX1 = __Q["Rot"];
        _aW1._XX1 = __Q["Transform"];
        _aW1._YX1 = __Q["Sweep"];
        _aW1._ZX1 = __Q["Dot_v2_v2"];
        _aW1.__X1 = __Q["Cross_v2_v2"];
        _aW1._0Y1 = __Q["Cross_v2_f"];
        _aW1._1Y1 = __Q["Cross_f_v2"];
        _aW1._2Y1 = __Q["Mul_m22_v2"];
        _aW1._3Y1 = __Q["MulT_m22_v2"];
        _aW1._4Y1 = __Q["Distance"];
        _aW1._5Y1 = __Q["DistanceSquared"];
        _aW1._6Y1 = __Q["Dot_v3_v3"];
        _aW1._7Y1 = __Q["Cross_v3_v3"];
        _aW1._8Y1 = __Q["Mul_m22_m22"];
        _aW1._9Y1 = __Q["MulT_m22_m22"];
        _aW1._aY1 = __Q["Mul_m33_v3"];
        _aW1._bY1 = __Q["Mul22_m33_v2"];
        _aW1._cY1 = __Q["Mul_r_r"];
        _aW1._dY1 = __Q["MulT_r_r"];
        _aW1._eY1 = __Q["Mul_r_v2"];
        _aW1._fY1 = __Q["MulT_r_v2"];
        _aW1._gY1 = __Q["Mul_t_v2"];
        _aW1._hY1 = __Q["Min_v2"];
        _aW1._iY1 = __Q["Max_v2"];
        _aW1._jY1 = __Q["Clamp"];
        _aW1._kY1 = __Q["MulT_t_v2"];
        _aW1._lY1 = __Q["Mul_t_t"];
        _aW1._mY1 = __Q["MulT_t_t"];
        _aW1._nY1 = __Q["Clamp_v2"];
        _aW1._oY1 = __Q["NextPowerOfTwo"];
        _aW1._pY1 = __Q["Abs_v2"];
        _aW1._qY1 = __Q["Abs_m22"];
        _aW1._rY1 = __Q["IsPowerOfTwo"];
        _aW1._sY1 = __Q["RandomFloat"];
        _aW1._tY1 = __Q["Timer"];
        _aW1._uY1 = __Q["Color"];
        _aW1._7v = __Q["Draw"];
        _aW1._vY1 = __Q["ContactID"];
        _aW1._wY1 = __Q["ManifoldPoint"];
        _aW1._xY1 = __Q["Manifold"];
        _aW1._yY1 = __Q["WorldManifold"];
        _aW1._zY1 = __Q["GetPointStates"];
        _aW1._AY1 = __Q["ClipVertex"];
        _aW1._BY1 = __Q["RayCastInput"];
        _aW1._CY1 = __Q["RayCastOutput"];
        _aW1._DY1 = __Q["AABB"];
        _aW1._EY1 = __Q["CollideCircles"];
        _aW1._FY1 = __Q["CollidePolygonAndCircle"];
        _aW1._GY1 = __Q["FindMaxSeparation"];
        _aW1._HY1 = __Q["FindIncidentEdge"];
        _aW1._IY1 = __Q["CollidePolygons"];
        _aW1._JY1 = __Q["CollideEdgeAndCircle"];
        _aW1._KY1 = __Q["EPAxis"];
        _aW1._LY1 = __Q["TempPolygon"];
        _aW1._MY1 = __Q["ReferenceFace"];
        _aW1._NY1 = __Q["EPCollider"];
        _aW1._OY1 = __Q["CollideEdgeAndPolygon"];
        _aW1._PY1 = __Q["ClipSegmentToLine"];
        _aW1._QY1 = __Q["TestShapeOverlap"];
        _aW1.__m1 = __Q["TestOverlap"];
        _aW1._pW1 = __Q["Shape"];
        _aW1._RY1 = __Q["MassData"];
        _aW1._mW1 = __Q["CircleShape"];
        _aW1._SY1 = __Q["EdgeShape"];
        _aW1._TY1 = __Q["ChainShape"];
        _aW1._nW1 = __Q["PolygonShape"];
        _aW1._4C1 = __Q["Pair"];
        _aW1._UY1 = __Q["PairLessThan"];
        _aW1._VY1 = __Q["BroadPhase"];
        _aW1._WY1 = __Q["DistanceProxy"];
        _aW1._XY1 = __Q["SimplexCache"];
        _aW1._YY1 = __Q["DistanceInput"];
        _aW1._ZY1 = __Q["DistanceOutput"];
        _aW1.__Y1 = __Q["SimplexVertex"];
        _aW1._0Z1 = __Q["Simplex"];
        _aW1._1Z1 = __Q["DistanceFunc"];
        _aW1._2Z1 = __Q["TreeNode"];
        _aW1._3Z1 = __Q["DynamicTree"];
        _aW1._4Z1 = __Q["TOIInput"];
        _aW1._5Z1 = __Q["TOIOutput"];
        _aW1._6Z1 = __Q["SeparationFunction"];
        _aW1._7Z1 = __Q["TimeOfImpact"];
        _aW1._8Z1 = __Q["BodyDef"];
        _aW1._9Z1 = __Q["Body"];
        _aW1._aZ1 = __Q["Filter"];
        _aW1._kW1 = __Q["FixtureDef"];
        _aW1._bZ1 = __Q["Fixture"];
        _aW1._cZ1 = __Q["DestructionListener"];
        _aW1._dZ1 = __Q["ContactFilter"];
        _aW1._eZ1 = __Q["ContactImpulse"];
        _aW1._fZ1 = __Q["ContactListener"];
        _aW1._ln1 = __Q["QueryCallback"];
        _aW1._ys1 = __Q["RayCastCallback"];
        _aW1._gZ1 = __Q["TimeStep"];
        _aW1._hZ1 = __Q["Position"];
        _aW1._iZ1 = __Q["Velocity"];
        _aW1._jZ1 = __Q["SolverData"];
        _aW1._kZ1 = __Q["World"];
        _aW1._lZ1 = __Q["MixFriction"];
        _aW1._mZ1 = __Q["MixRestitution"];
        _aW1._nZ1 = __Q["ContactRegister"];
        _aW1._oZ1 = __Q["ContactEdge"];
        _aW1._pZ1 = __Q["Contact"];
        _aW1._qZ1 = __Q["CircleContact"];
        _aW1._rZ1 = __Q["PolygonContact"];
        _aW1._sZ1 = __Q["ChainAndCircleContact"];
        _aW1._tZ1 = __Q["ChainAndPolygonContact"];
        _aW1._uZ1 = __Q["EdgeAndCircleContact"];
        _aW1._vZ1 = __Q["EdgeAndPolygonContact"];
        _aW1._wZ1 = __Q["PolygonAndCircleContact"];
        _aW1._xZ1 = __Q["defaultFilter"];
        _aW1._yZ1 = __Q["defaultListener"];
        _aW1._zZ1 = __Q["ContactManager"];
        _aW1._AZ1 = __Q["VelocityConstraintPoint"];
        _aW1._BZ1 = __Q["ContactPositionConstraint"];
        _aW1._CZ1 = __Q["ContactVelocityConstraint"];
        _aW1._DZ1 = __Q["PositionSolverManifold"];
        _aW1._EZ1 = __Q["ContactSolverDef"];
        _aW1._FZ1 = __Q["ContactSolver"];
        _aW1._GZ1 = __Q["Island"];
        _aW1._HZ1 = __Q["Jacobian"];
        _aW1._IZ1 = __Q["JointEdge"];
        _aW1._JZ1 = __Q["JointDef"];
        _aW1._KZ1 = __Q["Joint"];
        _aW1._LZ1 = __Q["RevoluteJointDef"];
        _aW1._UW1 = __Q["RevoluteJoint"];
        _aW1._MZ1 = __Q["MouseJointDef"];
        _aW1._NZ1 = __Q["MouseJoint"];
        _aW1._OZ1 = __Q["DistanceJointDef"];
        _aW1._tX1 = __Q["DistanceJoint"];
        _aW1._PZ1 = __Q["PrismaticJointDef"];
        _aW1._VW1 = __Q["PrismaticJoint"];
        _aW1._QZ1 = __Q["FrictionJointDef"];
        _aW1._RZ1 = __Q["FrictionJoint"];
        _aW1._SZ1 = __Q["WeldJointDef"];
        _aW1._TZ1 = __Q["WeldJoint"];
        _aW1._UZ1 = __Q["WheelJointDef"];
        _aW1._WW1 = __Q["WheelJoint"];
        _aW1._VZ1 = __Q["GearJointDef"];
        _aW1._xX1 = __Q["GearJoint"];
        _aW1._WZ1 = __Q["MotorJointDef"];
        _aW1._XZ1 = __Q["MotorJoint"];
        _aW1._YZ1 = __Q["PulleyJointDef"];
        _aW1._vX1 = __Q["PulleyJoint"];
        _aW1._ZZ1 = __Q["RopeJointDef"];
        _aW1.__Z1 = __Q["RopeJoint"];
        _aW1._0_1 = __Q["RopeDef"];
        _aW1._1_1 = __Q["Rope"];
        _aW1._2_1 = __Q["maxManifoldPoints"];
        _aW1._3_1 = __Q["maxPolygonVertices"];
        _aW1._4_1 = __Q["aabbExtension"];
        _aW1._5_1 = __Q["aabbMultiplier"];
        _aW1._6_1 = __Q["linearSlop"];
        _aW1._7_1 = __Q["angularSlop"];
        _aW1._8_1 = __Q["polygonRadius"];
        _aW1._9_1 = __Q["maxSubSteps"];
        _aW1._a_1 = __Q["maxTOIContacts"];
        _aW1._b_1 = __Q["velocityThreshold"];
        _aW1._c_1 = __Q["maxLinearCorrection"];
        _aW1._d_1 = __Q["maxAngularCorrection"];
        _aW1._e_1 = __Q["maxTranslation"];
        _aW1._f_1 = __Q["maxTranslationSquared"];
        _aW1._g_1 = __Q["maxRotation"];
        _aW1._h_1 = __Q["maxRotationSquared"];
        _aW1._i_1 = __Q["baumgarte"];
        _aW1._j_1 = __Q["toiBaugarte"];
        _aW1._k_1 = __Q["timeToSleep"];
        _aW1._l_1 = __Q["linearSleepTolerance"];
        _aW1._m_1 = __Q["angularSleepTolerance"];
        _aW1._n_1 = __Q["epsilon"];
        _aW1._o_1 = __Q["JsonSerializer"];
        _aW1._p_1 = __Q["RUBELoader"];
        _aW1._q_1 = __Q["Profiler"];
        _aW1._r_1 = __Q["ParticleDef"];
        _aW1._s_1 = __Q["ParticleColor"];
        _aW1._t_1 = __Q["ParticleGroupDef"];
        _aW1._u_1 = __Q["ParticleGroup"];
        _aW1._v_1 = __Q["ParticleSystem"]
    }
}

function _w_1(_x_1) {
    var _LE1 = new _aW1._yY1();
    _x_1._KE1(_LE1);
    this._y_1 = _x_1._cv1();
    this._z_1 = _x_1._ev1();
    this._A_1 = [];
    this._B_1 = [];
    this._A_1[0] = _x_1._JE1();
    this._B_1[0] = _LE1
}
;

function _C_1(_D_1, _E_1, _F_1) {
    this._G_1 = _D_1;
    this._gw1 = _E_1;
    this._hw1 = _F_1
};

function _H_1(_I_1, _J_1) {
    _SX1();
    if (_aW1 === null) {
        _aW1 = window["b2"]
    }
    this._G71 = _I_1;
    this._K_1 = _J_1;
    this._L_1 = _JX1;
    this._wu1 = [];
    this._M_1 = [];
    this._N_1 = new _aW1._t_1();
    this._Px1 = null;
    this._sS = false;
    this._O_1 = [];
    for (var _t5 = 0; _t5 < _KX1; _t5++) {
        this._O_1[_t5] = new _C_1(-1, 0, 0)
    }
    var _Zf = new _aW1._bW1(0, 10);
    this._su1 = new _aW1._kZ1(_Zf);
    this._P_1();
    this._Q_1();
    this._Bk1 = _uu ? this._R_1 : this._S_1;
    this._T_1 = _uu ? this._U_1 : this._V_1
};_H_1.prototype._P_1 = function () {
    var _Vv = document.getElementById("canvas").getContext("2d");
    if (_Vv) {
        this._Px1 = new _aW1._7v();
        this._Px1._kk1(_aW1._7v._Ek1 | _aW1._7v._Fk1);
        this._Px1._0W1 = this;
        this._Px1._qk1 = __V1;
        this._Px1._rk1 = _3W1;
        this._Px1._sk1 = _5W1;
        this._Px1._vk1 = _6W1;
        this._Px1._xk1 = _7W1;
        this._Px1._Ak1 = _8W1;
        this._Px1._Bk1 = _eW1;
        this._su1._Ox1(this._Px1)
    }
};
_H_1.prototype._Q_1 = function () {
    var _W_1 = new _aW1._fZ1();
    _W_1._X_1 = this;
    _W_1._Uw1 = function (_av1) {
        if (_av1._cv1()._tw1() || _av1._ev1()._tw1()) {
            this._X_1._Y_1(_av1)
        }
    };
    _W_1._Ww1 = function (_av1,
                          _Xw1) {
    };
    _W_1._Vw1 = function (_av1) {
    };
    _W_1._Yw1 = function (_av1, _Z_1) {
        this._X_1._Y_1(_av1)
    };
    this._su1._Mx1(_W_1)
};
_H_1.prototype._Y_1 = function (_x_1) {
    for (var _tt = 0; _tt < this._wu1.length; _tt++) {
        var ___1 = this._wu1[_tt];
        if ((___1._y_1 == _x_1._cv1() && ___1._z_1 == _x_1._ev1()) || (___1._y_1 == _x_1._ev1() && ___1._z_1 == _x_1._cv1())) {
            var _LE1 = new _aW1._yY1();
            _x_1._KE1(_LE1);
            ___1._A_1[___1._A_1.length] = _x_1._JE1();
            ___1._B_1[___1._B_1.length] = _LE1;
            return
        }
    }
    this._wu1[this._wu1.length] = new _w_1(_x_1)
};
_H_1.prototype._002 = function (_V31) {
    this._K_1 = _V31
};
_H_1.prototype._Cy1 = function (_102, _202) {
    this._su1._ux1.x = _102;
    this._su1._ux1.y = _202;
    if ((_102 != 0.0) || (_202 != 0.0)) {
        var _302 = this._su1._py1();
        while ((_302 != null) && (_302 != undefined)) {
            if (_302._Xk1() === _aW1._9Z1._Hu1) {
                _302._B71(true)
            }
            _302 = _302._7w1()
        }
    }
};
_H_1.prototype._402 = function () {
    var _gC = _js._tZ._gC;
    for (var index = 0; index < _gC.length; index++) {
        var _NW = _gC[index];
        if (_NW._502 >= 0) {
            var _602 = _NW._702;
            if (_602 !== null && _602 !== undefined) {
                var _302 = _602.__W1;
                if (_302._Xk1() !== _aW1._9Z1._Hu1) {
                    if (_NW._802()) {
                        _NW._8t(_902, 0, _NW, _NW)
                    }
                    _302._hv1(new _aW1._bW1(_NW.x * this._G71, _NW.y * this._G71), _302._qj1())
                }
            } else {
                if (_NW._802()) {
                    _NW._8t(_902, 0, _NW, _NW)
                }
            }
        }
    }
};
_H_1.prototype._a02 = function () {
    var _b02 = 1.0 / this._G71;
    var _302 = this._su1._py1();
    while ((_302 != null) && (_302 != undefined)) {
        var _NW = _302._Zm1();
        if ((_NW != null) && (_NW != undefined)) {
            _NW._c02(_302);
            var _eC = _302._371();
            _NW._d02 = _eC.x * _b02;
            _NW._e02 = _eC.y * _b02
        }
        _302 = _302._7w1()
    }
};
_H_1.prototype._OA = function (_f02) {
    if (_f02 <= 0) {
        return
    }
    this._402();
    if (this._sS == true) {
        return
    }
    this._a02();
    var _g02 = 1.0 / this._K_1;
    var _h02 = this._K_1 / _f02;
    var _i02 = _h02;
    while (_i02 > 0.0) {
        var _j02 = (_i02 > 1.0) ? _g02 : (_g02 * _i02);
        this._su1._5y1(_j02, this._L_1, this._L_1);
        _i02 -= 1.0
    }
    this._su1._9y1();
    this._k02();
    this._l02()
};
_H_1.prototype._k02 = function () {
    var _b02 = 1.0 / this._G71;
    var _302 = this._su1._py1();
    while ((_302 != null) && (_302 != undefined)) {
        var _NW = _302._Zm1();
        if ((_NW != null) && (_NW != undefined)) {
            _NW._c02(_302)
        }
        _302 = _302._7w1()
    }
};
_H_1.prototype._l02 = function () {
    var _b02 = 1.0 / this._G71;
    for (var _t5 = 0; _t5 < this._wu1.length; _t5++) {
        if (this._wu1[_t5]._y_1 && this._wu1[_t5]._z_1 && this._wu1[_t5]._y_1._yw1() && this._wu1[_t5]._z_1._yw1()) {
            var _m02 = this._wu1[_t5]._y_1._yw1()._Zm1();
            var _n02 = this._wu1[_t5]._z_1._yw1()._Zm1();
            _m02._o02 = 0;
            _m02._p02 = [];
            _m02._q02 = [];
            _m02._r02 = [];
            _m02._s02 = [];
            _n02._o02 = 0;
            _n02._p02 = [];
            _n02._q02 = [];
            _n02._r02 = [];
            _n02._s02 = [];
            var _t02 = 0;
            for (var _u02 = 0; _u02 < this._wu1[_t5]._A_1.length; _u02++) {
                var _LE1 = this._wu1[_t5]._B_1[_u02];
                for (var _Rt in _LE1._Yo1) {
                    if (!_LE1._Yo1.hasOwnProperty(_Rt)) continue;
                    _m02._p02[_t02] = _LE1._Yo1[_Rt].x * _b02;
                    _m02._q02[_t02] = _LE1._Yo1[_Rt].y * _b02;
                    _m02._r02[_t02] = _LE1._8l1.x;
                    _m02._s02[_t02] = _LE1._8l1.y;
                    _n02._p02[_t02] = _LE1._Yo1[_Rt].x * _b02;
                    _n02._q02[_t02] = _LE1._Yo1[_Rt].y * _b02;
                    _n02._r02[_t02] = _LE1._8l1.x;
                    _n02._s02[_t02] = _LE1._8l1.y;
                    _m02._o02++;
                    _n02._o02++;
                    _t02++
                }
            }
            _m02._8t(_v02, _n02._w02, _m02, _n02);
            _n02._8t(_v02, _m02._w02, _n02, _m02);
            _m02._o02 = 0;
            _m02._p02 = undefined;
            _m02._q02 = undefined;
            _m02._r02 = undefined;
            _m02._s02 = undefined;
            _n02._o02 = 0;
            _n02._p02 = undefined;
            _n02._q02 = undefined;
            _n02._r02 = undefined;
            _n02._s02 = undefined
        }
    }
    this._wu1 = []
};
_H_1.prototype._T71 = function (_GX1, _x02, _O71, _P71) {
    var _Q71 = -1;
    if (!_GX1._oW1()) {
        return
    }
    var _y02 = this._z02(_x02._w02);
    if (_y02 != -1) {
        _GX1._jW1._QG._gw1 = this._O_1[_y02]._gw1;
        _GX1._jW1._QG._hw1 = this._O_1[_y02]._hw1
    } else {
        _GX1._jW1._QG._gw1 = 0;
        _GX1._jW1._QG._hw1 = 0
    }
    var _A02 = (_GX1._jW1._5l1 == 0) ? (_GX1._gW1 ? _aW1._9Z1._Pu1 : _aW1._9Z1._9u1) : _aW1._9Z1._Hu1;
    var _B02 = _x02._702;
    if (_x02._702) {
        var _302 = _B02.__W1;
        var _d71 = _302._4w1();
        if ((_d71 == null) || (_d71 == undefined)) {
            _302._Pv1(_A02)
        }
        var _d71 = _302._Uu1(_GX1._jW1);
        _Q71 = _B02._FX1(_d71)
    } else {
        var _C02 = new _aW1._8Z1();
        _C02.type = _A02;
        _C02.angle = -_x02._6g * _Pt / 180.0;
        _C02._cu1 = _GX1._Bu1;
        _C02._du1 = _GX1._Cu1;
        _C02._fu1 = _GX1._hW1;
        var _D02 = _x02._E02(_C02.angle, {x: _O71, y: _P71});
        _C02.position.x = (_x02.x - _D02.x) * this._G71;
        _C02.position.y = (_x02.y - _D02.y) * this._G71;
        _C02._Qm1 = _x02;
        var _302 = this._su1._T71(_C02);
        var _d71 = _302._Uu1(_GX1._jW1);
        _B02 = new _XW1(_302, _y02, _O71, _P71);
        _x02._702 = _B02;
        _x02._c02(_302);
        _Q71 = _B02._FX1(_d71);
        this._F02()
    }
    return _Q71
};
_H_1.prototype._Qx1 = function (_G02) {
    this._su1._Qx1(_G02.__W1)
};
_H_1.prototype._Tx1 = function (_H02) {
    this._su1._Tx1(_H02._SW1)
};
_H_1.prototype._I02 = function (_D_1) {
    for (var _tt = 0; _tt < _KX1; _tt++) {
        if (this._O_1[_tt]._G_1 == _D_1) {
            return _tt
        }
    }
    return -1;
};
_H_1.prototype._J02 = function (_D_1) {
    var _K02 = this._I02(_D_1);
    if (_K02 != -1) {
        return _K02
    }
    for (var _tt = 0; _tt < _KX1; _tt++) {
        if (this._O_1[_tt]._G_1 == -1) {
            this._O_1[_tt]._G_1 = _D_1;
            this._O_1[_tt]._gw1 = (1 << _tt);
            this._O_1[_tt]._hw1 = 0;
            return _tt
        }
    }
    return -1
};
_H_1.prototype._L02 = function (_D_1) {
    var _M02 = [];
    for (var _N02 in _O02) {
        if (!_O02.hasOwnProperty(_N02)) continue;
        for (var _WE1 in _O02[_N02]) {
            if (!_O02[_N02].hasOwnProperty(_WE1)) continue;
            var _P02 = -1;
            if (_N02 == _D_1) {
                _P02 = _WE1
            } else if (_WE1 == _D_1) {
                _P02 = _N02
            }
            if (_P02 !== -1) {
                _M02[_M02.length] = _P02
            }
        }
    }
    return _M02
};
_H_1.prototype._Q02 = function (_kC, _R02) {
    for (var _HP in _4s._S02) {
        if (!_4s._S02.hasOwnProperty(_HP)) continue;
        var _T02 = _4s._S02[_HP];
        if (_T02._JZ === _kC._LZ) {
            if (this._L02(_T02._LZ).length !== 0) {
                _R02[_R02.length] = _T02._LZ
            }
            this._Q02(_T02, _R02)
        }
    }
};
_H_1.prototype._U02 = function (_D_1) {
    var _M02 = this._L02(_D_1);
    var _V02 = _D_1;
    var _W02 = _4s._RB(_D_1);
    while ((_W02._JZ >= 0) && _4s._RB(_W02._JZ)) {
        _W02 = _4s._RB(_W02._JZ);
        _M02 = _M02.concat(this._L02(_W02._LZ))
    }
    for (var _tt = 0; _tt < _M02.length; _tt++) {
        var _X02 = _M02[_tt];
        var _HP = _4s._RB(_X02);
        this._Q02(_HP, _M02)
    }
    return _M02
};
_H_1.prototype._Y02 = function (_D_1, _ZW1) {
    var _M02 = this._U02(_D_1);
    for (var _Z02 = 0; _Z02 < _M02.length; ++_Z02) {
        for (var __02 = 0; __02 < _KX1; ++__02) {
            if (this._O_1[__02]._G_1 == _M02[_Z02]) {
                this._O_1[_ZW1]._hw1 |= this._O_1[__02]._gw1;
                this._O_1[__02]._hw1 |= this._O_1[_ZW1]._gw1
            }
        }
    }
};
_H_1.prototype._z02 = function (_D_1) {
    var _y02 = this._I02(_D_1);
    if (_y02 !== -1) {
        return _y02
    }
    var _M02 = this._L02(_D_1);
    var _G_1 = _D_1;
    if (_M02.length === 0) {
        var _V02 = _D_1;
        var _W02 = _4s._RB(_D_1);
        while ((_W02._JZ >= 0) && _4s._RB(_W02._JZ)) {
            _W02 = _4s._RB(_W02._JZ);
            _G_1 = _W02._LZ;
            _M02 = this._L02(_G_1);
            if (_M02.length !== 0) {
                _y02 = this._I02(_G_1);
                break
            }
        }
        if (_M02.length === 0) {
            return -1
        }
    }
    if (_y02 === -1) {
        _y02 = this._J02(_G_1);
        if (_y02 === -1) {
            return -1
        }
    }
    this._Y02(_D_1, _y02);
    return _y02
};
_H_1.prototype._F02 = function () {
    var _302 = this._su1._py1();
    while ((_302 != null) && (_302 != undefined)) {
        var _NW = _302._Zm1();
        if ((_NW != null) && (_NW != undefined)) {
            var _012 = _NW._702._0X1;
            if (_012 != -1) {
                var _112 = new _aW1._aZ1();
                _112._gw1 = this._O_1[_012]._gw1;
                _112._hw1 = this._O_1[_012]._hw1;
                var _d71 = _302._4w1();
                while ((_d71 != null) && (_d71 != undefined)) {
                    _112._iw1 = _d71._ww1()._iw1;
                    _d71._uw1(_112);
                    _d71 = _d71._yu1;
                }
            }
        }
        _302 = _302._7w1()
    }
};
_H_1.prototype.__m1 = function (_ZC, _dR, _Ps, _Qs, _Ts) {
    var _212 = new _aW1._XX1();
    _212._rC(new _aW1._bW1(_Ps, _Qs), _Ts);
    if ((_ZC._702 === null) || (_ZC._702 === undefined) || (_dR._702 === null) || (_dR._702 === undefined)) {
        return
    }
    var _312 = _ZC._702.__W1;
    var _412 = _dR._702.__W1;
    var _512;
    for (_512 = _312._4w1(); _512; _512 = _512._7w1()) {
        var _612;
        for (_612 = _412._4w1(); _612; _612 = _512._7w1()) {
            if (_aW1._QY1(_512._rw1(), 0, _612._rw1(), 0, _212, _412._Bj1())) {
                return true
            }
        }
    }
    return false
};
_H_1.prototype._Bz1 = function (_712, _Ps, _Qs, _812, _912, _2y, _Ox, _a12) {
    var _Vu1 = new _aW1._r_1();
    _Vu1._Hf1 = _712;
    _Vu1.position._rC(_Ps * this._G71, _Qs * this._G71);
    _Vu1._291._rC(_812 * this._G71, _912 * this._G71);
    _Vu1.color._rC((_2y & 0xff), (_2y & 0xff00) >> 8, (_2y & 0xff0000) >> 16, (_Ox * 255.0));
    _Vu1._Qm1 = _a12;
    return this._su1._Bz1(_Vu1)
};
;_H_1.prototype._b12 = function () {
    for (var _tt = 0; _tt < this._M_1.length; _tt++) {
        var __a1 = this._M_1[_tt];
        if (__a1 === null || __a1 === undefined) {
            return _tt
        }
    }
    var slot = this._M_1.length;
    return slot
};
_H_1.prototype._c12 = function (_d12) {
    if (_d12 >= 0 && _d12 < this._M_1.length) {
        return this._M_1[_d12]
    }
    return null
};
_H_1.prototype._Gz1 = function (_e12, _f12) {
    var _g12 = this._c12(_e12);
    var _h12 = this._c12(_f12);
    if ((_g12 !== null) && (_h12 !== null)) {
        this._su1._Gz1(_g12, _h12);
        this._M_1[_f12] = null
    }
};
_H_1.prototype._i12 = function (_pd1,
                                _j12, _k12, _l12) {
    var _Gu = this._su1._5A1();
    if (_k12 < 0 || _k12 >= _Gu) return;
    if (_l12 < _k12) return;
    if (_l12 > _Gu) return;
    var _Hf1 = this._su1._Kz1();
    var _cx1 = this._su1._Lz1();
    var _dx1 = this._su1._Mz1();
    var _m12 = this._su1._Nz1();
    var _Qm1 = this._su1._Oz1();
    var _n12 = _pd1._o12;
    var _p12 = 1.0 / this._G71;
    for (var _tt = _k12; _tt < _l12; _tt++) {
        if (_j12 & (1 << 0)) {
            _pd1._q12(_r12, _Hf1[_tt])
        }
        if (_j12 & (1 << 1)) {
            _pd1._q12(_s12, _cx1[_tt].x * _p12);
            _pd1._q12(_s12, _cx1[_tt].y * _p12)
        }
        if (_j12 & (1 << 2)) {
            _pd1._q12(_s12, _dx1[_tt].x * _p12);
            _pd1._q12(_s12, _dx1[_tt].y * _p12)
        }
        if (_j12 & (1 << 3)) {
            _pd1._q12(_r12, (_m12[_tt]._hv << 24) | (_m12[_tt]._Kt << 16) | (_m12[_tt]._gv << 8) | _m12[_tt]._Nt)
        }
        if (_j12 & (1 << 4)) {
            _pd1._q12(_t12, _Qm1[_tt])
        }
    }
    _pd1._u12(_v12, _n12)
};
_H_1.prototype._iB1 = function (_d12, _712) {
    var __a1 = this._c12(_d12);
    if (__a1 !== null && __a1 !== undefined) {
        __a1._iB1(_712)
    }
};
_H_1.prototype._hB1 = function (_d12) {
    var __a1 = this._c12(_d12);
    if (__a1 !== null && __a1 !== undefined) {
        return __a1._hB1()
    }
    return 0
};
_H_1.prototype._S_1 = function (_w12, _a12, _Et, _x12) {
    var _Gu = this._su1._5A1();
    var _Hf1 = this._su1._Kz1();
    var _cx1 = this._su1._Lz1();
    var _m12 = this._su1._Nz1();
    var _Qm1 = this._su1._Oz1();
    var _p12 = 1.0 / this._G71;
    for (var _tt = 0; _tt < _Gu; _tt++) {
        if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
            var _2v = (_m12[_tt]._Nt & 0xff) | ((_m12[_tt]._gv << 8) & 0xff00) | ((_m12[_tt]._Kt << 16) & 0xff0000);
            _Et._7v(_tt, _cx1[_tt].x * _p12, _cx1[_tt].y * _p12, 1.0, 1.0, 0, _2v, _m12[_tt]._hv / 255.0)
        }
    }
};
_H_1.prototype._V_1 = function (_w12, _a12, _Et, _x12, _GL, _HL, _Ts, _2y, _Ox) {
    var _Gu = this._su1._5A1();
    var _Hf1 = this._su1._Kz1();
    var _cx1 = this._su1._Lz1();
    var _Qm1 = this._su1._Oz1();
    var _p12 = 1.0 / this._G71;
    for (var _tt = 0; _tt < _Gu; _tt++) {
        if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
            _Et._7v(_tt, _cx1[_tt].x * _p12, _cx1[_tt].y * _p12, _GL, _HL, _Ts, _2y, _Ox)
        }
    }
};
_H_1.prototype._R_1 = function (_w12, _a12, _Et, _x12) {
    var _DD = _Et._Lb1[_x12 % _Et._y12()];
    if (!_DD) {
        return
    }
    if (!_DD._Iu.complete) {
        return
    }
    if (!_DD._Iu._bw) {
        _cw(_DD)
    }
    var _Gu = this._su1._5A1();
    var _Hf1 = this._su1._Kz1();
    var _cx1 = this._su1._Lz1();
    var _m12 = this._su1._Nz1();
    var _Qm1 = this._su1._Oz1();
    var _p12 = 1.0 / this._G71;
    var _z12 = 0;
    for (var _tt = 0; _tt < _Gu; _tt++) {
        if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
            _z12++
        }
    }
    if (_z12 === 0) {
        return
    }
    var _ew = _uu._fw(_gw._hw, _DD._Iu._bw, _uu._iw, _z12 * 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _z12 * 6;
    var _mw = _ew._nw;
    var _ow = _ew._pw;
    var _qw = _ew._rw;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    var _xt = -(_Et._R3 - _DD._pc);
    var _yt = -(_Et._S3 - _DD._qc);
    var _zt = _xt + _DD._rc;
    var _At = _yt + _DD._sc;
    var _A12 = 0;
    for (var _tt = 0; _tt < _Gu; _tt++) {
        if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
            var x = _cx1[_tt].x * _p12;
            var y = _cx1[_tt].y * _p12;
            _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = x + _xt;
            _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = y + _yt;
            _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = x + _zt;
            _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = y + _At;
            _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
            var _2v = (_m12[_tt]._Nt & 0xff) | ((_m12[_tt]._gv << 8) & 0xff00) | ((_m12[_tt]._Kt << 16) & 0xff0000) | ((_m12[_tt]._hv << 24) & 0xff000000);
            _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _2v;
            _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _DD.x / _DD._Iu.width;
            _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _DD.y / _DD._Iu.height;
            _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_DD.x + _DD._v5) / _DD._Iu.width;
            _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_DD.y + _DD._w5) / _DD._Iu.height;
            var _B12 = _jw * 6;
            _sw += _B12;
            _tw += _B12;
            _uw += _B12;
            _vw += _B12;
            _ww += _B12;
            _xw += _B12
        }
    }
};
_H_1.prototype._U_1 = function (_w12, _a12, _Et, _x12, _GL, _HL, _Ts, _2y, _Ox) {
    _Ts = (_Ts * Math.PI) / 180.0;
    var _DD = _Et._Lb1[_x12 % _Et._y12()];
    if (!_DD) {
        return
    }
    if (!_DD._Iu.complete) {
        return
    }
    if (!_DD._Iu._bw) {
        _cw(_DD)
    }
    var _Gu = this._su1._5A1();
    var _Hf1 = this._su1._Kz1();
    var _cx1 = this._su1._Lz1();
    var _Qm1 = this._su1._Oz1();
    var _p12 = 1.0 / this._G71;
    var _z12 = 0;
    for (var _tt = 0; _tt < _Gu; _tt++) {
        if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
            _z12++
        }
    }
    if (_z12 === 0) {
        return
    }
    var _ew = _uu._fw(_gw._hw, _DD._Iu._bw, _uu._iw, _z12 * 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _z12 * 6;
    var _mw = _ew._nw;
    var _ow = _ew._pw;
    var _qw = _ew._rw;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    var _2v = _2y | (((_Ox * 255) & 0xff) << 24);
    var _xt = -_GL * (_Et._R3 - _DD._pc);
    var _yt = -_HL * (_Et._S3 - _DD._qc);
    var _zt = _xt + (_GL * _DD._rc);
    var _At = _yt + (_HL * _DD._sc);
    var _A12 = 0;
    if (Math.abs(_Ts) < 0.0001) {
        for (var _tt = 0; _tt < _Gu; _tt++) {
            if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
                var x = _cx1[_tt].x * _p12;
                var y = _cx1[_tt].y * _p12;
                _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = x + _xt;
                _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = y + _yt;
                _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = x + _zt;
                _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = y + _At;
                _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
                _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _2v;
                _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _DD.x / _DD._Iu.width;
                _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _DD.y / _DD._Iu.height;
                _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_DD.x + _DD._v5) / _DD._Iu.width;
                _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_DD.y + _DD._w5) / _DD._Iu.height;
                var _B12 = _jw * 6;
                _sw += _B12;
                _tw += _B12;
                _uw += _B12;
                _vw += _B12;
                _ww += _B12;
                _xw += _B12
            }
        }
    } else {
        var _bu = Math.sin(_Ts);
        var _cu = Math.cos(_Ts);
        var _C12 = _xt * _cu;
        var _D12 = _zt * _cu;
        var _E12 = _yt * _cu;
        var _F12 = _At * _cu;
        var _G12 = _xt * _bu;
        var _H12 = _zt * _bu;
        var _I12 = _yt * _bu;
        var _J12 = _At * _bu;
        for (var _tt = 0; _tt < _Gu; _tt++) {
            if (((_Hf1[_tt] === 0) || ((_Hf1[_tt] & _w12) !== 0)) && ((_a12 === 0) || (_a12 === _Qm1[_tt]))) {
                var x = _cx1[_tt].x * _p12;
                var y = _cx1[_tt].y * _p12;
                _mw[_sw + 0] = _mw[_xw + 0] = x + _C12 + _I12;
                _mw[_sw + 1] = _mw[_xw + 1] = y - _G12 + _E12;
                _mw[_uw + 0] = _mw[_vw + 0] = x + _D12 + _J12;
                _mw[_uw + 1] = _mw[_vw + 1] = y - _H12 + _F12;
                _mw[_tw + 1] = y - _H12 + _E12;
                _mw[_tw + 0] = x + _D12 + _I12;
                _mw[_ww + 0] = x + _C12 + _J12;
                _mw[_ww + 1] = y - _G12 + _F12;
                _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _2v;
                _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _DD.x / _DD._Iu.width;
                _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _DD.y / _DD._Iu.height;
                _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_DD.x + _DD._v5) / _DD._Iu.width;
                _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_DD.y + _DD._w5) / _DD._Iu.height;
                var _B12 = _jw * 6;
                _sw += _B12;
                _tw += _B12;
                _uw += _B12;
                _vw += _B12;
                _ww += _B12;
                _xw += _B12
            }
        }
    }
};
_H_1.prototype._5A1 = function () {
    return this._su1._5A1()
};
_H_1.prototype._qz1 = function () {
    return this._su1._qz1()
};
_H_1.prototype._Az1 = function () {
    return this._su1._Az1() * (1.0 / this._G71)
};
_H_1.prototype._tz1 = function () {
    return this._su1._tz1()
};
_H_1.prototype._yz1 = function () {
    return this._su1._yz1()
};
_H_1.prototype._vz1 = function () {
    return this._su1._vz1()
};
_H_1.prototype._rz1 = function (_cz) {
    this._su1._rz1(_cz)
};
_H_1.prototype._zz1 = function (_lW1) {
    this._su1._zz1(_lW1 * this._G71)
};
_H_1.prototype._sz1 = function (_g71) {
    this._su1._sz1(_g71)
};
_H_1.prototype._wz1 = function (_v71) {
    this._su1._wz1(_v71)
};
_H_1.prototype._uz1 = function (_mX1) {
    this._su1._uz1(_mX1)
};
var _K12 = (this && this._K12) || function (_cE, _Nt) {
    for (var _lT in _Nt) if (_Nt.hasOwnProperty(_lT)) _cE[_lT] = _Nt[_lT];

    function _L12() {
        this.constructor = _cE
    }

    _cE.prototype = _Nt === null ? Object._Mh1(_Nt) : (_L12.prototype = _Nt.prototype, new _L12())
};
var spine;
(function (spine) {
    var _M12 = (function () {
        function _M12(name, _3t, duration) {
            if (name == null) throw new _aB("name cannot be null.");
            if (_3t == null) throw new _aB("timelines cannot be null.");
            this.name = name;
            this._3t = _3t;
            this.duration = duration
        }

        _M12.prototype.apply = function (skeleton, _N12, time, loop, events) {
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            if (loop && this.duration != 0) {
                time %= this.duration;
                if (_N12 > 0) _N12 %= this.duration
            }
            var _3t = this._3t;
            for (var _t5 = 0, _tt = _3t.length; _t5 < _tt; _t5++) _3t[_t5].apply(skeleton, _N12, time, events, 1)
        };
        _M12.prototype.mix = function (skeleton, _N12, time, loop, events, alpha) {
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            if (loop && this.duration != 0) {
                time %= this.duration;
                if (_N12 > 0) _N12 %= this.duration;
            }
            var _3t = this._3t;
            for (var _t5 = 0, _tt = _3t.length; _t5 < _tt; _t5++) _3t[_t5].apply(skeleton, _N12, time, events, alpha)
        };
        _M12._O12 = function (_P12, target, _vh1) {
            if (_vh1 === void 0) {
                _vh1 = 1
            }
            var _DC = 0;
            var _CC = _P12.length / _vh1 - 2;
            if (_CC == 0) return _vh1;
            var current = _CC >>> 1;
            while (!0) {
                if (_P12[(current + 1) * _vh1] <= target) _DC = current + 1; else _CC = current;
                if (_DC == _CC) return (_DC + 1) * _vh1;
                current = (_DC + _CC) >>> 1
            }
        };
        _M12._Q12 = function (_P12, target, _vh1) {
            for (var _t5 = 0, _o5 = _P12.length - _vh1; _t5 <= _o5; _t5 += _vh1) if (_P12[_t5] > target) return _t5;
            return -1
        };
        return _M12;
    }());
    spine._M12 = _M12;
    var _R12 = (function () {
        function _R12(__s) {
            if (__s <= 0) throw new _aB("frameCount must be > 0: " + __s);
            this._S12 = spine._T12._U12((__s - 1) * _R12._V12)
        }

        _R12.prototype._W12 = function () {
            return this._S12.length / _R12._V12 + 1
        }
        ;_R12.prototype._X12 = function (_Y12) {
            this._S12[_Y12 * _R12._V12] = _R12.LINEAR
        };
        _R12.prototype._Z12 = function (_Y12) {
            this._S12[_Y12 * _R12._V12] = _R12.__12
        };
        _R12.prototype._022 = function (_Y12) {
            var index = _Y12 * _R12._V12;
            if (index == this._S12.length) return _R12.LINEAR;
            var type = this._S12[index];
            if (type == _R12.LINEAR) return _R12.LINEAR;
            if (type == _R12.__12) return _R12.__12;
            return _R12._122
        };
        _R12.prototype._222 = function (_Y12, _322, _422, _522, _622) {
            var _722 = (-_322 * 2 + _522) * 0.03, _822 = (-_422 * 2 + _622) * 0.03;
            var _922 = ((_322 - _522) * 3 + 1) * 0.006,
                _a22 = ((_422 - _622) * 3 + 1) * 0.006;
            var _b22 = _722 * 2 + _922, _c22 = _822 * 2 + _a22;
            var _d22 = _322 * 0.3 + _722 + _922 * 0.16666667, _e22 = _422 * 0.3 + _822 + _a22 * 0.16666667;
            var _t5 = _Y12 * _R12._V12;
            var _S12 = this._S12;
            _S12[_t5++] = _R12._122;
            var x = _d22, y = _e22;
            for (var _tt = _t5 + _R12._V12 - 1; _t5 < _tt; _t5 += 2) {
                _S12[_t5] = x;
                _S12[_t5 + 1] = y;
                _d22 += _b22;
                _e22 += _c22;
                _b22 += _922;
                _c22 += _a22;
                x += _d22;
                y += _e22
            }
        };
        _R12.prototype._f22 = function (_Y12, _g22) {
            _g22 = spine._h22._z31(_g22, 0, 1);
            var _S12 = this._S12;
            var _t5 = _Y12 * _R12._V12;
            var type = _S12[_t5];
            if (type == _R12.LINEAR) return _g22;
            if (type == _R12.__12) return 0;
            _t5++;
            var x = 0;
            for (var start = _t5, _tt = _t5 + _R12._V12 - 1; _t5 < _tt; _t5 += 2) {
                x = _S12[_t5];
                if (x >= _g22) {
                    var _i22 = void 0, _j22 = void 0;
                    if (_t5 == start) {
                        _i22 = 0;
                        _j22 = 0
                    } else {
                        _i22 = _S12[_t5 - 2];
                        _j22 = _S12[_t5 - 1]
                    }
                    return _j22 + (_S12[_t5 + 1] - _j22) * (_g22 - _i22) / (x - _i22)
                }
            }
            var y = _S12[_t5 - 1];
            return y + (1 - y) * (_g22 - x) / (1 - x)
        };
        _R12.LINEAR = 0;
        _R12.__12 = 1;
        _R12._122 = 2;
        _R12._V12 = 10 * 2 - 1;
        return _R12
    }());
    spine._R12 = _R12;
    var _k22 = (function (_l22) {
        _K12(_k22, _l22);

        function _k22(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s << 1)
        }

        _k22.prototype._m22 = function (_Y12, time, _n22) {
            _Y12 <<= 1;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _k22._o22] = _n22
        };
        _k22.prototype.apply = function (skeleton, _N12, time, events, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this._p22];
            if (time >= frames[frames.length - _k22._q22]) {
                var _r22 = bone.data.rotation + frames[frames.length + _k22._s22] - bone.rotation;
                while (_r22 > 180) _r22 -= 360;
                while (_r22 < -180) _r22 += 360;
                bone.rotation += _r22 * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _k22._q22);
            var _t22 = frames[_ct + _k22._s22];
            var _u22 = frames[_ct];
            var _g22 = this._f22((_ct >> 1) - 1, 1 - (time - _u22) / (frames[_ct + _k22._v22] - _u22));
            var _w22 = frames[_ct + _k22._o22] - _t22;
            while (_w22 > 180) _w22 -= 360;
            while (_w22 < -180) _w22 += 360;
            _w22 = bone.data.rotation + (_t22 + _w22 * _g22) - bone.rotation;
            while (_w22 > 180) _w22 -= 360;
            while (_w22 < -180) _w22 += 360;
            bone.rotation += _w22 * alpha
        };
        _k22._q22 = 2;
        _k22._v22 = -2;
        _k22._s22 = -1;
        _k22._o22 = 1;
        return _k22
    }(_R12));
    spine._k22 = _k22;
    var _x22 = (function (_l22) {
        _K12(_x22, _l22);

        function _x22(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s * _x22._q22)
        }

        _x22.prototype._m22 = function (_Y12, time, x, y) {
            _Y12 *= _x22._q22;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _x22._AK] = x;
            this.frames[_Y12 + _x22._BK] = y
        };
        _x22.prototype.apply = function (skeleton, _N12, time, events, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this._p22];
            if (time >= frames[frames.length - _x22._q22]) {
                bone.x += (bone.data.x + frames[frames.length + _x22._y22] - bone.x) * alpha;
                bone.y += (bone.data.y + frames[frames.length + _x22._z22] - bone.y) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _x22._q22);
            var _i22 = frames[_ct + _x22._y22];
            var _j22 = frames[_ct + _x22._z22];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _x22._q22 - 1, 1 - (time - _u22) / (frames[_ct + _x22._v22] - _u22));
            bone.x += (bone.data.x + _i22 + (frames[_ct + _x22._AK] - _i22) * _g22 - bone.x) * alpha;
            bone.y += (bone.data.y + _j22 + (frames[_ct + _x22._BK] - _j22) * _g22 - bone.y) * alpha
        };
        _x22._q22 = 3;
        _x22._v22 = -3;
        _x22._y22 = -2;
        _x22._z22 = -1;
        _x22._AK = 1;
        _x22._BK = 2;
        return _x22;
    }(_R12));
    spine._x22 = _x22;
    var _A22 = (function (_l22) {
        _K12(_A22, _l22);

        function _A22(__s) {
            _l22.call(this, __s)
        }

        _A22.prototype.apply = function (skeleton,
                                         _N12, time, events, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this._p22];
            if (time >= frames[frames.length - _A22._q22]) {
                bone.scaleX += (bone.data.scaleX * frames[frames.length + _A22._y22] - bone.scaleX) * alpha;
                bone.scaleY += (bone.data.scaleY * frames[frames.length + _A22._z22] - bone.scaleY) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _A22._q22);
            var _i22 = frames[_ct + _A22._y22];
            var _j22 = frames[_ct + _A22._z22];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _A22._q22 - 1, 1 - (time - _u22) / (frames[_ct + _A22._v22] - _u22));
            bone.scaleX += (bone.data.scaleX * (_i22 + (frames[_ct + _A22._AK] - _i22) * _g22) - bone.scaleX) * alpha;
            bone.scaleY += (bone.data.scaleY * (_j22 + (frames[_ct + _A22._BK] - _j22) * _g22) - bone.scaleY) * alpha
        };
        return _A22
    }(_x22));
    spine._A22 = _A22;
    var _B22 = (function (_l22) {
        _K12(_B22, _l22);

        function _B22(__s) {
            _l22.call(this, __s)
        }

        _B22.prototype.apply = function (skeleton, _N12, time, events, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var bone = skeleton.bones[this._p22];
            if (time >= frames[frames.length - _B22._q22]) {
                bone.shearX += (bone.data.shearX + frames[frames.length + _B22._y22] - bone.shearX) * alpha;
                bone.shearY += (bone.data.shearY + frames[frames.length + _B22._z22] - bone.shearY) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _B22._q22);
            var _i22 = frames[_ct + _B22._y22];
            var _j22 = frames[_ct + _B22._z22];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _B22._q22 - 1, 1 - (time - _u22) / (frames[_ct + _B22._v22] - _u22));
            bone.shearX += (bone.data.shearX + (_i22 + (frames[_ct + _B22._AK] - _i22) * _g22) - bone.shearX) * alpha;
            bone.shearY += (bone.data.shearY + (_j22 + (frames[_ct + _B22._BK] - _j22) * _g22) - bone.shearY) * alpha
        };
        return _B22
    }(_x22));
    spine._B22 = _B22;
    var _C22 = (function (_l22) {
        _K12(_C22, _l22);

        function _C22(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s * _C22._q22)
        }

        _C22.prototype._m22 = function (_Y12, time, _Kt, _gv, _Nt, _hv) {
            _Y12 *= _C22._q22;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _C22._D22] = _Kt;
            this.frames[_Y12 + _C22._dt1] = _gv;
            this.frames[_Y12 + _C22._5j1] = _Nt;
            this.frames[_Y12 + _C22._Uh1] = _hv
        };
        _C22.prototype.apply = function (skeleton, _N12, time, events, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _Kt = 0, _gv = 0, _Nt = 0, _hv = 0;
            if (time >= frames[frames.length - _C22._q22]) {
                var _t5 = frames.length;
                _Kt = frames[_t5 + _C22._E22];
                _gv = frames[_t5 + _C22._F22];
                _Nt = frames[_t5 + _C22._G22];
                _hv = frames[_t5 + _C22._H22]
            } else {
                var _ct = _M12._O12(frames, time, _C22._q22);
                _Kt = frames[_ct + _C22._E22];
                _gv = frames[_ct + _C22._F22];
                _Nt = frames[_ct + _C22._G22];
                _hv = frames[_ct + _C22._H22];
                var _u22 = frames[_ct];
                var _g22 = this._f22(_ct / _C22._q22 - 1, 1 - (time - _u22) / (frames[_ct + _C22._v22] - _u22));
                _Kt += (frames[_ct + _C22._D22] - _Kt) * _g22;
                _gv += (frames[_ct + _C22._dt1] - _gv) * _g22;
                _Nt += (frames[_ct + _C22._5j1] - _Nt) * _g22;
                _hv += (frames[_ct + _C22._Uh1] - _hv) * _g22
            }
            var color = skeleton.slots[this._Is].color;
            if (alpha < 1) color.add((_Kt - color._Kt) * alpha, (_gv - color._gv) * alpha, (_Nt - color._Nt) * alpha, (_hv - color._hv) * alpha); else color.set(_Kt, _gv, _Nt, _hv)
        };
        _C22._q22 = 5;
        _C22._v22 = -5;
        _C22._E22 = -4;
        _C22._F22 = -3;
        _C22._G22 = -2;
        _C22._H22 = -1;
        _C22._D22 = 1;
        _C22._dt1 = 2;
        _C22._5j1 = 3;
        _C22._Uh1 = 4;
        return _C22
    }(_R12));
    spine._C22 = _C22;
    var _I22 = (function () {
        function _I22(__s) {
            this.frames = spine._T12._U12(__s);
            this._J22 = new Array(__s)
        }

        _I22.prototype._W12 = function () {
            return this.frames.length
        };
        _I22.prototype._m22 = function (_Y12,
                                        time, _K22) {
            this.frames[_Y12] = time;
            this._J22[_Y12] = _K22
        };
        _I22.prototype.apply = function (skeleton, _N12, time, events, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _Y12 = 0;
            if (time >= frames[frames.length - 1]) _Y12 = frames.length - 1; else _Y12 = _M12._O12(frames, time, 1) - 1;
            var _K22 = this._J22[_Y12];
            skeleton.slots[this._Is]._Hs(_K22 == null ? null : skeleton._Ls(this._Is, _K22))
        };
        return _I22
    }());
    spine._I22 = _I22;
    var _L22 = (function () {
        function _L22(__s) {
            this.frames = spine._T12._U12(__s);
            this.events = new Array(__s)
        }

        _L22.prototype._W12 = function () {
            return this.frames.length
        };
        _L22.prototype._m22 = function (_Y12, event) {
            this.frames[_Y12] = event.time;
            this.events[_Y12] = event
        };
        _L22.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            if (_M22 == null) return;
            var frames = this.frames;
            var __s = this.frames.length;
            if (_N12 > time) {
                this.apply(skeleton, _N12, Number.MAX_VALUE, _M22, alpha);
                _N12 = -1
            } else if (_N12 >= frames[__s - 1]) return;
            if (time < frames[0]) return;
            var _ct = 0;
            if (_N12 < frames[0]) _ct = 0; else {
                _ct = _M12._O12(frames, _N12);
                var _u22 = frames[_ct];
                while (_ct > 0) {
                    if (frames[_ct - 1] != _u22) break;
                    _ct--
                }
            }
            for (; _ct < __s && time >= frames[_ct]; _ct++) _M22.push(this.events[_ct])
        };
        return _L22
    }());
    spine._L22 = _L22;
    var _N22 = (function () {
        function _N22(__s) {
            this.frames = spine._T12._U12(__s);
            this._O22 = new Array(__s)
        }

        _N22.prototype._W12 = function () {
            return this.frames.length
        };
        _N22.prototype._m22 = function (_Y12, time, _fv) {
            this.frames[_Y12] = time;
            this._O22[_Y12] = _fv
        };
        _N22.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _ct = 0;
            if (time >= frames[frames.length - 1]) _ct = frames.length - 1;
            else _ct = _M12._O12(frames, time) - 1;
            var _fv = skeleton._fv;
            var slots = skeleton.slots;
            var _P22 = this._O22[_ct];
            if (_P22 == null) spine._T12._Q22(slots, 0, _fv, 0, slots.length); else {
                for (var _t5 = 0, _tt = _P22.length; _t5 < _tt; _t5++) _fv[_t5] = slots[_P22[_t5]]
            }
        };
        return _N22
    }());
    spine._N22 = _N22;
    var _R22 = (function (_l22) {
        _K12(_R22, _l22);

        function _R22(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s);
            this._S22 = new Array(__s)
        }

        _R22.prototype._m22 = function (_Y12, time, vertices) {
            this.frames[_Y12] = time;
            this._S22[_Y12] = vertices
        };
        _R22.prototype.apply = function (skeleton,
                                         _N12, time, _M22, alpha) {
            var slot = skeleton.slots[this._Is];
            var _T22 = slot._Ls();
            if (!(_T22 instanceof spine._U22) || !_T22._V22(this.attachment)) return;
            var frames = this.frames;
            if (time < frames[0]) return;
            var _S22 = this._S22;
            var vertexCount = _S22[0].length;
            var _W22 = slot._X22;
            if (_W22.length != vertexCount) alpha = 1;
            var vertices = spine._T12._Y22(_W22, vertexCount);
            if (time >= frames[frames.length - 1]) {
                var _Z22 = _S22[frames.length - 1];
                if (alpha < 1) {
                    for (var _t5 = 0; _t5 < vertexCount; _t5++) vertices[_t5] += (_Z22[_t5] - vertices[_t5]) * alpha
                } else spine._T12._Q22(_Z22,
                    0, vertices, 0, vertexCount);
                return
            }
            var _ct = _M12._O12(frames, time);
            var __22 = _S22[_ct - 1];
            var _032 = _S22[_ct];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct - 1, 1 - (time - _u22) / (frames[_ct - 1] - _u22));
            if (alpha < 1) {
                for (var _t5 = 0; _t5 < vertexCount; _t5++) {
                    var __x1 = __22[_t5];
                    vertices[_t5] += (__x1 + (_032[_t5] - __x1) * _g22 - vertices[_t5]) * alpha;
                }
            } else {
                for (var _t5 = 0; _t5 < vertexCount; _t5++) {
                    var __x1 = __22[_t5];
                    vertices[_t5] = __x1 + (_032[_t5] - __x1) * _g22
                }
            }
        };
        return _R22
    }(_R12));
    spine._R22 = _R22;
    var _132 = (function (_l22) {
        _K12(_132, _l22);

        function _132(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s * _132._q22)
        }

        _132.prototype._m22 = function (_Y12, time, mix, _232) {
            _Y12 *= _132._q22;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _132._332] = mix;
            this.frames[_Y12 + _132._432] = _232
        };
        _132.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _532 = skeleton._632[this._732];
            if (time >= frames[frames.length - _132._q22]) {
                _532.mix += (frames[frames.length + _132._832] - _532.mix) * alpha;
                _532._232 = Math.floor(frames[frames.length + _132._932]);
                return
            }
            var _ct = _M12._O12(frames, time, _132._q22);
            var mix = frames[_ct + _132._832];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _132._q22 - 1, 1 - (time - _u22) / (frames[_ct + _132._v22] - _u22));
            _532.mix += (mix + (frames[_ct + _132._332] - mix) * _g22 - _532.mix) * alpha;
            _532._232 = Math.floor(frames[_ct + _132._932])
        };
        _132._q22 = 3;
        _132._v22 = -3;
        _132._832 = -2;
        _132._932 = -1;
        _132._332 = 1;
        _132._432 = 2;
        return _132
    }(_R12));
    spine._132 = _132;
    var _a32 = (function (_l22) {
        _K12(_a32, _l22);

        function _a32(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s * _a32._q22)
        }

        _a32.prototype._m22 = function (_Y12, time, rotateMix, _b32, scaleMix, _c32) {
            _Y12 *= _a32._q22;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _a32._d32] = rotateMix;
            this.frames[_Y12 + _a32._e32] = _b32;
            this.frames[_Y12 + _a32._f32] = scaleMix;
            this.frames[_Y12 + _a32._g32] = _c32
        };
        _a32.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _532 = skeleton._h32[this._i32];
            if (time >= frames[frames.length - _a32._q22]) {
                var _t5 = frames.length;
                _532.rotateMix += (frames[_t5 + _a32._j32] - _532.rotateMix) * alpha;
                _532._b32 += (frames[_t5 + _a32._k32] - _532._b32) * alpha;
                _532.scaleMix += (frames[_t5 + _a32._l32] - _532.scaleMix) * alpha;
                _532._c32 += (frames[_t5 + _a32._m32] - _532._c32) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _a32._q22);
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _a32._q22 - 1, 1 - (time - _u22) / (frames[_ct + _a32._v22] - _u22));
            var rotate = frames[_ct + _a32._j32];
            var translate = frames[_ct + _a32._k32];
            var scale = frames[_ct + _a32._l32];
            var _n32 = frames[_ct + _a32._m32];
            _532.rotateMix += (rotate + (frames[_ct + _a32._d32] - rotate) * _g22 - _532.rotateMix) * alpha;
            _532._b32 += (translate + (frames[_ct + _a32._e32] - translate) * _g22 - _532._b32) * alpha;
            _532.scaleMix += (scale + (frames[_ct + _a32._f32] - scale) * _g22 - _532.scaleMix) * alpha;
            _532._c32 += (_n32 + (frames[_ct + _a32._g32] - _n32) * _g22 - _532._c32) * alpha
        };
        _a32._q22 = 5;
        _a32._v22 = -5;
        _a32._j32 = -4;
        _a32._k32 = -3;
        _a32._l32 = -2;
        _a32._m32 = -1;
        _a32._d32 = 1;
        _a32._e32 = 2;
        _a32._f32 = 3;
        _a32._g32 = 4;
        return _a32
    }(_R12));
    spine._a32 = _a32;
    var _o32 = (function (_l22) {
        _K12(_o32, _l22);

        function _o32(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s * _o32._q22)
        }

        _o32.prototype._m22 = function (_Y12, time, value) {
            _Y12 *= _o32._q22;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _o32._p32] = value
        };
        _o32.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _532 = skeleton._q32[this._r32];
            if (time >= frames[frames.length - _o32._q22]) {
                var _t5 = frames.length;
                _532.position += (frames[_t5 + _o32._s32] - _532.position) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _o32._q22);
            var position = frames[_ct + _o32._s32];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _o32._q22 - 1,
                1 - (time - _u22) / (frames[_ct + _o32._v22] - _u22));
            _532.position += (position + (frames[_ct + _o32._p32] - position) * _g22 - _532.position) * alpha
        };
        _o32._q22 = 2;
        _o32._v22 = -2;
        _o32._s32 = -1;
        _o32._p32 = 1;
        return _o32
    }(_R12));
    spine._o32 = _o32;
    var _t32 = (function (_l22) {
        _K12(_t32, _l22);

        function _t32(__s) {
            _l22.call(this, __s)
        }

        _t32.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _532 = skeleton._q32[this._r32];
            if (time >= frames[frames.length - _t32._q22]) {
                var _t5 = frames.length;
                _532.spacing += (frames[_t5 + _t32._s32] - _532.spacing) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _t32._q22);
            var spacing = frames[_ct + _t32._s32];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _t32._q22 - 1, 1 - (time - _u22) / (frames[_ct + _t32._v22] - _u22));
            _532.spacing += (spacing + (frames[_ct + _t32._p32] - spacing) * _g22 - _532.spacing) * alpha;
        };
        return _t32
    }(_o32));
    spine._t32 = _t32;
    var _u32 = (function (_l22) {
        _K12(_u32, _l22);

        function _u32(__s) {
            _l22.call(this, __s);
            this.frames = spine._T12._U12(__s * _u32._q22)
        }

        _u32.prototype._m22 = function (_Y12, time, rotateMix, _b32) {
            _Y12 *= _u32._q22;
            this.frames[_Y12] = time;
            this.frames[_Y12 + _u32._d32] = rotateMix;
            this.frames[_Y12 + _u32._e32] = _b32
        };
        _u32.prototype.apply = function (skeleton, _N12, time, _M22, alpha) {
            var frames = this.frames;
            if (time < frames[0]) return;
            var _532 = skeleton._q32[this._r32];
            if (time >= frames[frames.length - _u32._q22]) {
                var _t5 = frames.length;
                _532.rotateMix += (frames[_t5 + _u32._j32] - _532.rotateMix) * alpha;
                _532._b32 += (frames[_t5 + _u32._k32] - _532._b32) * alpha;
                return
            }
            var _ct = _M12._O12(frames, time, _u32._q22);
            var rotate = frames[_ct + _u32._j32];
            var translate = frames[_ct + _u32._k32];
            var _u22 = frames[_ct];
            var _g22 = this._f22(_ct / _u32._q22 - 1, 1 - (time - _u22) / (frames[_ct + _u32._v22] - _u22));
            _532.rotateMix += (rotate + (frames[_ct + _u32._d32] - rotate) * _g22 - _532.rotateMix) * alpha;
            _532._b32 += (translate + (frames[_ct + _u32._e32] - translate) * _g22 - _532._b32) * alpha;
        };
        _u32._q22 = 3;
        _u32._v22 = -3;
        _u32._j32 = -2;
        _u32._k32 = -1;
        _u32._d32 = 1;
        _u32._e32 = 2;
        return _u32
    }(_R12));
    spine._u32 = _u32
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Vr = (function () {
        function _Vr(data) {
            if (data === void 0) {
                data = null
            }
            this._hs = new Array();
            this.events = new Array();
            this._v32 = new Array();
            this._w32 = 1;
            if (data == null) throw new _aB("data cannot be null.");
            this.data = data
        }

        _Vr.prototype._5t = function (_x32) {
            _x32 *= this._w32;
            for (var _t5 = 0; _t5 < this._hs.length; _t5++) {
                var current = this._hs[_t5];
                if (current == null) continue;
                var _yC = current._yC;
                if (_yC != null) {
                    var _y32 = current._N12 - _yC._z32;
                    if (_y32 >= 0) {
                        var _A32 = _x32 * _yC._w32;
                        _yC.time = _y32 + _A32;
                        current.time += _x32 * current._w32;
                        this._B32(_t5, _yC);
                        _yC.time -= _A32;
                        current = _yC
                    }
                } else if (!current.loop && current._N12 >= current._C32) {
                    this._D32(_t5);
                    continue
                }
                current.time += _x32 * current._w32;
                if (current._E32 != null) {
                    var _F32 = _x32 * current._E32._w32;
                    current._E32.time += _F32;
                    current._G32 += _F32
                }
            }
        };
        _Vr.prototype.apply = function (skeleton) {
            var events = this.events;
            var _H32 = this._v32.length;
            for (var _t5 = 0; _t5 < this._hs.length; _t5++) {
                var current = this._hs[_t5];
                if (current == null) continue;
                events.length = 0;
                var time = current.time;
                var _N12 = current._N12;
                var _C32 = current._C32;
                var loop = current.loop;
                if (!loop && time > _C32) time = _C32;
                var _E32 = current._E32;
                if (_E32 == null) current._os.mix(skeleton,
                    _N12, time, loop, events, current.mix); else {
                    var _I32 = _E32.time;
                    if (!_E32.loop && _I32 > _E32._C32) _I32 = _E32._C32;
                    _E32._os.apply(skeleton, _I32, _I32, _E32.loop, null);
                    var alpha = current._G32 / current._J32 * current.mix;
                    if (alpha >= 1) {
                        alpha = 1;
                        current._E32 = null
                    }
                    current._os.mix(skeleton, _N12, time, loop, events, alpha)
                }
                for (var _MW = 0, _K32 = events.length; _MW < _K32; _MW++) {
                    var _L32 = events[_MW];
                    if (current.listener != null && current.listener.event != null) current.listener.event(_t5, _L32);
                    for (var _M32 = 0; _M32 < _H32; _M32++) if (this._v32[_M32].event) this._v32[_M32].event(_t5,
                        _L32)
                }
                if (loop ? (_N12 % _C32 > time % _C32) : (_N12 < _C32 && time >= _C32)) {
                    var _Gu = spine._h22._N32(time / _C32);
                    if (current.listener != null && current.listener.complete) current.listener.complete(_t5, _Gu);
                    for (var _MW = 0, _K32 = this._v32.length; _MW < _K32; _MW++) if (this._v32[_MW].complete) this._v32[_MW].complete(_t5, _Gu)
                }
                current._N12 = current.time
            }
        };
        _Vr.prototype._O32 = function () {
            for (var _t5 = 0, _tt = this._hs.length; _t5 < _tt; _t5++) this._D32(_t5);
            this._hs.length = 0
        };
        _Vr.prototype._D32 = function (_P32) {
            if (_P32 >= this._hs.length) return;
            var current = this._hs[_P32];
            if (current == null) return;
            if (current.listener != null && current.listener.end != null) current.listener.end(_P32);
            for (var _t5 = 0, _tt = this._v32.length; _t5 < _tt; _t5++) if (this._v32[_t5].end) this._v32[_t5].end(_P32);
            this._hs[_P32] = null;
            this._Q32(current)
        };
        _Vr.prototype._Q32 = function (_wC) {
            while (_wC != null) {
                var _yC = _wC._yC;
                _wC = _yC
            }
        };
        _Vr.prototype._R32 = function (index) {
            if (index < this._hs.length) return this._hs[index];
            spine._T12._Y22(this._hs, index - this._hs.length + 1, null);
            this._hs.length = index + 1;
            return null
        };
        _Vr.prototype._B32 = function (index,
                                       _wC) {
            var current = this._R32(index);
            if (current != null) {
                var _E32 = current._E32;
                current._E32 = null;
                if (current.listener != null && current.listener.end != null) current.listener.end(index);
                for (var _t5 = 0, _tt = this._v32.length; _t5 < _tt; _t5++) if (this._v32[_t5].end) this._v32[_t5].end(index);
                _wC._J32 = this.data._S32(current._os, _wC._os);
                if (_wC._J32 > 0) {
                    _wC._G32 = 0;
                    if (_E32 != null && current._G32 / current._J32 < 0.5) {
                        _wC._E32 = _E32;
                        _E32 = current
                    } else _wC._E32 = current
                }
            }
            this._hs[index] = _wC;
            if (_wC.listener != null && _wC.listener.start != null) _wC.listener.start(index);
            for (var _t5 = 0, _tt = this._v32.length; _t5 < _tt; _t5++) if (this._v32[_t5].start) this._v32[_t5].start(index)
        };
        _Vr.prototype._ys = function (_P32, _T32, loop) {
            var _os = this.data._U32._xs(_T32);
            if (_os == null) throw new _aB("Animation not found: " + _T32);
            return this._V32(_P32, _os, loop)
        };
        _Vr.prototype._V32 = function (_P32, _os, loop) {
            var current = this._R32(_P32);
            if (current != null) this._Q32(current._yC);
            var _wC = new _W32();
            _wC._os = _os;
            _wC.loop = loop;
            _wC._C32 = _os.duration;
            this._B32(_P32, _wC);
            return _wC
        };
        _Vr.prototype._X32 = function (_P32,
                                       _T32, loop, _z32) {
            var _os = this.data._U32._xs(_T32);
            if (_os == null) throw new _aB("Animation not found: " + _T32);
            return this._Y32(_P32, _os, loop, _z32)
        };
        _Vr.prototype._Y32 = function (_P32, _os, loop, _z32) {
            var _wC = new _W32();
            _wC._os = _os;
            _wC.loop = loop;
            _wC._C32 = _os.duration;
            var _o5 = this._R32(_P32);
            if (_o5 != null) {
                while (_o5._yC != null) _o5 = _o5._yC;
                _o5._yC = _wC
            } else this._hs[_P32] = _wC;
            if (_z32 <= 0) {
                if (_o5 != null) _z32 += _o5._C32 - this.data._S32(_o5._os, _os); else _z32 = 0
            }
            _wC._z32 = _z32;
            return _wC
        };
        _Vr.prototype._Z32 = function (_P32) {
            if (_P32 >= this._hs.length) return null;
            return this._hs[_P32]
        };
        _Vr.prototype._8s = function (listener) {
            if (listener == null) throw new _aB("listener cannot be null.");
            this._v32.push(listener)
        };
        _Vr.prototype.__32 = function (listener) {
            var index = this._v32.indexOf(listener);
            if (index >= 0) this._v32.splice(index, 1)
        };
        _Vr.prototype._042 = function () {
            this._v32.length = 0
        };
        return _Vr
    }());
    spine._Vr = _Vr;
    var _W32 = (function () {
        function _W32() {
            this.loop = !1;
            this._z32 = 0;
            this.time = 0;
            this._N12 = -1;
            this._C32 = 0;
            this._w32 = 1;
            this._G32 = 0;
            this._J32 = 0;
            this.mix = 1
        }

        _W32.prototype._Jh1 = function () {
            this._yC = null;
            this._E32 = null;
            this._os = null;
            this.listener = null;
            this._w32 = 1;
            this._N12 = -1;
            this.time = 0
        };
        _W32.prototype._142 = function () {
            return this.time >= this._C32
        };
        return _W32
    }());
    spine._W32 = _W32;
    var _242 = (function () {
        function _242() {
        }

        _242.prototype.event = function (_P32, event) {
        };
        _242.prototype.complete = function (_P32, _342) {
        };
        _242.prototype.start = function (_P32) {
        };
        _242.prototype.end = function (_P32) {
        };
        return _242
    }());
    spine._242 = _242
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Ur = (function () {
        function _Ur(_U32) {
            this._442 = {};
            this._542 = 0;
            if (_U32 == null) throw new _aB("skeletonData cannot be null.");
            this._U32 = _U32
        }

        _Ur.prototype._642 = function (_742, _842, duration) {
            var _942 = this._U32._xs(_742);
            if (_942 == null) throw new _aB("Animation not found: " + _742);
            var _a42 = this._U32._xs(_842);
            if (_a42 == null) throw new _aB("Animation not found: " + _842);
            this._b42(_942, _a42, duration)
        };
        _Ur.prototype._b42 = function (_942, _a42, duration) {
            if (_942 == null) throw new _aB("from cannot be null.");
            if (_a42 == null) throw new _aB("to cannot be null.");
            var _7N = _942.name + _a42.name;
            this._442[_7N] = duration
        };
        _Ur.prototype._S32 = function (_942, _a42) {
            var _7N = _942.name + _a42.name;
            var value = this._442[_7N];
            return value === undefined ? this._542 : value
        };
        return _Ur
    }());
    spine._Ur = _Ur
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _c42 = (function () {
        function _c42(_d42, _e42) {
            if (_e42 === void 0) {
                _e42 = ""
            }
            this._p21 = {};
            this._f42 = {};
            this._g42 = 0;
            this._rQ = 0;
            this._d42 = _d42;
            this._e42 = _e42
        }

        _c42.prototype._h42 = function (path, _i42, error) {
            var _j42 = this;
            if (_i42 === void 0) {
                _i42 = null
            }
            if (error === void 0) {
                error = null
            }
            path = this._e42 + path;
            this._g42++;
            var _4Z = new XMLHttpRequest();
            _4Z.onreadystatechange = function () {
                if (_4Z.readyState == XMLHttpRequest._k42) {
                    if (_4Z.status >= 200 && _4Z.status < 300) {
                        if (_i42) _i42(path, _4Z.responseText);
                        _j42._p21[path] = _4Z.responseText
                    } else {
                        if (error) error(path, "Couldn't load text " + path + ": status " + _4Z.status + ", " + _4Z.responseText);
                        _j42._f42[path] = "Couldn't load text " + path + ": status " + _4Z.status + ", " + _4Z.responseText
                    }
                    _j42._g42--;
                    _j42._rQ++
                }
            };
            _4Z.open("GET", path, !0);
            _4Z.send()
        };
        _c42.prototype._Ou = function (path, _i42,
                                       error) {
            var _j42 = this;
            if (_i42 === void 0) {
                _i42 = null
            }
            if (error === void 0) {
                error = null
            }
            path = this._e42 + path;
            this._g42++;
            var img = new Image();
            img.src = _uQ(null, null, path);
            img.crossOrigin = "anonymous";
            img.onload = function (_6Z) {
                if (_i42) _i42(path, img);
                var _Iu = _j42._d42(img);
                _j42._p21[path] = _Iu;
                _j42._g42--;
                _j42._rQ++
            };
            img.onerror = function (_6Z) {
                if (error) error(path, "Couldn't load image " + path);
                _j42._f42[path] = "Couldn't load image " + path;
                _j42._g42--;
                _j42._rQ++
            }
        };
        _c42.prototype.get = function (path) {
            path = this._e42 + path;
            return this._p21[path]
        }
        ;_c42.prototype.remove = function (path) {
            path = this._e42 + path;
            var _l42 = this._p21[path];
            if (_l42._ou) _l42._ou();
            this._p21[path] = null
        };
        _c42.prototype._m42 = function () {
            for (var _7N in this._p21) {
                var _l42 = this._p21[_7N];
                if (_l42._ou) _l42._ou();
            }
            this._p21 = {}
        };
        _c42.prototype._n42 = function () {
            return this._g42 == 0
        };
        _c42.prototype._o42 = function () {
            return this._g42
        };
        _c42.prototype._p42 = function () {
            return this._rQ
        };
        _c42.prototype._ou = function () {
            this._m42()
        };
        _c42.prototype._q42 = function () {
            return Object._r42(this._f42).length > 0
        }
        ;_c42.prototype._s42 = function () {
            return this._f42
        };
        return _c42
    }());
    spine._c42 = _c42
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _t42 = (function () {
        function _t42(name) {
            if (name == null) throw new _aB("name cannot be null.");
            this.name = name
        }

        return _t42
    }());
    spine._t42 = _t42;
    var _U22 = (function (_l22) {
        _K12(_U22, _l22);

        function _U22(name) {
            _l22.call(this, name);
            this._u42 = 0
        }

        _U22.prototype._v42 = function (slot, _w42) {
            this._x42(slot, 0, this._u42, _w42, 0)
        };
        _U22.prototype._x42 = function (slot, start, _Gu, _w42, offset) {
            _Gu += offset;
            var skeleton = slot.bone.skeleton;
            var x = skeleton.x, y = skeleton.y;
            var _y42 = slot._X22;
            var vertices = this.vertices;
            var bones = this.bones;
            if (bones == null) {
                if (_y42.length > 0) vertices = _y42;
                var bone = slot.bone;
                x += bone._z42;
                y += bone._A42;
                var _hv = bone._hv, _Nt = bone._Nt, _u5 = bone._u5, _cE = bone._cE;
                for (var _B42 = start, _v5 = offset; _v5 < _Gu; _B42 += 2, _v5 += 2) {
                    var _cm1 = vertices[_B42], _dm1 = vertices[_B42 + 1];
                    _w42[_v5] = _cm1 * _hv + _dm1 * _Nt + x;
                    _w42[_v5 + 1] = _cm1 * _u5 + _dm1 * _cE + y
                }
                return
            }
            var _uv = 0, _C42 = 0;
            for (var _t5 = 0; _t5 < start; _t5 += 2) {
                var _tt = bones[_uv];
                _uv += _tt + 1;
                _C42 += _tt
            }
            var _D42 = skeleton.bones;
            if (_y42.length == 0) {
                for (var _v5 = offset, _Nt = _C42 * 3; _v5 < _Gu; _v5 += 2) {
                    var _E42 = x, _F42 = y;
                    var _tt = bones[_uv++];
                    _tt += _uv;
                    for (; _uv < _tt; _uv++, _Nt += 3) {
                        var bone = _D42[bones[_uv]];
                        var _cm1 = vertices[_Nt], _dm1 = vertices[_Nt + 1], _qB1 = vertices[_Nt + 2];
                        _E42 += (_cm1 * bone._hv + _dm1 * bone._Nt + bone._z42) * _qB1;
                        _F42 += (_cm1 * bone._u5 + _dm1 * bone._cE + bone._A42) * _qB1
                    }
                    _w42[_v5] = _E42;
                    _w42[_v5 + 1] = _F42
                }
            } else {
                var deform = _y42;
                for (var _v5 = offset, _Nt = _C42 * 3, _CO = _C42 << 1; _v5 < _Gu; _v5 += 2) {
                    var _E42 = x, _F42 = y;
                    var _tt = bones[_uv++];
                    _tt += _uv;
                    for (; _uv < _tt; _uv++,
                        _Nt += 3, _CO += 2) {
                        var bone = _D42[bones[_uv]];
                        var _cm1 = vertices[_Nt] + deform[_CO], _dm1 = vertices[_Nt + 1] + deform[_CO + 1],
                            _qB1 = vertices[_Nt + 2];
                        _E42 += (_cm1 * bone._hv + _dm1 * bone._Nt + bone._z42) * _qB1;
                        _F42 += (_cm1 * bone._u5 + _dm1 * bone._cE + bone._A42) * _qB1
                    }
                    _w42[_v5] = _E42;
                    _w42[_v5 + 1] = _F42
                }
            }
        };
        _U22.prototype._V22 = function (_G42) {
            return this == _G42
        };
        return _U22
    }(_t42));
    spine._U22 = _U22
})(spine || (spine = {}));
var spine;
(function (spine) {
    (function (_H42) {
        _H42[_H42["Region"] = 0] = "Region";
        _H42[_H42["BoundingBox"] = 1] = "BoundingBox";
        _H42[_H42["Mesh"] = 2] = "Mesh";
        _H42[_H42["LinkedMesh"] = 3] = "LinkedMesh";
        _H42[_H42["Path"] = 4] = "Path"
    })(spine._H42 || (spine._H42 = {}));
    var _H42 = spine._H42
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _I42 = (function (_l22) {
        _K12(_I42, _l22);

        function _I42(name) {
            _l22.call(this, name);
            this.color = new spine._uY1(1, 1, 1, 1)
        }

        return _I42
    }(spine._U22));
    spine._I42 = _I42
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _jv = (function (_l22) {
        _K12(_jv, _l22);

        function _jv(name) {
            _l22.call(this, name);
            this.color = new spine._uY1(1, 1, 1, 1);
            this._J42 = !1;
            this._K42 = new spine._uY1(0,
                0, 0, 0)
        }

        _jv.prototype._L42 = function () {
            var _M42 = this._M42;
            var _N42 = _M42.length;
            var _u42 = (_N42 >> 1) * 8;
            if (this._w42 == null || this._w42.length != _u42) this._w42 = spine._T12._U12(_u42);
            var _sv = 0, _uv = 0, width = 0, height = 0;
            if (this._lv == null) {
                _sv = _uv = 0;
                width = height = 1
            } else {
                _sv = this._lv._sv;
                _uv = this._lv._uv;
                width = this._lv._3q1 - _sv;
                height = this._lv._uw - _uv
            }
            if (this._lv.rotate) {
                for (var _t5 = 0, _v5 = 6; _t5 < _N42; _t5 += 2, _v5 += 8) {
                    this._w42[_v5] = _sv + _M42[_t5 + 1] * width;
                    this._w42[_v5 + 1] = _uv + height - _M42[_t5] * height
                }
            } else {
                for (var _t5 = 0, _v5 = 6;
                     _t5 < _N42; _t5 += 2, _v5 += 8) {
                    this._w42[_v5] = _sv + _M42[_t5] * width;
                    this._w42[_v5 + 1] = _uv + _M42[_t5 + 1] * height
                }
            }
        };
        _jv.prototype._ov = function (slot, premultipliedAlpha) {
            var skeleton = slot.bone.skeleton;
            var _O42 = skeleton.color, _P42 = slot.color, _Q42 = this.color;
            var alpha = _O42._hv * _P42._hv * _Q42._hv;
            var _R42 = premultipliedAlpha ? alpha : 1;
            var color = this._K42;
            color.set(_O42._Kt * _P42._Kt * _Q42._Kt * _R42, _O42._gv * _P42._gv * _Q42._gv * _R42, _O42._Nt * _P42._Nt * _Q42._Nt * _R42, alpha);
            var x = skeleton.x, y = skeleton.y;
            var _y42 = slot._X22;
            var vertices = this.vertices,
                _w42 = this._w42;
            var bones = this.bones;
            if (bones == null) {
                var _N42 = vertices.length;
                if (_y42.length > 0) vertices = _y42;
                var bone = slot.bone;
                x += bone._z42;
                y += bone._A42;
                var _hv = bone._hv, _Nt = bone._Nt, _u5 = bone._u5, _cE = bone._cE;
                for (var _uv = 0, _v5 = 0; _uv < _N42; _uv += 2, _v5 += 8) {
                    var _cm1 = vertices[_uv], _dm1 = vertices[_uv + 1];
                    _w42[_v5] = _cm1 * _hv + _dm1 * _Nt + x;
                    _w42[_v5 + 1] = _cm1 * _u5 + _dm1 * _cE + y;
                    _w42[_v5 + 2] = color._Kt;
                    _w42[_v5 + 3] = color._gv;
                    _w42[_v5 + 4] = color._Nt;
                    _w42[_v5 + 5] = color._hv
                }
                return _w42
            }
            var _D42 = skeleton.bones;
            if (_y42.length == 0) {
                for (var _v5 = 0,
                         _uv = 0, _Nt = 0, _tt = bones.length; _uv < _tt; _v5 += 8) {
                    var _E42 = x, _F42 = y;
                    var _K32 = bones[_uv++] + _uv;
                    for (; _uv < _K32; _uv++, _Nt += 3) {
                        var bone = _D42[bones[_uv]];
                        var _cm1 = vertices[_Nt], _dm1 = vertices[_Nt + 1], _qB1 = vertices[_Nt + 2];
                        _E42 += (_cm1 * bone._hv + _dm1 * bone._Nt + bone._z42) * _qB1;
                        _F42 += (_cm1 * bone._u5 + _dm1 * bone._cE + bone._A42) * _qB1
                    }
                    _w42[_v5] = _E42;
                    _w42[_v5 + 1] = _F42;
                    _w42[_v5 + 2] = color._Kt;
                    _w42[_v5 + 3] = color._gv;
                    _w42[_v5 + 4] = color._Nt;
                    _w42[_v5 + 5] = color._hv
                }
            } else {
                var deform = _y42;
                for (var _v5 = 0, _uv = 0, _Nt = 0, _CO = 0, _tt = bones.length; _uv < _tt;
                     _v5 += 8) {
                    var _E42 = x, _F42 = y;
                    var _K32 = bones[_uv++] + _uv;
                    for (; _uv < _K32; _uv++, _Nt += 3, _CO += 2) {
                        var bone = _D42[bones[_uv]];
                        var _cm1 = vertices[_Nt] + deform[_CO], _dm1 = vertices[_Nt + 1] + deform[_CO + 1],
                            _qB1 = vertices[_Nt + 2];
                        _E42 += (_cm1 * bone._hv + _dm1 * bone._Nt + bone._z42) * _qB1;
                        _F42 += (_cm1 * bone._u5 + _dm1 * bone._cE + bone._A42) * _qB1;
                    }
                    _w42[_v5] = _E42;
                    _w42[_v5 + 1] = _F42;
                    _w42[_v5 + 2] = color._Kt;
                    _w42[_v5 + 3] = color._gv;
                    _w42[_v5 + 4] = color._Nt;
                    _w42[_v5 + 5] = color._hv
                }
            }
            return _w42
        };
        _jv.prototype._V22 = function (_G42) {
            return this == _G42 || (this._J42 && this._S42 == _G42)
        }
        ;_jv.prototype._T42 = function () {
            return this._S42
        };
        _jv.prototype._U42 = function (_S42) {
            this._S42 = _S42;
            if (_S42 != null) {
                this.bones = _S42.bones;
                this.vertices = _S42.vertices;
                this._M42 = _S42._M42;
                this.triangles = _S42.triangles;
                this._V42 = _S42._V42
            }
        };
        return _jv
    }(spine._U22));
    spine._jv = _jv
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _W42 = (function (_l22) {
        _K12(_W42, _l22);

        function _W42(name) {
            _l22.call(this, name);
            this._JE = !1;
            this._X42 = !1;
            this.color = new spine._uY1(1, 1, 1, 1)
        }

        return _W42
    }(spine._U22));
    spine._W42 = _W42
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _iv = (function (_l22) {
        _K12(_iv, _l22);

        function _iv(name) {
            _l22.call(this, name);
            this.x = 0;
            this.y = 0;
            this.scaleX = 1;
            this.scaleY = 1;
            this.rotation = 0;
            this.width = 0;
            this.height = 0;
            this.color = new spine._uY1(1, 1, 1, 1);
            this.offset = spine._T12._U12(8);
            this.vertices = spine._T12._U12(8 * 4);
            this._K42 = new spine._uY1(1, 1, 1, 1)
        }

        _iv.prototype._Y42 = function (_lv) {
            var vertices = this.vertices;
            if (_lv.rotate) {
                vertices[_iv._tv] = _lv._sv;
                vertices[_iv._vv] = _lv._uw;
                vertices[_iv._yv] = _lv._sv;
                vertices[_iv._zv] = _lv._uv;
                vertices[_iv._Cv] = _lv._3q1;
                vertices[_iv._Dv] = _lv._uv;
                vertices[_iv._Gv] = _lv._3q1;
                vertices[_iv._Hv] = _lv._uw
            } else {
                vertices[_iv._Gv] = _lv._sv;
                vertices[_iv._Hv] = _lv._uw;
                vertices[_iv._tv] = _lv._sv;
                vertices[_iv._vv] = _lv._uv;
                vertices[_iv._yv] = _lv._3q1;
                vertices[_iv._zv] = _lv._uv;
                vertices[_iv._Cv] = _lv._3q1;
                vertices[_iv._Dv] = _lv._uw
            }
            this._lv = _lv
        };
        _iv.prototype._Z42 = function () {
            var __42 = this.width / this._lv._052 * this.scaleX;
            var _152 = this.height / this._lv._252 * this.scaleY;
            var _352 = -this.width / 2 * this.scaleX + this._lv._452 * __42;
            var _552 = -this.height / 2 * this.scaleY + this._lv._652 * _152;
            var _752 = _352 + this._lv.width * __42;
            var _852 = _552 + this._lv.height * _152;
            var _952 = this.rotation * Math.PI / 180;
            var cos = Math.cos(_952);
            var sin = Math.sin(_952);
            var _a52 = _352 * cos + this.x;
            var _b52 = _352 * sin;
            var _c52 = _552 * cos + this.y;
            var _d52 = _552 * sin;
            var _e52 = _752 * cos + this.x;
            var _f52 = _752 * sin;
            var _g52 = _852 * cos + this.y;
            var _h52 = _852 * sin;
            var offset = this.offset;
            offset[_iv._i52] = _a52 - _d52;
            offset[_iv._j52] = _c52 + _b52;
            offset[_iv._k52] = _a52 - _h52;
            offset[_iv._l52] = _g52 + _b52;
            offset[_iv._m52] = _e52 - _h52;
            offset[_iv._n52] = _g52 + _f52;
            offset[_iv._o52] = _e52 - _d52;
            offset[_iv._p52] = _c52 + _f52
        };
        _iv.prototype._ov = function (slot, premultipliedAlpha) {
            var skeleton = slot.bone.skeleton;
            var _O42 = skeleton.color;
            var _P42 = slot.color;
            var _q52 = this.color;
            var alpha = _O42._hv * _P42._hv * _q52._hv;
            var _R42 = premultipliedAlpha ? alpha : 1;
            var color = this._K42;
            color.set(_O42._Kt * _P42._Kt * _q52._Kt * _R42, _O42._gv * _P42._gv * _q52._gv * _R42, _O42._Nt * _P42._Nt * _q52._Nt * _R42, alpha);
            var vertices = this.vertices;
            var offset = this.offset;
            var bone = slot.bone;
            var x = skeleton.x + bone._z42,
                y = skeleton.y + bone._A42;
            var _hv = bone._hv, _Nt = bone._Nt, _u5 = bone._u5, _cE = bone._cE;
            var _452 = 0, _652 = 0;
            _452 = offset[_iv._i52];
            _652 = offset[_iv._j52];
            vertices[_iv._Ev] = _452 * _hv + _652 * _Nt + x;
            vertices[_iv._Fv] = _452 * _u5 + _652 * _cE + y;
            vertices[_iv._r52] = color._Kt;
            vertices[_iv._s52] = color._gv;
            vertices[_iv._t52] = color._Nt;
            vertices[_iv._u52] = color._hv;
            _452 = offset[_iv._k52];
            _652 = offset[_iv._l52];
            vertices[_iv._qv] = _452 * _hv + _652 * _Nt + x;
            vertices[_iv._rv] = _452 * _u5 + _652 * _cE + y;
            vertices[_iv._v52] = color._Kt;
            vertices[_iv._w52] = color._gv;
            vertices[_iv._x52] = color._Nt;
            vertices[_iv._y52] = color._hv;
            _452 = offset[_iv._m52];
            _652 = offset[_iv._n52];
            vertices[_iv._wv] = _452 * _hv + _652 * _Nt + x;
            vertices[_iv._xv] = _452 * _u5 + _652 * _cE + y;
            vertices[_iv._z52] = color._Kt;
            vertices[_iv._A52] = color._gv;
            vertices[_iv._B52] = color._Nt;
            vertices[_iv._C52] = color._hv;
            _452 = offset[_iv._o52];
            _652 = offset[_iv._p52];
            vertices[_iv._Av] = _452 * _hv + _652 * _Nt + x;
            vertices[_iv._Bv] = _452 * _u5 + _652 * _cE + y;
            vertices[_iv._D52] = color._Kt;
            vertices[_iv._E52] = color._gv;
            vertices[_iv._F52] = color._Nt;
            vertices[_iv._G52] = color._hv;
            return vertices
        };
        _iv._i52 = 0;
        _iv._j52 = 1;
        _iv._k52 = 2;
        _iv._l52 = 3;
        _iv._m52 = 4;
        _iv._n52 = 5;
        _iv._o52 = 6;
        _iv._p52 = 7;
        _iv._Ev = 0;
        _iv._Fv = 1;
        _iv._r52 = 2;
        _iv._s52 = 3;
        _iv._t52 = 4;
        _iv._u52 = 5;
        _iv._Gv = 6;
        _iv._Hv = 7;
        _iv._qv = 8;
        _iv._rv = 9;
        _iv._v52 = 10;
        _iv._w52 = 11;
        _iv._x52 = 12;
        _iv._y52 = 13;
        _iv._tv = 14;
        _iv._vv = 15;
        _iv._wv = 16;
        _iv._xv = 17;
        _iv._z52 = 18;
        _iv._A52 = 19;
        _iv._B52 = 20;
        _iv._C52 = 21;
        _iv._yv = 22;
        _iv._zv = 23;
        _iv._Av = 24;
        _iv._Bv = 25;
        _iv._D52 = 26;
        _iv._E52 = 27;
        _iv._F52 = 28;
        _iv._G52 = 29;
        _iv._Cv = 30;
        _iv._Dv = 31;
        return _iv
    }
    (spine._t42));
    spine._iv = _iv
})(spine || (spine = {}));
var spine;
(function (spine) {
    (function (_H52) {
        _H52[_H52["Normal"] = 0] = "Normal";
        _H52[_H52["Additive"] = 1] = "Additive";
        _H52[_H52["Multiply"] = 2] = "Multiply";
        _H52[_H52["Screen"] = 3] = "Screen"
    })(spine._H52 || (spine._H52 = {}));
    var _H52 = spine._H52
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _3v = (function () {
        function _3v(data, skeleton, parent) {
            this._Dh1 = new Array();
            this.x = 0;
            this.y = 0;
            this.rotation = 0;
            this.scaleX = 0;
            this.scaleY = 0;
            this.shearX = 0;
            this.shearY = 0;
            this._I52 = 0;
            this._hv = 0;
            this._Nt = 0;
            this._z42 = 0;
            this._u5 = 0;
            this._cE = 0;
            this._A42 = 0;
            this._J52 = 0;
            this._K52 = 0;
            this._L52 = !1;
            if (data == null) throw new _aB("data cannot be null.");
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            this.data = data;
            this.skeleton = skeleton;
            this.parent = parent;
            this._M52()
        }

        _3v.prototype._5t = function () {
            this._N52(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY)
        };
        _3v.prototype._Xs = function () {
            this._N52(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX,
                this.shearY)
        };
        _3v.prototype._N52 = function (x, y, rotation, scaleX, scaleY, shearX, shearY) {
            this._I52 = rotation;
            var _O52 = rotation + 90 + shearY;
            var _P52 = spine._h22._Q52(rotation + shearX) * scaleX, _R52 = spine._h22._Q52(_O52) * scaleY;
            var _S52 = spine._h22._T52(rotation + shearX) * scaleX, _U52 = spine._h22._T52(_O52) * scaleY;
            var parent = this.parent;
            if (parent == null) {
                var skeleton = this.skeleton;
                if (skeleton._6t) {
                    x = -x;
                    _P52 = -_P52;
                    _R52 = -_R52
                }
                if (skeleton._7t) {
                    y = -y;
                    _S52 = -_S52;
                    _U52 = -_U52
                }
                this._hv = _P52;
                this._Nt = _R52;
                this._u5 = _S52;
                this._cE = _U52;
                this._z42 = x;
                this._A42 = y;
                this._J52 = spine._h22._V52(scaleX);
                this._K52 = spine._h22._V52(scaleY);
                return
            }
            var _7C1 = parent._hv, _8C1 = parent._Nt, _NA1 = parent._u5, _W52 = parent._cE;
            this._z42 = _7C1 * x + _8C1 * y + parent._z42;
            this._A42 = _NA1 * x + _W52 * y + parent._A42;
            this._J52 = parent._J52 * spine._h22._V52(scaleX);
            this._K52 = parent._K52 * spine._h22._V52(scaleY);
            if (this.data.inheritRotation && this.data.inheritScale) {
                this._hv = _7C1 * _P52 + _8C1 * _S52;
                this._Nt = _7C1 * _R52 + _8C1 * _U52;
                this._u5 = _NA1 * _P52 + _W52 * _S52;
                this._cE = _NA1 * _R52 + _W52 * _U52
            }
            else {
                if (this.data.inheritRotation) {
                    _7C1 = 1;
                    _8C1 = 0;
                    _NA1 = 0;
                    _W52 = 1;
                    do {
                        var cos = spine._h22._Q52(parent._I52), sin = spine._h22._T52(parent._I52);
                        var _CT = _7C1 * cos + _8C1 * sin;
                        _8C1 = _8C1 * cos - _7C1 * sin;
                        _7C1 = _CT;
                        _CT = _NA1 * cos + _W52 * sin;
                        _W52 = _W52 * cos - _NA1 * sin;
                        _NA1 = _CT;
                        if (!parent.data.inheritRotation) break;
                        parent = parent.parent
                    } while (parent != null);
                    this._hv = _7C1 * _P52 + _8C1 * _S52;
                    this._Nt = _7C1 * _R52 + _8C1 * _U52;
                    this._u5 = _NA1 * _P52 + _W52 * _S52;
                    this._cE = _NA1 * _R52 + _W52 * _U52
                } else if (this.data.inheritScale) {
                    _7C1 = 1;
                    _8C1 = 0;
                    _NA1 = 0;
                    _W52 = 1;
                    do {
                        var cos = spine._h22._Q52(parent._I52), sin = spine._h22._T52(parent._I52);
                        var _X52 = parent.scaleX, _Y52 = parent.scaleY;
                        var _EF = cos * _X52, _Z52 = sin * _Y52, __52 = sin * _X52, _062 = cos * _Y52;
                        var _CT = _7C1 * _EF + _8C1 * __52;
                        _8C1 = _8C1 * _062 - _7C1 * _Z52;
                        _7C1 = _CT;
                        _CT = _NA1 * _EF + _W52 * __52;
                        _W52 = _W52 * _062 - _NA1 * _Z52;
                        _NA1 = _CT;
                        if (_X52 >= 0) sin = -sin;
                        _CT = _7C1 * cos + _8C1 * sin;
                        _8C1 = _8C1 * cos - _7C1 * sin;
                        _7C1 = _CT;
                        _CT = _NA1 * cos + _W52 * sin;
                        _W52 = _W52 * cos - _NA1 * sin;
                        _NA1 = _CT;
                        if (!parent.data.inheritScale) break;
                        parent = parent.parent
                    } while (parent != null);
                    this._hv = _7C1 * _P52 + _8C1 * _S52;
                    this._Nt = _7C1 * _R52 + _8C1 * _U52;
                    this._u5 = _NA1 * _P52 + _W52 * _S52;
                    this._cE = _NA1 * _R52 + _W52 * _U52
                } else {
                    this._hv = _P52;
                    this._Nt = _R52;
                    this._u5 = _S52;
                    this._cE = _U52
                }
                if (this.skeleton._6t) {
                    this._hv = -this._hv;
                    this._Nt = -this._Nt
                }
                if (this.skeleton._7t) {
                    this._u5 = -this._u5;
                    this._cE = -this._cE
                }
            }
        };
        _3v.prototype._M52 = function () {
            var data = this.data;
            this.x = data.x;
            this.y = data.y;
            this.rotation = data.rotation;
            this.scaleX = data.scaleX;
            this.scaleY = data.scaleY;
            this.shearX = data.shearX;
            this.shearY = data.shearY
        };
        _3v.prototype._162 = function () {
            return Math.atan2(this._u5, this._hv) * spine._h22._262
        };
        _3v.prototype._362 = function () {
            return Math.atan2(this._cE, this._Nt) * spine._h22._262
        };
        _3v.prototype._462 = function () {
            return Math.sqrt(this._hv * this._hv + this._Nt * this._Nt) * this._J52
        };
        _3v.prototype._562 = function () {
            return Math.sqrt(this._u5 * this._u5 + this._cE * this._cE) * this._K52
        };
        _3v.prototype._662 = function () {
            var parent = this.parent;
            if (parent == null) return this.rotation;
            var _7C1 = parent._hv, _8C1 = parent._Nt, _NA1 = parent._u5, _W52 = parent._cE, _hv = this._hv,
                _u5 = this._u5;
            return Math.atan2(_7C1 * _u5 - _NA1 * _hv, _W52 * _hv - _8C1 * _u5) * spine._h22._262
        };
        _3v.prototype._762 = function () {
            var parent = this.parent;
            if (parent == null) return this.rotation;
            var _7C1 = parent._hv, _8C1 = parent._Nt, _NA1 = parent._u5, _W52 = parent._cE, _Nt = this._Nt,
                _cE = this._cE;
            return Math.atan2(_7C1 * _cE - _NA1 * _Nt, _W52 * _Nt - _8C1 * _cE) * spine._h22._262
        };
        _3v.prototype._862 = function (_n22) {
            var _hv = this._hv, _Nt = this._Nt, _u5 = this._u5, _cE = this._cE;
            var cos = spine._h22._Q52(_n22), sin = spine._h22._T52(_n22);
            this._hv = cos * _hv - sin * _u5;
            this._Nt = cos * _Nt - sin * _cE;
            this._u5 = sin * _hv + cos * _u5;
            this._cE = sin * _Nt + cos * _cE
        };
        _3v.prototype._962 = function () {
            var parent = this.parent;
            if (parent == null) {
                this.x = this._z42;
                this.y = this._A42;
                this.rotation = Math.atan2(this._u5, this._hv) * spine._h22._262;
                this.scaleX = Math.sqrt(this._hv * this._hv + this._u5 * this._u5);
                this.scaleY = Math.sqrt(this._Nt * this._Nt + this._cE * this._cE);
                var _6j1 = this._hv * this._cE - this._Nt * this._u5;
                this.shearX = 0;
                this.shearY = Math.atan2(this._hv * this._Nt + this._u5 * this._cE, _6j1) * spine._h22._262;
                return
            }
            var _7C1 = parent._hv, _8C1 = parent._Nt,
                _NA1 = parent._u5, _W52 = parent._cE;
            var _a62 = 1 / (_7C1 * _W52 - _8C1 * _NA1);
            var _9w = this._z42 - parent._z42, _aw = this._A42 - parent._A42;
            this.x = (_9w * _W52 * _a62 - _aw * _8C1 * _a62);
            this.y = (_aw * _7C1 * _a62 - _9w * _NA1 * _a62);
            var _b62 = _a62 * _W52;
            var id = _a62 * _7C1;
            var _c62 = _a62 * _8C1;
            var _d62 = _a62 * _NA1;
            var _e62 = _b62 * this._hv - _c62 * this._u5;
            var _f62 = _b62 * this._Nt - _c62 * this._cE;
            var _g62 = id * this._u5 - _d62 * this._hv;
            var _h62 = id * this._cE - _d62 * this._Nt;
            this.shearX = 0;
            this.scaleX = Math.sqrt(_e62 * _e62 + _g62 * _g62);
            if (this.scaleX > 0.0001) {
                var _6j1 = _e62 * _h62 - _f62 * _g62;
                this.scaleY = _6j1 / this.scaleX;
                this.shearY = Math.atan2(_e62 * _f62 + _g62 * _h62, _6j1) * spine._h22._262;
                this.rotation = Math.atan2(_g62, _e62) * spine._h22._262
            } else {
                this.scaleX = 0;
                this.scaleY = Math.sqrt(_f62 * _f62 + _h62 * _h62);
                this.shearY = 0;
                this.rotation = 90 - Math.atan2(_h62, _f62) * spine._h22._262
            }
            this._I52 = this.rotation
        };
        _3v.prototype._i62 = function (_ku1) {
            var _hv = this._hv, _Nt = this._Nt, _u5 = this._u5, _cE = this._cE;
            var _j62 = 1 / (_hv * _cE - _Nt * _u5);
            var x = _ku1.x - this._z42, y = _ku1.y - this._A42;
            _ku1.x = (x * _cE * _j62 - y * _Nt * _j62);
            _ku1.y = (y * _hv * _j62 - x * _u5 * _j62);
            return _ku1
        };
        _3v.prototype._k62 = function (_l62) {
            var x = _l62.x, y = _l62.y;
            _l62.x = x * this._hv + y * this._Nt + this._z42;
            _l62.y = x * this._u5 + y * this._cE + this._A42;
            return _l62
        };
        return _3v
    }());
    spine._3v = _3v
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _m62 = (function () {
        function _m62(index, name, parent) {
            this.x = 0;
            this.y = 0;
            this.rotation = 0;
            this.scaleX = 1;
            this.scaleY = 1;
            this.shearX = 0;
            this.shearY = 0;
            this.inheritRotation = !0;
            this.inheritScale = !0;
            if (index < 0) throw new _aB("index must be >= 0.");
            if (name == null) throw new _aB("name cannot be null.");
            this.index = index;
            this.name = name;
            this.parent = parent
        }

        return _m62
    }());
    spine._m62 = _m62
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _kR = (function () {
        function _kR(time, data) {
            if (data == null) throw new _aB("data cannot be null.");
            this.time = time;
            this.data = data
        }

        return _kR
    }());
    spine._kR = _kR
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _n62 = (function () {
        function _n62(name) {
            this.name = name
        }

        return _n62
    }());
    spine._n62 = _n62
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _o62 = (function () {
        function _o62(data, skeleton) {
            this.mix = 1;
            this._232 = 0;
            this._p62 = 0;
            if (data == null) throw new _aB("data cannot be null.");
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            this.data = data;
            this.mix = data.mix;
            this._232 = data._232;
            this.bones = new Array();
            for (var _t5 = 0; _t5 < data.bones.length; _t5++) this.bones.push(skeleton._q62(data.bones[_t5].name));
            this.target = skeleton._q62(data.target.name)
        }

        _o62.prototype.apply = function () {
            this._5t()
        };
        _o62.prototype._5t = function () {
            var target = this.target;
            var bones = this.bones;
            switch (bones.length) {
                case 1:
                    this._r62(bones[0],
                        target._z42, target._A42, this.mix);
                    break;
                case 2:
                    this._s62(bones[0], bones[1], target._z42, target._A42, this._232, this.mix);
                    break
            }
        };
        _o62.prototype._r62 = function (bone, _t62, _u62, alpha) {
            var _v62 = bone.parent;
            var id = 1 / (_v62._hv * _v62._cE - _v62._Nt * _v62._u5);
            var x = _t62 - _v62._z42, y = _u62 - _v62._A42;
            var _w62 = (x * _v62._cE - y * _v62._Nt) * id - bone.x, _x62 = (y * _v62._hv - x * _v62._u5) * id - bone.y;
            var _y62 = Math.atan2(_x62, _w62) * spine._h22._262 - bone.shearX - bone.rotation;
            if (bone.scaleX < 0) _y62 += 180;
            if (_y62 > 180) _y62 -= 360; else if (_y62 < -180) _y62 += 360;
            bone._N52(bone.x, bone.y, bone.rotation + _y62 * alpha, bone.scaleX, bone.scaleY, bone.shearX, bone.shearY)
        };
        _o62.prototype._s62 = function (parent, _z62, _t62, _u62, _A62, alpha) {
            if (alpha == 0) {
                _z62._Xs();
                return
            }
            var _RD = parent.x, _SD = parent.y, _X52 = parent.scaleX, _Y52 = parent.scaleY, _B62 = _z62.scaleX;
            var _C62 = 0, _D62 = 0, _OL = 0;
            if (_X52 < 0) {
                _X52 = -_X52;
                _C62 = 180;
                _OL = -1
            } else {
                _C62 = 0;
                _OL = 1
            }
            if (_Y52 < 0) {
                _Y52 = -_Y52;
                _OL = -_OL
            }
            if (_B62 < 0) {
                _B62 = -_B62;
                _D62 = 180
            } else _D62 = 0;
            var _jp1 = _z62.x, _kp1 = 0, _E62 = 0, _F62 = 0, _hv = parent._hv, _Nt = parent._Nt, _u5 = parent._u5,
                _cE = parent._cE;
            var _sv = Math.abs(_X52 - _Y52) <= 0.0001;
            if (!_sv) {
                _kp1 = 0;
                _E62 = _hv * _jp1 + parent._z42;
                _F62 = _u5 * _jp1 + parent._A42
            } else {
                _kp1 = _z62.y;
                _E62 = _hv * _jp1 + _Nt * _kp1 + parent._z42;
                _F62 = _u5 * _jp1 + _cE * _kp1 + parent._A42
            }
            var _v62 = parent.parent;
            _hv = _v62._hv;
            _Nt = _v62._Nt;
            _u5 = _v62._u5;
            _cE = _v62._cE;
            var id = 1 / (_hv * _cE - _Nt * _u5), x = _t62 - _v62._z42, y = _u62 - _v62._A42;
            var _w62 = (x * _cE - y * _Nt) * id - _RD, _x62 = (y * _hv - x * _u5) * id - _SD;
            x = _E62 - _v62._z42;
            y = _F62 - _v62._A42;
            var _9w = (x * _cE - y * _Nt) * id - _RD, _aw = (y * _hv - x * _u5) * id - _SD;
            var _G62 = Math.sqrt(_9w * _9w + _aw * _aw),
                _H62 = _z62.data.length * _B62, _sd1 = 0, _td1 = 0;
            _I62:if (_sv) {
                _H62 *= _X52;
                var cos = (_w62 * _w62 + _x62 * _x62 - _G62 * _G62 - _H62 * _H62) / (2 * _G62 * _H62);
                if (cos < -1) cos = -1; else if (cos > 1) cos = 1;
                _td1 = Math.acos(cos) * _A62;
                _hv = _G62 + _H62 * cos;
                _Nt = _H62 * Math.sin(_td1);
                _sd1 = Math.atan2(_x62 * _hv - _w62 * _Nt, _w62 * _hv + _x62 * _Nt)
            } else {
                _hv = _X52 * _H62;
                _Nt = _Y52 * _H62;
                var _J62 = _hv * _hv, _8T = _Nt * _Nt, _xU = _w62 * _w62 + _x62 * _x62, _K62 = Math.atan2(_x62, _w62);
                _u5 = _8T * _G62 * _G62 + _J62 * _xU - _J62 * _8T;
                var _1j1 = -2 * _8T * _G62, _2j1 = _8T - _J62;
                _cE = _1j1 * _1j1 - 4 * _2j1 * _u5;
                if (_cE >= 0) {
                    var _7S = Math.sqrt(_cE);
                    if (_1j1 < 0) _7S = -_7S;
                    _7S = -(_1j1 + _7S) / 2;
                    var _WD1 = _7S / _2j1, _VQ = _u5 / _7S;
                    var _Kt = Math.abs(_WD1) < Math.abs(_VQ) ? _WD1 : _VQ;
                    if (_Kt * _Kt <= _xU) {
                        y = Math.sqrt(_xU - _Kt * _Kt) * _A62;
                        _sd1 = _K62 - Math.atan2(y, _Kt);
                        _td1 = Math.atan2(y / _Y52, (_Kt - _G62) / _X52);
                        break _I62
                    }
                }
                var _L62 = 0, _M62 = Number.MAX_VALUE, _ht = 0, _jt = 0;
                var _N62 = 0, _O62 = 0, _it = 0, _kt = 0;
                x = _G62 + _hv;
                _cE = x * x;
                if (_cE > _O62) {
                    _N62 = 0;
                    _O62 = _cE;
                    _it = x
                }
                x = _G62 - _hv;
                _cE = x * x;
                if (_cE < _M62) {
                    _L62 = spine._h22.PI;
                    _M62 = _cE;
                    _ht = x
                }
                var angle = Math.acos(-_hv * _G62 / (_J62 - _8T));
                x = _hv * Math.cos(angle) + _G62;
                y = _Nt * Math.sin(angle);
                _cE = x * x + y * y;
                if (_cE < _M62) {
                    _L62 = angle;
                    _M62 = _cE;
                    _ht = x;
                    _jt = y
                }
                if (_cE > _O62) {
                    _N62 = angle;
                    _O62 = _cE;
                    _it = x;
                    _kt = y
                }
                if (_xU <= (_M62 + _O62) / 2) {
                    _sd1 = _K62 - Math.atan2(_jt * _A62, _ht);
                    _td1 = _L62 * _A62
                } else {
                    _sd1 = _K62 - Math.atan2(_kt * _A62, _it);
                    _td1 = _N62 * _A62
                }
            }
            var _P62 = Math.atan2(_kp1, _jp1) * _OL;
            var rotation = parent.rotation;
            _sd1 = (_sd1 - _P62) * spine._h22._262 + _C62 - rotation;
            if (_sd1 > 180) _sd1 -= 360; else if (_sd1 < -180) _sd1 += 360;
            parent._N52(_RD, _SD, rotation + _sd1 * alpha, parent.scaleX, parent.scaleY, 0, 0);
            rotation = _z62.rotation;
            _td1 = ((_td1 + _P62) * spine._h22._262 - _z62.shearX) * _OL + _D62 - rotation;
            if (_td1 > 180) _td1 -= 360; else if (_td1 < -180) _td1 += 360;
            _z62._N52(_jp1, _kp1, rotation + _td1 * alpha, _z62.scaleX, _z62.scaleY, _z62.shearX, _z62.shearY)
        };
        return _o62
    }());
    spine._o62 = _o62
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Q62 = (function () {
        function _Q62(name) {
            this.bones = new Array();
            this._232 = 1;
            this.mix = 1;
            this.name = name
        }

        return _Q62
    }());
    spine._Q62 = _Q62
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _R62 = (function () {
        function _R62(data, skeleton) {
            this.position = 0;
            this.spacing = 0;
            this.rotateMix = 0;
            this._b32 = 0;
            this._S62 = new Array();
            this._cx1 = new Array();
            this._ku1 = new Array();
            this._S12 = new Array();
            this.lengths = new Array();
            this._T62 = new Array();
            if (data == null) throw new _aB("data cannot be null.");
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            this.data = data;
            this.bones = new Array();
            for (var _t5 = 0, _tt = data.bones.length; _t5 < _tt; _t5++) this.bones.push(skeleton._q62(data.bones[_t5].name));
            this.target = skeleton._Gs(data.target.name);
            this.position = data.position;
            this.spacing = data.spacing;
            this.rotateMix = data.rotateMix;
            this._b32 = data._b32
        }

        _R62.prototype.apply = function () {
            this._5t()
        };
        _R62.prototype._5t = function () {
            var attachment = this.target._Ls();
            if (!(attachment instanceof spine._W42)) return;
            var rotateMix = this.rotateMix, _b32 = this._b32;
            var translate = _b32 > 0, rotate = rotateMix > 0;
            if (!translate && !rotate) return;
            var data = this.data;
            var spacingMode = data.spacingMode;
            var _U62 = spacingMode == spine._V62.Length;
            var rotateMode = data.rotateMode;
            var _W62 = rotateMode == spine._X62.Tangent, scale = rotateMode == spine._X62.ChainScale;
            var _Y62 = this.bones.length, _Z62 = _W62 ? _Y62 : _Y62 + 1;
            var bones = this.bones;
            var _S62 = spine._T12._Y22(this._S62, _Z62), lengths = null;
            var spacing = this.spacing;
            if (scale || _U62) {
                if (scale) lengths = spine._T12._Y22(this.lengths, _Y62);
                for (var _t5 = 0, _tt = _Z62 - 1; _t5 < _tt;) {
                    var bone = bones[_t5];
                    var __62 = bone.data.length, x = __62 * bone._hv, y = __62 * bone._u5;
                    __62 = Math.sqrt(x * x + y * y);
                    if (scale) lengths[_t5] = __62;
                    _S62[++_t5] = _U62 ? Math.max(0, __62 + spacing) : spacing
                }
            } else {
                for (var _t5 = 1; _t5 < _Z62; _t5++) _S62[_t5] = spacing
            }
            var _cx1 = this._072(attachment,
                _Z62, _W62, data._172 == spine._272.Percent, spacingMode == spine._V62.Percent);
            var skeleton = this.target.bone.skeleton;
            var _372 = skeleton.x, _472 = skeleton.y;
            var _572 = _cx1[0], _672 = _cx1[1], _772 = data._772;
            var _872 = rotateMode == spine._X62.Chain && _772 == 0;
            for (var _t5 = 0, _lT = 3; _t5 < _Y62; _t5++, _lT += 3) {
                var bone = bones[_t5];
                bone._z42 += (_572 - _372 - bone._z42) * _b32;
                bone._A42 += (_672 - _472 - bone._A42) * _b32;
                var x = _cx1[_lT], y = _cx1[_lT + 1], _9w = x - _572, _aw = y - _672;
                if (scale) {
                    var _972 = lengths[_t5];
                    if (_972 != 0) {
                        var _ZN = (Math.sqrt(_9w * _9w + _aw * _aw) / _972 - 1) * rotateMix + 1;
                        bone._hv *= _ZN;
                        bone._u5 *= _ZN
                    }
                }
                _572 = x;
                _672 = y;
                if (rotate) {
                    var _hv = bone._hv, _Nt = bone._Nt, _u5 = bone._u5, _cE = bone._cE, _Kt = 0, cos = 0, sin = 0;
                    if (_W62) _Kt = _cx1[_lT - 1]; else if (_S62[_t5 + 1] == 0) _Kt = _cx1[_lT + 2]; else _Kt = Math.atan2(_aw, _9w);
                    _Kt -= Math.atan2(_u5, _hv) - _772 * spine._h22._a72;
                    if (_872) {
                        cos = Math.cos(_Kt);
                        sin = Math.sin(_Kt);
                        var _b72 = bone.data.length;
                        _572 += (_b72 * (cos * _hv - sin * _u5) - _9w) * rotateMix;
                        _672 += (_b72 * (sin * _hv + cos * _u5) - _aw) * rotateMix
                    }
                    if (_Kt > spine._h22.PI) _Kt -= spine._h22._c72; else if (_Kt < -spine._h22.PI) _Kt += spine._h22._c72;
                    _Kt *= rotateMix;
                    cos = Math.cos(_Kt);
                    sin = Math.sin(_Kt);
                    bone._hv = cos * _hv - sin * _u5;
                    bone._Nt = cos * _Nt - sin * _cE;
                    bone._u5 = sin * _hv + cos * _u5;
                    bone._cE = sin * _Nt + cos * _cE
                }
            }
        };
        _R62.prototype._072 = function (path, _Z62, _W62, _d72, _e72) {
            var target = this.target;
            var position = this.position;
            var _S62 = this._S62, _Wi1 = spine._T12._Y22(this._cx1, _Z62 * 3 + 2), _ku1 = null;
            var _JE = path._JE;
            var _N42 = path._u42, _f72 = _N42 / 6, _g72 = _R62._h72;
            if (!path._X42) {
                var lengths = path.lengths;
                _f72 -= _JE ? 1 : 2;
                var _i72 = lengths[_f72];
                if (_d72) position *= _i72;
                if (_e72) {
                    for (var _t5 = 0;
                         _t5 < _Z62; _t5++) _S62[_t5] *= _i72
                }
                _ku1 = spine._T12._Y22(this._ku1, 8);
                for (var _t5 = 0, _HP = 0, curve = 0; _t5 < _Z62; _t5++, _HP += 3) {
                    var _j72 = _S62[_t5];
                    position += _j72;
                    var _lT = position;
                    if (_JE) {
                        _lT %= _i72;
                        if (_lT < 0) _lT += _i72;
                        curve = 0
                    } else if (_lT < 0) {
                        if (_g72 != _R62._k72) {
                            _g72 = _R62._k72;
                            path._x42(target, 2, 4, _ku1, 0)
                        }
                        this._l72(_lT, _ku1, 0, _Wi1, _HP);
                        continue
                    } else if (_lT > _i72) {
                        if (_g72 != _R62._m72) {
                            _g72 = _R62._m72;
                            path._x42(target, _N42 - 6, 4, _ku1, 0)
                        }
                        this._n72(_lT - _i72, _ku1, 0, _Wi1, _HP);
                        continue
                    }
                    for (; ; curve++) {
                        var _o72 = lengths[curve];
                        if (_lT > _o72) continue;
                        if (curve == 0) _lT /= _o72; else {
                            var __x1 = lengths[curve - 1];
                            _lT = (_lT - __x1) / (_o72 - __x1)
                        }
                        break
                    }
                    if (curve != _g72) {
                        _g72 = curve;
                        if (_JE && curve == _f72) {
                            path._x42(target, _N42 - 4, 4, _ku1, 0);
                            path._x42(target, 0, 4, _ku1, 4)
                        } else path._x42(target, curve * 6 + 2, 8, _ku1, 0)
                    }
                    this._p72(_lT, _ku1[0], _ku1[1], _ku1[2], _ku1[3], _ku1[4], _ku1[5], _ku1[6], _ku1[7], _Wi1, _HP, _W62 || (_t5 > 0 && _j72 == 0))
                }
                return _Wi1
            }
            if (_JE) {
                _N42 += 2;
                _ku1 = spine._T12._Y22(this._ku1, _N42);
                path._x42(target, 2, _N42 - 4, _ku1, 0);
                path._x42(target, 0, 2, _ku1, _N42 - 4);
                _ku1[_N42 - 2] = _ku1[0];
                _ku1[_N42 - 1] = _ku1[1]
            } else {
                _f72--;
                _N42 -= 4;
                _ku1 = spine._T12._Y22(this._ku1, _N42);
                path._x42(target, 2, _N42, _ku1, 0)
            }
            var _S12 = spine._T12._Y22(this._S12, _f72);
            var _q72 = 0;
            var _xt = _ku1[0], _yt = _ku1[1], _322 = 0, _422 = 0, _522 = 0, _622 = 0, _zt = 0, _At = 0;
            var _722 = 0, _822 = 0, _922 = 0, _a22 = 0, _b22 = 0, _c22 = 0, _d22 = 0, _e22 = 0;
            for (var _t5 = 0, _v5 = 2; _t5 < _f72; _t5++, _v5 += 6) {
                _322 = _ku1[_v5];
                _422 = _ku1[_v5 + 1];
                _522 = _ku1[_v5 + 2];
                _622 = _ku1[_v5 + 3];
                _zt = _ku1[_v5 + 4];
                _At = _ku1[_v5 + 5];
                _722 = (_xt - _322 * 2 + _522) * 0.1875;
                _822 = (_yt - _422 * 2 + _622) * 0.1875;
                _922 = ((_322 - _522) * 3 - _xt + _zt) * 0.09375;
                _a22 = ((_422 - _622) * 3 - _yt + _At) * 0.09375;
                _b22 = _722 * 2 + _922;
                _c22 = _822 * 2 + _a22;
                _d22 = (_322 - _xt) * 0.75 + _722 + _922 * 0.16666667;
                _e22 = (_422 - _yt) * 0.75 + _822 + _a22 * 0.16666667;
                _q72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                _d22 += _b22;
                _e22 += _c22;
                _b22 += _922;
                _c22 += _a22;
                _q72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                _d22 += _b22;
                _e22 += _c22;
                _q72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                _d22 += _b22 + _922;
                _e22 += _c22 + _a22;
                _q72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                _S12[_t5] = _q72;
                _xt = _zt;
                _yt = _At
            }
            if (_d72) position *= _q72;
            if (_e72) {
                for (var _t5 = 0; _t5 < _Z62; _t5++) _S62[_t5] *= _q72
            }
            var _T62 = this._T62;
            var _r72 = 0;
            for (var _t5 = 0, _HP = 0, curve = 0, _s72 = 0; _t5 < _Z62; _t5++, _HP += 3) {
                var _j72 = _S62[_t5];
                position += _j72;
                var _lT = position;
                if (_JE) {
                    _lT %= _q72;
                    if (_lT < 0) _lT += _q72;
                    curve = 0
                } else if (_lT < 0) {
                    this._l72(_lT, _ku1, 0, _Wi1, _HP);
                    continue
                } else if (_lT > _q72) {
                    this._n72(_lT - _q72, _ku1, _N42 - 4, _Wi1, _HP);
                    continue
                }
                for (; ; curve++) {
                    var _t72 = _S12[curve];
                    if (_lT > _t72) continue;
                    if (curve == 0) _lT /= _t72; else {
                        var __x1 = _S12[curve - 1];
                        _lT = (_lT - __x1) / (_t72 - __x1)
                    }
                    break
                }
                if (curve != _g72) {
                    _g72 = curve;
                    var _MW = curve * 6;
                    _xt = _ku1[_MW];
                    _yt = _ku1[_MW + 1];
                    _322 = _ku1[_MW + 2];
                    _422 = _ku1[_MW + 3];
                    _522 = _ku1[_MW + 4];
                    _622 = _ku1[_MW + 5];
                    _zt = _ku1[_MW + 6];
                    _At = _ku1[_MW + 7];
                    _722 = (_xt - _322 * 2 + _522) * 0.03;
                    _822 = (_yt - _422 * 2 + _622) * 0.03;
                    _922 = ((_322 - _522) * 3 - _xt + _zt) * 0.006;
                    _a22 = ((_422 - _622) * 3 - _yt + _At) * 0.006;
                    _b22 = _722 * 2 + _922;
                    _c22 = _822 * 2 + _a22;
                    _d22 = (_322 - _xt) * 0.3 + _722 + _922 * 0.16666667;
                    _e22 = (_422 - _yt) * 0.3 + _822 + _a22 * 0.16666667;
                    _r72 = Math.sqrt(_d22 * _d22 + _e22 * _e22);
                    _T62[0] = _r72;
                    for (_MW = 1; _MW < 8; _MW++) {
                        _d22 += _b22;
                        _e22 += _c22;
                        _b22 += _922;
                        _c22 += _a22;
                        _r72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                        _T62[_MW] = _r72
                    }
                    _d22 += _b22;
                    _e22 += _c22;
                    _r72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                    _T62[8] = _r72;
                    _d22 += _b22 + _922;
                    _e22 += _c22 + _a22;
                    _r72 += Math.sqrt(_d22 * _d22 + _e22 * _e22);
                    _T62[9] = _r72;
                    _s72 = 0
                }
                _lT *= _r72;
                for (; ; _s72++) {
                    var _u72 = _T62[_s72];
                    if (_lT > _u72) continue;
                    if (_s72 == 0) _lT /= _u72; else {
                        var __x1 = _T62[_s72 - 1];
                        _lT = _s72 + (_lT - __x1) / (_u72 - __x1)
                    }
                    break
                }
                this._p72(_lT * 0.1, _xt, _yt, _322, _422, _522, _622, _zt, _At, _Wi1, _HP, _W62 || (_t5 > 0 && _j72 == 0))
            }
            return _Wi1
        };
        _R62.prototype._l72 = function (_lT, _CT, _t5, _Wi1, _HP) {
            var _xt = _CT[_t5], _yt = _CT[_t5 + 1], _9w = _CT[_t5 + 2] - _xt,
                _aw = _CT[_t5 + 3] - _yt, _Kt = Math.atan2(_aw, _9w);
            _Wi1[_HP] = _xt + _lT * Math.cos(_Kt);
            _Wi1[_HP + 1] = _yt + _lT * Math.sin(_Kt);
            _Wi1[_HP + 2] = _Kt
        };
        _R62.prototype._n72 = function (_lT, _CT, _t5, _Wi1, _HP) {
            var _xt = _CT[_t5 + 2], _yt = _CT[_t5 + 3], _9w = _xt - _CT[_t5], _aw = _yt - _CT[_t5 + 1],
                _Kt = Math.atan2(_aw, _9w);
            _Wi1[_HP] = _xt + _lT * Math.cos(_Kt);
            _Wi1[_HP + 1] = _yt + _lT * Math.sin(_Kt);
            _Wi1[_HP + 2] = _Kt
        };
        _R62.prototype._p72 = function (_lT, _xt, _yt, _322, _422, _522, _622, _zt, _At, _Wi1, _HP, _W62) {
            if (_lT == 0) _lT = 0.0001;
            var _v72 = _lT * _lT, _w72 = _v72 * _lT, _sv = 1 - _lT, _x72 = _sv * _sv,
                _y72 = _x72 * _sv;
            var _z72 = _sv * _lT, _A72 = _z72 * 3, _B72 = _sv * _A72, _C72 = _A72 * _lT;
            var x = _xt * _y72 + _322 * _B72 + _522 * _C72 + _zt * _w72,
                y = _yt * _y72 + _422 * _B72 + _622 * _C72 + _At * _w72;
            _Wi1[_HP] = x;
            _Wi1[_HP + 1] = y;
            if (_W62) _Wi1[_HP + 2] = Math.atan2(y - (_yt * _x72 + _422 * _z72 * 2 + _622 * _v72), x - (_xt * _x72 + _322 * _z72 * 2 + _522 * _v72))
        };
        _R62._h72 = -1;
        _R62._k72 = -2;
        _R62._m72 = -3;
        return _R62
    }());
    spine._R62 = _R62
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _D72 = (function () {
        function _D72(name) {
            this.bones = new Array();
            this.name = name
        }

        return _D72
    }());
    spine._D72 = _D72;
    (function (_272) {
        _272[_272["Fixed"] = 0] = "Fixed";
        _272[_272["Percent"] = 1] = "Percent"
    })(spine._272 || (spine._272 = {}));
    var _272 = spine._272;
    (function (_V62) {
        _V62[_V62["Length"] = 0] = "Length";
        _V62[_V62["Fixed"] = 1] = "Fixed";
        _V62[_V62["Percent"] = 2] = "Percent"
    })(spine._V62 || (spine._V62 = {}));
    var _V62 = spine._V62;
    (function (_X62) {
        _X62[_X62["Tangent"] = 0] = "Tangent";
        _X62[_X62["Chain"] = 1] = "Chain";
        _X62[_X62["ChainScale"] = 2] = "ChainScale"
    })(spine._X62 || (spine._X62 = {}));
    var _X62 = spine._X62
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _E72 = (function () {
        function _E72(_F72) {
            this._g42 = new Array();
            this._p21 = {};
            this._F72 = _F72
        }

        _E72.prototype._rQ = function () {
            var _t5 = 0;
            for (var _uv in this._p21) _t5++;
            return _t5
        };
        return _E72
    }());
    var _G72 = (function () {
        function _G72(_e42) {
            if (_e42 === void 0) {
                _e42 = ""
            }
            this._H72 = {};
            this._I72 = {};
            this._J72 = {};
            this._f42 = {};
            this._e42 = _e42
        }

        _G72.prototype._K72 = function (_F72, _d42, path) {
            var _H72 = this._H72[_F72];
            if (_H72 === null || _H72 === undefined) {
                _H72 = new _E72(_F72);
                this._H72[_F72] = _H72
            }
            if (_d42 !== null) _H72._d42 = _d42;
            _H72._g42.push(path);
            if (this._I72[path] === path) {
                return !1
            } else {
                this._I72[path] = path;
                return !0
            }
        };
        _G72.prototype._h42 = function (_F72, path) {
            var _j42 = this;
            path = this._e42 + path;
            if (!this._K72(_F72, null, path)) return;
            var _4Z = new XMLHttpRequest();
            _4Z.onreadystatechange = function () {
                if (_4Z.readyState == XMLHttpRequest._k42) {
                    if (_4Z.status >= 200 && _4Z.status < 300) {
                        _j42._J72[path] = _4Z.responseText
                    } else {
                        _j42._f42[path] = "Couldn't load text " + path + ": status " + _4Z.status + ", " + _4Z.responseText
                    }
                }
            };
            _4Z.open("GET", path, !0);
            _4Z.send()
        };
        _G72.prototype._L72 = function (_F72,
                                        path) {
            var _j42 = this;
            path = this._e42 + path;
            if (!this._K72(_F72, null, path)) return;
            var _4Z = new XMLHttpRequest();
            _4Z.onreadystatechange = function () {
                if (_4Z.readyState == XMLHttpRequest._k42) {
                    if (_4Z.status >= 200 && _4Z.status < 300) {
                        _j42._J72[path] = JSON.parse(_4Z.responseText)
                    } else {
                        _j42._f42[path] = "Couldn't load text " + path + ": status " + _4Z.status + ", " + _4Z.responseText
                    }
                }
            };
            _4Z.open("GET", path, !0);
            _4Z.send()
        };
        _G72.prototype._Ou = function (_F72, _d42, path) {
            var _j42 = this;
            path = this._e42 + path;
            if (!this._K72(_F72, _d42, path)) return;
            var img = new Image();
            img.src = _uQ(null, null, path);
            img.crossOrigin = "anonymous";
            img.onload = function (_6Z) {
                _j42._J72[path] = img
            };
            img.onerror = function (_6Z) {
                _j42._f42[path] = "Couldn't load image " + path
            }
        };
        _G72.prototype.get = function (_F72, path) {
            path = this._e42 + path;
            var _H72 = this._H72[_F72];
            if (_H72 === null || _H72 === undefined) return !0;
            return _H72._p21[path]
        };
        _G72.prototype._M72 = function (_H72) {
            for (var _t5 = 0; _t5 < _H72._g42.length; _t5++) {
                var path = _H72._g42[_t5];
                var _l42 = _H72._p21[path];
                if (_l42 === null || _l42 === undefined) {
                    var _N72 = this._J72[path];
                    if (_N72 === null || _N72 === undefined) continue;
                    if (_N72 instanceof HTMLImageElement) {
                        _H72._p21[path] = _H72._d42(_N72)
                    } else {
                        _H72._p21[path] = _N72
                    }
                }
            }
        };
        _G72.prototype._n42 = function (_F72) {
            var _H72 = this._H72[_F72];
            if (_H72 === null || _H72 === undefined) return !0;
            this._M72(_H72);
            return _H72._g42.length == _H72._rQ()
        };
        _G72.prototype._ou = function () {
        };
        _G72.prototype._q42 = function () {
            return Object._r42(this._f42).length > 0
        };
        _G72.prototype._s42 = function () {
            return this._f42
        };
        return _G72
    }());
    spine._G72 = _G72
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Tr = (function () {
        function _Tr(data) {
            this._O72 = new Array();
            this.time = 0;
            this._6t = !1;
            this._7t = !1;
            this.x = 0;
            this.y = 0;
            if (data == null) throw new _aB("data cannot be null.");
            this.data = data;
            this.bones = new Array();
            for (var _t5 = 0; _t5 < data.bones.length; _t5++) {
                var _P72 = data.bones[_t5];
                var bone = void 0;
                if (_P72.parent == null) bone = new spine._3v(_P72, this, null); else {
                    var _Q72 = this.bones[_P72.parent.index];
                    bone = new spine._3v(_P72, this, _Q72);
                    _Q72._Dh1.push(bone)
                }
                this.bones.push(bone)
            }
            this.slots = new Array();
            this._fv = new Array();
            for (var _t5 = 0; _t5 < data.slots.length; _t5++) {
                var _R72 = data.slots[_t5];
                var bone = this.bones[_R72._P72.index];
                var slot = new spine._S72(_R72, bone);
                this.slots.push(slot);
                this._fv.push(slot)
            }
            this._632 = new Array();
            this._T72 = new Array();
            for (var _t5 = 0; _t5 < data._632.length; _t5++) {
                var _U72 = data._632[_t5];
                this._632.push(new spine._o62(_U72, this))
            }
            this._h32 = new Array();
            for (var _t5 = 0; _t5 < data._h32.length; _t5++) {
                var _V72 = data._h32[_t5];
                this._h32.push(new spine._W72(_V72, this))
            }
            this._q32 = new Array();
            for (var _t5 = 0; _t5 < data._q32.length;
                 _t5++) {
                var _X72 = data._q32[_t5];
                this._q32.push(new spine._R62(_X72, this))
            }
            this.color = new spine._uY1(1, 1, 1, 1);
            this._Y72();
        }

        _Tr.prototype._Y72 = function () {
            var _Y72 = this._O72;
            _Y72.length = 0;
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) bones[_t5]._L52 = !1;
            var _632 = this._T72;
            _632.length = 0;
            for (var _t5 = 0; _t5 < this._632.length; _t5++) _632.push(this._632[_t5]);
            var _Z72 = _632.length;
            for (var _t5 = 0, _p62 = 0, _tt = _Z72; _t5 < _tt; _t5++) {
                var ik = _632[_t5];
                var bone = ik.bones[0].parent;
                for (_p62 = 0; bone != null; _p62++) bone = bone.parent;
                ik._p62 = _p62
            }
            for (var _t5 = 1, _MW = 0; _t5 < _Z72; _t5++) {
                var ik = _632[_t5];
                var _p62 = ik._p62;
                for (_MW = _t5 - 1; _MW >= 0; _MW--) {
                    var _Cp1 = _632[_MW];
                    if (_Cp1._p62 < _p62) break;
                    _632[_MW + 1] = _Cp1
                }
                _632[_MW + 1] = ik
            }
            for (var _t5 = 0, _tt = _632.length; _t5 < _tt; _t5++) {
                var _532 = _632[_t5];
                var target = _532.target;
                this.__72(target);
                var _082 = _532.bones;
                var _182 = _082[0];
                this.__72(_182);
                _Y72.push(_532);
                this._282(_182._Dh1);
                _082[_082.length - 1]._L52 = !0
            }
            var _q32 = this._q32;
            for (var _t5 = 0, _tt = _q32.length; _t5 < _tt; _t5++) {
                var _532 = _q32[_t5];
                var slot = _532.target;
                var _Is = slot.data.index;
                var _382 = slot.bone;
                if (this.skin != null) this._482(this.skin, _Is, _382);
                if (this.data._As != null && this.data._As != this.skin) this._482(this.data._As, _Is, _382);
                for (var _MW = 0, _K32 = this.data.skins.length; _MW < _K32; _MW++) this._482(this.data.skins[_MW], _Is, _382);
                var attachment = slot._Ls();
                if (attachment instanceof spine._W42) this._582(attachment, _382);
                var _082 = _532.bones;
                var _Y62 = _082.length;
                for (var _MW = 0; _MW < _Y62; _MW++) this.__72(_082[_MW]);
                _Y72.push(_532);
                for (var _MW = 0; _MW < _Y62; _MW++) this._282(_082[_MW]._Dh1);
                for (var _MW = 0; _MW < _Y62; _MW++) _082[_MW]._L52 = !0
            }
            var _h32 = this._h32;
            for (var _t5 = 0, _tt = _h32.length; _t5 < _tt; _t5++) {
                var _532 = _h32[_t5];
                this.__72(_532.target);
                var _082 = _532.bones;
                var _Y62 = _082.length;
                for (var _MW = 0; _MW < _Y62; _MW++) this.__72(_082[_MW]);
                _Y72.push(_532);
                for (var _MW = 0; _MW < _Y62; _MW++) this._282(_082[_MW]._Dh1);
                for (var _MW = 0; _MW < _Y62; _MW++) _082[_MW]._L52 = !0
            }
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) this.__72(bones[_t5])
        };
        _Tr.prototype._482 = function (skin, _Is, _382) {
            var _682 = skin._682[_Is];
            if (!_682) return;
            for (var _7N in _682) {
                this._582(_682[_7N], _382)
            }
        };
        _Tr.prototype._582 = function (attachment, _382) {
            if (!(attachment instanceof spine._W42)) return;
            var _782 = attachment.bones;
            if (_782 == null) this.__72(_382); else {
                var bones = this.bones;
                var _t5 = 0;
                while (_t5 < _782.length) {
                    var _Y62 = _782[_t5++];
                    for (var _tt = _t5 + _Y62; _t5 < _tt; _t5++) {
                        var _p22 = _782[_t5];
                        this.__72(bones[_p22])
                    }
                }
            }
        };
        _Tr.prototype.__72 = function (bone) {
            if (bone._L52) return;
            var parent = bone.parent;
            if (parent != null) this.__72(parent);
            bone._L52 = !0;
            this._O72.push(bone)
        };
        _Tr.prototype._282 = function (bones) {
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) {
                var bone = bones[_t5];
                if (bone._L52) this._282(bone._Dh1);
                bone._L52 = !1
            }
        };
        _Tr.prototype._Xs = function () {
            var _Y72 = this._O72;
            for (var _t5 = 0, _tt = _Y72.length; _t5 < _tt; _t5++) _Y72[_t5]._5t()
        };
        _Tr.prototype._M52 = function () {
            this._882();
            this._Cs()
        };
        _Tr.prototype._882 = function () {
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) bones[_t5]._M52();
            var _632 = this._632;
            for (var _t5 = 0, _tt = _632.length; _t5 < _tt; _t5++) {
                var _532 = _632[_t5];
                _532._232 = _532.data._232;
                _532.mix = _532.data.mix
            }
            var _h32 = this._h32;
            for (var _t5 = 0, _tt = _h32.length; _t5 < _tt; _t5++) {
                var _532 = _h32[_t5];
                var data = _532.data;
                _532.rotateMix = data.rotateMix;
                _532._b32 = data._b32;
                _532.scaleMix = data.scaleMix;
                _532._c32 = data._c32
            }
            var _q32 = this._q32;
            for (var _t5 = 0, _tt = _q32.length; _t5 < _tt; _t5++) {
                var _532 = _q32[_t5];
                var data = _532.data;
                _532.position = data.position;
                _532.spacing = data.spacing;
                _532.rotateMix = data.rotateMix;
                _532._b32 = data._b32
            }
        };
        _Tr.prototype._Cs = function () {
            var slots = this.slots;
            spine._T12._Q22(slots, 0, this._fv, 0, slots.length);
            for (var _t5 = 0,
                     _tt = slots.length; _t5 < _tt; _t5++) slots[_t5]._M52()
        };
        _Tr.prototype._ds = function () {
            if (this.bones.length == 0) return null;
            return this.bones[0]
        };
        _Tr.prototype._q62 = function (_982) {
            if (_982 == null) throw new _aB("boneName cannot be null.");
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) {
                var bone = bones[_t5];
                if (bone.data.name == _982) return bone
            }
            return null
        };
        _Tr.prototype._a82 = function (_982) {
            if (_982 == null) throw new _aB("boneName cannot be null.");
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt;
                 _t5++) if (bones[_t5].data.name == _982) return _t5;
            return -1
        };
        _Tr.prototype._Gs = function (_b82) {
            if (_b82 == null) throw new _aB("slotName cannot be null.");
            var slots = this.slots;
            for (var _t5 = 0, _tt = slots.length; _t5 < _tt; _t5++) {
                var slot = slots[_t5];
                if (slot.data.name == _b82) return slot;
            }
            return null
        };
        _Tr.prototype._Js = function (_b82) {
            if (_b82 == null) throw new _aB("slotName cannot be null.");
            var slots = this.slots;
            for (var _t5 = 0, _tt = slots.length; _t5 < _tt; _t5++) if (slots[_t5].data.name == _b82) return _t5;
            return -1
        };
        _Tr.prototype._Bs = function (_c82) {
            var skin = this.data._d82(_c82);
            if (skin == null) throw new _aB("Skin not found: " + _c82);
            this._e82(skin)
        };
        _Tr.prototype._e82 = function (_f82) {
            if (_f82 != null) {
                if (this.skin != null) _f82._g82(this, this.skin); else {
                    var slots = this.slots;
                    for (var _t5 = 0, _tt = slots.length; _t5 < _tt; _t5++) {
                        var slot = slots[_t5];
                        var _h82 = slot.data._K22;
                        if (_h82 != null) {
                            var attachment = _f82._Ls(_t5, _h82);
                            if (attachment != null) slot._Hs(attachment)
                        }
                    }
                }
            }
            this.skin = _f82
        };
        _Tr.prototype._i82 = function (_b82, _K22) {
            return this._Ls(this.data._Js(_b82), _K22)
        };
        _Tr.prototype._Ls = function (_Is,
                                      _K22) {
            if (_K22 == null) throw new _aB("attachmentName cannot be null.");
            if (this.skin != null) {
                var attachment = this.skin._Ls(_Is, _K22);
                if (attachment != null) return attachment
            }
            if (this.data._As != null) return this.data._As._Ls(_Is, _K22);
            return null
        };
        _Tr.prototype._Hs = function (_b82, _K22) {
            if (_b82 == null) throw new _aB("slotName cannot be null.");
            var slots = this.slots;
            for (var _t5 = 0, _tt = slots.length; _t5 < _tt; _t5++) {
                var slot = slots[_t5];
                if (slot.data.name == _b82) {
                    var attachment = null;
                    if (_K22 != null) {
                        attachment = this._Ls(_t5, _K22);
                        if (attachment == null) throw new _aB("Attachment not found: " + _K22 + ", for slot: " + _b82)
                    }
                    slot._Hs(attachment);
                    return
                }
            }
            throw new _aB("Slot not found: " + _b82)
        };
        _Tr.prototype._j82 = function (_k82) {
            if (_k82 == null) throw new _aB("constraintName cannot be null.");
            var _632 = this._632;
            for (var _t5 = 0, _tt = _632.length; _t5 < _tt; _t5++) {
                var _l82 = _632[_t5];
                if (_l82.data.name == _k82) return _l82
            }
            return null
        };
        _Tr.prototype._m82 = function (_k82) {
            if (_k82 == null) throw new _aB("constraintName cannot be null.");
            var _h32 = this._h32;
            for (var _t5 = 0, _tt = _h32.length; _t5 < _tt; _t5++) {
                var _532 = _h32[_t5];
                if (_532.data.name == _k82) return _532
            }
            return null
        }
        ;_Tr.prototype._n82 = function (_k82) {
            if (_k82 == null) throw new _aB("constraintName cannot be null.");
            var _q32 = this._q32;
            for (var _t5 = 0, _tt = _q32.length; _t5 < _tt; _t5++) {
                var _532 = _q32[_t5];
                if (_532.data.name == _k82) return _532
            }
            return null;
        };
        _Tr.prototype.getBounds = function (offset, _l5) {
            if (offset == null) throw new _aB("offset cannot be null.");
            if (_l5 == null) throw new _aB("size cannot be null.");
            var _fv = this._fv;
            var _ht = Number.POSITIVE_INFINITY, _jt = Number.POSITIVE_INFINITY, _it = Number.NEGATIVE_INFINITY,
                _kt = Number.NEGATIVE_INFINITY;
            for (var _t5 = 0, _tt = _fv.length; _t5 < _tt; _t5++) {
                var slot = _fv[_t5];
                var vertices = null;
                var attachment = slot._Ls();
                if (attachment instanceof spine._iv) vertices = attachment._ov(slot, !1); else if (attachment instanceof spine._jv) vertices = attachment._ov(slot, !0);
                if (vertices != null) {
                    for (var _MW = 0, _K32 = vertices.length; _MW < _K32; _MW += 8) {
                        var x = vertices[_MW], y = vertices[_MW + 1];
                        _ht = Math.min(_ht, x);
                        _jt = Math.min(_jt, y);
                        _it = Math.max(_it, x);
                        _kt = Math.max(_kt, y)
                    }
                }
            }
            offset.set(_ht, _jt);
            _l5.set(_it - _ht, _kt - _jt)
        };
        _Tr.prototype._5t = function (_x32) {
            this.time += _x32
        };
        return _Tr
    }());
    spine._Tr = _Tr
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _bs = (function () {
        function _bs() {
            this._ht = 0;
            this._jt = 0;
            this._it = 0;
            this._kt = 0;
            this._gt = new Array();
            this._ut = new Array();
            this._o82 = new spine._p82(function () {
                return spine._T12._U12(16)
            })
        }

        _bs.prototype._5t = function (skeleton, _q82) {
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            var _gt = this._gt;
            var _ut = this._ut;
            var _o82 = this._o82;
            var slots = skeleton.slots;
            var _r82 = slots.length;
            _gt.length = 0;
            _o82._Q32(_ut);
            _ut.length = 0;
            for (var _t5 = 0; _t5 < _r82; _t5++) {
                var slot = slots[_t5];
                var attachment = slot._Ls();
                if (attachment instanceof spine._I42) {
                    var _s82 = attachment;
                    _gt.push(_s82);
                    var _on1 = _o82._t82();
                    if (_on1.length != _s82._u42) {
                        _on1 = spine._T12._U12(_s82._u42)
                    }
                    _ut.push(_on1);
                    _s82._v42(slot, _on1)
                }
            }
            if (_q82) this._u82()
        };
        _bs.prototype._u82 = function () {
            var _ht = Number.POSITIVE_INFINITY, _jt = Number.POSITIVE_INFINITY, _it = Number.NEGATIVE_INFINITY,
                _kt = Number.NEGATIVE_INFINITY;
            var _ut = this._ut;
            for (var _t5 = 0, _tt = _ut.length; _t5 < _tt; _t5++) {
                var _on1 = _ut[_t5];
                var vertices = _on1;
                for (var _MW = 0, _K32 = _on1.length; _MW < _K32; _MW += 2) {
                    var x = vertices[_MW];
                    var y = vertices[_MW + 1];
                    _ht = Math.min(_ht, x);
                    _jt = Math.min(_jt, y);
                    _it = Math.max(_it, x);
                    _kt = Math.max(_kt, y)
                }
            }
            this._ht = _ht;
            this._jt = _jt;
            this._it = _it;
            this._kt = _kt
        };
        _bs.prototype._v82 = function (x, y) {
            return x >= this._ht && x <= this._it && y >= this._jt && y <= this._kt
        };
        _bs.prototype._w82 = function (_xt, _yt, _zt, _At) {
            var _ht = this._ht;
            var _jt = this._jt;
            var _it = this._it;
            var _kt = this._kt;
            if ((_xt <= _ht && _zt <= _ht) || (_yt <= _jt && _At <= _jt) || (_xt >= _it && _zt >= _it) || (_yt >= _kt && _At >= _kt)) return !1;
            var _wt = (_At - _yt) / (_zt - _xt);
            var y = _wt * (_ht - _xt) + _yt;
            if (y > _jt && y < _kt) return !0;
            y = _wt * (_it - _xt) + _yt;
            if (y > _jt && y < _kt) return !0;
            var x = (_jt - _yt) / _wt + _xt;
            if (x > _ht && x < _it) return !0;
            x = (_kt - _yt) / _wt + _xt;
            if (x > _ht && x < _it) return !0;
            return !1;
        };
        _bs.prototype._x82 = function (_y82) {
            return this._ht < _y82._it && this._it > _y82._ht && this._jt < _y82._kt && this._kt > _y82._jt
        };
        _bs.prototype.__t = function (x, y) {
            var _ut = this._ut;
            for (var _t5 = 0, _tt = _ut.length; _t5 < _tt; _t5++) if (this._z82(_ut[_t5], x, y)) return this._gt[_t5];
            return null
        };
        _bs.prototype._z82 = function (_on1,
                                       x, y) {
            var vertices = _on1;
            var _K32 = _on1.length;
            var _A82 = _K32 - 2;
            var _B82 = !1;
            for (var _MW = 0; _MW < _K32; _MW += 2) {
                var _C82 = vertices[_MW + 1];
                var _j22 = vertices[_A82 + 1];
                if ((_C82 < y && _j22 >= y) || (_j22 < y && _C82 >= y)) {
                    var _D82 = vertices[_MW];
                    if (_D82 + (y - _C82) / (_j22 - _C82) * (vertices[_A82] - _D82) < x) _B82 = !_B82
                }
                _A82 = _MW
            }
            return _B82
        };
        _bs.prototype._Ct = function (_xt, _yt, _zt, _At) {
            var _ut = this._ut;
            for (var _t5 = 0, _tt = _ut.length; _t5 < _tt; _t5++) if (this._E82(_ut[_t5], _xt, _yt, _zt, _At)) return this._gt[_t5];
            return null
        };
        _bs.prototype._E82 = function (_on1,
                                       _xt, _yt, _zt, _At) {
            var vertices = _on1;
            var _K32 = _on1.length;
            var _F82 = _xt - _zt, _G82 = _yt - _At;
            var _H82 = _xt * _At - _yt * _zt;
            var _TD = vertices[_K32 - 2], _UD = vertices[_K32 - 1];
            for (var _MW = 0; _MW < _K32; _MW += 2) {
                var _I82 = vertices[_MW], _J82 = vertices[_MW + 1];
                var _K82 = _TD * _J82 - _UD * _I82;
                var _L82 = _TD - _I82, _M82 = _UD - _J82;
                var _N82 = _F82 * _M82 - _G82 * _L82;
                var x = (_H82 * _L82 - _F82 * _K82) / _N82;
                if (((x >= _TD && x <= _I82) || (x >= _I82 && x <= _TD)) && ((x >= _xt && x <= _zt) || (x >= _zt && x <= _xt))) {
                    var y = (_H82 * _M82 - _G82 * _K82) / _N82;
                    if (((y >= _UD && y <= _J82) || (y >= _J82 && y <= _UD)) && ((y >= _yt && y <= _At) || (y >= _At && y <= _yt))) return !0
                }
                _TD = _I82;
                _UD = _J82
            }
            return !1
        };
        _bs.prototype._O82 = function (_s82) {
            if (_s82 == null) throw new _aB("boundingBox cannot be null.");
            var index = this._gt.indexOf(_s82);
            return index == -1 ? null : this._ut[index];
        };
        _bs.prototype._P82 = function () {
            return this._it - this._ht
        };
        _bs.prototype._Q82 = function () {
            return this._kt - this._jt
        };
        return _bs
    }());
    spine._bs = _bs
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _R82 = (function () {
        function _R82() {
            this.bones = new Array();
            this.slots = new Array();
            this.skins = new Array();
            this.events = new Array();
            this.animations = new Array();
            this._632 = new Array();
            this._h32 = new Array();
            this._q32 = new Array()
        }

        _R82.prototype._q62 = function (_982) {
            if (_982 == null) throw new _aB("boneName cannot be null.");
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) {
                var bone = bones[_t5];
                if (bone.name == _982) return bone
            }
            return null
        };
        _R82.prototype._a82 = function (_982) {
            if (_982 == null) throw new _aB("boneName cannot be null.");
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) if (bones[_t5].name == _982) return _t5;
            return -1
        };
        _R82.prototype._Gs = function (_b82) {
            if (_b82 == null) throw new _aB("slotName cannot be null.");
            var slots = this.slots;
            for (var _t5 = 0, _tt = slots.length; _t5 < _tt; _t5++) {
                var slot = slots[_t5];
                if (slot.name == _b82) return slot
            }
            return null
        };
        _R82.prototype._Js = function (_b82) {
            if (_b82 == null) throw new _aB("slotName cannot be null.");
            var slots = this.slots;
            for (var _t5 = 0, _tt = slots.length; _t5 < _tt; _t5++) if (slots[_t5].name == _b82) return _t5;
            return -1
        };
        _R82.prototype._d82 = function (_c82) {
            if (_c82 == null) throw new _aB("skinName cannot be null.");
            var skins = this.skins;
            for (var _t5 = 0, _tt = skins.length;
                 _t5 < _tt; _t5++) {
                var skin = skins[_t5];
                if (skin.name == _c82) return skin
            }
            return null
        };
        _R82.prototype._S82 = function (_T82) {
            if (_T82 == null) throw new _aB("eventDataName cannot be null.");
            var events = this.events;
            for (var _t5 = 0, _tt = events.length; _t5 < _tt; _t5++) {
                var _U82 = events[_t5];
                if (_U82.name == _T82) return _U82
            }
            return null
        };
        _R82.prototype._xs = function (_T32) {
            if (_T32 == null) throw new _aB("animationName cannot be null.");
            var animations = this.animations;
            for (var _t5 = 0, _tt = animations.length; _t5 < _tt; _t5++) {
                var _os = animations[_t5];
                if (_os.name == _T32) return _os
            }
            return null
        };
        _R82.prototype._j82 = function (_k82) {
            if (_k82 == null) throw new _aB("constraintName cannot be null.");
            var _632 = this._632;
            for (var _t5 = 0, _tt = _632.length; _t5 < _tt; _t5++) {
                var _532 = _632[_t5];
                if (_532.name == _k82) return _532;
            }
            return null
        };
        _R82.prototype._m82 = function (_k82) {
            if (_k82 == null) throw new _aB("constraintName cannot be null.");
            var _h32 = this._h32;
            for (var _t5 = 0, _tt = _h32.length; _t5 < _tt; _t5++) {
                var _532 = _h32[_t5];
                if (_532.name == _k82) return _532
            }
            return null
        };
        _R82.prototype._n82 = function (_k82) {
            if (_k82 == null) throw new _aB("constraintName cannot be null.");
            var _q32 = this._q32;
            for (var _t5 = 0, _tt = _q32.length; _t5 < _tt; _t5++) {
                var _532 = _q32[_t5];
                if (_532.name == _k82) return _532
            }
            return null
        };
        _R82.prototype._V82 = function (_W82) {
            if (_W82 == null) throw new _aB("pathConstraintName cannot be null.");
            var _q32 = this._q32;
            for (var _t5 = 0, _tt = _q32.length; _t5 < _tt; _t5++) if (_q32[_t5].name == _W82) return _t5;
            return -1
        };
        return _R82
    }());
    spine._R82 = _R82
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Wu = (function () {
        function _Wu(_X82) {
            this.scale = 1;
            this._Y82 = new Array();
            this._X82 = _X82
        }

        _Wu.prototype._Yu = function (_WY) {
            var scale = this.scale;
            var _U32 = new spine._R82();
            var _cs = typeof(_WY) === "string" ? JSON.parse(_WY) : _WY;
            var _Z82 = _cs.skeleton;
            if (_Z82 != null) {
                _U32.hash = _Z82.hash;
                _U32.version = _Z82.spine;
                _U32.width = _Z82.width;
                _U32.height = _Z82.height;
                _U32.__82 = _Z82.images
            }
            if (_cs.bones) {
                for (var _t5 = 0; _t5 < _cs.bones.length; _t5++) {
                    var _092 = _cs.bones[_t5];
                    var _192 = null;
                    var _292 = this._392(_092, "parent", null);
                    if (_292 != null) {
                        _192 = _U32._q62(_292);
                        if (_192 == null) throw new _aB("Parent bone not found: " + _292)
                    }
                    var data = new spine._m62(_U32.bones.length,
                        _092.name, _192);
                    data.length = this._392(_092, "length", 0) * scale;
                    data.x = this._392(_092, "x", 0) * scale;
                    data.y = this._392(_092, "y", 0) * scale;
                    data.rotation = this._392(_092, "rotation", 0);
                    data.scaleX = this._392(_092, "scaleX", 1);
                    data.scaleY = this._392(_092, "scaleY", 1);
                    data.shearX = this._392(_092, "shearX", 0);
                    data.shearY = this._392(_092, "shearY", 0);
                    data.inheritRotation = this._392(_092, "inheritRotation", !0);
                    data.inheritScale = this._392(_092, "inheritScale", !0);
                    _U32.bones.push(data)
                }
            }
            if (_cs.slots) {
                for (var _t5 = 0; _t5 < _cs.slots.length;
                     _t5++) {
                    var _492 = _cs.slots[_t5];
                    var _b82 = _492.name;
                    var _982 = _492.bone;
                    var _P72 = _U32._q62(_982);
                    if (_P72 == null) throw new _aB("Slot bone not found: " + _982);
                    var data = new spine._592(_U32.slots.length, _b82, _P72);
                    var color = this._392(_492, "color", null);
                    if (color != null) data.color._692(color);
                    data._K22 = this._392(_492, "attachment", null);
                    data._792 = _Wu._892(this._392(_492, "blend", "normal"));
                    _U32.slots.push(data)
                }
            }
            if (_cs.ik) {
                for (var _t5 = 0; _t5 < _cs.ik.length; _t5++) {
                    var _992 = _cs.ik[_t5];
                    var data = new spine._Q62(_992.name);
                    for (var _Rt = 0;
                         _Rt < _992.bones.length; _Rt++) {
                        var _982 = _992.bones[_Rt];
                        var bone = _U32._q62(_982);
                        if (bone == null) throw new _aB("IK bone not found: " + _982);
                        data.bones.push(bone)
                    }
                    var _a92 = _992.target;
                    data.target = _U32._q62(_a92);
                    if (data.target == null) throw new _aB("IK target bone not found: " + _a92);
                    data._232 = this._392(_992, "bendPositive", !0) ? 1 : -1;
                    data.mix = this._392(_992, "mix", 1);
                    _U32._632.push(data)
                }
            }
            if (_cs.transform) {
                for (var _t5 = 0; _t5 < _cs.transform.length; _t5++) {
                    var _992 = _cs.transform[_t5];
                    var data = new spine._b92(_992.name);
                    for (var _Rt = 0;
                         _Rt < _992.bones.length; _Rt++) {
                        var _982 = _992.bones[_Rt];
                        var bone = _U32._q62(_982);
                        if (bone == null) throw new _aB("Transform constraint bone not found: " + _982);
                        data.bones.push(bone)
                    }
                    var _a92 = _992.target;
                    data.target = _U32._q62(_a92);
                    if (data.target == null) throw new _aB("Transform constraint target bone not found: " + _a92);
                    data._772 = this._392(_992, "rotation", 0);
                    data._452 = this._392(_992, "x", 0) * scale;
                    data._652 = this._392(_992, "y", 0) * scale;
                    data._c92 = this._392(_992, "scaleX", 0);
                    data._d92 = this._392(_992, "scaleY", 0);
                    data._e92 = this._392(_992,
                        "shearY", 0);
                    data.rotateMix = this._392(_992, "rotateMix", 1);
                    data._b32 = this._392(_992, "translateMix", 1);
                    data.scaleMix = this._392(_992, "scaleMix", 1);
                    data._c32 = this._392(_992, "shearMix", 1);
                    _U32._h32.push(data)
                }
            }
            if (_cs.path) {
                for (var _t5 = 0; _t5 < _cs.path.length; _t5++) {
                    var _992 = _cs.path[_t5];
                    var data = new spine._D72(_992.name);
                    for (var _Rt = 0; _Rt < _992.bones.length; _Rt++) {
                        var _982 = _992.bones[_Rt];
                        var bone = _U32._q62(_982);
                        if (bone == null) throw new _aB("Transform constraint bone not found: " + _982);
                        data.bones.push(bone)
                    }
                    var _a92 = _992.target;
                    data.target = _U32._Gs(_a92);
                    if (data.target == null) throw new _aB("Path target slot not found: " + _a92);
                    data._172 = _Wu._f92(this._392(_992, "positionMode", "percent"));
                    data.spacingMode = _Wu._g92(this._392(_992, "spacingMode", "length"));
                    data.rotateMode = _Wu._h92(this._392(_992, "rotateMode", "tangent"));
                    data._772 = this._392(_992, "rotation", 0);
                    data.position = this._392(_992, "position", 0);
                    if (data._172 == spine._272.Fixed) data.position *= scale;
                    data.spacing = this._392(_992, "spacing", 0);
                    if (data.spacingMode == spine._V62.Length || data.spacingMode == spine._V62.Fixed) data.spacing *= scale;
                    data.rotateMix = this._392(_992, "rotateMix", 1);
                    data._b32 = this._392(_992, "translateMix", 1);
                    _U32._q32.push(data)
                }
            }
            if (_cs.skins) {
                for (var _c82 in _cs.skins) {
                    var _i92 = _cs.skins[_c82];
                    var skin = new spine._j92(_c82);
                    for (var _b82 in _i92) {
                        var _Is = _U32._Js(_b82);
                        if (_Is == -1) throw new _aB("Slot not found: " + _b82);
                        var _492 = _i92[_b82];
                        for (var _k92 in _492) {
                            var attachment = this._l92(_492[_k92], skin, _Is, _k92);
                            if (attachment != null) skin._m92(_Is, _k92, attachment)
                        }
                    }
                    _U32.skins.push(skin);
                    if (skin.name == "default") _U32._As = skin
                }
            }
            for (var _t5 = 0,
                     _tt = this._Y82.length; _t5 < _tt; _t5++) {
                var _n92 = this._Y82[_t5];
                var skin = _n92.skin == null ? _U32._As : _U32._d82(_n92.skin);
                if (skin == null) throw new _aB("Skin not found: " + _n92.skin);
                var _o92 = skin._Ls(_n92._Is, _n92.parent);
                if (_o92 == null) throw new _aB("Parent mesh not found: " + _n92.parent);
                _n92._Qv._U42(_o92);
                _n92._Qv._L42()
            }
            this._Y82.length = 0;
            if (_cs.events) {
                for (var _p92 in _cs.events) {
                    var _q92 = _cs.events[_p92];
                    var data = new spine._n62(_p92);
                    data._1s = this._392(_q92, "int", 0);
                    data._2s = this._392(_q92, "float", 0);
                    data._3s = this._392(_q92,
                        "string", null);
                    _U32.events.push(data)
                }
            }
            if (_cs.animations) {
                for (var _T32 in _cs.animations) {
                    var _r92 = _cs.animations[_T32];
                    this._s92(_r92, _T32, _U32)
                }
            }
            return _U32
        };
        _Wu.prototype._l92 = function (map, skin, _Is, name) {
            var scale = this.scale;
            name = this._392(map, "name", name);
            var type = this._392(map, "type", "region");
            switch (type) {
                case "region": {
                    var path = this._392(map, "path", name);
                    var _lv = this._X82._t92(skin, name, path);
                    if (_lv == null) return null;
                    _lv.path = path;
                    _lv.x = this._392(map, "x", 0) * scale;
                    _lv.y = this._392(map, "y", 0) * scale;
                    _lv.scaleX = this._392(map,
                        "scaleX", 1);
                    _lv.scaleY = this._392(map, "scaleY", 1);
                    _lv.rotation = this._392(map, "rotation", 0);
                    _lv.width = map.width * scale;
                    _lv.height = map.height * scale;
                    var color = this._392(map, "color", null);
                    if (color != null) _lv.color._692(color);
                    _lv._Z42();
                    return _lv
                }
                case "boundingbox": {
                    var _u92 = this._X82._v92(skin, name);
                    if (_u92 == null) return null;
                    this._w92(map, _u92, map.vertexCount << 1);
                    var color = this._392(map, "color", null);
                    if (color != null) _u92.color._692(color);
                    return _u92
                }
                case "mesh":
                case "linkedmesh": {
                    var path = this._392(map, "path",
                        name);
                    var _Qv = this._X82._x92(skin, name, path);
                    if (_Qv == null) return null;
                    _Qv.path = path;
                    var color = this._392(map, "color", null);
                    if (color != null) _Qv.color._692(color);
                    var _y92 = this._392(map, "parent", null);
                    if (_y92 != null) {
                        _Qv._J42 = this._392(map, "deform", !0);
                        this._Y82.push(new LinkedMesh(_Qv, this._392(map, "skin", null), _Is, _y92));
                        return _Qv
                    }
                    var uvs = map.uvs;
                    this._w92(map, _Qv, uvs.length);
                    _Qv.triangles = map.triangles;
                    _Qv._M42 = uvs;
                    _Qv._L42();
                    _Qv._V42 = this._392(map, "hull", 0) * 2;
                    return _Qv
                }
                case "path": {
                    var path = this._X82._z92(skin,
                        name);
                    if (path == null) return null;
                    path._JE = this._392(map, "closed", !1);
                    path._X42 = this._392(map, "constantSpeed", !0);
                    var vertexCount = map.vertexCount;
                    this._w92(map, path, vertexCount << 1);
                    var lengths = spine._T12._A92(vertexCount / 3, 0);
                    for (var _t5 = 0; _t5 < map.lengths.length; _t5++) lengths[_t5++] = map.lengths[_t5] * scale;
                    path.lengths = lengths;
                    var color = this._392(map, "color", null);
                    if (color != null) path.color._692(color);
                    return path
                }
            }
            return null
        };
        _Wu.prototype._w92 = function (map, attachment, _N42) {
            var scale = this.scale;
            attachment._u42 = _N42;
            var vertices = map.vertices;
            if (_N42 == vertices.length) {
                if (scale != 1) {
                    for (var _t5 = 0, _tt = vertices.length; _t5 < _tt; _t5++) vertices[_t5] *= scale
                }
                attachment.vertices = spine._T12._B92(vertices);
                return
            }
            var _C92 = new Array();
            var bones = new Array();
            for (var _t5 = 0, _tt = vertices.length; _t5 < _tt;) {
                var _Y62 = vertices[_t5++];
                bones.push(_Y62);
                for (var _K32 = _t5 + _Y62 * 4; _t5 < _K32; _t5 += 4) {
                    bones.push(vertices[_t5]);
                    _C92.push(vertices[_t5 + 1] * scale);
                    _C92.push(vertices[_t5 + 2] * scale);
                    _C92.push(vertices[_t5 + 3])
                }
            }
            attachment.bones = bones;
            attachment.vertices = spine._T12._B92(_C92)
        }
        ;_Wu.prototype._s92 = function (map, name, _U32) {
            var scale = this.scale;
            var _3t = new Array();
            var duration = 0;
            if (map.slots) {
                for (var _b82 in map.slots) {
                    var _492 = map.slots[_b82];
                    var _Is = _U32._Js(_b82);
                    if (_Is == -1) throw new _aB("Slot not found: " + _b82);
                    for (var _D92 in _492) {
                        var _E92 = _492[_D92];
                        if (_D92 == "color") {
                            var _gR = new spine._C22(_E92.length);
                            _gR._Is = _Is;
                            var _Y12 = 0;
                            for (var _t5 = 0; _t5 < _E92.length; _t5++) {
                                var _F92 = _E92[_t5];
                                var color = new spine._uY1();
                                color._692(_F92.color);
                                _gR._m22(_Y12, _F92.time, color._Kt, color._gv, color._Nt, color._hv);
                                this._G92(_F92, _gR, _Y12);
                                _Y12++
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration, _gR.frames[(_gR._W12() - 1) * spine._C22._q22])
                        } else if (_D92 = "attachment") {
                            var _gR = new spine._I22(_E92.length);
                            _gR._Is = _Is;
                            var _Y12 = 0;
                            for (var _t5 = 0; _t5 < _E92.length; _t5++) {
                                var _F92 = _E92[_t5];
                                _gR._m22(_Y12++, _F92.time, _F92.name)
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration, _gR.frames[_gR._W12() - 1])
                        } else throw new _aB("Invalid timeline type for a slot: " + _D92 + " (" + _b82 + ")")
                    }
                }
            }
            if (map.bones) {
                for (var _982 in map.bones) {
                    var _092 = map.bones[_982];
                    var _p22 = _U32._a82(_982);
                    if (_p22 == -1) throw new _aB("Bone not found: " + _982);
                    for (var _D92 in _092) {
                        var _E92 = _092[_D92];
                        if (_D92 === "rotate") {
                            var _gR = new spine._k22(_E92.length);
                            _gR._p22 = _p22;
                            var _Y12 = 0;
                            for (var _t5 = 0; _t5 < _E92.length; _t5++) {
                                var _F92 = _E92[_t5];
                                _gR._m22(_Y12, _F92.time, _F92.angle);
                                this._G92(_F92, _gR, _Y12);
                                _Y12++
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration, _gR.frames[(_gR._W12() - 1) * spine._k22._q22])
                        } else if (_D92 === "translate" || _D92 === "scale" || _D92 === "shear") {
                            var _gR = null;
                            var _H92 = 1;
                            if (_D92 === "scale") _gR = new spine._A22(_E92.length);
                            else if (_D92 === "shear") _gR = new spine._B22(_E92.length); else {
                                _gR = new spine._x22(_E92.length);
                                _H92 = scale
                            }
                            _gR._p22 = _p22;
                            var _Y12 = 0;
                            for (var _t5 = 0; _t5 < _E92.length; _t5++) {
                                var _F92 = _E92[_t5];
                                var x = this._392(_F92, "x", 0), y = this._392(_F92, "y", 0);
                                _gR._m22(_Y12, _F92.time, x * _H92, y * _H92);
                                this._G92(_F92, _gR, _Y12);
                                _Y12++
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration, _gR.frames[(_gR._W12() - 1) * spine._x22._q22])
                        } else throw new _aB("Invalid timeline type for a bone: " + _D92 + " (" + _982 + ")")
                    }
                }
            }
            if (map.ik) {
                for (var _k82 in map.ik) {
                    var _992 = map.ik[_k82];
                    var _532 = _U32._j82(_k82);
                    var _gR = new spine._132(_992.length);
                    _gR._732 = _U32._632.indexOf(_532);
                    var _Y12 = 0;
                    for (var _t5 = 0; _t5 < _992.length; _t5++) {
                        var _F92 = _992[_t5];
                        _gR._m22(_Y12, _F92.time, this._392(_F92, "mix", 1), this._392(_F92, "bendPositive", !0) ? 1 : -1);
                        this._G92(_F92, _gR, _Y12);
                        _Y12++
                    }
                    _3t.push(_gR);
                    duration = Math.max(duration, _gR.frames[(_gR._W12() - 1) * spine._132._q22]);
                }
            }
            if (map.transform) {
                for (var _k82 in map.transform) {
                    var _992 = map.transform[_k82];
                    var _532 = _U32._m82(_k82);
                    var _gR = new spine._a32(_992.length);
                    _gR._i32 = _U32._h32.indexOf(_532);
                    var _Y12 = 0;
                    for (var _t5 = 0; _t5 < _992.length; _t5++) {
                        var _F92 = _992[_t5];
                        _gR._m22(_Y12, _F92.time, this._392(_F92, "rotateMix", 1), this._392(_F92, "translateMix", 1), this._392(_F92, "scaleMix", 1), this._392(_F92, "shearMix", 1));
                        this._G92(_F92, _gR, _Y12);
                        _Y12++
                    }
                    _3t.push(_gR);
                    duration = Math.max(duration, _gR.frames[(_gR._W12() - 1) * spine._a32._q22])
                }
            }
            if (map.paths) {
                for (var _k82 in map.paths) {
                    var _992 = map.paths[_k82];
                    var index = _U32._V82(_k82);
                    if (index == -1) throw new _aB("Path constraint not found: " + _k82);
                    var data = _U32._q32[index];
                    for (var _D92 in _992) {
                        var _E92 = _992[_D92];
                        if (_D92 === "position" || _D92 === "spacing") {
                            var _gR = null;
                            var _H92 = 1;
                            if (_D92 === "spacing") {
                                _gR = new spine._t32(_E92.length);
                                if (data.spacingMode == spine._V62.Length || data.spacingMode == spine._V62.Fixed) _H92 = scale
                            } else {
                                _gR = new spine._o32(_E92.length);
                                if (data._172 == spine._272.Fixed) _H92 = scale
                            }
                            _gR._r32 = index;
                            var _Y12 = 0;
                            for (var _t5 = 0; _t5 < _E92.length; _t5++) {
                                var _F92 = _E92[_t5];
                                _gR._m22(_Y12, _F92.time, this._392(_F92, _D92, 0) * _H92);
                                this._G92(_F92, _gR, _Y12);
                                _Y12++
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration,
                                _gR.frames[(_gR._W12() - 1) * spine._o32._q22])
                        } else if (_D92 === "mix") {
                            var _gR = new spine._u32(_E92.length);
                            _gR._r32 = index;
                            var _Y12 = 0;
                            for (var _t5 = 0; _t5 < _E92.length; _t5++) {
                                var _F92 = _E92[_t5];
                                _gR._m22(_Y12, _F92.time, this._392(_F92, "rotateMix", 1), this._392(_F92, "translateMix", 1));
                                this._G92(_F92, _gR, _Y12);
                                _Y12++
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration, _gR.frames[(_gR._W12() - 1) * spine._u32._q22]);
                        }
                    }
                }
            }
            if (map.deform) {
                for (var _I92 in map.deform) {
                    var _J92 = map.deform[_I92];
                    var skin = _U32._d82(_I92);
                    if (skin == null) throw new _aB("Skin not found: " + _I92);
                    for (var _b82 in _J92) {
                        var _492 = _J92[_b82];
                        var _Is = _U32._Js(_b82);
                        if (_Is == -1) throw new _aB("Slot not found: " + _492.name);
                        for (var _D92 in _492) {
                            var _E92 = _492[_D92];
                            var attachment = skin._Ls(_Is, _D92);
                            if (attachment == null) throw new _aB("Deform attachment not found: " + _E92.name);
                            var _K92 = attachment.bones != null;
                            var vertices = attachment.vertices;
                            var _L92 = _K92 ? vertices.length / 3 * 2 : vertices.length;
                            var _gR = new spine._R22(_E92.length);
                            _gR._Is = _Is;
                            _gR.attachment = attachment;
                            var _Y12 = 0;
                            for (var _Rt = 0; _Rt < _E92.length; _Rt++) {
                                var _F92 = _E92[_Rt];
                                var deform = void 0;
                                var _M92 = this._392(_F92, "vertices", null);
                                if (_M92 == null) deform = _K92 ? spine._T12._U12(_L92) : vertices; else {
                                    deform = spine._T12._U12(_L92);
                                    var start = this._392(_F92, "offset", 0);
                                    spine._T12._Q22(_M92, 0, deform, start, _M92.length);
                                    if (scale != 1) {
                                        for (var _t5 = start, _tt = _t5 + _M92.length; _t5 < _tt; _t5++) deform[_t5] *= scale
                                    }
                                    if (!_K92) {
                                        for (var _t5 = 0; _t5 < _L92; _t5++) deform[_t5] += vertices[_t5]
                                    }
                                }
                                _gR._m22(_Y12, _F92.time, deform);
                                this._G92(_F92, _gR, _Y12);
                                _Y12++
                            }
                            _3t.push(_gR);
                            duration = Math.max(duration, _gR.frames[_gR._W12() - 1])
                        }
                    }
                }
            }
            var _N92 = map._fv;
            if (_N92 == null) _N92 = map.draworder;
            if (_N92 != null) {
                var _gR = new spine._N22(_N92.length);
                var _r82 = _U32.slots.length;
                var _Y12 = 0;
                for (var _Rt = 0; _Rt < _N92.length; _Rt++) {
                    var _O92 = _N92[_Rt];
                    var _fv = null;
                    var _P92 = this._392(_O92, "offsets", null);
                    if (_P92 != null) {
                        _fv = spine._T12._A92(_r82, -1);
                        var _Q92 = spine._T12._A92(_r82 - _P92.length, 0);
                        var _R92 = 0, _S92 = 0;
                        for (var _t5 = 0; _t5 < _P92.length; _t5++) {
                            var _T92 = _P92[_t5];
                            var _Is = _U32._Js(_T92.slot);
                            if (_Is == -1) throw new _aB("Slot not found: " + _T92.slot);
                            while (_R92 != _Is) _Q92[_S92++] = _R92++;
                            _fv[_R92 + _T92.offset] = _R92++
                        }
                        while (_R92 < _r82) _Q92[_S92++] = _R92++;
                        for (var _t5 = _r82 - 1; _t5 >= 0; _t5--) if (_fv[_t5] == -1) _fv[_t5] = _Q92[--_S92]
                    }
                    _gR._m22(_Y12++, _O92.time, _fv)
                }
                _3t.push(_gR);
                duration = Math.max(duration, _gR.frames[_gR._W12() - 1])
            }
            if (map.events) {
                var _gR = new spine._L22(map.events.length);
                var _Y12 = 0;
                for (var _t5 = 0; _t5 < map.events.length; _t5++) {
                    var _q92 = map.events[_t5];
                    var _iR = _U32._S82(_q92.name);
                    if (_iR == null) throw new _aB("Event not found: " + _q92.name);
                    var _U92 = new spine._kR(_q92.time, _iR);
                    _U92._1s = this._392(_q92,
                        "int", _iR._1s);
                    _U92._2s = this._392(_q92, "float", _iR._2s);
                    _U92._3s = this._392(_q92, "string", _iR._3s);
                    _gR._m22(_Y12++, _U92)
                }
                _3t.push(_gR);
                duration = Math.max(duration, _gR.frames[_gR._W12() - 1])
            }
            if (isNaN(duration)) {
                throw new _aB("Error while parsing animation, duration is NaN")
            }
            _U32.animations.push(new spine._M12(name, _3t, duration))
        };
        _Wu.prototype._G92 = function (map, _gR, _Y12) {
            if (!map.curve) return;
            if (map.curve === "stepped") _gR._Z12(_Y12); else if (Object.prototype.toString.call(map.curve) === '[object Array]') {
                var curve = map.curve;
                _gR._222(_Y12, curve[0], curve[1], curve[2], curve[3])
            }
        };
        _Wu.prototype._392 = function (map, prop, _V92) {
            return map[prop] !== undefined ? map[prop] : _V92
        };
        _Wu._892 = function (_LC) {
            _LC = _LC.toLowerCase();
            if (_LC == "normal") return spine._H52.Normal;
            if (_LC == "additive") return spine._H52.Additive;
            if (_LC == "multiply") return spine._H52.Multiply;
            if (_LC == "screen") return spine._H52.Screen;
            throw new _aB("Unknown blend mode: " + _LC)
        };
        _Wu._f92 = function (_LC) {
            _LC = _LC.toLowerCase();
            if (_LC == "fixed") return spine._272.Fixed;
            if (_LC == "percent") return spine._272.Percent;
            throw new _aB("Unknown position mode: " + _LC)
        };
        _Wu._g92 = function (_LC) {
            _LC = _LC.toLowerCase();
            if (_LC == "length") return spine._V62.Length;
            if (_LC == "fixed") return spine._V62.Fixed;
            if (_LC == "percent") return spine._V62.Percent;
            throw new _aB("Unknown position mode: " + _LC)
        };
        _Wu._h92 = function (_LC) {
            _LC = _LC.toLowerCase();
            if (_LC == "tangent") return spine._X62.Tangent;
            if (_LC == "chain") return spine._X62.Chain;
            if (_LC == "chainscale") return spine._X62.ChainScale;
            throw new _aB("Unknown rotate mode: " + _LC);
        };
        return _Wu
    }());
    spine._Wu = _Wu;
    var LinkedMesh = (function () {
        function LinkedMesh(_Qv, skin, _Is, parent) {
            this._Qv = _Qv;
            this.skin = skin;
            this._Is = _Is;
            this.parent = parent
        }

        return LinkedMesh
    }())
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _j92 = (function () {
        function _j92(name) {
            this._682 = new Array();
            if (name == null) throw new _aB("name cannot be null.");
            this.name = name
        }

        _j92.prototype._m92 = function (_Is, name, attachment) {
            if (attachment == null) throw new _aB("attachment cannot be null.");
            var _682 = this._682;
            if (_Is >= _682.length) _682.length = _Is + 1;
            if (!_682[_Is]) _682[_Is] = {};
            _682[_Is][name] = attachment
        };
        _j92.prototype._Ls = function (_Is, name) {
            var _W92 = this._682[_Is];
            return _W92 ? _W92[name] : null
        };
        _j92.prototype._g82 = function (skeleton, _X92) {
            var _Is = 0;
            for (var _t5 = 0; _t5 < skeleton.slots.length; _t5++) {
                var slot = skeleton.slots[_t5];
                var _T22 = slot._Ls();
                if (_T22 && _Is < _X92._682.length) {
                    var _W92 = _X92._682[_Is];
                    for (var _7N in _W92) {
                        var _Y92 = _W92[_7N];
                        if (_T22 == _Y92) {
                            var attachment = this._Ls(_Is, _7N);
                            if (attachment != null) slot._Hs(attachment);
                            break
                        }
                    }
                }
                _Is++
            }
        };
        return _j92
    }());
    spine._j92 = _j92;
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _S72 = (function () {
        function _S72(data, bone) {
            this._X22 = new Array();
            if (data == null) throw new _aB("data cannot be null.");
            if (bone == null) throw new _aB("bone cannot be null.");
            this.data = data;
            this.bone = bone;
            this.color = new spine._uY1();
            this._M52()
        }

        _S72.prototype._Ls = function () {
            return this.attachment
        };
        _S72.prototype._Hs = function (attachment) {
            if (this.attachment == attachment) return;
            this.attachment = attachment;
            this._Z92 = this.bone.skeleton.time;
            this._X22.length = 0
        };
        _S72.prototype.__92 = function (time) {
            this._Z92 = this.bone.skeleton.time - time
        };
        _S72.prototype._0a2 = function () {
            return this.bone.skeleton.time - this._Z92
        };
        _S72.prototype._M52 = function () {
            this.color._1a2(this.data.color);
            if (this.data._K22 == null) this.attachment = null; else {
                this.attachment = null;
                this._Hs(this.bone.skeleton._Ls(this.data.index, this.data._K22))
            }
        };
        return _S72
    }());
    spine._S72 = _S72
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _592 = (function () {
        function _592(index, name, _P72) {
            this.color = new spine._uY1(1, 1, 1, 1);
            if (index < 0) throw new _aB("index must be >= 0.");
            if (name == null) throw new _aB("name cannot be null.");
            if (_P72 == null) throw new _aB("boneData cannot be null.");
            this.index = index;
            this.name = name;
            this._P72 = _P72
        }

        return _592
    }());
    spine._592 = _592
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _mQ1 = (function () {
        function _mQ1(_gu) {
            this._gQ1 = _gu
        }

        _mQ1.prototype._hu = function () {
            return this._gQ1
        };
        _mQ1._2a2 = function (text) {
            switch (text.toLowerCase()) {
                case "nearest":
                    return _3a2.Nearest;
                case "linear":
                    return _3a2.Linear;
                case "mipmap":
                    return _3a2.MipMap;
                case "mipmapnearestnearest":
                    return _3a2.MipMapNearestNearest;
                case "mipmaplinearnearest":
                    return _3a2.MipMapLinearNearest;
                case "mipmapnearestlinear":
                    return _3a2.MipMapNearestLinear;
                case "mipmaplinearlinear":
                    return _3a2.MipMapLinearLinear;
                default :
                    throw new _aB("Unknown texture filter " + text)
            }
        };
        _mQ1._4a2 = function (text) {
            switch (text.toLowerCase()) {
                case "mirroredtepeat":
                    return _5a2.MirroredRepeat;
                case "clamptoedge":
                    return _5a2.ClampToEdge;
                case "repeat":
                    return _5a2.Repeat;
                default :
                    throw new _aB("Unknown texture wrap " + text)
            }
        };
        return _mQ1
    }());
    spine._mQ1 = _mQ1;
    (function (_3a2) {
        _3a2[_3a2["Nearest"] = 9728] = "Nearest";
        _3a2[_3a2["Linear"] = 9729] = "Linear";
        _3a2[_3a2["MipMap"] = 9987] = "MipMap";
        _3a2[_3a2["MipMapNearestNearest"] = 9984] = "MipMapNearestNearest";
        _3a2[_3a2["MipMapLinearNearest"] = 9985] = "MipMapLinearNearest";
        _3a2[_3a2["MipMapNearestLinear"] = 9986] = "MipMapNearestLinear";
        _3a2[_3a2["MipMapLinearLinear"] = 9987] = "MipMapLinearLinear"
    })(spine._3a2 || (spine._3a2 = {}));
    var _3a2 = spine._3a2;
    (function (_5a2) {
            _5a2[_5a2["MirroredRepeat"] = 33648] = "MirroredRepeat";
            _5a2[_5a2["ClampToEdge"] = 33071] = "ClampToEdge";
            _5a2[_5a2["Repeat"] = 10497] = "Repeat"
        }
    )(spine._5a2 || (spine._5a2 = {}));
    var _5a2 = spine._5a2;
    var _6a2 = (function () {
        function _6a2() {
            this._sv = 0;
            this._uv = 0;
            this._3q1 = 0;
            this._uw = 0;
            this.width = 0;
            this.height = 0;
            this.rotate = !1;
            this._452 = 0;
            this._652 = 0;
            this._052 = 0;
            this._252 = 0
        }

        return _6a2
    }());
    spine._6a2 = _6a2
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Vu = (function () {
        function _Vu(_7a2, _d42) {
            this._8a2 = new Array();
            this._9a2 = new Array();
            this.load(_7a2, _d42)
        }

        _Vu.prototype.load = function (_7a2, _d42) {
            if (_7a2 === null || _7a2 === undefined) return;
            if (_d42 === null || _d42 === undefined) return;
            var _aa2 = new _ba2(_7a2);
            var _ca2 = new Array(4);
            var _Mv = null;
            while (!0) {
                var _da2 = _aa2._ea2();
                if (_da2 == null) break;
                _da2 = _da2.trim();
                if (_da2.length == 0) _Mv = null; else if (!_Mv) {
                    _Mv = new _fa2();
                    _Mv.name = _da2;
                    if (_aa2._ga2(_ca2) == 2) {
                        _Mv.width = parseInt(_ca2[0]);
                        _Mv.height = parseInt(_ca2[1]);
                        _aa2._ga2(_ca2)
                    }
                    _aa2._ga2(_ca2);
                    _Mv._ju = spine._mQ1._2a2(_ca2[0]);
                    _Mv._ku = spine._mQ1._2a2(_ca2[1]);
                    var _Wg = _aa2._ha2();
                    _Mv._mu = spine._5a2.ClampToEdge;
                    _Mv._nu = spine._5a2.ClampToEdge;
                    if (_Wg == "x") _Mv._mu = spine._5a2.Repeat; else if (_Wg == "y") _Mv._nu = spine._5a2.Repeat;
                    else if (_Wg == "xy") _Mv._mu = _Mv._nu = spine._5a2.Repeat;
                    _Mv._Iu = _d42(_da2);
                    _Mv._Iu._iu(_Mv._ju, _Mv._ku);
                    _Mv._Iu._lu(_Mv._mu, _Mv._nu);
                    _Mv.width = _Mv._Iu._hu().width;
                    _Mv.height = _Mv._Iu._hu().height;
                    this._8a2.push(_Mv)
                } else {
                    var _lv = new _ia2();
                    _lv.name = _da2;
                    _lv._Mv = _Mv;
                    _lv.rotate = _aa2._ha2() == "true";
                    _aa2._ga2(_ca2);
                    var x = parseInt(_ca2[0]);
                    var y = parseInt(_ca2[1]);
                    _aa2._ga2(_ca2);
                    var width = parseInt(_ca2[0]);
                    var height = parseInt(_ca2[1]);
                    _lv._sv = x / _Mv.width;
                    _lv._uv = y / _Mv.height;
                    if (_lv.rotate) {
                        _lv._3q1 = (x + height) / _Mv.width;
                        _lv._uw = (y + width) / _Mv.height
                    } else {
                        _lv._3q1 = (x + width) / _Mv.width;
                        _lv._uw = (y + height) / _Mv.height
                    }
                    _lv.x = x;
                    _lv.y = y;
                    _lv.width = Math.abs(width);
                    _lv.height = Math.abs(height);
                    if (_aa2._ga2(_ca2) == 4) {
                        if (_aa2._ga2(_ca2) == 4) {
                            _aa2._ga2(_ca2)
                        }
                    }
                    _lv._052 = parseInt(_ca2[0]);
                    _lv._252 = parseInt(_ca2[1]);
                    _aa2._ga2(_ca2);
                    _lv._452 = parseInt(_ca2[0]);
                    _lv._652 = parseInt(_ca2[1]);
                    _lv.index = parseInt(_aa2._ha2());
                    _lv._Iu = _Mv._Iu;
                    this._9a2.push(_lv)
                }
            }
        };
        _Vu.prototype._ja2 = function (name) {
            for (var _t5 = 0; _t5 < this._9a2.length; _t5++) {
                if (this._9a2[_t5].name == name) {
                    return this._9a2[_t5]
                }
            }
            return null
        };
        _Vu.prototype._ou = function () {
            for (var _t5 = 0; _t5 < this._8a2.length; _t5++) {
                this._8a2[_t5]._Iu._ou()
            }
        };
        return _Vu
    }());
    spine._Vu = _Vu;
    var _ba2 = (function () {
        function _ba2(text) {
            this.index = 0;
            var _RN = text.replace("\r\n", "\n");
            _RN = _RN.replace("\r", "\n");
            this._dQ = text.split("\n")
        }

        _ba2.prototype._ea2 = function () {
            if (this.index >= this._dQ.length) return null;
            return this._dQ[this.index++]
        };
        _ba2.prototype._ha2 = function () {
            var _da2 = this._ea2();
            var _ka2 = _da2.indexOf(":");
            if (_ka2 == -1) throw new _aB("Invalid line: " + _da2);
            return _da2.substring(_ka2 + 1).trim()
        };
        _ba2.prototype._ga2 = function (_ca2) {
            var _da2 = this._ea2();
            var _ka2 = _da2.indexOf(":");
            if (_ka2 == -1) throw new _aB("Invalid line: " + _da2);
            var _t5 = 0, _la2 = _ka2 + 1;
            for (; _t5 < 3; _t5++) {
                var _ma2 = _da2.indexOf(",", _la2);
                if (_ma2 == -1) break;
                _ca2[_t5] = _da2.substr(_la2, _ma2 - _la2).trim();
                _la2 = _ma2 + 1
            }
            _ca2[_t5] = _da2.substring(_la2).trim();
            return _t5 + 1
        };
        return _ba2
    }());
    var _fa2 = (function () {
        function _fa2() {
        }

        return _fa2
    }());
    spine._fa2 = _fa2;
    var _ia2 = (function (_l22) {
        _K12(_ia2, _l22);

        function _ia2() {
            _l22.apply(this,
                arguments);
        }

        return _ia2
    }(spine._6a2));
    spine._ia2 = _ia2
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _Xu = (function () {
        function _Xu(_na2) {
            this._na2 = _na2
        }

        _Xu.prototype._t92 = function (skin, name, path) {
            var _lv = this._na2._ja2(path);
            if (_lv == null) throw new _aB("Region not found in atlas: " + path + " (region attachment: " + name + ")");
            _lv._Kv = _lv;
            var attachment = new spine._iv(name);
            attachment._Y42(_lv);
            return attachment
        };
        _Xu.prototype._x92 = function (skin, name, path) {
            var _lv = this._na2._ja2(path);
            if (_lv == null) throw new _aB("Region not found in atlas: " + path + " (mesh attachment: " + name + ")");
            _lv._Kv = _lv;
            var attachment = new spine._jv(name);
            attachment._lv = _lv;
            return attachment
        };
        _Xu.prototype._v92 = function (skin, name) {
            return new spine._I42(name)
        };
        _Xu.prototype._z92 = function (skin, name) {
            return new spine._W42(name)
        };
        return _Xu
    }());
    spine._Xu = _Xu
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _W72 = (function () {
        function _W72(data, skeleton) {
            this.rotateMix = 0;
            this._b32 = 0;
            this.scaleMix = 0;
            this._c32 = 0;
            this._CT = new spine._oa2();
            if (data == null) throw new _aB("data cannot be null.");
            if (skeleton == null) throw new _aB("skeleton cannot be null.");
            this.data = data;
            this.rotateMix = data.rotateMix;
            this._b32 = data._b32;
            this.scaleMix = data.scaleMix;
            this._c32 = data._c32;
            this.bones = new Array();
            for (var _t5 = 0; _t5 < data.bones.length; _t5++) this.bones.push(skeleton._q62(data.bones[_t5].name));
            this.target = skeleton._q62(data.target.name)
        }

        _W72.prototype.apply = function () {
            this._5t()
        };
        _W72.prototype._5t = function () {
            var rotateMix = this.rotateMix, _b32 = this._b32, scaleMix = this.scaleMix, _c32 = this._c32;
            var target = this.target;
            var _K62 = target._hv, _pa2 = target._Nt, _qa2 = target._u5,
                _ra2 = target._cE;
            var bones = this.bones;
            for (var _t5 = 0, _tt = bones.length; _t5 < _tt; _t5++) {
                var bone = bones[_t5];
                if (rotateMix > 0) {
                    var _hv = bone._hv, _Nt = bone._Nt, _u5 = bone._u5, _cE = bone._cE;
                    var _Kt = Math.atan2(_qa2, _K62) - Math.atan2(_u5, _hv) + this.data._772 * spine._h22._a72;
                    if (_Kt > spine._h22.PI) _Kt -= spine._h22._c72; else if (_Kt < -spine._h22.PI) _Kt += spine._h22._c72;
                    _Kt *= rotateMix;
                    var cos = Math.cos(_Kt), sin = Math.sin(_Kt);
                    bone._hv = cos * _hv - sin * _u5;
                    bone._Nt = cos * _Nt - sin * _cE;
                    bone._u5 = sin * _hv + cos * _u5;
                    bone._cE = sin * _Nt + cos * _cE
                }
                if (_b32 > 0) {
                    var _CT = this._CT;
                    target._k62(_CT.set(this.data._452, this.data._652));
                    bone._z42 += (_CT.x - bone._z42) * _b32;
                    bone._A42 += (_CT.y - bone._A42) * _b32
                }
                if (scaleMix > 0) {
                    var _sa2 = Math.sqrt(bone._hv * bone._hv + bone._u5 * bone._u5);
                    var _ta2 = Math.sqrt(_K62 * _K62 + _qa2 * _qa2);
                    var _ZN = _sa2 > 0.00001 ? (_sa2 + (_ta2 - _sa2 + this.data._c92) * scaleMix) / _sa2 : 0;
                    bone._hv *= _ZN;
                    bone._u5 *= _ZN;
                    _sa2 = Math.sqrt(bone._Nt * bone._Nt + bone._cE * bone._cE);
                    _ta2 = Math.sqrt(_pa2 * _pa2 + _ra2 * _ra2);
                    _ZN = _sa2 > 0.00001 ? (_sa2 + (_ta2 - _sa2 + this.data._d92) * scaleMix) / _sa2 : 0;
                    bone._Nt *= _ZN;
                    bone._cE *= _ZN
                }
                if (_c32 > 0) {
                    var _Nt = bone._Nt, _cE = bone._cE;
                    var _EA1 = Math.atan2(_cE, _Nt);
                    var _Kt = Math.atan2(_ra2, _pa2) - Math.atan2(_qa2, _K62) - (_EA1 - Math.atan2(bone._u5, bone._hv));
                    if (_Kt > spine._h22.PI) _Kt -= spine._h22._c72; else if (_Kt < -spine._h22.PI) _Kt += spine._h22._c72;
                    _Kt = _EA1 + (_Kt + this.data._e92 * spine._h22._a72) * _c32;
                    var _ZN = Math.sqrt(_Nt * _Nt + _cE * _cE);
                    bone._Nt = Math.cos(_Kt) * _ZN;
                    bone._cE = Math.sin(_Kt) * _ZN
                }
            }
        };
        return _W72
    }());
    spine._W72 = _W72
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _b92 = (function () {
        function _b92(name) {
            this.bones = new Array();
            this.rotateMix = 0;
            this._b32 = 0;
            this.scaleMix = 0;
            this._c32 = 0;
            this._772 = 0;
            this._452 = 0;
            this._652 = 0;
            this._c92 = 0;
            this._d92 = 0;
            this._e92 = 0;
            if (name == null) throw new _aB("name cannot be null.");
            this.name = name
        }

        return _b92
    }());
    spine._b92 = _b92
})(spine || (spine = {}));
var spine;
(function (spine) {
    var _uY1 = (function () {
        function _uY1(_Kt, _gv, _Nt, _hv) {
            if (_Kt === void 0) {
                _Kt = 0
            }
            if (_gv === void 0) {
                _gv = 0
            }
            if (_Nt === void 0) {
                _Nt = 0
            }
            if (_hv === void 0) {
                _hv = 0
            }
            this._Kt = _Kt;
            this._gv = _gv;
            this._Nt = _Nt;
            this._hv = _hv
        }

        _uY1.prototype.set = function (_Kt,
                                       _gv, _Nt, _hv) {
            this._Kt = _Kt;
            this._gv = _gv;
            this._Nt = _Nt;
            this._hv = _hv;
            this._z31();
            return this
        };
        _uY1.prototype._1a2 = function (_u5) {
            this._Kt = _u5._Kt;
            this._gv = _u5._gv;
            this._Nt = _u5._Nt;
            this._hv = _u5._hv;
            return this
        };
        _uY1.prototype._692 = function (_ua2) {
            _ua2 = _ua2.charAt(0) == '#' ? _ua2.substr(1) : _ua2;
            this._Kt = parseInt(_ua2.substr(0, 2), 16) / 255.0;
            this._gv = parseInt(_ua2.substr(2, 2), 16) / 255.0;
            this._Nt = parseInt(_ua2.substr(4, 2), 16) / 255.0;
            this._hv = (_ua2.length != 8 ? 255 : parseInt(_ua2.substr(6, 2), 16)) / 255.0;
            return this
        };
        _uY1.prototype.add = function (_Kt,
                                       _gv, _Nt, _hv) {
            this._Kt += _Kt;
            this._gv += _gv;
            this._Nt += _Nt;
            this._hv += _hv;
            this._z31();
            return this
        };
        _uY1.prototype._z31 = function () {
            if (this._Kt < 0) this._Kt = 0; else if (this._Kt > 1) this._Kt = 1;
            if (this._gv < 0) this._gv = 0; else if (this._gv > 1) this._gv = 1;
            if (this._Nt < 0) this._Nt = 0; else if (this._Nt > 1) this._Nt = 1;
            if (this._hv < 0) this._hv = 0; else if (this._hv > 1) this._hv = 1;
            return this
        };
        _uY1._va2 = new _uY1(1, 1, 1, 1);
        _uY1._wa2 = new _uY1(1, 0, 0, 1);
        _uY1._xa2 = new _uY1(0, 1, 0, 1);
        _uY1._ya2 = new _uY1(0, 0, 1, 1);
        _uY1._za2 = new _uY1(1, 0, 1, 1);
        return _uY1
    }());
    spine._uY1 = _uY1;
    var _h22 = (function () {
        function _h22() {
        }

        _h22._z31 = function (value, min, max) {
            if (value < min) return min;
            if (value > max) return max;
            return value
        };
        _h22._Q52 = function (_n22) {
            return Math.cos(_n22 * _h22._a72)
        };
        _h22._T52 = function (_n22) {
            return Math.sin(_n22 * _h22._a72)
        };
        _h22._V52 = function (value) {
            return value >= 0 ? 1 : -1
        };
        _h22._N32 = function (x) {
            return x > 0 ? Math.floor(x) : Math.ceil(x)
        };
        _h22._Aa2 = function (x) {
            var y = Math.pow(Math.abs(x), 1 / 3);
            return x < 0 ? -y : y
        };
        _h22.PI = 3.1415927;
        _h22._c72 = _h22.PI * 2;
        _h22._Ba2 = 180 / _h22.PI;
        _h22._262 = _h22._Ba2;
        _h22._Ca2 = _h22.PI / 180;
        _h22._a72 = _h22._Ca2;
        return _h22
    }());
    spine._h22 = _h22;
    var _T12 = (function () {
        function _T12() {
        }

        _T12._Q22 = function (source, _Da2, _wG, _Ea2, _Fa2) {
            for (var _t5 = _Da2, _Rt = _Ea2; _t5 < _Da2 + _Fa2; _t5++, _Rt++) {
                _wG[_Rt] = source[_t5]
            }
        };
        _T12._Y22 = function (_Ga2, _l5, value) {
            if (value === void 0) {
                value = 0
            }
            var _Ha2 = _Ga2.length;
            if (_Ha2 == _l5) return _Ga2;
            _Ga2.length = _l5;
            if (_Ha2 < _l5) {
                for (var _t5 = _Ha2; _t5 < _l5; _t5++) _Ga2[_t5] = value
            }
            return _Ga2
        };
        _T12._A92 = function (_l5, _V92) {
            var _Ga2 = new Array(_l5);
            for (var _t5 = 0; _t5 < _l5; _t5++) _Ga2[_t5] = _V92;
            return _Ga2
        };
        _T12._U12 = function (_l5) {
            if (_T12._Ia2) {
                return new Float32Array(_l5)
            } else {
                var _Ga2 = new Array(_l5);
                for (var _t5 = 0; _t5 < _Ga2.length; _t5++) _Ga2[_t5] = 0;
                return _Ga2
            }
        };
        _T12._B92 = function (_Ga2) {
            return _T12._Ia2 ? new Float32Array(_Ga2) : _Ga2
        };
        _T12._Ia2 = typeof(Float32Array) !== "undefined";
        return _T12
    }());
    spine._T12 = _T12;
    var _Ja2 = (function () {
        function _Ja2() {
        }

        _Ja2._Ka2 = function (skeleton) {
            for (var _t5 = 0; _t5 < skeleton.bones.length; _t5++) {
                var bone = skeleton.bones[_t5];
                console.log(bone.data.name + ", " + bone._hv + ", " + bone._Nt + ", " + bone._u5 + ", " + bone._cE + ", " + bone._z42 + ", " + bone._A42);
            }
        };
        return _Ja2
    }());
    spine._Ja2 = _Ja2;
    var _p82 = (function () {
        function _p82(_La2) {
            this._Ma2 = new Array();
            this._La2 = _La2
        }

        _p82.prototype._t82 = function () {
            return this._Ma2.length > 0 ? this._Ma2.pop() : this._La2()
        };
        _p82.prototype._Na2 = function (_zC) {
            this._Ma2.push(_zC)
        };
        _p82.prototype._Q32 = function (_Ma2) {
            for (var _t5 = 0; _t5 < _Ma2.length; _t5++) this._Ma2[_t5] = _Ma2[_t5]
        };
        _p82.prototype.clear = function () {
            this._Ma2.length = 0
        };
        return _p82
    }());
    spine._p82 = _p82;
    var _oa2 = (function () {
        function _oa2(x, y) {
            if (x === void 0) {
                x = 0
            }
            if (y === void 0) {
                y = 0;
            }
            this.x = x;
            this.y = y
        }

        _oa2.prototype.set = function (x, y) {
            this.x = x;
            this.y = y;
            return this
        };
        _oa2.prototype.length = function () {
            var x = this.x;
            var y = this.y;
            return Math.sqrt(x * x + y * y)
        };
        _oa2.prototype._Oa2 = function () {
            var _MN = this.length();
            if (_MN != 0) {
                this.x /= _MN;
                this.y /= _MN
            }
            return this
        };
        return _oa2
    }());
    spine._oa2 = _oa2;
    var _Pa2 = (function () {
        function _Pa2() {
            this._Qa2 = 0.064;
            this._Ra2 = 0;
            this._x32 = 0;
            this._Gh1 = 0;
            this._N12 = Date.now() / 1000;
            this.__s = 0;
            this._u22 = 0
        }

        _Pa2.prototype._5t = function () {
            var now = Date.now() / 1000;
            this._x32 = now - this._N12;
            this._u22 += this._x32;
            this._Gh1 += this._x32;
            if (this._x32 > this._Qa2) this._x32 = this._Qa2;
            this._N12 = now;
            this.__s++;
            if (this._u22 > 1) {
                this._Ra2 = this.__s / this._u22;
                this._u22 = 0;
                this.__s = 0
            }
        };
        return _Pa2
    }());
    spine._Pa2 = _Pa2
})(spine || (spine = {}));
var _Sa2 = 0, _Ta2 = 1, _Ua2 = 2, _Va2 = 3, _Wa2 = 4, _Xa2 = 5, _Ya2 = 6, _Za2 = 7, __a2 = 8, _0b2 = 9;
var _1b2 = 0, _2b2 = 1, _3b2 = 2, _4b2 = 3;

function _5b2(_ny, _OB) {
    this.type = _ny;
    this.id = _OB;
    this._MV1 = null;
    this._6b2 = -1
};_5b2.prototype._7b2 = function (_tV1, _8b2, _9b2, _ab2, _bb2) {
    var _cb2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    var width = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    var height = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    this._6b2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    return _9b2
};
_5b2.prototype._db2 = function (_631, _b31) {
    var _Nt = new ArrayBuffer(4);
    var _hv = new Uint32Array(_Nt);
    var _u5 = new Uint8Array(_Nt);
    _hv[0] = 0xdeadbeef;
    if (_u5[0] == 0xef) {
        return (((_631 & 0xff) << 8) | (_b31 & 0xff))
    }
    if (_u5[0] == 0xde) {
        return (((_b31 & 0xff) << 8) | (_631 & 0xff))
    }
};
_5b2.prototype._eb2 = function (_fb2) {
    try {
        do {
            if (_fb2[1] == 0xd9) {
                _fb2 = _fb2.subarray(2)
            } else if (_fb2[1] == 0xd8) {
                if ((_fb2[6] === 0x4a) && (_fb2[7] === 0x46) && (_fb2[8] === 0x49) && (_fb2[9] === 0x46)) {
                    var _v5 = this._db2(_fb2[14], _fb2[15]);
                    var _w5 = this._db2(_fb2[16], _fb2[17]);
                    var _gb2 = {width: _v5, height: _w5, body: _fb2};
                    return _gb2
                }
                _fb2 = _fb2.subarray(4 + this._db2(_fb2[4], _fb2[5]))
            } else {
                _fb2 = _fb2.subarray(2 + this._db2(_fb2[2], _fb2[3]))
            }
        } while ((_fb2.byteLength >= 0) && (_fb2[0] == 0xff))
    } catch (e) {
        debug(e.message)
    }
    var _gb2 = {width: _v5, height: _w5, body: _fb2};
    return _gb2
};
_5b2.prototype._hb2 = function (_Cu, _Du, _fb2, _ib2, _yX, _jb2) {
    var _kb2 = new Uint16Array(_fb2);
    var _lb2 = "";
    for (var _t5 = 0, _It = _kb2.length; _t5 < _It; _t5++) {
        _lb2 += String.fromCharCode(_kb2[_t5])
    }
    var _mb2 = window.btoa(_lb2);
    var _nb2 = "data:image/" + _ib2 + ";base64," + _mb2;
    var img = new Image();
    img.onload = function () {
        var _DD = {_Iu: img};
        _cw(_DD);
        if (_yX) {
            _yX(_DD)
        }
    };
    img.onerror = function (e) {
        debug(e);
        if (_jb2) {
            _jb2(e)
        }
    };
    img.src = _uQ(null, null, _nb2);
    return img
};

function _NQ1(_9c1, _Ox) {
    var _Xx = _uu._NQ1(_9c1._Iu._bw, _Ox);
    _9c1._Iu._bw = _Xx;
    _9c1._Iu._Zx = _Xx._kQ1;
    _9c1._Iu.__x = _Xx._lQ1;
    return _9c1._Iu
}

var _ob2 = 0, _pb2 = 1, _qb2 = 2;
var _rb2 = 0, _sb2 = 1, _tb2 = 2, _ub2 = 3;
var _vb2 = 0, _wb2 = 1;
var _xb2 = {_ti1: 0, _ui1: 0, version: 1};

function _yb2(_ny,
              _OB) {
    this.type = _ny;
    this.id = _OB
};_yb2.prototype._zb2 = function (_8b2, _9b2, _ab2, _Ab2) {
    this._ht = _8b2.getFloat32(_9b2, _ab2);
    _9b2 += 4;
    this._it = _8b2.getFloat32(_9b2, _ab2);
    _9b2 += 4;
    this._jt = _8b2.getFloat32(_9b2, _ab2);
    _9b2 += 4;
    this._kt = _8b2.getFloat32(_9b2, _ab2);
    _9b2 += 4;
    var _Bb2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    this._Cb2 = [];
    for (var _t5 = 0; _t5 < _Bb2; _t5++) {
        var _Db2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        var _Eb2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        var _Fb2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        var _Gb2 = {_Db2: _Db2, _Eb2: _Eb2, _Fb2: _Fb2}
        ;_Gb2._Hb2 = (_Db2 > 0) ? [] : null;
        _Gb2._Ib2 = (_Eb2 > 0) ? [] : null;
        _Gb2._Jb2 = (_Fb2 > 0) ? [] : null;
        _9b2 = this._Kb2(_Gb2, _8b2, _9b2, _ab2, _Ab2);
        _9b2 = this._Lb2(_Gb2, _8b2, _9b2, _ab2);
        _9b2 = this._Mb2(_Gb2, _8b2, _9b2, _ab2);
        this._Cb2.push(_Gb2);
    }
    return _9b2
};
_yb2.prototype._Kb2 = function (_Nb2, _8b2, _9b2, _ab2, _Ab2) {
    _Nb2._Hb2 = [];
    for (var _t5 = 0; _t5 < _Nb2._Db2; _t5++) {
        var _Ob2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        var _Pb2 = null;
        switch (_Ob2) {
            case _sb2: {
                _Pb2 = {type: _sb2};
                var _nE = _8b2.getUint8(_9b2, _ab2);
                _9b2++;
                var _oE = _8b2.getUint8(_9b2, _ab2);
                _9b2++;
                var _pE = _8b2.getUint8(_9b2, _ab2);
                _9b2++;
                var alpha = _8b2.getUint8(_9b2, _ab2);
                _9b2++;
                _Pb2._2v = (_nE | (_oE << 8) | (_pE << 16) | (alpha << 24))
            }
                break;
            case _tb2: {
                _Pb2 = {type: _tb2};
                _Pb2._Qb2 = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4;
                _Pb2._6b2 = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4;
                var _Rb2 = [];
                for (var _wt = 0; _wt < 9; _wt++) {
                    _Rb2[_wt] = _8b2.getFloat32(_9b2, _ab2);
                    _9b2 += 4
                }
                _Pb2._Rb2 = new _JJ();
                _Pb2._Rb2._wt[_fL] = _Rb2[0];
                _Pb2._Rb2._wt[_gL] = _Rb2[1];
                _Pb2._Rb2._wt[_iL] = _Rb2[2];
                _Pb2._Rb2._wt[_jL] = _Rb2[3];
                _Pb2._Rb2._wt[_bK] = _Rb2[4];
                _Pb2._Rb2._wt[_lL] = _Rb2[5];
                _Pb2._Sb2 = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4;
                _Pb2._Tb2 = [];
                for (var _wt = 0; _wt < _Pb2._Sb2; _wt++) {
                    var _3H1 = _8b2.getInt32(_9b2, _ab2);
                    _9b2 += 4;
                    var _nE = _8b2.getUint8(_9b2, _ab2);
                    _9b2++;
                    var _oE = _8b2.getUint8(_9b2, _ab2);
                    _9b2++;
                    var _pE = _8b2.getUint8(_9b2, _ab2);
                    _9b2++;
                    var alpha = _8b2.getUint8(_9b2, _ab2);
                    _9b2++;
                    _Pb2._Tb2.push({_3H1: _3H1, _2v: (_nE | (_oE << 8) | (_pE << 16) | (alpha << 24))})
                }
                _Pb2._Gx = null
            }
                break;
            case _ub2: {
                _Pb2 = {type: _ub2};
                _Pb2._Ub2 = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4;
                _Pb2._Vb2 = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4;
                _Pb2._Wb2 = -1;
                for (var index = 0; index < _Ab2.length; index++) {
                    if (_Ab2[index].id === _Pb2._Vb2) {
                        _Pb2._Wb2 = index;
                        break
                    }
                }
                var _Rb2 = [];
                for (var _wt = 0; _wt < 9; _wt++) {
                    _Rb2[_wt] = _8b2.getFloat32(_9b2, _ab2);
                    _9b2 += 4
                }
                _Pb2._Rb2 = new _JJ();
                _Pb2._Rb2._wt[_fL] = _Rb2[0];
                _Pb2._Rb2._wt[_gL] = _Rb2[1];
                _Pb2._Rb2._wt[_iL] = _Rb2[2];
                _Pb2._Rb2._wt[_jL] = _Rb2[3];
                _Pb2._Rb2._wt[_bK] = _Rb2[4];
                _Pb2._Rb2._wt[_lL] = _Rb2[5]
            }
                break
        }
        _Nb2._Hb2.push(_Pb2)
    }
    return _9b2
};

function _Xb2(_HB, _IB, _KQ1) {
    var _Gb1 = document.createElement(_1O);
    var _Hb1 = _Gb1.getContext('2d');
    _Ib1(_Hb1);
    var _Xx = _uu._LQ1(_Gb1, _KQ1, _HB, _IB);
    var _DD = new _ED();
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _Xx._kQ1;
    _DD._w5 = _Xx._lQ1;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _HB;
    _DD._uc = _IB;
    _DD._vc = _Mb1(_Gb1);
    _DD._Iu = _Ju[_DD._vc];
    _DD._Iu._bw = _Xx;
    _DD._Iu._Zx = _Gb1.width;
    _DD._Iu.__x = _Gb1.height;
    return _DD
}

_yb2.prototype._Yb2 = function (_Zb2, __b2) {
    if (_Zb2._Sb2 <= 0) {
        return 0
    }
    __b2 = (__b2 < 0) ? 0 : (__b2 > 255) ? 255 : __b2;
    if (__b2 < _Zb2._Tb2[0]._3H1) {
        return _Zb2._Tb2[0]._2v
    }
    for (var _t5 = 1; _t5 < _Zb2._Sb2; _t5++) {
        var _0c2 = _Zb2._Tb2[_t5];
        if (_0c2._3H1 >= __b2) {
            var _1c2 = _Zb2._Tb2[_t5 - 1];
            var _2c2 = 0;
            if (_0c2._3H1 != _1c2._3H1) {
                _2c2 = ((__b2 - _1c2._3H1) << 8) / (_0c2._3H1 - _1c2._3H1)
            }
            var _3c2 = 256 - _2c2;
            var _2v = _0c2._2v;
            var _4c2 = _1c2._2v;
            var _5c2 = [];
            _5c2[0] = ((_2v & 0xff) * _2c2) >> 8;
            _5c2[1] = (((_2v >> 8) & 0xff) * _2c2) >> 8;
            _5c2[2] = (((_2v >> 16) & 0xff) * _2c2) >> 8;
            _5c2[3] = (((_2v >> 24) & 0xff) * _2c2) >> 8;
            _5c2[0] += ((_4c2 & 0xff) * _3c2) >> 8;
            _5c2[1] += (((_4c2 >> 8) & 0xff) * _3c2) >> 8;
            _5c2[2] += (((_4c2 >> 16) & 0xff) * _3c2) >> 8;
            _5c2[3] += (((_4c2 >> 24) & 0xff) * _3c2) >> 8;
            var _6c2 = _5c2[0] | (_5c2[1] << 8) | (_5c2[2] << 16) | (_5c2[3] << 24);
            return _6c2
        }
    }
    return _Zb2._Tb2[_Zb2._Sb2 - 1]._2v
};
_yb2.prototype._Lb2 = function (_Nb2, _8b2, _9b2, _ab2) {
    _Nb2._Ib2 = [];
    for (var _t5 = 0; _t5 < _Nb2._Eb2; _t5++) {
        var _nE = _8b2.getUint8(_9b2, _ab2);
        _9b2++;
        var _oE = _8b2.getUint8(_9b2, _ab2);
        _9b2++;
        var _pE = _8b2.getUint8(_9b2, _ab2);
        _9b2++;
        var alpha = _8b2.getUint8(_9b2, _ab2);
        _9b2++;
        _Nb2._Ib2.push({_2v: (_nE | (_oE << 8) | (_pE << 16) | (alpha << 24))})
    }
    return _9b2
};
_yb2.prototype._Mb2 = function (_Nb2, _8b2, _9b2, _ab2) {
    var _t5, _wt;
    _Nb2._Jb2 = [];
    for (_t5 = 0; _t5 < _Nb2._Fb2; _t5++) {
        var _7c2 = {};
        _Nb2._Jb2.push(_7c2);
        _7c2._8c2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._9c2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._ac2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._bc2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._cc2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._dc2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._ec2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _7c2._fc2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        if (_xb2.version >= 2) {
            _7c2._gc2 = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4;
            _7c2._hc2 = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4
        }
        if (_xb2.version >= 3) {
            _7c2._ic2 = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4;
            _7c2._jc2 = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4
        }
        _7c2._kc2 = (_7c2._bc2 > 0) ? [] : null;
        _7c2._lc2 = (_7c2._cc2 > 0) ? [] : null;
        _7c2._mc2 = (_7c2._dc2 > 0) ? [] : null;
        _7c2._nc2 = (_7c2._ec2 > 0) ? [] : null;
        _7c2._oc2 = (_7c2._fc2 > 0) ? [] : null;
        _7c2._pc2 = (_7c2._gc2) ? [] : null;
        _7c2._qc2 = (_7c2._hc2) ? [] : null;
        _7c2._rc2 = (_7c2._ic2) ? [] : null;
        _7c2._sc2 = (_7c2._jc2) ? [] : null;
        for (_wt = 0; _wt < _7c2._bc2 * 2; _wt++) {
            _7c2._kc2[_wt] = _8b2.getFloat32(_9b2, _ab2);
            _9b2 += 4
        }
        for (_wt = 0; _wt < _7c2._cc2 * 2; _wt++) {
            _7c2._tc2[_wt] = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4
        }
        for (_wt = 0;
             _wt < _7c2._dc2 * 3; _wt++) {
            _7c2._mc2[_wt] = _8b2.getUint32(_9b2, _ab2);
            _9b2 += 4
        }
        for (_wt = 0; _wt < _7c2._ec2 * 2; _wt++) {
            _7c2._nc2[_wt] = _8b2.getFloat32(_9b2, _ab2);
            _9b2 += 4
        }
        for (_wt = 0; _wt < _7c2._fc2 * 3; _wt++) {
            _7c2._oc2[_wt] = _8b2.getUint32(_9b2, _ab2);
            _9b2 += 4
        }
        if (_xb2.version >= 2) {
            for (_wt = 0; _wt < _7c2._gc2 * 2; _wt++) {
                _7c2._pc2[_wt] = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4
            }
            for (_wt = 0; _wt < _7c2._hc2 * 2; _wt++) {
                _7c2._qc2[_wt] = _8b2.getFloat32(_9b2, _ab2);
                _9b2 += 4
            }
        }
        if (_xb2.version >= 3) {
            for (_wt = 0; _wt < _7c2._ic2 * 2; _wt++) {
                _7c2._rc2[_wt] = _8b2.getInt32(_9b2,
                    _ab2);
                _9b2 += 4
            }
            for (_wt = 0; _wt < _7c2._jc2 * 2; _wt++) {
                _7c2._sc2[_wt] = _8b2.getFloat32(_9b2, _ab2);
                _9b2 += 4
            }
        }
    }
    return _9b2
};
var _uc2 = 1.0 / 20.0;

function _vc2() {
    this._wc2 = 0;
    this._xc2 = 0;
    this._ht = 0;
    this._it = 0;
    this._jt = 0;
    this._kt = 0;
    this._yc2 = null
};_vc2.prototype._zc2 = function (_8b2, _9b2, _ab2) {
    this._wc2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    this._xc2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    this._ht = _8b2.getFloat32(_9b2, _ab2) * _uc2;
    _9b2 += 4;
    this._it = _8b2.getFloat32(_9b2, _ab2) * _uc2;
    _9b2 += 4;
    this._jt = _8b2.getFloat32(_9b2, _ab2) * _uc2;
    _9b2 += 4;
    this._kt = _8b2.getFloat32(_9b2, _ab2) * _uc2;
    _9b2 += 4;
    var _Ac2, _Bc2, _Cc2;
    _Ac2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    _Bc2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    _Cc2 = _8b2.getInt32(_9b2, _ab2);
    _9b2 += 4;
    this._yc2 = {_Ac2: _Ac2, _Bc2: _Bc2, _Cc2: _Cc2};
    this._Dc2 = [];
    for (var _t5 = 0; _t5 < this._xc2; _t5++) {
        var _Ec2 = {};
        this._Dc2.push(_Ec2);
        _Ec2._Fc2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        _Ec2._ht = _8b2.getFloat32(_9b2, _ab2) * _uc2;
        _9b2 += 4;
        _Ec2._it = _8b2.getFloat32(_9b2, _ab2) * _uc2;
        _9b2 += 4;
        _Ec2._jt = _8b2.getFloat32(_9b2, _ab2) * _uc2;
        _9b2 += 4;
        _Ec2._kt = _8b2.getFloat32(_9b2,
            _ab2) * _uc2;
        _9b2 += 4;
        _Ec2._Gc2 = [];
        for (var _Rt = 0; _Rt < _Ec2._Fc2; _Rt++) {
            var _AZ = {};
            _Ec2._Gc2.push(_AZ);
            _AZ._LZ = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4;
            _AZ.index = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4;
            _AZ._1c = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4;
            _AZ._Hc2 = _8b2.getInt32(_9b2, _ab2);
            _9b2 += 4;
            var _Ic2 = [];
            for (var _tC = 0; _tC < 4; _tC++) {
                _Ic2[_tC] = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4
            }
            var _Jc2 = [];
            for (var _tC = 0; _tC < 4; _tC++) {
                _Jc2[_tC] = _8b2.getInt32(_9b2, _ab2);
                _9b2 += 4
            }
            _AZ._Kc2 = [];
            _AZ._Lc2 = [];
            _AZ._Mc2 = [];
            _AZ._Kc2[0] = _Ic2[2];
            _AZ._Lc2[0] = _Jc2[2];
            _AZ._Mc2[0] = 0;
            _AZ._Kc2[1] = _Ic2[1];
            _AZ._Lc2[1] = _Jc2[1];
            _AZ._Mc2[1] = _Jc2[1];
            _AZ._Kc2[2] = _Ic2[0];
            _AZ._Lc2[2] = _Jc2[0];
            _AZ._Mc2[2] = _Jc2[0];
            _AZ._Kc2[3] = _Ic2[3];
            _AZ._Lc2[3] = _Jc2[3];
            _AZ._Mc2[3] = _Jc2[3];
            _AZ._ht = _8b2.getFloat32(_9b2, _ab2) * _uc2;
            _9b2 += 4;
            _AZ._it = _8b2.getFloat32(_9b2, _ab2) * _uc2;
            _9b2 += 4;
            _AZ._jt = _8b2.getFloat32(_9b2, _ab2) * _uc2;
            _9b2 += 4;
            _AZ._kt = _8b2.getFloat32(_9b2, _ab2) * _uc2;
            _9b2 += 4;
            var _Rb2 = [];
            for (var _tC = 0; _tC < 9; _tC++) {
                _Rb2[_tC] = _8b2.getFloat32(_9b2, _ab2);
                _9b2 += 4
            }
            _AZ._Rb2 = new _JJ();
            _AZ._Rb2._wt[_fL] = _Rb2[0];
            _AZ._Rb2._wt[_gL] = _Rb2[1];
            _AZ._Rb2._wt[_iL] = _Rb2[2];
            _AZ._Rb2._wt[_jL] = _Rb2[3];
            _AZ._Rb2._wt[_bK] = _Rb2[4];
            _AZ._Rb2._wt[_lL] = _Rb2[5]
        }
    }
    return _9b2
};
(function () {
    'use strict';
    var _tt = void 0, _v5 = !0, _J62 = this;

    function _x41(_CO, _cE) {
        var _u5 = _CO.split("."), e = _J62;
        !(_u5[0] in e) && e._Nc2 && e._Nc2("var " + _u5[0]);
        for (var _Nt; _u5.length && (_Nt = _u5.shift());) !_u5.length && _cE !== _tt ? e[_Nt] = _cE : e = e[_Nt] ? e[_Nt] : e[_Nt] = {}
    };var __j1 = "undefined" !== typeof Uint8Array && "undefined" !== typeof Uint16Array && "undefined" !== typeof Uint32Array && "undefined" !== typeof DataView;

    function _AF1(_CO, _cE) {
        this.index = "number" === typeof _cE ? _cE : 0;
        this.e = 0;
        this.buffer = _CO instanceof (__j1 ? Uint8Array : Array) ? _CO : new (__j1 ? Uint8Array : Array)(32768);
        if (2 * this.buffer.length <= this.index) throw _aB("invalid index");
        this.buffer.length <= this.index && _Oc2(this)
    }

    function _Oc2(_CO) {
        var _cE = _CO.buffer, _u5, e = _cE.length, _Nt = new (__j1 ? Uint8Array : Array)(e << 1);
        if (__j1) _Nt.set(_cE); else for (_u5 = 0; _u5 < e; ++_u5) _Nt[_u5] = _cE[_u5];
        return _CO.buffer = _Nt
    }

    _AF1.prototype._Nt = function (_CO, _cE, _u5) {
        var e = this.buffer, _Nt = this.index,
            _hv = this.e, _gv = e[_Nt], _wt;
        _u5 && 1 < _cE && (_CO = 8 < _cE ? (__K1[_CO & 255] << 24 | __K1[_CO >>> 8 & 255] << 16 | __K1[_CO >>> 16 & 255] << 8 | __K1[_CO >>> 24 & 255]) >> 32 - _cE : __K1[_CO] >> 8 - _cE);
        if (8 > _cE + _hv) _gv = _gv << _cE | _CO, _hv += _cE; else for (_wt = 0; _wt < _cE; ++_wt) _gv = _gv << 1 | _CO >> _cE - _wt - 1 & 1, 8 === ++_hv && (_hv = 0, e[_Nt++] = __K1[_gv], _gv = 0, _Nt === e.length && (e = _Oc2(this)));
        e[_Nt] = _gv;
        this.buffer = e;
        this.e = _hv;
        this.index = _Nt
    };
    _AF1.prototype._Pc2 = function () {
        var _CO = this.buffer, _cE = this.index, _u5;
        0 < this.e && (_CO[_cE] <<= 8 - this.e, _CO[_cE] = __K1[_CO[_cE]],
            _cE++);
        __j1 ? _u5 = _CO.subarray(0, _cE) : (_CO.length = _cE, _u5 = _CO);
        return _u5
    };
    var _aE1 = new (__j1 ? Uint8Array : Array)(256), _kj1;
    for (_kj1 = 0; 256 > _kj1; ++_kj1) {
        for (var _Qc2 = _kj1, _Rc2 = _Qc2, _Sc2 = 7, _Qc2 = _Qc2 >>> 1; _Qc2; _Qc2 >>>= 1) _Rc2 <<= 1, _Rc2 |= _Qc2 & 1, --_Sc2;
        _aE1[_kj1] = (_Rc2 << _Sc2 & 255) >>> 0
    }
    var __K1 = _aE1;

    function _b62(_CO) {
        this.buffer = new (__j1 ? Uint16Array : Array)(2 * _CO);
        this.length = 0
    }

    _b62.prototype._Tc2 = function (_CO) {
        return 2 * ((_CO - 2) / 4 | 0)
    };
    _b62.prototype.push = function (_CO, _cE) {
        var _u5, e, _Nt = this.buffer, _hv;
        _u5 = this.length;
        _Nt[this.length++] = _cE;
        for (_Nt[this.length++] = _CO; 0 < _u5;) if (e = this._Tc2(_u5), _Nt[_u5] > _Nt[e]) _hv = _Nt[_u5], _Nt[_u5] = _Nt[e], _Nt[e] = _hv, _hv = _Nt[_u5 + 1], _Nt[_u5 + 1] = _Nt[e + 1], _Nt[e + 1] = _hv, _u5 = e; else break;
        return this.length
    };
    _b62.prototype.pop = function () {
        var _CO, _cE, _u5 = this.buffer, e, _Nt, _hv;
        _cE = _u5[0];
        _CO = _u5[1];
        this.length -= 2;
        _u5[0] = _u5[this.length];
        _u5[1] = _u5[this.length + 1];
        for (_hv = 0; ;) {
            _Nt = 2 * _hv + 2;
            if (_Nt >= this.length) break;
            _Nt + 2 < this.length && _u5[_Nt + 2] > _u5[_Nt] && (_Nt += 2);
            if (_u5[_Nt] > _u5[_hv]) e = _u5[_hv],
                _u5[_hv] = _u5[_Nt], _u5[_Nt] = e, e = _u5[_hv + 1], _u5[_hv + 1] = _u5[_Nt + 1], _u5[_Nt + 1] = e; else break;
            _hv = _Nt
        }
        return ({index: _CO, value: _cE, length: this.length})
    };

    function _9C1(_CO, _cE) {
        this._cE = _P52;
        this._t5 = 0;
        this._VR = __j1 && _CO instanceof Array ? new Uint8Array(_CO) : _CO;
        this._u5 = 0;
        _cE && (_cE._Uc2 && (this._t5 = _cE._Uc2), "number" === typeof _cE._Vc2 && (this._cE = _cE._Vc2), _cE._Wc2 && (this._hv = __j1 && _cE._Wc2 instanceof Array ? new Uint8Array(_cE._Wc2) : _cE._Wc2), "number" === typeof _cE._Xc2 && (this._u5 = _cE._Xc2));
        this._hv || (this._hv = new (__j1 ? Uint8Array : Array)(32768))
    }

    var _P52 = 2, _Yc2 = {_h72: 0, _w5: 1, _gv: _P52, _tt: 3}, _Xj1 = [], _Zc2;
    for (_Zc2 = 0; 288 > _Zc2; _Zc2++) switch (_v5) {
        case 143 >= _Zc2:
            _Xj1.push([_Zc2 + 48, 8]);
            break;
        case 255 >= _Zc2:
            _Xj1.push([_Zc2 - 144 + 400, 9]);
            break;
        case 279 >= _Zc2:
            _Xj1.push([_Zc2 - 256 + 0, 7]);
            break;
        case 287 >= _Zc2:
            _Xj1.push([_Zc2 - 280 + 192, 8]);
            break;
        default :
            throw "invalid literal: " + _Zc2
    }
    _9C1.prototype._CO = function () {
        var _CO, _cE, _u5, e, _Nt = this._VR;
        switch (this._cE) {
            case 0:
                _u5 = 0;
                for (e = _Nt.length; _u5 < e;) {
                    _cE = __j1 ? _Nt.subarray(_u5, _u5 + 65535) : _Nt.slice(_u5, _u5 + 65535);
                    _u5 += _cE.length;
                    var _hv = _cE, _gv = _u5 === e, _wt = _tt, _tC = _tt, _lT = _tt, _Mt = _tt, _sv = _tt,
                        _It = this._hv, _w5 = this._u5;
                    if (__j1) {
                        for (_It = new Uint8Array(this._hv.buffer); _It.length <= _w5 + _hv.length + 5;) _It = new Uint8Array(_It.length << 1);
                        _It.set(this._hv)
                    }
                    _wt = _gv ? 1 : 0;
                    _It[_w5++] = _wt | 0;
                    _tC = _hv.length;
                    _lT = ~_tC + 65536 & 65535;
                    _It[_w5++] = _tC & 255;
                    _It[_w5++] = _tC >>> 8 & 255;
                    _It[_w5++] = _lT & 255;
                    _It[_w5++] = _lT >>> 8 & 255;
                    if (__j1) _It.set(_hv, _w5), _w5 += _hv.length, _It = _It.subarray(0, _w5); else {
                        _Mt = 0;
                        for (_sv = _hv.length; _Mt < _sv; ++_Mt) _It[_w5++] = _hv[_Mt];
                        _It.length = _w5
                    }
                    this._u5 = _w5;
                    this._hv = _It
                }
                break;
            case 1:
                var _7S = new _AF1(__j1 ? new Uint8Array(this._hv.buffer) : this._hv, this._u5);
                _7S._Nt(1, 1, _v5);
                _7S._Nt(1, 2, _v5);
                var _ZN = _MC1(this, _Nt), x, __c2, _Mw;
                x = 0;
                for (__c2 = _ZN.length; x < __c2; x++) if (_Mw = _ZN[x], _AF1.prototype._Nt.apply(_7S, _Xj1[_Mw]), 256 < _Mw) _7S._Nt(_ZN[++x], _ZN[++x], _v5), _7S._Nt(_ZN[++x], 5), _7S._Nt(_ZN[++x], _ZN[++x], _v5); else if (256 === _Mw) break;
                this._hv = _7S._Pc2();
                this._u5 = this._hv.length;
                break;
            case _P52:
                var _5j1 = new _AF1(__j1 ? new Uint8Array(this._hv.buffer) : this._hv, this._u5),
                    _K62, _0d2, _1d2, _1r1, _0r1,
                    _2d2 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], _AK, _3d2, _BK, _4d2,
                    _5d2, _6d2 = Array(19), _7d2, _D22, _8d2, y, _CF;
                _K62 = _P52;
                _5j1._Nt(1, 1, _v5);
                _5j1._Nt(_K62, 2, _v5);
                _0d2 = _MC1(this, _Nt);
                _AK = _7C1(this._wt, 15);
                _3d2 = _9d2(_AK);
                _BK = _7C1(this._It, 7);
                _4d2 = _9d2(_BK);
                for (_1d2 = 286; 257 < _1d2 && 0 === _AK[_1d2 - 1]; _1d2--) ;
                for (_1r1 = 30; 1 < _1r1 && 0 === _BK[_1r1 - 1]; _1r1--) ;
                var _DF = _1d2, _EF = _1r1, _ct1 = new (__j1 ? Uint32Array : Array)(_DF + _EF), _Kt, _dt1, _uv, _CK,
                    _gt1 = new (__j1 ? Uint32Array : Array)(316), _im1, _Uh1,
                    _ad2 = new (__j1 ? Uint8Array : Array)(19);
                for (_Kt = _dt1 = 0; _Kt < _DF; _Kt++) _ct1[_dt1++] = _AK[_Kt];
                for (_Kt = 0; _Kt < _EF; _Kt++) _ct1[_dt1++] = _BK[_Kt];
                if (!__j1) {
                    _Kt = 0;
                    for (_CK = _ad2.length; _Kt < _CK; ++_Kt) _ad2[_Kt] = 0
                }
                _Kt = _im1 = 0;
                for (_CK = _ct1.length; _Kt < _CK; _Kt += _dt1) {
                    for (_dt1 = 1; _Kt + _dt1 < _CK && _ct1[_Kt + _dt1] === _ct1[_Kt]; ++_dt1) ;
                    _uv = _dt1;
                    if (0 === _ct1[_Kt]) if (3 > _uv) for (; 0 < _uv--;) _gt1[_im1++] = 0, _ad2[0]++; else for (; 0 < _uv;) _Uh1 = 138 > _uv ? _uv : 138, _Uh1 > _uv - 3 && _Uh1 < _uv && (_Uh1 = _uv - 3), 10 >= _Uh1 ? (_gt1[_im1++] = 17, _gt1[_im1++] = _Uh1 - 3, _ad2[17]++) : (_gt1[_im1++] = 18, _gt1[_im1++] = _Uh1 - 11,
                        _ad2[18]++), _uv -= _Uh1; else if (_gt1[_im1++] = _ct1[_Kt], _ad2[_ct1[_Kt]]++, _uv--, 3 > _uv) for (; 0 < _uv--;) _gt1[_im1++] = _ct1[_Kt], _ad2[_ct1[_Kt]]++; else for (; 0 < _uv;) _Uh1 = 6 > _uv ? _uv : 6, _Uh1 > _uv - 3 && _Uh1 < _uv && (_Uh1 = _uv - 3), _gt1[_im1++] = 16, _gt1[_im1++] = _Uh1 - 3, _ad2[16]++, _uv -= _Uh1
                }
                _CO = __j1 ? _gt1.subarray(0, _im1) : _gt1.slice(0, _im1);
                _5d2 = _7C1(_ad2, 7);
                for (y = 0; 19 > y; y++) _6d2[y] = _5d2[_2d2[y]];
                for (_0r1 = 19; 4 < _0r1 && 0 === _6d2[_0r1 - 1]; _0r1--) ;
                _7d2 = _9d2(_5d2);
                _5j1._Nt(_1d2 - 257, 5, _v5);
                _5j1._Nt(_1r1 - 1, 5, _v5);
                _5j1._Nt(_0r1 - 4, 4, _v5);
                for (y = 0; y < _0r1; y++) _5j1._Nt(_6d2[y], 3, _v5);
                y = 0;
                for (_CF = _CO.length; y < _CF; y++) if (_D22 = _CO[y], _5j1._Nt(_7d2[_D22], _5d2[_D22], _v5), 16 <= _D22) {
                    y++;
                    switch (_D22) {
                        case 16:
                            _8d2 = 2;
                            break;
                        case 17:
                            _8d2 = 3;
                            break;
                        case 18:
                            _8d2 = 7;
                            break;
                        default :
                            throw "invalid code: " + _D22
                    }
                    _5j1._Nt(_CO[y], _8d2, _v5)
                }
                var _bd2 = [_3d2, _AK], _cd2 = [_4d2, _BK], _Uk1, _dd2, $, _qi1, _ed2, _fd2, _gd2, _hd2;
                _ed2 = _bd2[0];
                _fd2 = _bd2[1];
                _gd2 = _cd2[0];
                _hd2 = _cd2[1];
                _Uk1 = 0;
                for (_dd2 = _0d2.length; _Uk1 < _dd2; ++_Uk1) if ($ = _0d2[_Uk1], _5j1._Nt(_ed2[$], _fd2[$], _v5), 256 < $) _5j1._Nt(_0d2[++_Uk1],
                    _0d2[++_Uk1], _v5), _qi1 = _0d2[++_Uk1], _5j1._Nt(_gd2[_qi1], _hd2[_qi1], _v5), _5j1._Nt(_0d2[++_Uk1], _0d2[++_Uk1], _v5); else if (256 === $) break;
                this._hv = _5j1._Pc2();
                this._u5 = this._hv.length;
                break;
            default :
                throw "invalid compression type"
        }
        return this._hv
    };

    function _e62(_CO, _cE) {
        this.length = _CO;
        this._tC = _cE
    }

    var _id2 = function () {
        function _CO(_Nt) {
            switch (_v5) {
                case 3 === _Nt:
                    return [257, _Nt - 3, 0];
                case 4 === _Nt:
                    return [258, _Nt - 4, 0];
                case 5 === _Nt:
                    return [259, _Nt - 5, 0];
                case 6 === _Nt:
                    return [260, _Nt - 6, 0];
                case 7 === _Nt:
                    return [261, _Nt - 7, 0];
                case 8 === _Nt:
                    return [262, _Nt - 8, 0];
                case 9 === _Nt:
                    return [263, _Nt - 9, 0];
                case 10 === _Nt:
                    return [264, _Nt - 10, 0];
                case 12 >= _Nt:
                    return [265, _Nt - 11, 1];
                case 14 >= _Nt:
                    return [266, _Nt - 13, 1];
                case 16 >= _Nt:
                    return [267, _Nt - 15, 1];
                case 18 >= _Nt:
                    return [268, _Nt - 17, 1];
                case 22 >= _Nt:
                    return [269, _Nt - 19, 2];
                case 26 >= _Nt:
                    return [270, _Nt - 23, 2];
                case 30 >= _Nt:
                    return [271, _Nt - 27, 2];
                case 34 >= _Nt:
                    return [272, _Nt - 31, 2];
                case 42 >= _Nt:
                    return [273, _Nt - 35, 3];
                case 50 >= _Nt:
                    return [274, _Nt - 43, 3];
                case 58 >= _Nt:
                    return [275, _Nt - 51, 3];
                case 66 >= _Nt:
                    return [276, _Nt - 59, 3];
                case 82 >= _Nt:
                    return [277,
                        _Nt - 67, 4];
                case 98 >= _Nt:
                    return [278, _Nt - 83, 4];
                case 114 >= _Nt:
                    return [279, _Nt - 99, 4];
                case 130 >= _Nt:
                    return [280, _Nt - 115, 4];
                case 162 >= _Nt:
                    return [281, _Nt - 131, 5];
                case 194 >= _Nt:
                    return [282, _Nt - 163, 5];
                case 226 >= _Nt:
                    return [283, _Nt - 195, 5];
                case 257 >= _Nt:
                    return [284, _Nt - 227, 5];
                case 258 === _Nt:
                    return [285, _Nt - 258, 0];
                default :
                    throw "invalid length: " + _Nt;
            }
        }

        var _cE = [], _u5, e;
        for (_u5 = 3; 258 >= _u5; _u5++) e = _CO(_u5), _cE[_u5] = e[2] << 24 | e[1] << 16 | e[0];
        return _cE
    }(), _jd2 = __j1 ? new Uint32Array(_id2) : _id2;

    function _MC1(_CO, _cE) {
        function _u5(_Nt, _u5) {
            var _hv = _Nt._tC, _cE = [], e = 0, _CO;
            _CO = _jd2[_Nt.length];
            _cE[e++] = _CO & 65535;
            _cE[e++] = _CO >> 16 & 255;
            _cE[e++] = _CO >> 24;
            var _gv;
            switch (_v5) {
                case 1 === _hv:
                    _gv = [0, _hv - 1, 0];
                    break;
                case 2 === _hv:
                    _gv = [1, _hv - 2, 0];
                    break;
                case 3 === _hv:
                    _gv = [2, _hv - 3, 0];
                    break;
                case 4 === _hv:
                    _gv = [3, _hv - 4, 0];
                    break;
                case 6 >= _hv:
                    _gv = [4, _hv - 5, 1];
                    break;
                case 8 >= _hv:
                    _gv = [5, _hv - 7, 1];
                    break;
                case 12 >= _hv:
                    _gv = [6, _hv - 9, 2];
                    break;
                case 16 >= _hv:
                    _gv = [7, _hv - 13, 2];
                    break;
                case 24 >= _hv:
                    _gv = [8, _hv - 17, 3];
                    break;
                case 32 >= _hv:
                    _gv = [9, _hv - 25, 3];
                    break;
                case 48 >= _hv:
                    _gv = [10, _hv - 33, 4];
                    break;
                case 64 >= _hv:
                    _gv = [11, _hv - 49, 4];
                    break;
                case 96 >= _hv:
                    _gv = [12, _hv - 65, 5];
                    break;
                case 128 >= _hv:
                    _gv = [13, _hv - 97, 5];
                    break;
                case 192 >= _hv:
                    _gv = [14, _hv - 129, 6];
                    break;
                case 256 >= _hv:
                    _gv = [15, _hv - 193, 6];
                    break;
                case 384 >= _hv:
                    _gv = [16, _hv - 257, 7];
                    break;
                case 512 >= _hv:
                    _gv = [17, _hv - 385, 7];
                    break;
                case 768 >= _hv:
                    _gv = [18, _hv - 513, 8];
                    break;
                case 1024 >= _hv:
                    _gv = [19, _hv - 769, 8];
                    break;
                case 1536 >= _hv:
                    _gv = [20, _hv - 1025, 9];
                    break;
                case 2048 >= _hv:
                    _gv = [21, _hv - 1537, 9];
                    break;
                case 3072 >= _hv:
                    _gv = [22, _hv - 2049, 10];
                    break;
                case 4096 >= _hv:
                    _gv = [23, _hv - 3073, 10];
                    break;
                case 6144 >= _hv:
                    _gv = [24, _hv - 4097, 11];
                    break;
                case 8192 >= _hv:
                    _gv = [25, _hv - 6145, 11];
                    break;
                case 12288 >= _hv:
                    _gv = [26, _hv - 8193, 12];
                    break;
                case 16384 >= _hv:
                    _gv = [27, _hv - 12289, 12];
                    break;
                case 24576 >= _hv:
                    _gv = [28, _hv - 16385, 13];
                    break;
                case 32768 >= _hv:
                    _gv = [29, _hv - 24577, 13];
                    break;
                default :
                    throw "invalid distance"
            }
            _CO = _gv;
            _cE[e++] = _CO[0];
            _cE[e++] = _CO[1];
            _cE[e++] = _CO[2];
            var _tC, _wt;
            _tC = 0;
            for (_wt = _cE.length; _tC < _wt; ++_tC) _It[_w5++] = _cE[_tC];
            _ZN[_cE[0]]++;
            x[_cE[3]]++;
            _7S = _Nt.length + _u5 - 1;
            _sv = null
        }

        var e, _Nt, _hv, _gv, _wt, _tC = {}, _lT, _Mt,
            _sv, _It = __j1 ? new Uint16Array(2 * _cE.length) : [], _w5 = 0, _7S = 0,
            _ZN = new (__j1 ? Uint32Array : Array)(286), x = new (__j1 ? Uint32Array : Array)(30), __c2 = _CO._t5, _Mw;
        if (!__j1) {
            for (_hv = 0; 285 >= _hv;) _ZN[_hv++] = 0;
            for (_hv = 0; 29 >= _hv;) x[_hv++] = 0
        }
        _ZN[256] = 1;
        e = 0;
        for (_Nt = _cE.length; e < _Nt; ++e) {
            _hv = _wt = 0;
            for (_gv = 3; _hv < _gv && e + _hv !== _Nt; ++_hv) _wt = _wt << 8 | _cE[e + _hv];
            _tC[_wt] === _tt && (_tC[_wt] = []);
            _lT = _tC[_wt];
            if (!(0 < _7S--)) {
                for (; 0 < _lT.length && 32768 < e - _lT[0];) _lT.shift();
                if (e + 3 >= _Nt) {
                    _sv && _u5(_sv, -1);
                    _hv = 0;
                    for (_gv = _Nt - e; _hv < _gv; ++_hv) _Mw = _cE[e + _hv],
                        _It[_w5++] = _Mw, ++_ZN[_Mw];
                    break
                }
                0 < _lT.length ? (_Mt = _kd2(_cE, e, _lT), _sv ? _sv.length < _Mt.length ? (_Mw = _cE[e - 1], _It[_w5++] = _Mw, ++_ZN[_Mw], _u5(_Mt, 0)) : _u5(_sv, -1) : _Mt.length < __c2 ? _sv = _Mt : _u5(_Mt, 0)) : _sv ? _u5(_sv, -1) : (_Mw = _cE[e], _It[_w5++] = _Mw, ++_ZN[_Mw])
            }
            _lT.push(e)
        }
        _It[_w5++] = 256;
        _ZN[256]++;
        _CO._wt = _ZN;
        _CO._It = x;
        return __j1 ? _It.subarray(0, _w5) : _It
    }

    function _kd2(_CO, _cE, _u5) {
        var e, _Nt, _hv = 0, _gv, _wt, _tC, _lT, _Mt = _CO.length;
        _wt = 0;
        _lT = _u5.length;
        _hv:for (; _wt < _lT; _wt++) {
            e = _u5[_lT - _wt - 1];
            _gv = 3;
            if (3 < _hv) {
                for (_tC = _hv;
                     3 < _tC; _tC--) if (_CO[e + _tC - 1] !== _CO[_cE + _tC - 1]) continue _hv;
                _gv = _hv
            }
            for (; 258 > _gv && _cE + _gv < _Mt && _CO[e + _gv] === _CO[_cE + _gv];) ++_gv;
            _gv > _hv && (_Nt = e, _hv = _gv);
            if (258 === _gv) break
        }
        return new _e62(_hv, _cE - _Nt)
    }

    function _7C1(_CO, _cE) {
        var _u5 = _CO.length, e = new _b62(572), _Nt = new (__j1 ? Uint8Array : Array)(_u5), _hv, _gv, _wt, _tC, _lT;
        if (!__j1) for (_tC = 0; _tC < _u5; _tC++) _Nt[_tC] = 0;
        for (_tC = 0; _tC < _u5; ++_tC) 0 < _CO[_tC] && e.push(_tC, _CO[_tC]);
        _hv = Array(e.length / 2);
        _gv = new (__j1 ? Uint32Array : Array)(e.length / 2);
        if (1 === _hv.length) return _Nt[e.pop().index] = 1,
            _Nt;
        _tC = 0;
        for (_lT = e.length / 2; _tC < _lT; ++_tC) _hv[_tC] = e.pop(), _gv[_tC] = _hv[_tC].value;
        _wt = _ld2(_gv, _gv.length, _cE);
        _tC = 0;
        for (_lT = _hv.length; _tC < _lT; ++_tC) _Nt[_hv[_tC].index] = _wt[_tC];
        return _Nt
    }

    function _ld2(_CO, _cE, _u5) {
        function e(_hv) {
            var _Nt = _tC[_hv][_lT[_hv]];
            _Nt === _cE ? (e(_hv + 1), e(_hv + 1)) : --_gv[_Nt];
            ++_lT[_hv]
        }

        var _Nt = new (__j1 ? Uint16Array : Array)(_u5), _hv = new (__j1 ? Uint8Array : Array)(_u5),
            _gv = new (__j1 ? Uint8Array : Array)(_cE), _wt = Array(_u5), _tC = Array(_u5), _lT = Array(_u5),
            _Mt = (1 << _u5) - _cE, _sv = 1 << _u5 - 1, _It,
            _w5, _7S, _ZN, x;
        _Nt[_u5 - 1] = _cE;
        for (_w5 = 0; _w5 < _u5; ++_w5) _Mt < _sv ? _hv[_w5] = 0 : (_hv[_w5] = 1, _Mt -= _sv), _Mt <<= 1, _Nt[_u5 - 2 - _w5] = (_Nt[_u5 - 1 - _w5] / 2 | 0) + _cE;
        _Nt[0] = _hv[0];
        _wt[0] = Array(_Nt[0]);
        _tC[0] = Array(_Nt[0]);
        for (_w5 = 1; _w5 < _u5; ++_w5) _Nt[_w5] > 2 * _Nt[_w5 - 1] + _hv[_w5] && (_Nt[_w5] = 2 * _Nt[_w5 - 1] + _hv[_w5]), _wt[_w5] = Array(_Nt[_w5]), _tC[_w5] = Array(_Nt[_w5]);
        for (_It = 0; _It < _cE; ++_It) _gv[_It] = _u5;
        for (_7S = 0; _7S < _Nt[_u5 - 1]; ++_7S) _wt[_u5 - 1][_7S] = _CO[_7S], _tC[_u5 - 1][_7S] = _7S;
        for (_It = 0; _It < _u5; ++_It) _lT[_It] = 0;
        1 === _hv[_u5 - 1] && (--_gv[0],
            ++_lT[_u5 - 1]);
        for (_w5 = _u5 - 2; 0 <= _w5; --_w5) {
            _ZN = _It = 0;
            x = _lT[_w5 + 1];
            for (_7S = 0; _7S < _Nt[_w5]; _7S++) _ZN = _wt[_w5 + 1][x] + _wt[_w5 + 1][x + 1], _ZN > _CO[_It] ? (_wt[_w5][_7S] = _ZN, _tC[_w5][_7S] = _cE, x += 2) : (_wt[_w5][_7S] = _CO[_It], _tC[_w5][_7S] = _It, ++_It);
            _lT[_w5] = 0;
            1 === _hv[_w5] && e(_w5)
        }
        return _gv
    }

    function _9d2(_CO) {
        var _cE = new (__j1 ? Uint16Array : Array)(_CO.length), _u5 = [], e = [], _Nt = 0, _hv, _gv, _wt, _tC;
        _hv = 0;
        for (_gv = _CO.length; _hv < _gv; _hv++) _u5[_CO[_hv]] = (_u5[_CO[_hv]] | 0) + 1;
        _hv = 1;
        for (_gv = 16; _hv <= _gv; _hv++) e[_hv] = _Nt, _Nt += _u5[_hv] | 0,
            _Nt <<= 1;
        _hv = 0;
        for (_gv = _CO.length; _hv < _gv; _hv++) {
            _Nt = e[_CO[_hv]];
            e[_CO[_hv]] += 1;
            _wt = _cE[_hv] = 0;
            for (_tC = _CO[_hv]; _wt < _tC; _wt++) _cE[_hv] = _cE[_hv] << 1 | _Nt & 1, _Nt >>>= 1
        }
        return _cE
    };

    function _md2(_CO, _cE) {
        this._VR = _CO;
        this._hv = new (__j1 ? Uint8Array : Array)(32768);
        this._cE = _nd2._gv;
        var _u5 = {}, e;
        if ((_cE || !(_cE = {})) && "number" === typeof _cE._Vc2) this._cE = _cE._Vc2;
        for (e in _cE) _u5[e] = _cE[e];
        _u5._Wc2 = this._hv;
        this._Rt = new _9C1(this._VR, _u5)
    }

    var _nd2 = _Yc2;
    _md2.prototype._CO = function () {
        var _CO, _cE, _u5, e, _Nt, _hv, _gv = 0;
        _hv = this._hv;
        switch (8) {
            case 8:
                _CO = Math.LOG2E * Math.log(32768) - 8;
                break;
            default :
                throw _aB("invalid compression method")
        }
        _cE = _CO << 4 | 8;
        _hv[_gv++] = _cE;
        switch (8) {
            case 8:
                switch (this._cE) {
                    case _nd2._h72:
                        e = 0;
                        break;
                    case _nd2._w5:
                        e = 1;
                        break;
                    case _nd2._gv:
                        e = 2;
                        break;
                    default :
                        throw _aB("unsupported compression type")
                }
                break;
            default :
                throw _aB("invalid compression method")
        }
        _u5 = e << 6 | 0;
        _hv[_gv++] = _u5 | 31 - (256 * _cE + _u5) % 31;
        var _wt = this._VR;
        if ("string" === typeof _wt) {
            var _tC = _wt.split(""), _lT, _Mt;
            _lT = 0;
            for (_Mt = _tC.length; _lT < _Mt; _lT++) _tC[_lT] = (_tC[_lT].charCodeAt(0) & 255) >>> 0;
            _wt = _tC
        }
        for (var _sv = 1, _It = 0, _w5 = _wt.length, _7S, _ZN = 0; 0 < _w5;) {
            _7S = 1024 < _w5 ? 1024 : _w5;
            _w5 -= _7S;
            do _sv += _wt[_ZN++], _It += _sv; while (--_7S);
            _sv %= 65521;
            _It %= 65521
        }
        _Nt = (_It << 16 | _sv) >>> 0;
        this._Rt._u5 = _gv;
        _hv = this._Rt._CO();
        _gv = _hv.length;
        __j1 && (_hv = new Uint8Array(_hv.buffer), _hv.length <= _gv + 4 && (this._hv = new Uint8Array(_hv.length + 4), this._hv.set(_hv), _hv = this._hv), _hv = _hv.subarray(0, _gv + 4));
        _hv[_gv++] = _Nt >> 24 & 255;
        _hv[_gv++] = _Nt >> 16 & 255;
        _hv[_gv++] = _Nt >> 8 & 255;
        _hv[_gv++] = _Nt & 255;
        return _hv
    };
    _x41("Zlib.Deflate", _md2);
    _x41("Zlib.Deflate.compress", function (_CO, _cE) {
        return (new _md2(_CO, _cE))._CO()
    });
    _x41("Zlib.Deflate.prototype.compress", _md2.prototype._CO);
    var _od2 = {_h72: _nd2._h72, FIXED: _nd2._w5, _pd2: _nd2._gv}, _qd2, _rd2, _sd2, _td2;
    if (Object._r42) _qd2 = Object._r42(_od2); else for (_rd2 in _qd2 = [], _sd2 = 0, _od2) _qd2[_sd2++] = _rd2;
    _sd2 = 0;
    for (_td2 = _qd2.length; _sd2 < _td2; ++_sd2) _rd2 = _qd2[_sd2], _x41("Zlib.Deflate.CompressionType." + _rd2, _od2[_rd2])
}).call(this);
;
;(function (name, context, _ud2) {
    if (typeof _wN1 !== 'undefined' && _wN1._xN1) {
        _wN1._xN1 = _ud2()
    } else if (typeof _vd2 === 'function' && _vd2._wd2) {
        _vd2(_ud2)
    } else {
        context[name] = _ud2()
    }
})('Fingerprint', this, function () {
    'use strict';
    var _xd2 = function (options) {
        var _yd2, _zd2;
        _yd2 = Array.prototype._Ad2;
        _zd2 = Array.prototype.map;
        this._Bd2 = function (_aP, _Cd2, context) {
            if (_aP === null) {
                return
            }
            if (_yd2 && _aP._Ad2 === _yd2) {
                _aP._Ad2(_Cd2, context)
            } else if (_aP.length === +_aP.length) {
                for (var _t5 = 0, _It = _aP.length; _t5 < _It; _t5++) {
                    if (_Cd2.call(context, _aP[_t5], _t5, _aP) === {}) return
                }
            } else {
                for (var _7N in _aP) {
                    if (_aP.hasOwnProperty(_7N)) {
                        if (_Cd2.call(context, _aP[_7N], _7N, _aP) === {}) return;
                    }
                }
            }
        };
        this.map = function (_aP, _Cd2, context) {
            var _Dd2 = [];
            if (_aP == null) return _Dd2;
            if (_zd2 && _aP.map === _zd2) return _aP.map(_Cd2, context);
            this._Bd2(_aP, function (value, index, _8C) {
                _Dd2[_Dd2.length] = _Cd2.call(context, value, index, _8C)
            });
            return _Dd2
        };
        if (typeof options == 'object') {
            this._Ed2 = options._Ed2;
            this._Fd2 = options._Fd2;
            this._Gd2 = options._Gd2;
            this.canvas = options.canvas;
            this._Hd2 = options._Hd2
        } else if (typeof options == 'function') {
            this._Ed2 = options
        }
    };
    _xd2.prototype = {
        get: function () {
            var _r42 = [];
            _r42.push(navigator.userAgent);
            _r42.push(navigator._Id2);
            _r42.push(_Jd2._Kd2);
            if (this._Fd2) {
                var _Ld2 = this._Md2();
                if (typeof _Ld2 !== 'undefined') {
                    _r42.push(_Ld2.join('x'))
                }
            }
            _r42.push(new Date().getTimezoneOffset());
            _r42.push(this._Nd2());
            _r42.push(this._Od2());
            _r42.push(!!window._Pd2);
            if (document.body) {
                _r42.push(typeof(document.body._Qd2))
            } else {
                _r42.push(typeof undefined)
            }
            _r42.push(typeof(window._Rd2));
            _r42.push(navigator._Sd2);
            _r42.push(navigator.platform);
            _r42.push(navigator._Td2);
            _r42.push(this._Ud2());
            if (this.canvas && this._Vd2()) {
                _r42.push(this._Wd2())
            }
            if (this._Ed2) {
                return this._Ed2(_r42.join('###'), 31)
            } else {
                return this._Xd2(_r42.join('###'), 31)
            }
        }, _Xd2: function (_7N, _Ky1) {
            var _Yd2, _Zd2, _wR, __d2, _1j1, _2j1, _0e2, _t5;
            _Yd2 = _7N.length & 3;
            _Zd2 = _7N.length - _Yd2;
            _wR = _Ky1;
            _1j1 = 0xcc9e2d51;
            _2j1 = 0x1b873593;
            _t5 = 0;
            while (_t5 < _Zd2) {
                _0e2 = ((_7N.charCodeAt(_t5) & 0xff)) | ((_7N.charCodeAt(++_t5) & 0xff) << 8) | ((_7N.charCodeAt(++_t5) & 0xff) << 16) | ((_7N.charCodeAt(++_t5) & 0xff) << 24);
                ++_t5;
                _0e2 = ((((_0e2 & 0xffff) * _1j1) + ((((_0e2 >>> 16) * _1j1) & 0xffff) << 16))) & 0xffffffff;
                _0e2 = (_0e2 << 15) | (_0e2 >>> 17);
                _0e2 = ((((_0e2 & 0xffff) * _2j1) + ((((_0e2 >>> 16) * _2j1) & 0xffff) << 16))) & 0xffffffff;
                _wR ^= _0e2;
                _wR = (_wR << 13) | (_wR >>> 19);
                __d2 = ((((_wR & 0xffff) * 5) + ((((_wR >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;
                _wR = (((__d2 & 0xffff) + 0x6b64) + ((((__d2 >>> 16) + 0xe654) & 0xffff) << 16))
            }
            _0e2 = 0;
            switch (_Yd2) {
                case 3:
                    _0e2 ^= (_7N.charCodeAt(_t5 + 2) & 0xff) << 16;
                case 2:
                    _0e2 ^= (_7N.charCodeAt(_t5 + 1) & 0xff) << 8;
                case 1:
                    _0e2 ^= (_7N.charCodeAt(_t5) & 0xff);
                    _0e2 = (((_0e2 & 0xffff) * _1j1) + ((((_0e2 >>> 16) * _1j1) & 0xffff) << 16)) & 0xffffffff;
                    _0e2 = (_0e2 << 15) | (_0e2 >>> 17);
                    _0e2 = (((_0e2 & 0xffff) * _2j1) + ((((_0e2 >>> 16) * _2j1) & 0xffff) << 16)) & 0xffffffff;
                    _wR ^= _0e2
            }
            _wR ^= _7N.length;
            _wR ^= _wR >>> 16;
            _wR = (((_wR & 0xffff) * 0x85ebca6b) + ((((_wR >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;
            _wR ^= _wR >>> 13;
            _wR = ((((_wR & 0xffff) * 0xc2b2ae35) + ((((_wR >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;
            _wR ^= _wR >>> 16;
            return _wR >>> 0
        }, _Od2: function () {
            try {
                return !!window.localStorage
            } catch (e) {
                return !0
            }
        }, _Nd2: function () {
            try {
                return !!window._1e2
            } catch (e) {
                return !0
            }
        }, _Vd2: function () {
            var _zc1 = document.createElement('canvas');
            return !!(_zc1.getContext && _zc1.getContext('2d'))
        }, _2e2: function () {
            if (navigator._3e2 === 'Microsoft Internet Explorer') {
                return !0
            } else if (navigator._3e2 === 'Netscape' && /_4e2/.test(navigator.userAgent)) {
                return !0
            }
            return !1
        }, _Ud2: function () {
            if (this._2e2() && this._Hd2) {
                return this._5e2()
            } else {
                return this._6e2()
            }
        }, _6e2: function () {
            return this.map(navigator._7e2, function (_lT) {
                var _8e2 = this.map(_lT, function (_aL) {
                    return [_aL.type, _aL._9e2].join('~')
                }).join(',');
                return [_lT.name, _lT.description, _8e2].join('::')
            }, this).join(';')
        }
        , _5e2: function () {
            if (window.ActiveXObject) {
                var _dP1 = ['ShockwaveFlash.ShockwaveFlash', 'AcroPDF.PDF', 'PDF.PdfCtrl', 'QuickTime.QuickTime', 'rmocx.RealPlayer G2 Control', 'rmocx.RealPlayer G2 Control.1', 'RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)', 'RealVideo.RealVideo(tm) ActiveX Control (32-bit)', 'RealPlayer', 'SWCtl.SWCtl', 'WMPlayer.OCX', 'AgControl.AgControl', 'Skype.Detection'];
                return this.map(_dP1, function (name) {
                    try {
                        new ActiveXObject(name);
                        return name
                    } catch (e) {
                        return null
                    }
                }).join(';')
            } else {
                return ""
            }
        }, _Md2: function () {
            var _Ld2;
            if (this._Gd2) {
                _Ld2 = (_Jd2.height > _Jd2.width) ? [_Jd2.height, _Jd2.width] : [_Jd2.width, _Jd2.height]
            } else {
                _Ld2 = [_Jd2.height, _Jd2.width]
            }
            return _Ld2
        }, _Wd2: function () {
            var canvas = document.createElement('canvas');
            var _Vv = canvas.getContext('2d');
            var _RN = 'http://valve.github.io';
            _Vv.textBaseline = "top";
            _Vv.font = "14px 'Arial'";
            _Vv.textBaseline = "alphabetic";
            _Vv.fillStyle = "#f60";
            _Vv.fillRect(125, 1, 62, 20);
            _Vv.fillStyle = "#069";
            _Vv.fillText(_RN, 2, 15);
            _Vv.fillStyle = "rgba(102, 204, 0, 0.7)";
            _Vv.fillText(_RN,
                4, 17);
            return canvas.toDataURL();
        }
    };
    return _xd2
});
(function () {
    'use strict';

    function _wt(_Nt) {
        throw _Nt
    }

    var _tt = void 0, _Kt = this;

    function _ZN(_Nt, _cE) {
        var _hv = _Nt.split("."), _u5 = _Kt;
        !(_hv[0] in _u5) && _u5._Nc2 && _u5._Nc2("var " + _hv[0]);
        for (var _CO; _hv.length && (_CO = _hv.shift());) !_hv.length && _cE !== _tt ? _u5[_CO] = _cE : _u5 = _u5[_CO] ? _u5[_CO] : _u5[_CO] = {}
    };var _sv = "undefined" !== typeof Uint8Array && "undefined" !== typeof Uint16Array && "undefined" !== typeof Uint32Array;

    function _uv(_Nt) {
        var _cE = _Nt.length, _hv = 0, _u5 = Number.POSITIVE_INFINITY,
            _CO, e, _gv, _w5, _tC, _It, _7S, _lT, _Mt;
        for (_lT = 0; _lT < _cE; ++_lT) _Nt[_lT] > _hv && (_hv = _Nt[_lT]), _Nt[_lT] < _u5 && (_u5 = _Nt[_lT]);
        _CO = 1 << _hv;
        e = new (_sv ? Uint32Array : Array)(_CO);
        _gv = 1;
        _w5 = 0;
        for (_tC = 2; _gv <= _hv;) {
            for (_lT = 0; _lT < _cE; ++_lT) if (_Nt[_lT] === _gv) {
                _It = 0;
                _7S = _w5;
                for (_Mt = 0; _Mt < _gv; ++_Mt) _It = _It << 1 | _7S & 1, _7S >>= 1;
                for (_Mt = _It; _Mt < _CO; _Mt += _tC) e[_Mt] = _gv << 16 | _lT;
                ++_w5
            }
            ++_gv;
            _w5 <<= 1;
            _tC <<= 1
        }
        return [e, _hv, _u5]
    };

    function _v5(_Nt, _cE) {
        this._gv = [];
        this._w5 = 32768;
        this._cE = this._CO = this._hv = this._It = 0;
        this._VR = _sv ? new Uint8Array(_Nt) : _Nt;
        this._wt = !1;
        this._t5 = x;
        this._Kt = !1;
        if (_cE || !(_cE = {})) _cE.index && (this._hv = _cE.index), _cE._ae2 && (this._w5 = _cE._ae2), _cE._be2 && (this._t5 = _cE._be2), _cE._ce2 && (this._Kt = _cE._ce2);
        switch (this._t5) {
            case y:
                this._Nt = 32768;
                this._u5 = new (_sv ? Uint8Array : Array)(32768 + this._w5 + 258);
                break;
            case x:
                this._Nt = 0;
                this._u5 = new (_sv ? Uint8Array : Array)(this._w5);
                this.e = this._Mw;
                this._tt = this._uv;
                this._Rt = this._v5;
                break;
            default :
                _wt(_aB("invalid inflate mode"))
        }
    }

    var y = 0, x = 1, _Mw = {_Mt: y, _ZN: x};
    _v5.prototype._tC = function () {
        for (; !this._wt;
        ) {
            var _Nt = _Uh1(this, 3);
            _Nt & 1 && (this._wt = !0);
            _Nt >>>= 1;
            switch (_Nt) {
                case 0:
                    var _cE = this._VR, _hv = this._hv, _u5 = this._u5, _CO = this._Nt, e = _tt, _gv = _tt, _w5 = _tt,
                        _tC = _u5.length, _It = _tt;
                    this._cE = this._CO = 0;
                    e = _cE[_hv++];
                    e === _tt && _wt(_aB("invalid uncompressed block header: LEN (first byte)"));
                    _gv = e;
                    e = _cE[_hv++];
                    e === _tt && _wt(_aB("invalid uncompressed block header: LEN (second byte)"));
                    _gv |= e << 8;
                    e = _cE[_hv++];
                    e === _tt && _wt(_aB("invalid uncompressed block header: NLEN (first byte)"));
                    _w5 = e;
                    e = _cE[_hv++];
                    e === _tt && _wt(_aB("invalid uncompressed block header: NLEN (second byte)"));
                    _w5 |= e << 8;
                    _gv === ~_w5 && _wt(_aB("invalid uncompressed block header: length verify"));
                    _hv + _gv > _cE.length && _wt(_aB("input buffer is broken"));
                    switch (this._t5) {
                        case y:
                            for (; _CO + _gv > _u5.length;) {
                                _It = _tC - _CO;
                                _gv -= _It;
                                if (_sv) _u5.set(_cE.subarray(_hv, _hv + _It), _CO), _CO += _It, _hv += _It; else for (; _It--;) _u5[_CO++] = _cE[_hv++];
                                this._Nt = _CO;
                                _u5 = this.e();
                                _CO = this._Nt
                            }
                            break;
                        case x:
                            for (; _CO + _gv > _u5.length;) _u5 = this.e({_lT: 2});
                            break;
                        default :
                            _wt(_aB("invalid inflate mode"))
                    }
                    if (_sv) _u5.set(_cE.subarray(_hv, _hv + _gv), _CO), _CO += _gv,
                        _hv += _gv; else for (; _gv--;) _u5[_CO++] = _cE[_hv++];
                    this._hv = _hv;
                    this._Nt = _CO;
                    this._u5 = _u5;
                    break;
                case 1:
                    this._Rt(_5j1, __j1);
                    break;
                case 2:
                    _J62(this);
                    break;
                default :
                    _wt(_aB("unknown BTYPE: " + _Nt))
            }
        }
        return this._tt()
    };
    var _im1 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
        _gt1 = _sv ? new Uint16Array(_im1) : _im1,
        _ct1 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258],
        _dt1 = _sv ? new Uint16Array(_ct1) : _ct1,
        _ad2 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0,
            0], _Uk1 = _sv ? new Uint8Array(_ad2) : _ad2,
        _0d2 = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],
        _AF1 = _sv ? new Uint16Array(_0d2) : _0d2,
        __K1 = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
        _kj1 = _sv ? new Uint8Array(__K1) : __K1, _Qc2 = new (_sv ? Uint8Array : Array)(288), _1d2, _1r1;
    _1d2 = 0;
    for (_1r1 = _Qc2.length; _1d2 < _1r1; ++_1d2) _Qc2[_1d2] = 143 >= _1d2 ? 8 : 255 >= _1d2 ? 9 : 279 >= _1d2 ? 7 : 8;
    var _5j1 = _uv(_Qc2), _0r1 = new (_sv ? Uint8Array : Array)(30), _D22, _Rc2;
    _D22 = 0;
    for (_Rc2 = _0r1.length; _D22 < _Rc2; ++_D22) _0r1[_D22] = 5;
    var __j1 = _uv(_0r1);

    function _Uh1(_Nt, _cE) {
        for (var _hv = _Nt._CO, _u5 = _Nt._cE, _CO = _Nt._VR, e = _Nt._hv, _gv; _u5 < _cE;) _gv = _CO[e++], _gv === _tt && _wt(_aB("input buffer is broken")), _hv |= _gv << _u5, _u5 += 8;
        _gv = _hv & (1 << _cE) - 1;
        _Nt._CO = _hv >>> _cE;
        _Nt._cE = _u5 - _cE;
        _Nt._hv = e;
        return _gv
    }

    function _Xj1(_Nt, _cE) {
        for (var _hv = _Nt._CO, _u5 = _Nt._cE, _CO = _Nt._VR, e = _Nt._hv, _gv = _cE[0], _w5 = _cE[1], _tC, _It, _7S; _u5 < _w5;) {
            _tC = _CO[e++];
            if (_tC === _tt) break;
            _hv |= _tC << _u5;
            _u5 += 8
        }
        _It = _gv[_hv & (1 << _w5) - 1];
        _7S = _It >>> 16;
        _Nt._CO = _hv >> _7S;
        _Nt._cE = _u5 - _7S;
        _Nt._hv = e;
        return _It & 65535
    }

    function _J62(_Nt) {
        function _cE(_hv, _Nt, _u5) {
            var _cE, e, _CO, _gv;
            for (_gv = 0; _gv < _hv;) switch (_cE = _Xj1(this, _Nt), _cE) {
                case 16:
                    for (_CO = 3 + _Uh1(this, 2); _CO--;) _u5[_gv++] = e;
                    break;
                case 17:
                    for (_CO = 3 + _Uh1(this, 3); _CO--;) _u5[_gv++] = 0;
                    e = 0;
                    break;
                case 18:
                    for (_CO = 11 + _Uh1(this, 7); _CO--;) _u5[_gv++] = 0;
                    e = 0;
                    break;
                default :
                    e = _u5[_gv++] = _cE
            }
            return _u5
        }

        var _hv = _Uh1(_Nt, 5) + 257, _u5 = _Uh1(_Nt, 5) + 1, _CO = _Uh1(_Nt, 4) + 4,
            e = new (_sv ? Uint8Array : Array)(_gt1.length), _gv, _w5,
            _tC, _It;
        for (_It = 0; _It < _CO; ++_It) e[_gt1[_It]] = _Uh1(_Nt, 3);
        _gv = _uv(e);
        _w5 = new (_sv ? Uint8Array : Array)(_hv);
        _tC = new (_sv ? Uint8Array : Array)(_u5);
        _Nt._Rt(_uv(_cE.call(_Nt, _hv, _gv, _w5)), _uv(_cE.call(_Nt, _u5, _gv, _tC)))
    }

    _v5.prototype._Rt = function (_Nt, _cE) {
        var _hv = this._u5, _u5 = this._Nt;
        this._HP = _Nt;
        for (var _CO = _hv.length - 258, e, _gv, _w5, _tC; 256 !== (e = _Xj1(this, _Nt));) if (256 > e) _u5 >= _CO && (this._Nt = _u5, _hv = this.e(), _u5 = this._Nt), _hv[_u5++] = e; else {
            _gv = e - 257;
            _tC = _dt1[_gv];
            0 < _Uk1[_gv] && (_tC += _Uh1(this, _Uk1[_gv]));
            e = _Xj1(this,
                _cE);
            _w5 = _AF1[e];
            0 < _kj1[e] && (_w5 += _Uh1(this, _kj1[e]));
            _u5 >= _CO && (this._Nt = _u5, _hv = this.e(), _u5 = this._Nt);
            for (; _tC--;) _hv[_u5] = _hv[_u5++ - _w5]
        }
        for (; 8 <= this._cE;) this._cE -= 8, this._hv--;
        this._Nt = _u5
    };
    _v5.prototype._v5 = function (_Nt, _cE) {
        var _hv = this._u5, _u5 = this._Nt;
        this._HP = _Nt;
        for (var _CO = _hv.length, e, _gv, _w5, _tC; 256 !== (e = _Xj1(this, _Nt));) if (256 > e) _u5 >= _CO && (_hv = this.e(), _CO = _hv.length), _hv[_u5++] = e; else {
            _gv = e - 257;
            _tC = _dt1[_gv];
            0 < _Uk1[_gv] && (_tC += _Uh1(this, _Uk1[_gv]));
            e = _Xj1(this, _cE);
            _w5 = _AF1[e];
            0 < _kj1[e] && (_w5 += _Uh1(this,
                _kj1[e]));
            _u5 + _tC > _CO && (_hv = this.e(), _CO = _hv.length);
            for (; _tC--;) _hv[_u5] = _hv[_u5++ - _w5]
        }
        for (; 8 <= this._cE;) this._cE -= 8, this._hv--;
        this._Nt = _u5
    };
    _v5.prototype.e = function () {
        var _Nt = new (_sv ? Uint8Array : Array)(this._Nt - 32768), _cE = this._Nt - 32768, _hv, _u5, _CO = this._u5;
        if (_sv) _Nt.set(_CO.subarray(32768, _Nt.length)); else {
            _hv = 0;
            for (_u5 = _Nt.length; _hv < _u5; ++_hv) _Nt[_hv] = _CO[_hv + 32768]
        }
        this._gv.push(_Nt);
        this._It += _Nt.length;
        if (_sv) _CO.set(_CO.subarray(_cE, _cE + 32768)); else for (_hv = 0; 32768 > _hv; ++_hv) _CO[_hv] = _CO[_cE + _hv];
        this._Nt = 32768;
        return _CO
    };
    _v5.prototype._Mw = function (_Nt) {
        var _cE, _hv = this._VR.length / this._hv + 1 | 0, _u5, _CO, e, _gv = this._VR, _w5 = this._u5;
        _Nt && ("number" === typeof _Nt._lT && (_hv = _Nt._lT), "number" === typeof _Nt._sv && (_hv += _Nt._sv));
        2 > _hv ? (_u5 = (_gv.length - this._hv) / this._HP[2], e = 258 * (_u5 / 2) | 0, _CO = e < _w5.length ? _w5.length + e : _w5.length << 1) : _CO = _w5.length * _hv;
        _sv ? (_cE = new Uint8Array(_CO), _cE.set(_w5)) : _cE = _w5;
        return this._u5 = _cE
    };
    _v5.prototype._tt = function () {
        var _Nt = 0, _cE = this._u5, _hv = this._gv, _u5,
            _CO = new (_sv ? Uint8Array : Array)(this._It + (this._Nt - 32768)),
            e, _gv, _w5, _tC;
        if (0 === _hv.length) return _sv ? this._u5.subarray(32768, this._Nt) : this._u5.slice(32768, this._Nt);
        e = 0;
        for (_gv = _hv.length; e < _gv; ++e) {
            _u5 = _hv[e];
            _w5 = 0;
            for (_tC = _u5.length; _w5 < _tC; ++_w5) _CO[_Nt++] = _u5[_w5]
        }
        e = 32768;
        for (_gv = this._Nt; e < _gv; ++e) _CO[_Nt++] = _cE[e];
        this._gv = [];
        return this.buffer = _CO
    };
    _v5.prototype._uv = function () {
        var _Nt, _cE = this._Nt;
        _sv ? this._Kt ? (_Nt = new Uint8Array(_cE), _Nt.set(this._u5.subarray(0, _cE))) : _Nt = this._u5.subarray(0, _cE) : (this._u5.length > _cE && (this._u5.length = _cE), _Nt = this._u5);
        return this.buffer = _Nt
    };

    function _Zc2(_Nt, _cE) {
        var _hv, _u5;
        this._VR = _Nt;
        this._hv = 0;
        if (_cE || !(_cE = {})) _cE.index && (this._hv = _cE.index), _cE._de2 && (this._Uh1 = _cE._de2);
        _hv = _Nt[this._hv++];
        _u5 = _Nt[this._hv++];
        switch (_hv & 15) {
            case _nd2:
                this.method = _nd2;
                break;
            default :
                _wt(_aB("unsupported compression method"))
        }
        0 !== ((_hv << 8) + _u5) % 31 && _wt(_aB("invalid fcheck flag:" + ((_hv << 8) + _u5) % 31));
        _u5 & 32 && _wt(_aB("fdict flag is not supported"));
        this._7S = new _v5(_Nt, {index: this._hv, _ae2: _cE._ae2, _be2: _cE._be2, _ce2: _cE._ce2})
    }

    _Zc2.prototype._tC = function () {
        var _Nt = this._VR, _cE, _hv;
        _cE = this._7S._tC();
        this._hv = this._7S._hv;
        if (this._Uh1) {
            _hv = (_Nt[this._hv++] << 24 | _Nt[this._hv++] << 16 | _Nt[this._hv++] << 8 | _Nt[this._hv++]) >>> 0;
            var _u5 = _cE;
            if ("string" === typeof _u5) {
                var _CO = _u5.split(""), e, _gv;
                e = 0;
                for (_gv = _CO.length; e < _gv; e++) _CO[e] = (_CO[e].charCodeAt(0) & 255) >>> 0;
                _u5 = _CO
            }
            for (var _w5 = 1, _tC = 0, _It = _u5.length, _7S, _lT = 0; 0 < _It;) {
                _7S = 1024 < _It ? 1024 : _It;
                _It -= _7S;
                do _w5 += _u5[_lT++], _tC += _w5; while (--_7S);
                _w5 %= 65521;
                _tC %= 65521
            }
            _hv !== (_tC << 16 | _w5) >>> 0 && _wt(_aB("invalid adler-32 checksum"))
        }
        return _cE
    };
    var _nd2 = 8;
    _ZN("Zlib.Inflate", _Zc2);
    _ZN("Zlib.Inflate.prototype.decompress", _Zc2.prototype._tC);
    var _sd2 = {_ee2: _Mw._ZN, _fe2: _Mw._Mt}, _AK, _BK, _CK, $;
    if (Object._r42) _AK = Object._r42(_sd2); else for (_BK in _AK = [], _CK = 0, _sd2) _AK[_CK++] = _BK;
    _CK = 0;
    for ($ = _AK.length; _CK < $; ++_CK) _BK = _AK[_CK], _ZN("Zlib.Inflate.BufferType." + _BK, _sd2[_BK])
}).call(this);
var _ge2 = !1, _he2 = -1, _ie2 = -1, _je2 = 0, _ke2 = 1, _le2 = 2, _me2 = 3, _ne2 = 4, _oe2 = 5, _pe2 = 6, _qe2 = 7,
    _re2 = 8, _se2 = 9, _te2 = 10, _ue2 = 11, _ve2 = [0, 0, 0], _we2 = [0, 0, 0], _xe2 = [0, 0, 0, 0, 0,
        0], _ye2 = [0, 0, 0], _ze2 = [0, 0, 0], _Ae2 = [0, 0, 0], _Be2 = [0, 0, 0], _Ce2 = [0, 0, 0], _De2 = [0, 0, 0],
    _Ee2 = [0, 0, 0], _Fe2 = 0, _Ge2 = 0;

function _He2() {
    if (_ls) {
        if ((_ms._ns() <= 30) || (_Ie2 <= 30)) {
            return 1.0
        }
        if ((_ms._ns() / _Ie2) < 1.2) {
            return 30.0 / _ms._ns()
        } else {
            return 30.0 / _Ie2
        }
    } else {
        if ((_js._ks() <= 30) || (_Ie2 <= 30)) {
            return 1.0
        }
        if ((_js._ks() / _Ie2) < 1.2) {
            return 30.0 / _js._ks();
        } else {
            return 30.0 / _Ie2
        }
    }
}

function _Je2() {
    if (!_l51(_he2)) {
        _he2 = _cD();
        if (_ls) {
            _r51(_he2, 50)
        } else {
            _r51(_he2, 100000)
        }
    }
    if (!_l51(_ie2)) {
        _ie2 = _cD();
        if (_ls) {
            _r51(_ie2, -15000)
        } else {
            _r51(_ie2, -100000)
        }
    }
    if (!_ge2) {
        _Ke2()
    }
}

function _Ke2() {
    var _t5;
    _ge2 = true;
    for (_t5 = 0; _t5 <= 5; _t5++) {
        _xe2[_t5] = _dD()
    }
    for (_t5 = 0; _t5 <= 2; _t5++) {
        _ye2[_t5] = _dD();
        _ve2[_t5] = _dD();
        _ze2[_t5] = _dD();
        _we2[_t5] = _dD();
        _Ae2[_t5] = _dD();
        _Be2[_t5] = _dD();
        _Ce2[_t5] = _dD();
        _De2[_t5] = _dD();
        _Ee2[_t5] = _dD()
    }
    _Fe2 = _dD();
    _Ge2 = _dD()
}

function _Le2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_xe2[0], _Ne2);
        _X51(_xe2[0], 0.1, 0.1, 0.05 * _CO, 0);
        _v61(_xe2[0], 0, 360, 0, 0, false);
        _z61(_xe2[0], 0, 360, 0, 0);
        _x61(_xe2[0], 2 * _CO, 2 * _CO, -0.1 * _CO,
            0);
        _hD(_xe2[0], 0.6, 0);
        _p61(_xe2[0], _fC(10.0 / _CO), _fC(15.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _xe2[0], _2y, 20);
        _T51(_xe2[1], _Ne2);
        _X51(_xe2[1], 0.1, 0.1, 0.1 * _CO, 0);
        _v61(_xe2[1], 0, 360, 0, 0, false);
        _hD(_xe2[1], 0.8, 0);
        _p61(_xe2[1], _fC(15 / _CO), _fC(15 / _CO));
        _F51(_Me2, _Ps, _Qs, _xe2[1], _Oe2, 1)
    } else if (_9y == 2) {
        _T51(_xe2[4], _Ne2);
        _X51(_xe2[4], 0.4, 0.4, 0.2 * _CO, 0);
        _v61(_xe2[4], 0, 360, 0, 0, false);
        _z61(_xe2[4], 0, 360, 0, 0);
        _x61(_xe2[4], 7 * _CO, 7 * _CO, -0.2 * _CO, 0);
        _hD(_xe2[4], 0.6, 0);
        _p61(_xe2[4], _fC(15 / _CO), _fC(20 / _CO));
        _F51(_Me2, _Ps, _Qs,
            _xe2[4], _2y, 20);
        _T51(_xe2[5], _Ne2);
        _X51(_xe2[5], 0.4, 0.4, 0.4 * _CO, 0);
        _v61(_xe2[5], 0, 360, 0, 0, false);
        _hD(_xe2[5], 0.8, 0);
        _p61(_xe2[5], _fC(20 / _CO), _fC(20 / _CO));
        _F51(_Me2, _Ps, _Qs, _xe2[5], _Oe2, 1)
    } else {
        _T51(_xe2[2], _Ne2);
        _X51(_xe2[2], 0.3, 0.3, 0.1 * _CO, 0);
        _v61(_xe2[2], 0, 360, 0, 0, false);
        _z61(_xe2[2], 0, 360, 0, 0);
        _x61(_xe2[2], 4 * _CO, 4 * _CO, -0.18 * _CO, 0);
        _hD(_xe2[2], 0.6, 0);
        _p61(_xe2[2], _fC(12 / _CO), _fC(17 / _CO));
        _F51(_Me2, _Ps, _Qs, _xe2[2], _2y, 20);
        _T51(_xe2[3], _Ne2);
        _X51(_xe2[3], 0.3, 0.3, 0.2 * _CO, 0);
        _v61(_xe2[3], 0, 360, 0, 0,
            false);
        _hD(_xe2[3], 0.8, 0);
        _p61(_xe2[3], _fC(17 / _CO), _fC(17 / _CO));
        _F51(_Me2, _Ps, _Qs, _xe2[3], _Oe2, 1)
    }
}

function _Pe2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_ye2[0], _Qe2);
        _hD(_ye2[0], 1, 0);
        _X51(_ye2[0], 0.0, 0.0, 0.15 * _CO, 0.0);
        _p61(_ye2[0], _fC(10.0 / _CO), _fC(12.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _ye2[0], _2y, 1)
    } else if (_9y == 2) {
        _T51(_ye2[2], _Qe2);
        _hD(_ye2[2], 1, 0);
        _X51(_ye2[2], 0, 0, 0.4 * _CO, 0);
        _p61(_ye2[2], _fC(18.0 / _CO), _fC(20.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _ye2[2], _2y, 1)
    } else {
        _T51(_ye2[1], _Qe2);
        _hD(_ye2[1], 1, 0);
        _X51(_ye2[1], 0, 0, 0.25 * _CO, 0);
        _p61(_ye2[1], _fC(13.0 / _CO), _fC(15.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _ye2[1], _2y, 1)
    }
}

function _Re2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_ve2[0], _Qe2);
        _hD(_ve2[0], 1, 0);
        _X51(_ve2[0], 0, 0, 0.2 * _CO, 0);
        _Z51(_ve2[0], 1, 0.5);
        _p61(_ve2[0], _fC(10.0 / _CO), _fC(12.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _ve2[0], _2y, 1)
    } else if (_9y == 2) {
        _T51(_ve2[2], _Qe2);
        _hD(_ve2[2], 1, 0);
        _X51(_ve2[2], 0, 0, 0.6 * _CO, 0);
        _Z51(_ve2[2], 1, 0.5);
        _p61(_ve2[2], _fC(18.0 / _CO), _fC(20.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _ve2[2], _2y, 1)
    } else {
        _T51(_ve2[1], _Qe2);
        _hD(_ve2[1], 1, 0);
        _X51(_ve2[1], 0, 0, 0.35 * _CO, 0);
        _Z51(_ve2[1], 1, 0.5);
        _p61(_ve2[1], _fC(13.0 / _CO), _fC(15.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _ve2[1], _2y, 1)
    }
}

function _Se2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_ze2[1], _Te2);
        _X51(_ze2[1], 0.1, 0.2, 0, 0);
        _x61(_ze2[1], 0.5 * _CO, 3.0 * _CO, 0.0, 0.0);
        _z61(_ze2[1], 0, 360, 0, 0);
        _hD(_ze2[1], 1, 0.4);
        _p61(_ze2[1], _fC(15.0 / _CO), _fC(25.0 / _CO));
        _B61(_ze2[1], 0.10 * _CO, 270);
        _F51(_Me2, _Ps, _Qs, _ze2[1], _2y, 75)
    } else if (_9y == 2) {
        _T51(_ze2[1], _Te2);
        _X51(_ze2[1], 0.1,
            0.2, 0, 0);
        _x61(_ze2[1], 0.5 * _CO, 8.0 * _CO, 0.0, 0.0);
        _z61(_ze2[1], 0, 360, 0, 0);
        _hD(_ze2[1], 1, 0.4);
        _p61(_ze2[1], _fC(30.0 / _CO), _fC(40.0 / _CO));
        _B61(_ze2[1], 0.17 * _CO, 270);
        _F51(_Me2, _Ps, _Qs, _ze2[1], _2y, 250)
    } else {
        _T51(_ze2[1], _Te2);
        _X51(_ze2[1], 0.1, 0.2, 0, 0);
        _x61(_ze2[1], 0.5 * _CO, 6.0 * _CO, 0.0, 0.0);
        _z61(_ze2[1], 0, 360, 0, 0);
        _hD(_ze2[1], 1, 0.4);
        _p61(_ze2[1], _fC(20.0 / _CO), _fC(30.0 / _CO));
        _B61(_ze2[1], 0.15 * _CO, 270);
        _F51(_Me2, _Ps, _Qs, _ze2[1], _2y, 150)
    }
}

function _Ue2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _t5;
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_we2[0],
            _Ne2);
        _X51(_we2[0], 0.2, 0.4, -0.01 * _CO, 0);
        _hD(_we2[0], 0.4, 0);
        _p61(_we2[0], _fC(25.0 / _CO), _fC(25.0 / _CO));
        for (_t5 = 0; _t5 <= 5; _t5++) {
            _F51(_Me2, _Ps - 5 + _Ve2(10), _Qs - 5 + _Ve2(10), _we2[0], _2y, 1)
        }
    } else if (_9y === 2) {
        _T51(_we2[2], _Ne2);
        _X51(_we2[2], 0.4, 1, -0.01 * _CO, 0);
        _hD(_we2[2], 0.4, 0);
        _p61(_we2[2], _fC(50.0 / _CO), _fC(50.0 / _CO));
        for (_t5 = 0; _t5 <= 15; _t5++) {
            _F51(_Me2, _Ps - 30 + _Ve2(60), _Qs - 30 + _Ve2(60), _we2[2], _2y, 1)
        }
    } else {
        _T51(_we2[1], _Ne2);
        _X51(_we2[1], 0.4, 0.7, -0.01 * _CO, 0);
        _hD(_we2[1], 0.4, 0);
        _p61(_we2[1], _fC(30.0 / _CO), _fC(30.0 / _CO));
        for (_t5 = 0; _t5 <= 10; _t5++) {
            _F51(_Me2, _Ps - 15 + _Ve2(30), _Qs - 15 + _Ve2(30), _we2[1], _2y, 1)
        }
    }
}

function _We2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _t5;
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_Ae2[0], _Ne2);
        _X51(_Ae2[0], 0.2, 0.4, -0.01 * _CO, 0);
        _hD(_Ae2[0], 0.4, 0);
        _x61(_Ae2[0], 3.0 * _CO, 4.0 * _CO, 0, 0);
        _z61(_Ae2[0], 90, 90, 0, 0);
        _p61(_Ae2[0], _fC(25.0 / _CO), _fC(25.0 / _CO));
        for (_t5 = 0; _t5 <= 5; _t5++) {
            _F51(_Me2, _Ps - 5 + _Ve2(10), _Qs - 5 + _Ve2(10), _Ae2[0], _2y, 1)
        }
    } else if (_9y === 2) {
        _T51(_Ae2[2], _Ne2);
        _X51(_Ae2[2], 0.4, 1, -0.01 * _CO, 0);
        _hD(_Ae2[2], 0.4, 0);
        _x61(_Ae2[2],
            6.0 * _CO, 7.0 * _CO, 0, 0);
        _z61(_Ae2[2], 90, 90, 0, 0);
        _p61(_Ae2[2], _fC(50.0 / _CO), _fC(50.0 / _CO));
        for (_t5 = 0; _t5 <= 15; _t5++) {
            _F51(_Me2, _Ps - 30 + _Ve2(60), _Qs - 30 + _Ve2(60), _Ae2[2], _2y, 1)
        }
    } else {
        _T51(_Ae2[1], _Ne2);
        _X51(_Ae2[1], 0.4, 0.7, -0.01 * _CO, 0);
        _hD(_Ae2[1], 0.4, 0);
        _x61(_Ae2[1], 5.0 * _CO, 6.0 * _CO, 0, 0);
        _z61(_Ae2[1], 90, 90, 0, 0);
        _p61(_Ae2[1], _fC(30.0 / _CO), _fC(30.0 / _CO));
        for (_t5 = 0; _t5 <= 10; _t5++) {
            _F51(_Me2, _Ps - 15 + _Ve2(30), _Qs - 15 + _Ve2(30), _Ae2[1], _2y, 1)
        }
    }
}

function _Xe2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_Be2[0],
            _Ye2);
        _X51(_Be2[0], 0.4, 0.3, -0.02 * _CO, 0);
        _v61(_Be2[0], 0, 360, 0, 0, false);
        _p61(_Be2[0], _fC(20 / _CO), _fC(20 / _CO));
        _F51(_Me2, _Ps, _Qs, _Be2[0], _2y, 1)
    } else if (_9y === 2) {
        _T51(_Be2[2], _Ye2);
        _X51(_Be2[2], 1.2, 1.2, -0.04 * _CO, 0);
        _v61(_Be2[2], 0, 360, 0, 0, false);
        _p61(_Be2[2], _fC(30 / _CO), _fC(30 / _CO));
        _F51(_Me2, _Ps, _Qs, _Be2[2], _2y, 1)
    } else {
        _T51(_Be2[1], _Ye2);
        _X51(_Be2[1], 0.75, 0.75, -0.03 * _CO, 0);
        _v61(_Be2[1], 0, 360, 0, 0, false);
        _p61(_Be2[1], _fC(25 / _CO), _fC(25 / _CO));
        _F51(_Me2, _Ps, _Qs, _Be2[1], _2y, 1)
    }
}

function _Ze2(_Me2, _Ps, _Qs, _9y,
              _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_Ce2[0], __e2);
        _X51(_Ce2[0], 0.4, 0.4, -0.02 * _CO, 0);
        _v61(_Ce2[0], 0, 360, 0, 0, false);
        _p61(_Ce2[0], _fC(20 / _CO), _fC(20 / _CO));
        _F51(_Me2, _Ps, _Qs, _Ce2[0], _2y, 1)
    } else if (_9y === 2) {
        _T51(_Ce2[2], __e2);
        _X51(_Ce2[2], 1.2, 1.2, -0.04 * _CO, 0);
        _v61(_Ce2[2], 0, 360, 0, 0, false);
        _p61(_Ce2[2], _fC(30 / _CO), _fC(30 / _CO));
        _F51(_Me2, _Ps, _Qs, _Ce2[2], _2y, 1)
    } else {
        _T51(_Ce2[1], __e2);
        _X51(_Ce2[1], 0.75, 0.75, -0.03 * _CO, 0);
        _v61(_Ce2[1], 0, 360, 0, 0, false);
        _p61(_Ce2[1], _fC(25 / _CO), _fC(25 / _CO));
        _F51(_Me2, _Ps, _Qs,
            _Ce2[1], _2y, 1)
    }
}

function _0f2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_De2[0], _Te2);
        _X51(_De2[0], 0.4, 0.4, -0.02 * _CO, 0);
        _v61(_De2[0], 0, 360, 0, 0, false);
        _p61(_De2[0], _fC(20 / _CO), _fC(20 / _CO));
        _F51(_Me2, _Ps, _Qs, _De2[0], _2y, 1)
    } else if (_9y === 2) {
        _T51(_De2[2], _Te2);
        _X51(_De2[2], 1.2, 1.2, -0.04 * _CO, 0);
        _v61(_De2[2], 0, 360, 0, 0, false);
        _p61(_De2[2], _fC(30 / _CO), _fC(30 / _CO));
        _F51(_Me2, _Ps, _Qs, _De2[2], _2y, 1)
    } else {
        _T51(_De2[1], _Te2);
        _X51(_De2[1], 0.75, 0.75, -0.03 * _CO, 0);
        _v61(_De2[1], 0, 360, 0, 0, false);
        _p61(_De2[1],
            _fC(25 / _CO), _fC(25 / _CO));
        _F51(_Me2, _Ps, _Qs, _De2[1], _2y, 1)
    }
}

function _1f2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _CO = _He2();
    if (_9y === 0) {
        _T51(_Ee2[0], _Ne2);
        _X51(_Ee2[0], 2, 2, 0, 0);
        _Z51(_Ee2[0], 1, 0.5);
        _n61(_Ee2[0], 0, 0.3, 0);
        _p61(_Ee2[0], _fC(100.0 / _CO), _fC(100.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _Ee2[0], _2y, 1)
    } else if (_9y === 2) {
        _T51(_Ee2[2], _Ne2);
        _X51(_Ee2[2], 8, 8, 0, 0);
        _Z51(_Ee2[2], 1, 0.5);
        _n61(_Ee2[2], 0, 0.3, 0);
        _p61(_Ee2[2], _fC(100.0 / _CO), _fC(100.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _Ee2[2], _2y, 1)
    } else {
        _T51(_Ee2[1], _Ne2);
        _X51(_Ee2[1], 4, 4, 0, 0);
        _Z51(_Ee2[1], 1, 0.5);
        _n61(_Ee2[1], 0, 0.3, 0);
        _p61(_Ee2[1], _fC(100.0 / _CO), _fC(100.0 / _CO));
        _F51(_Me2, _Ps, _Qs, _Ee2[1], _2y, 1)
    }
}

function _2f2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _t5;
    var _CO = _He2();
    _T51(_Fe2, _3f2);
    _X51(_Fe2, 0.2, 0.3, 0.0, 0.0);
    _v61(_Fe2, 0, 0, 0, 0, true);
    _x61(_Fe2, 7 * _CO, 7 * _CO, 0, 0);
    _z61(_Fe2, 260, 260, 0, 0);
    _k61(_Fe2, 0.4);
    _p61(_Fe2, _fC(0.2 * _js._EW() / _CO), _fC(0.2 * _js._EW() / _CO));
    if (_9y === 0) {
        for (_t5 = 0; _t5 <= 1; _t5++) {
            _F51(_Me2, _Ve2(1) * 1.2 * _js._DW(), -30.0 + _Ve2(20), _Fe2, _2y, 1)
        }
    } else if (_9y == 2) {
        for (_t5 = 0; _t5 <= 8; _t5++) {
            _F51(_Me2, _Ve2(1) * 1.2 * _js._DW(), -30.0 + _Ve2(20), _Fe2, _2y, 1)
        }
    } else {
        for (_t5 = 0; _t5 <= 4; _t5++) {
            _F51(_Me2, _Ve2(1) * 1.2 * _js._DW(), -30.0 + _Ve2(20), _Fe2, _2y, 1)
        }
    }
}

function _4f2(_Me2, _Ps, _Qs, _9y, _2y) {
    var _t5;
    var _CO = _He2();
    _T51(_Ge2, _5f2);
    _X51(_Ge2, 0.1, 0.25, 0.0, 0.0);
    _k61(_Ge2, 0.6);
    _v61(_Ge2, 0, 360, 0, 0, false);
    _x61(_Ge2, 2.5 * _CO, 3.0 * _CO, 0.0, 0.0);
    _z61(_Ge2, 240, 300, 0, 20);
    _p61(_Ge2, _fC(0.5 * _js._EW() / _CO), _fC(0.5 * _js._EW() / _CO));
    if (_9y === 0) {
        for (_t5 = 0; _t5 <= 0; _t5++) {
            _F51(_Me2, _Ve2(1) * 1.2 * _js._DW() - 60, -30.0 + _Ve2(20), _Ge2, _2y,
                1)
        }
    } else if (_9y === 2) {
        for (_t5 = 0; _t5 <= 6; _t5++) {
            _F51(_Me2, _Ve2(1) * 1.2 * _js._DW() - 60, -30.0 + _Ve2(20), _Ge2, _2y, 1)
        }
    } else {
        for (_t5 = 0; _t5 <= 2; _t5++) {
            _F51(_Me2, _Ve2(1) * 1.2 * _js._DW() - 60, -30.0 + _Ve2(20), _Ge2, _2y, 1)
        }
    }
}

function _6f2(_7f2, _Ex, _Ps, _Qs, _9y, _2y) {
    var __l1;
    _Je2();
    if (_7f2) {
        __l1 = _he2
    } else {
        __l1 = _ie2
    }
    switch (_Ex) {
        case _je2:
            _Le2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _ke2:
            _Pe2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _le2:
            _Re2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _me2:
            _Se2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _ne2:
            _Ue2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _oe2:
            _We2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _pe2:
            _Xe2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _qe2:
            _Ze2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _re2:
            _0f2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _se2:
            _1f2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _te2:
            _2f2(__l1, _Ps, _Qs, _9y, _2y);
            break;
        case _ue2:
            _4f2(__l1, _Ps, _Qs, _9y, _2y);
            break
    }
}

var _8f2 = !1, _6h1 = !1, _9f2 = !0;

function _af2(_bf2) {
    if (_bf2) {
        _8f2 = true
    } else {
        _6h1 = false;
        _8f2 = false;
        if (_9f2) {
            _cf2 = false
        }
    }
}

function _df2() {
    if (window["page"] === undefined) {
        _9f2 = false;
        window.addEventListener("focus",
            function () {
                _af2(false)
            });
        window.addEventListener("blur", function () {
            _af2(true)
        });
        window.addEventListener("click", function () {
            _af2(false)
        })
    }
}

function _ef2() {
    if (_8f2) {
        _6h1 = true;
        _8f2 = false
    } else if (_6h1) {
        _6h1 = false;
        if (_9f2) {
            _cf2 = true
        }
    }
}

function _ff2() {
    var _G41, _t5, _gf2;
    var _XA = null;
    if (_js._YA) {
        _XA = _js.__A
    }
    var _gC = _js._tZ._gC;
    var _Gu = _hf2++;
    for (var _if2 = 0; _if2 < _gC.length; _if2++) {
        var _oS = _gC[_if2];
        var _AZ = _oS._AZ;
        if (!_oS._gg && (_oS._jf2 <= _Gu)) {
            if (_AZ._kf2[_lf2]) {
                var _mf2 = false;
                if (_k21(_oS._3g) || _k21(_oS._nf2)) {
                    _G41 = _oS._of2();
                    _mf2 = ((_G41.right < 0) || (_G41.left > _js._DW()) || (_G41.bottom < 0) || (_G41.top > _js._EW()));
                } else {
                    _mf2 = ((_oS.x < 0) || (_oS.x > _js._DW()) || (_oS.y < 0) || (_oS.y > _js._EW()))
                }
                if (_mf2) {
                    if (!_oS._pf2) {
                        _oS._8t(_lf2, _qf2, _oS, _oS)
                    }
                }
                _oS._pf2 = _mf2
            }
            if (_AZ._kf2[_rf2]) {
                if (_k21(_oS._3g) || _k21(_oS._nf2)) {
                    _G41 = _oS._of2();
                    if ((_G41.left < 0) || (_G41.right > _js._DW()) || (_G41.top < 0) || (_G41.bottom > _js._EW())) {
                        _oS._8t(_rf2, _qf2, _oS, _oS)
                    }
                } else {
                    if ((_oS.x < 0) || (_oS.x > _js._DW()) || (_oS.y < 0) || (_oS.y > _js._EW())) {
                        _oS._8t(_rf2, _qf2, _oS, _oS)
                    }
                }
            }
            if (_XA) {
                for (_gf2 = 0; _gf2 < _XA.length; _gf2++) {
                    var _sf2 = _XA[_gf2];
                    if (_sf2._B5) {
                        var _tf2 = _sf2._KV;
                        var _uf2 = _sf2._MV;
                        var _vf2 = _sf2._KV + _sf2._OV;
                        var _wf2 = _sf2._MV + _sf2._QV;
                        var __W = _ZW._DV(_sf2._xf2);
                        if (__W != null) {
                            _tf2 = __W._0W();
                            _uf2 = __W._2W();
                            _vf2 = __W._0W() + __W._1W();
                            _wf2 = __W._2W() + __W._3W()
                        }
                        if (_AZ._kf2[_yf2 + _gf2]) {
                            if (_k21(_oS._3g) || _k21(_oS._nf2)) {
                                _G41 = _oS._of2();
                                if ((_G41.right < _tf2) || (_G41.left > _vf2) || (_G41.bottom < _uf2) || (_G41.top > _wf2)) {
                                    _oS._8t(_yf2 + _gf2, _qf2, _oS, _oS)
                                }
                            } else {
                                if ((_oS.x < _tf2) || (_oS.x > _vf2) || (_oS.y < _uf2) || (_oS.y > _wf2)) {
                                    _oS._8t(_yf2 + _gf2, _qf2, _oS, _oS)
                                }
                            }
                        }
                        if (_AZ._kf2[_zf2 + _gf2]) {
                            if (_k21(_oS._3g) || _k21(_oS._nf2)) {
                                _G41 = _oS._of2();
                                if ((_G41.left < _tf2) || (_G41.right > _vf2) || (_G41.top < _uf2) || (_G41.bottom > _wf2)) {
                                    _oS._8t(_zf2 + _gf2, _qf2, _oS, _oS)
                                }
                            } else {
                                if ((_oS.x < _tf2) || (_oS.x > _vf2) || (_oS.y < _uf2) || (_oS.y > _wf2)) {
                                    _oS._8t(_zf2 + _gf2, _qf2, _oS, _oS)
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function _Af2() {
    for (var _N02 in _O02) {
        if (!_O02.hasOwnProperty(_N02)) continue;
        var _Bf2 = _4s._RB(_N02);
        var _Cf2 = _Bf2._LW();
        var _Gu = _hf2++;
        for (var _m02 = 0; _m02 < _Cf2.length; _m02++) {
            var _Df2 = _Cf2[_m02];
            if (!_Df2._gg && _Df2._hg && (_Df2._jf2 <= _Gu)) {
                var _Ef2 = _O02[_N02];
                for (var _Ff2 in _Ef2) {
                    if (!_Ef2.hasOwnProperty(_Ff2)) continue;
                    var _WE1 = _Ef2[_Ff2];
                    var _Gf2 = _4s._RB(_WE1);
                    var _Hf2 = _Gf2._LW();
                    for (var _n02 = 0; _n02 < _Hf2.length; _n02++) {
                        var _If2 = _Hf2[_n02];
                        if (!_If2._gg && _If2._hg && (_If2._jf2 <= _Gu)) {
                            if ((_Df2._AZ == _If2._AZ) && (_n02 < _m02)) continue;
                            if (_Df2._nZ(_If2, true)) {
                                if ((_Df2._Ia) || (_If2._Ia)) {
                                    _Df2.x = _Df2._z41;
                                    _Df2.y = _Df2._A41;
                                    _Df2._TW = true;
                                    _Df2._Jf2 = _Df2._Kf2;
                                    _If2.x = _If2._z41;
                                    _If2.y = _If2._A41;
                                    _If2._TW = true;
                                    _If2._Jf2 = _If2._Kf2
                                }
                                _Df2._8t(_v02, _If2._AZ._LZ, _Df2, _If2);
                                _If2._8t(_v02, _Df2._AZ._LZ, _If2, _Df2);
                                if ((_Df2._Ia) || (_If2._Ia)) {
                                    _Df2._802();
                                    _If2._802();
                                    _Df2._Ey(_Df2.x + _Df2._2c, _Df2.y + _Df2._3c);
                                    _If2._Ey(_If2.x + _If2._2c, _If2.y + _If2._3c);
                                    if (_Df2._nZ(_If2, true)) {
                                        _Df2.x = _Df2._z41;
                                        _Df2.y = _Df2._A41;
                                        _Df2._TW = true;
                                        _Df2._Jf2 = _Df2._Kf2;
                                        _If2.x = _If2._z41;
                                        _If2.y = _If2._A41;
                                        _If2._TW = true;
                                        _If2._Jf2 = _If2._Kf2
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function _Lf2() {
    if (_js) {
        var _XA, _tE;
        if (!_js._YA) {
            _XA = _ZA
        } else {
            _XA = _js.__A
        }
        var _Gu = _hf2++;
        for (var _uv = 0; _uv < _XA.length; _uv++) {
            _0B = _XA[_uv];
            if (_0B._B5) {
                _1B(canvas, _2B);
                if (((_pB._Mf2 - _2B.left) >= _0B._3B) && ((_pB._Mf2 - _2B.left) < _0B._4B) && ((_pB._Nf2 - _2B.top) >= _0B._5B) && ((_pB._Nf2 - _2B.top) < _0B._6B)) {
                    var _St = _Eh._3r;
                    var _Ut = _Eh._4r;
                    var _Of2 = _4s._l41();
                    for (var _HP = 0; _HP < _Of2.length; _HP++) {
                        var _LP = _Of2[_HP];
                        var _Pf2 = _LP._kf2;
                        if (_Pf2[_Qf2] || _Pf2[_Rf2] || _Pf2[_Sf2] || _Pf2[_Tf2] || _Pf2[_Uf2] || _Pf2[_Vf2] || _Pf2[_Wf2] || _Pf2[_Xf2] || _Pf2[_Yf2] || _Pf2[_Zf2] || _Pf2[__f2] || _Pf2[_0g2] || _Pf2[_1g2] || _Pf2[_2g2]) {
                            if (_LP._3g2.length > 0) {
                                var _4g2 = _LP._3g2._gC.slice(0);
                                for (var _t5 = _4g2.length - 1; _t5 >= 0; _t5--) {
                                    var _NW = _4g2[_t5];
                                    if (!_NW._gg && (_NW._jf2 <= _Gu)) {
                                        {
                                            if (_NW._TW) _NW._UW();
                                            if (_NW._uZ(_St, _Ut, true)) {
                                                var _5g2 = true;
                                                for (_tE = 0; _tE < 3; _tE++) {
                                                    if (_pB._Cz[_tE]) {
                                                        if (_Pf2[_Qf2 + _tE]) {
                                                            _NW._8t(_Qf2 + _tE, 0, _NW, _NW)
                                                        }
                                                        _5g2 = false
                                                    }
                                                }
                                                for (_tE = 0; _tE < 3; _tE++) {
                                                    if (_pB._xz[_tE] === 1) {
                                                        if (_Pf2[_Tf2 + _tE]) {
                                                            _NW._8t(_Tf2 + _tE, 0, _NW, _NW)
                                                        }
                                                        _5g2 = false
                                                    }
                                                }
                                                for (_tE = 0; _tE < 3; _tE++) {
                                                    if (_pB._Bz[_tE] === 1) {
                                                        if (_Pf2[_Wf2 + _tE]) {
                                                            _NW._8t(_Wf2 + _tE, 0, _NW, _NW)
                                                        }
                                                    }
                                                }
                                                if (_5g2) {
                                                    _NW._8t(_Zf2, 0, _NW, _NW)
                                                }
                                                if (!_NW._6g2) {
                                                    _NW._8t(__f2,
                                                        0, _NW, _NW);
                                                    _NW._6g2 = true
                                                }
                                            } else {
                                                if (_NW._6g2) {
                                                    _NW._8t(_0g2, 0, _NW, _NW);
                                                    _NW._6g2 = false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    for (_tE = 0; _tE < 3; _tE++) {
                        if (_pB._Cz[_tE]) {
                            _OW._8t(_7g2 + _tE, 0)
                        }
                    }
                    for (_tE = 0; _tE < 3; _tE++) {
                        if (_pB._xz[_tE] === 1) {
                            _OW._8t(_8g2 + _tE, 0)
                        }
                    }
                    for (_tE = 0; _tE < 3; _tE++) {
                        if (_pB._Bz[_tE] === 1) {
                            _OW._8t(_9g2 + _tE, 0)
                        }
                    }
                    if (_ag2) {
                        _OW._8t(_1g2, 0)
                    }
                    if (_bg2) {
                        _OW._8t(_2g2, 0)
                    }
                }
            }
        }
    }
}

function _cg2() {
    var _Tv, _Uv, _Rt;
    var _gC = _js._tZ._gC;
    var _Gu = _hf2++;
    for (var _oS = 0; _oS < _gC.length; _oS++) {
        var _NW = _gC[_oS];
        if (!_NW._gg && (_NW._dg2 >= 0) && (_NW._jf2 <= _Gu)) {
            if (!_NW._eg2) {
                var _gR = _hR._RB(_NW._dg2);
                if ((_gR !== null) && (_gR !== undefined)) {
                    if (_NW._fg2 > 0) {
                        _Tv = _gR._gg2(_NW._hg2);
                        _NW._hg2 += _NW._fg2;
                        _Uv = _gR._gg2(_NW._hg2);
                        for (_Rt = _Tv; _Rt < _Uv; _Rt++) {
                            _cR(_NW, _NW, _NW._dg2, _Rt)
                        }
                        if (_NW._ig2 && (_NW._hg2 > _gR._jg2())) {
                            _NW._hg2 = 0
                        }
                    } else {
                        _Tv = _gR._kg2(_NW._hg2);
                        _NW._hg2 += _NW._fg2;
                        _Uv = _gR._kg2(_NW._hg2);
                        for (_Rt = _Tv; _Rt > _Uv; _Rt--) {
                            _cR(_NW, _NW, _NW._dg2, _Rt)
                        }
                        if (_NW._ig2 && (_NW._hg2 < 0)) {
                            _NW._hg2 = _gR._jg2()
                        }
                    }
                }
            }
        }
    }
}

function _lg2() {
    var _gC = _js._tZ._gC;
    var _Gu = _hf2++;
    for (var _oS = 0; _oS < _gC.length; _oS++) {
        var _NW = _gC[_oS];
        if (!_NW._gg && (_NW._jf2 <= _Gu)) {
            for (var _hv = 0; _hv < _mg2; _hv++) {
                var event = _ng2 | (_hv + 1);
                var _LP = _NW._AZ;
                if (_LP._kf2[event]) {
                    var _og2;
                    _og2 = ~~(_NW._1h[_hv]);
                    if (_og2 >= 0) {
                        _og2--;
                        _NW._1h[_hv] = _og2
                    }
                    if (_og2 === 0) {
                        _NW._8t(_ng2 | (_hv + 1), 0, _NW, _NW)
                    }
                }
            }
        }
    }
}

function _9R(_5R, _6R) {
    switch (_5R) {
        case _pg2:
            return _DZ;
        case _qg2:
            return _pZ;
        case _rg2:
            return _qZ;
        case _sg2:
            switch (_6R) {
                case 0:
                    return _tg2;
                case 1:
                    return _ug2;
                case 2:
                    return _vg2;
                case 3:
                    return _wg2;
                case 4:
                    return _xg2;
                case 5:
                    return _yg2;
                case 6:
                    return _zg2;
                case 7:
                    return _Ag2;
                case 8:
                    return _Bg2;
                case 9:
                    return _Cg2;
                case 10:
                    return _Dg2;
                case 11:
                    return _Eg2;
                default :
                    return _tg2
            }
            break;
        case _Fg2:
            switch (_6R) {
                case _Gg2:
                    return _Hg2;
                case _Ig2:
                    return _Jg2;
                case _Kg2:
                    return _Lg2;
                default :
                    return _Jg2
            }
            break;
        case _Mg2:
            return _v02;
        case _Ng2:
            switch (_6R) {
                case _Og2:
                    return _Qf2;
                case _Pg2:
                    return _Sf2;
                case _Qg2:
                    return _Rf2;
                case _Rg2:
                    return _Zf2;
                case _Sg2:
                    return _Tf2;
                case _Tg2:
                    return _Vf2;
                case _Ug2:
                    return _Uf2;
                case _Vg2:
                    return _Wf2;
                case _Wg2:
                    return _Yf2;
                case _Xg2:
                    return _Xf2;
                case _Yg2:
                    return __f2;
                case _Zg2:
                    return _0g2;
                case __g2:
                    return 0;
                case _0h2:
                    return 0;
                case _1h2:
                    return 0;
                case _2h2:
                    return 0;
                case _3h2:
                    return 0;
                case _4h2:
                    return 0;
                case _5h2:
                    return 0;
                case _6h2:
                    return 0;
                case _7h2:
                    return 0;
                case _8h2:
                    return 0;
                case _9h2:
                    return 0;
                case _ah2:
                    return 0;
                case _bh2:
                    return 0;
                case _ch2:
                    return 0;
                case _dh2:
                    return 0;
                case _eh2:
                    return 0;
                case _fh2:
                    return 0;
                case _gh2:
                    return 0;
                case _hh2:
                    return 0;
                case _ih2:
                    return 0;
                case _jh2:
                    return 0;
                case _kh2:
                    return 0;
                case _lh2:
                    return 0;
                case _mh2:
                    return 0;
                case _nh2:
                    return _7g2;
                case _oh2:
                    return _ph2;
                case _qh2:
                    return _rh2;
                case _sh2:
                    return _8g2;
                case _th2:
                    return _uh2;
                case _vh2:
                    return _wh2;
                case _xh2:
                    return _9g2;
                case _yh2:
                    return _zh2;
                case _Ah2:
                    return _Bh2;
                case _Ch2:
                    return _1g2;
                case _Dh2:
                    return _2g2;
                default :
                    return 0
            }
            break;
        case _nR: {
            switch (_6R) {
                case _Eh2:
                    return _lf2;
                case _Fh2:
                    return _rf2;
                case _Gh2:
                    return _Hh2;
                case _Ih2:
                    return _Jh2;
                case _Kh2:
                    return _Lh2;
                case _Mh2:
                    return _Nh2;
                case _Oh2:
                    return _Ph2;
                case _Qh2:
                    return _Rh2;
                case _Sh2:
                    return _902;
                case _Th2:
                    return _Uh2;
                case _Vh2:
                    return _Wh2;
                case _Xh2:
                    return _yf2;
                case _Yh2:
                    return _Zh2;
                case __h2:
                    return _0i2;
                case _1i2:
                    return _2i2;
                case _3i2:
                    return _4i2;
                case _5i2:
                    return _6i2;
                case _7i2:
                    return _8i2;
                case _9i2:
                    return _ai2;
                case _bi2:
                    return _zf2;
                case _ci2:
                    return _di2;
                case _ei2:
                    return _fi2;
                case _gi2:
                    return _hi2;
                case _ii2:
                    return _ji2;
                case _ki2:
                    return _li2;
                case _mi2:
                    return _ni2;
                case _oi2:
                    return _pi2;
                case _mR:
                    return _qi2;
                case _ri2:
                    return _si2;
                case _ti2:
                    return _ui2;
                case _vi2:
                    return _wi2;
                case _xi2:
                    return _yi2;
                case _zi2:
                    return _Ai2;
                case _Bi2:
                    return _Ci2;
                case _Di2:
                    return _Ei2;
                case _Fi2:
                    return _Gi2;
                case _Hi2:
                    return _Ii2;
                case _Ji2:
                    return _Ki2;
                case _Li2:
                    return _Mi2;
                case _Ni2:
                    return _Oi2;
                case _Pi2:
                    return _Qi2;
                case _Ri2:
                    return _Si2;
                case _Ti2:
                    return _Ui2;
                case _Vi2:
                    return _9t;
                case _Wi2:
                    return _Xi2;
                case _Yi2:
                    return _Zi2;
                case __i2:
                    return _8Z;
                case _0j2:
                    return _1j2;
                case _2j2:
                    return _3j2;
                case _4j2:
                    return _jb1;
                default :
                    return 0
            }
            break
        }
        case _5j2:
            return _6j2;
        case _7j2:
            return _8j2;
        case _9j2:
            return _aj2;
        case _bj2:
            return _cj2;
        case _dj2:
            return _ej2;
        case _fj2:
            switch (_6R) {
                case _gj2:
                    return _hj2;
                case _ij2:
                    return _jj2;
                case _kj2:
                    return _lj2;
                case _mj2:
                    return _nj2;
                case _oj2:
                    return _pj2;
                case _qj2:
                    return _rj2;
                case _sj2:
                    return _tj2;
                case _uj2:
                    return _vj2;
                case _wj2:
                    return _xj2;
                case _yj2:
                    return _zj2;
                case _Aj2:
                    return _Bj2;
                case _Cj2:
                    return _Dj2;
                case _Ej2:
                    return _Fj2;
                case _Gj2:
                    return _Hj2;
                case _Ij2:
                    return _Jj2;
                case _Kj2:
                    return _Lj2;
                case _Mj2:
                    return _Nj2;
                case _Oj2:
                    return _Pj2;
                case _Qj2:
                    return _Rj2;
                case _Sj2:
                    return _Tj2;
                case _Uj2:
                    return _Vj2;
                case _Wj2:
                    return _Xj2;
                case _Yj2:
                    return _Zj2;
                case __j2:
                    return _0k2;
                case _1k2:
                    return _2k2;
                case _3k2:
                    return _4k2;
                default :
                    return 0;
                case _5k2:
                    return _131
            }
            break;
        default :
            return 0
    }
}

function _bR(_5R, _6R) {
    switch (_5R) {
        case _Mg2:
        case _dj2:
        case _7j2:
        case _9j2:
        case _bj2: {
            return _6R
        }
    }
    return 0
}

(function (window) {
    if (!Object.defineProperty) {
        throw("Font.js requires Object.defineProperty, which this browser does not support.")
    }
    if (!document.createElement("canvas").getContext) {
        throw("Font.js requires <canvas> and the Canvas2D API, which this browser does not support.")
    }
    (function (window) {
        try {
            var _hv = new Uint8Array(1);
            return
        } catch (e) {
        }

        function subarray(start, end) {
            return this.slice(start, end)
        }

        function _6k2(_Ga2, offset) {
            var _t5, _tt = _Ga2.length;
            if (arguments.length < 2) {
                offset = 0
            }
            for (_t5 = 0; _t5 < _tt; ++_t5, ++offset) {
                this[offset] = _Ga2[_t5] & 0xFF
            }
        }

        function _7k2(_VW) {
            var _eO, _t5;
            if (typeof _VW === "number") {
                _eO = new Array(_VW);
                for (_t5 = 0; _t5 < _VW; ++_t5) {
                    _eO[_t5] = 0
                }
            } else {
                _eO = _VW.slice(0)
            }
            _eO.subarray = subarray;
            _eO.buffer = _eO;
            _eO.byteLength = _eO.length;
            _eO.set = _6k2;
            if (typeof _VW === "object" && _VW.buffer) {
                _eO.buffer = _VW.buffer
            }
            return _eO
        }

        window.Uint8Array = _7k2;
        window.Uint32Array = _7k2;
        window.Int32Array = _7k2
    }(window));
    (function (window) {
        if (window.opera) return;
        if ("response" in XMLHttpRequest.prototype || "mozResponseArrayBuffer" in XMLHttpRequest.prototype || "mozResponse" in XMLHttpRequest.prototype || "responseArrayBuffer" in XMLHttpRequest.prototype) {
            return
        }
        var getter;
        if (window.VBArray) {
            getter = function () {
                return new Uint8Array(new VBArray(this.responseBody)._8k2())
            }
        } else {
            getter = function () {
                return this.responseBody
            }
        }
        Object.defineProperty(XMLHttpRequest.prototype, "response", {get: getter})
    }(window));
    if (!window.btoa) {
        window.btoa = function (data) {
            var _sR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            var _tR, _uR, _vR, _wR, _xR, _yR, _zR, _AR, _t5 = 0, _BR = 0, _CR = "", _DR = [];
            if (!data) {
                return data
            }
            do {
                _tR = data.charCodeAt(_t5++);
                _uR = data.charCodeAt(_t5++);
                _vR = data.charCodeAt(_t5++);
                _AR = _tR << 16 | _uR << 8 | _vR;
                _wR = _AR >> 18 & 0x3f;
                _xR = _AR >> 12 & 0x3f;
                _yR = _AR >> 6 & 0x3f;
                _zR = _AR & 0x3f;
                _DR[_BR++] = _sR.charAt(_wR) + _sR.charAt(_xR) + _sR.charAt(_yR) + _sR.charAt(_zR)
            } while (_t5 < data.length);
            _CR = _DR.join('');
            var _Kt = data.length % 3;
            return (_Kt ? _CR.slice(0, _Kt - 3) : _CR) + '==='.slice(_Kt || 3)
        }
    }

    function _tQ() {
        this._wQ = "fjs" + (999999 * Math.random() | 0)
    }

    _tQ.prototype._F91 = "";
    _tQ.prototype._9k2 = "";
    _tQ.prototype.data = "";
    _tQ.prototype._ak2 = "AAEAAAAKAIAAAwAgT1MvMgAAAAAAAACsAAAAWGNtYXAA" + "AAAAAAABBAAAACxnbHlmAAAAAAAAATAAAAAQaGVhZAAAA" + "AAAAAFAAAAAOGhoZWEAAAAAAAABeAAAACRobXR4AAAAAA" + "AAAZwAAAAIbG9jYQAAAAAAAAGkAAAACG1heHAAAAAAAAA" + "BrAAAACBuYW1lAAAAAAAAAcwAAAAgcG9zdAAAAAAAAAHs" + "AAAAEAAEAAEAZAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAABAAMAAQA" + "AAAwABAAgAAAABAAEAAEAAABB//8AAABB////wAABAAAA" + "AAABAAAAAAAAAAAAAAAAMQAAAQAAAAAAAAAAAABfDzz1A" + "AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAEAAg" + "AAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAQAAAAAAAAAAAAAAAAAIAAAAAQAAAAIAAQAB" + "AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAHgADAAEEC" + "QABAAAAAAADAAEECQACAAIAAAAAAAEAAAAAAAAAAAAAAA" + "AAAA==";
    _tQ.prototype._bk2 = {_ck2: 0, _dk2: 0, _ek2: 0, _fk2: 0, _gk2: 400};
    _tQ.prototype._hk2 = !1;
    _tQ.prototype._rQ = !1;
    _tQ.prototype.onload = function () {
    };
    _tQ.prototype.onerror = function () {
    };
    _tQ.prototype.canvas = !1;
    _tQ.prototype.context = !1;
    _tQ.prototype.validate = function (target, _OA1, _ik2, font, _jk2) {
        if (_jk2 !== !1 && _jk2 < 0) {
            this.onerror("Requested system font '" + this._wQ + "' could not be loaded (it may not be installed).");
            return
        }
        var _kk2 = document._lk2.getComputedStyle(target, '');
        var width = _kk2.getPropertyValue("width").replace("px",
            '');
        if (width > 0) {
            document._mk2.removeChild(_OA1);
            document.body.removeChild(target);
            this._rQ = !0;
            this.onload()
        } else {
            setTimeout(function () {
                font.validate(target, _OA1, _ik2, font, _jk2 === !1 ? !1 : _jk2 - 50)
            }, 50)
        }
    };
    _tQ.prototype._nk2 = function () {
        var _5N1 = this;
        var _jf = function (_rz) {
            return String.fromCharCode(_rz)
        };
        var _ok2 = function (_rz) {
            if (_rz < 256) {
                return _jf(0) + _jf(_rz)
            }
            var _ZQ = _rz >> 8;
            var __Q = _rz & 0xFF;
            return _jf(_ZQ) + _jf(__Q)
        };
        var _pk2 = function (_rz) {
            if (_rz < 0) {
                _rz = 0xFFFFFFFF + _rz + 1
            }
            return parseInt(_rz, 10).toString(16);
        };
        var _qk2 = function (_ZQ,
                             __Q) {
            return 256 * _ZQ + __Q
        };
        var _rk2 = function (_ZQ, __Q) {
            var _sk2 = _ZQ >> 7 === 1, _rz;
            _ZQ = _ZQ & 0x7F;
            _rz = 256 * _ZQ + __Q;
            if (!_sk2) {
                return _rz
            }
            return _rz - 0x8000
        };
        var _tk2 = function (_ZQ, __Q, _uk2, _vk2) {
            return 16777216 * _ZQ + 65536 * __Q + 256 * _uk2 + _vk2
        };
        var error = function (_9B) {
            _5N1.onerror(_9B)
        };
        var _wk2 = _jf(0) + _jf(1) + _jf(0) + _jf(0);
        var _xk2 = "OTTO";
        var data = this.data;
        var version = _jf(data[0]) + _jf(data[1]) + _jf(data[2]) + _jf(data[3]);
        var _yk2 = (version === _wk2);
        var _zk2 = (_yk2 ? !1 : version === _xk2);
        if (_yk2) {
            this._9k2 = "truetype";
        } else if (_zk2) {
            this._9k2 = "opentype"
        }
        else {
            error("Error: file at " + this._F91 + " cannot be interpreted as OpenType font.");
            return
        }
        var _Ak2 = _qk2(data[4], data[5]), _Bk2 = 12, _Ck2, end = _Bk2 + 16 * _Ak2, _Dk2 = {}, _sA1;
        for (_Ck2 = _Bk2; _Ck2 < end; _Ck2 += 16) {
            _sA1 = _jf(data[_Ck2]) + _jf(data[_Ck2 + 1]) + _jf(data[_Ck2 + 2]) + _jf(data[_Ck2 + 3]);
            _Dk2[_sA1] = {
                name: _sA1,
                _Ek2: _tk2(data[_Ck2 + 4], data[_Ck2 + 5], data[_Ck2 + 6], data[_Ck2 + 7]),
                offset: _tk2(data[_Ck2 + 8], data[_Ck2 + 9], data[_Ck2 + 10], data[_Ck2 + 11]),
                length: _tk2(data[_Ck2 + 12], data[_Ck2 + 13], data[_Ck2 + 14], data[_Ck2 + 15])
            }
        }
        var _Fk2 = function (_sA1) {
            if (!_Dk2[_sA1]) {
                error("Error: font is missing the required OpenType '" + _sA1 + "' table.");
                return !1
            }
            return _sA1
        };
        _sA1 = _Fk2("head");
        if (_sA1 === !1) {
            return
        }
        _Ck2 = _Dk2[_sA1].offset;
        _Dk2[_sA1].version = "" + data[_Ck2] + data[_Ck2 + 1] + data[_Ck2 + 2] + data[_Ck2 + 3];
        var _Gk2 = _qk2(data[_Ck2 + 18], data[_Ck2 + 19]);
        this._bk2._ck2 = _Gk2;
        _sA1 = _Fk2("hhea");
        if (_sA1 === !1) {
            return
        }
        _Ck2 = _Dk2[_sA1].offset;
        _Dk2[_sA1].version = "" + data[_Ck2] + data[_Ck2 + 1] + data[_Ck2 + 2] + data[_Ck2 + 3];
        this._bk2._ek2 = _rk2(data[_Ck2 + 4], data[_Ck2 + 5]) / _Gk2;
        this._bk2._fk2 = _rk2(data[_Ck2 + 6],
            data[_Ck2 + 7]) / _Gk2;
        this._bk2._dk2 = _rk2(data[_Ck2 + 8], data[_Ck2 + 9]) / _Gk2;
        _sA1 = _Fk2("OS/2");
        if (_sA1 === !1) {
            return
        }
        _Ck2 = _Dk2[_sA1].offset;
        _Dk2[_sA1].version = "" + data[_Ck2] + data[_Ck2 + 1];
        this._bk2._gk2 = _qk2(data[_Ck2 + 4], data[_Ck2 + 5]);
        _sA1 = _Fk2("cmap");
        if (_sA1 === !1) {
            return
        }
        _Ck2 = _Dk2[_sA1].offset;
        _Dk2[_sA1].version = "" + data[_Ck2] + data[_Ck2 + 1];
        _Ak2 = _qk2(data[_Ck2 + 2], data[_Ck2 + 3]);
        var _Hk2, _Ik2, _Jk2, _Kk2, offset, _Lk2 = !1;
        for (_Hk2 = 0; _Hk2 < _Ak2; _Hk2++) {
            _Ik2 = _Ck2 + 4 + _Hk2 * 8;
            _Jk2 = _qk2(data[_Ik2], data[_Ik2 + 1]);
            _Kk2 = _qk2(data[_Ik2 + 2],
                data[_Ik2 + 3]);
            offset = _tk2(data[_Ik2 + 4], data[_Ik2 + 5], data[_Ik2 + 6], data[_Ik2 + 7]);
            if (_Jk2 === 3 && _Kk2 === 1) {
                _Lk2 = offset
            }
        }
        var _Mk2 = "A";
        this._Nk2 = [];
        if (_Lk2 !== !1) {
            _Ck2 += _Lk2;
            version = _qk2(data[_Ck2], data[_Ck2 + 1]);
            if (version === 4) {
                var _Ok2 = _qk2(data[_Ck2 + 6], data[_Ck2 + 7]) / 2;
                var _Pk2 = function (_jf) {
                    return [0x0009, 0x000A, 0x000B, 0x000C, 0x000D, 0x0020, 0x0085, 0x00A0, 0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x2028, 0x2029, 0x202F, 0x205F, 0x3000].indexOf(_jf) === -1
                };
                var _t5 = _Ck2 + 14,
                    e = _Ck2 + 14 + 2 * _Ok2, _Qk2 = !1;
                for (; _t5 < e; _t5 += 2) {
                    _Qk2 = _qk2(data[_t5], data[_t5 + 1]);
                    if (_Pk2(_Qk2)) {
                        break
                    }
                    _Qk2 = !1
                }
                var _ZN = e + 2;
                for (; _t5 < e; _t5 += 2, _ZN += 2) {
                    var _Rk2 = _qk2(data[_t5], data[_t5 + 1]);
                    var _Sk2 = _qk2(data[_ZN], data[_ZN + 1]);
                    if (_Rk2 != 0xffff) {
                        for (var _tt = _Sk2; _tt <= _Rk2; ++_tt) {
                            this._Nk2.push(_tt)
                        }
                    }
                }
                if (_Qk2 !== !1) {
                    _Mk2 = String.fromCharCode(_Qk2);
                    var _x32 = -(_Qk2 - 1) + 65536;
                    var _Tk2 = btoa(_jf(0) + _ok2(_Qk2) + _ok2(0xFFFF) + _ok2(0) + _ok2(_Qk2) + _ok2(0xFFFF) + _ok2(_x32) + _ok2(1));
                    this._ak2 = this._ak2.substring(0, 380) + _Tk2 + this._ak2.substring(380 + _Tk2.length)
                }
            }
        }
        this._Uk2(_Mk2, !1)
    };
    _tQ.prototype._Uk2 = function (_Mk2, _jk2) {
        var _Vk2 = this._wQ + " testfont";
        var _Wk2 = document.createElement("style");
        _Wk2.setAttribute("type", "text/css");
        _Wk2.innerHTML = "@font-face {\n" + "  font-family: '" + _Vk2 + "';\n" + "  src: url('data:application/x-font-ttf;base64," + this._ak2 + "')\n" + "       format('truetype');}";
        document._mk2.appendChild(_Wk2);
        var _Xk2 = !1;
        if (!this._hk2) {
            _Xk2 = this._Yk2();
            document._mk2.appendChild(_Xk2)
        }
        var _Zk2 = document.createElement("p");
        _Zk2.style.cssText = "position: absolute; top: 0; left: 0; opacity: 0;";
        _Zk2.style._wQ = "'" + this._wQ + "', '" + _Vk2 + "'";
        _Zk2.innerHTML = _Mk2 + _Mk2 + _Mk2 + _Mk2 + _Mk2 + _Mk2 + _Mk2 + _Mk2 + _Mk2 + _Mk2;
        document.body.appendChild(_Zk2);
        if (!document._lk2.getComputedStyle) {
            this.onload();
            error("Error: document.defaultView.getComputedStyle is not supported by this browser.\n" + "Consequently, Font.onload() cannot be trusted.")
        } else {
            var __k2 = this._hk2 ? 1000 : this._bk2._ck2;
            var canvas = document.createElement("canvas");
            canvas.width = __k2;
            canvas.height = __k2;
            this.canvas = canvas;
            var context = canvas.getContext("2d");
            context.font = "1em '" + this._wQ + "'";
            context.fillStyle = "white";
            context.fillRect(-1, -1, __k2 + 2, __k2 + 2);
            context.fillStyle = "black";
            context.fillText("test text", 50, __k2 / 2);
            this.context = context;
            var _l62 = this;
            var _0l2 = function () {
                _l62.validate(_Zk2, _Wk2, _Xk2, _l62, _jk2)
            };
            setTimeout(_0l2, 50)
        }
    };
    _tQ.prototype._1l2 = function () {
        this._hk2 = !0;
        this._bk2 = !1;
        this._Uk2("A", 1000)
    };
    _tQ.prototype._2l2 = function () {
        var font = this;
        if (this._F91.indexOf(".") === -1) {
            setTimeout(function () {
                font._1l2()
            }, 10);
            return
        }
        var _3l2 = new XMLHttpRequest();
        _3l2.open('GET', font._F91, !0);
        _3l2.responseType = "arraybuffer";
        _3l2.onload = function (_4l2) {
            var _5l2 = _3l2.response;
            if (_5l2) {
                font.data = new Uint8Array(_5l2);
                font._nk2()
            } else {
                font.onerror("Error downloading font resource from " + font._F91)
            }
        };
        _3l2.send(null)
    };
    _tQ.prototype._6l2 = !1;
    _tQ.prototype._Yk2 = function () {
        if (this._6l2) {
            return this._6l2
        }
        this._6l2 = document.createElement("style");
        this._6l2.type = "text/css";
        var _7l2 = "@font-face {\n";
        _7l2 += "  font-family: '" + this._wQ + "';\n";
        _7l2 += "  src: url('" + this._F91 + "') format('" + this._9k2 + "');\n";
        _7l2 += "}";
        this._6l2.innerHTML = _7l2;
        return this._6l2
    };
    _tQ.prototype.measureText = function (_8l2, _9l2) {
        if (!this._rQ) {
            error("measureText() was called while the font was not yet loaded");
            return !1
        }
        this.context.font = _9l2 + "px '" + this._wQ + "'";
        var _bk2 = this.context.measureText(_8l2);
        _bk2.fontsize = _9l2;
        _bk2._ek2 = 0;
        _bk2._fk2 = 0;
        _bk2._y82 = {_al2: 0, _bl2: _bk2.width, _cl2: 0, _dl2: 0};
        _bk2.height = 0;
        var _T62 = [], _el2 = _bk2.width / this._bk2._ck2;
        if (_el2 <= 1) {
            _T62.push(_8l2)
        } else {
            _T62.push(_8l2)
        }
        var _fl2 = _T62.length, _t5;
        for (_t5 = 0;
             _t5 < _fl2; _t5++) {
            this._gl2(_T62[_t5], _9l2, _bk2)
        }
        return _bk2
    };
    _tQ.prototype._gl2 = function (_hl2, _9l2, _bk2) {
        var _il2 = function (_ry, _jl2) {
            return document._lk2.getComputedStyle(_ry, null).getPropertyValue(_jl2)
        };
        var _t5, _Rt, _kl2, _MN, _lE1;
        var _ll2 = document.createElement("div");
        _ll2.style.position = "absolute";
        _ll2.style.opacity = 0;
        _ll2.style.font = _9l2 + "px '" + this._wQ + "'";
        var _cc2 = 10;
        _ll2.innerHTML = _hl2;
        for (_t5 = 1; _t5 < _cc2; _t5++) {
            _ll2.innerHTML += "<br/>" + _hl2;
        }
        document.body.appendChild(_ll2);
        _bk2._dk2 = 1.2 * _9l2;
        var _ml2 = _il2(_ll2,
            "height");
        _ml2 = _ml2.replace("px", "");
        if (_ml2 >= _9l2 * _cc2) {
            _bk2._dk2 = (_ml2 / _cc2) | 0
        }
        document.body.removeChild(_ll2);
        if (/^_nl2*$/.test(_hl2)) {
            return _bk2
        }
        var canvas = this.canvas, _Vv = this.context, __k2 = this._hk2 ? 1000 : this._bk2._ck2, _v5 = __k2, _w5 = __k2,
            _ol2 = __k2 / 2, padding = 50, _pl2 = (__k2 - _bk2.width) / 2;
        if (_pl2 !== (_pl2 | 0)) {
            _pl2 = _pl2 | 0
        }
        _Vv.fillStyle = "white";
        _Vv.fillRect(-padding, -padding, _v5 + 2 * padding, _w5 + 2 * padding);
        _Vv.fillStyle = "black";
        _Vv.fillText(_hl2, _pl2, _ol2);
        var _ql2 = (_bk2.width + padding) | 0, _rl2 = 4 * _9l2, _sl2 = _pl2 - padding / 2,
            _tl2 = _ol2 - _rl2 / 2, _AQ1 = _Vv.getImageData(_sl2, _tl2, _ql2, _rl2).data;
        _t5 = 0;
        _Rt = 0;
        _kl2 = _ql2 * 4;
        _MN = _AQ1.length;
        _lE1 = _rl2 / 2;
        while (++_t5 < _MN && _AQ1[_t5] === 255) {
        }
        var _ek2 = (_t5 / _kl2) | 0;
        _t5 = _MN - 1;
        while (--_t5 > 0 && _AQ1[_t5] === 255) {
        }
        var _fk2 = (_t5 / _kl2) | 0;
        for (_t5 = 0, _Rt = 0; _Rt < _ql2 && _AQ1[_t5] === 255;) {
            _t5 += _kl2;
            if (_t5 >= _MN) {
                _Rt++;
                _t5 = (_t5 - _MN) + 4
            }
        }
        var _al2 = _Rt;
        var _vh1 = 1;
        for (_t5 = _MN - 3, _Rt = 0; _Rt < _ql2 && _AQ1[_t5] === 255;) {
            _t5 -= _kl2;
            if (_t5 < 0) {
                _Rt++;
                _t5 = (_MN - 3) - (_vh1++) * 4
            }
        }
        var _bl2 = _ql2 - _Rt;
        _bk2._ek2 = (_lE1 - _ek2);
        _bk2._fk2 = (_fk2 - _lE1);
        _bk2._y82 = {_al2: _al2 - (padding / 2), _bl2: _bl2 - (padding / 2), _cl2: -_bk2._fk2, _dl2: _bk2._ek2};
        _bk2.height = 1 + (_fk2 - _ek2);
        return _bk2
    };
    Object.defineProperty(_tQ.prototype, "src", {
        set: function (_F91) {
            this._F91 = _F91;
            this._2l2()
        }
    });
    window._tQ = _tQ
}(window));

function _ul2() {
}

var _Pt = 3.14159265, _vl2 = !0, _wl2 = !1, _Za1 = !0, _bf1 = 0, _xl2 = -1, _yl2 = 0, _zl2 = 1, _Al2 = 2, _UX = 0,
    _Bl2 = -1, _Cl2 = 0, _VX = 1, _Dl2 = 2, _El2 = 3, _Fl2 = 4, _Gl2 = 5, _Hl2 = 6, _Il2 = 7, _Jl2 = 8, _Kl2 = 9,
    _Ll2 = 10, _Ml2 = 11, _Y91 = 0, _Nl2 = -1, _Ol2 = 0, _Pl2 = 0, _Ql2 = 1, _Rl2 = 2, _Z91 = 3, _Sl2 = 4, _Tl2 = 5,
    _Ul2 = 6,
    _Vl2 = 7, _Wl2 = 8, _Xl2 = 9, _ef1 = 0, _Yl2 = -1, _881 = -100, _Zl2 = -200, __l2 = -300, _0m2 = -400, _R71 = -1,
    _1m2 = -2, _L31 = -3, _lZ = -4, _2m2 = -5, _3m2 = -7, _4m2 = -6, _DZ = 0x000, _pZ = 0x100, _ng2 = 0x200,
    _5m2 = 0x300, _v02 = 0x400, _8j2 = 0x500, _6m2 = 0x600, _qf2 = 0x700, _6j2 = 0x800, _aj2 = 0x900, _cj2 = 0xA00,
    _ej2 = 0xB00, _qZ = 0xC00, _7m2 = 0xD00, _131 = 0xE00, _Jg2 = _5m2 | 1, _Hg2 = _5m2 | 2, _Lg2 = _5m2 | 3,
    _lf2 = _qf2 | 1, _rf2 = _qf2 | 2, _Hh2 = _qf2 | 3, _Jh2 = _qf2 | 4, _Lh2 = _qf2 | 5, _Nh2 = _qf2 | 6,
    _Ph2 = _qf2 | 7, _Rh2 = _qf2 | 8, _902 = _qf2 | 9, _Uh2 = _qf2 | 10, _Wh2 = _qf2 | 11, _qi2 = _qf2 | 14,
    _si2 = _qf2 | 15, _ui2 = _qf2 | 16,
    _wi2 = _qf2 | 17, _yi2 = _qf2 | 18, _Ai2 = _qf2 | 19, _Ci2 = _qf2 | 20, _Ei2 = _qf2 | 21, _Gi2 = _qf2 | 22,
    _Ii2 = _qf2 | 23, _Ki2 = _qf2 | 24, _Mi2 = _qf2 | 25, _Oi2 = _qf2 | 26, _Qi2 = _qf2 | 27, _Si2 = _qf2 | 28,
    _Ui2 = _qf2 | 29, _yf2 = _qf2 | 30, _Zh2 = _qf2 | 31, _0i2 = _qf2 | 32, _2i2 = _qf2 | 33, _4i2 = _qf2 | 34,
    _6i2 = _qf2 | 35, _8i2 = _qf2 | 36, _ai2 = _qf2 | 37, _zf2 = _qf2 | 40, _di2 = _qf2 | 41, _fi2 = _qf2 | 42,
    _hi2 = _qf2 | 43, _ji2 = _qf2 | 44, _li2 = _qf2 | 45, _ni2 = _qf2 | 46, _pi2 = _qf2 | 47, _9t = _qf2 | 58,
    _6s = _qf2 | 59, _Xi2 = _qf2 | 60, _Zi2 = _qf2 | 61, _8m2 = _qf2 | 62, _9m2 = _qf2 | 63, _am2 = _qf2 | 68,
    _bm2 = _6j2 | 64, _cm2 = _6j2 | 65, _dm2 = _6j2 | 72,
    _em2 = _6j2 | 73, _fm2 = _6j2 | 74, _gm2 = _6j2 | 75, _hm2 = _6j2 | 76, _im2 = _6j2 | 77, _8Z = _qf2 | 66,
    _1j2 = _qf2 | 70, _3j2 = _qf2 | 71, _jb1 = _qf2 | 72, _jm2 = _qf2 | 73, _km2 = _qf2 | 74, _Qf2 = _6m2 | 1,
    _Sf2 = _6m2 | 2, _Rf2 = _6m2 | 3, _Tf2 = _6m2 | 4, _Vf2 = _6m2 | 5, _Uf2 = _6m2 | 6, _Wf2 = _6m2 | 7,
    _Yf2 = _6m2 | 8, _Xf2 = _6m2 | 9, _7g2 = _6m2 | 10, _ph2 = _6m2 | 11, _rh2 = _6m2 | 12, _8g2 = _6m2 | 13,
    _uh2 = _6m2 | 14, _wh2 = _6m2 | 15, _9g2 = _6m2 | 16, _zh2 = _6m2 | 17, _Bh2 = _6m2 | 18, _Zf2 = _6m2 | 19,
    __f2 = _6m2 | 20, _0g2 = _6m2 | 21, _1g2 = _6m2 | 22, _2g2 = _6m2 | 23, _tg2 = _ng2 | 1, _ug2 = _ng2 | 2,
    _vg2 = _ng2 | 3, _wg2 = _ng2 | 4, _xg2 = _ng2 | 5, _yg2 = _ng2 | 6,
    _zg2 = _ng2 | 7, _Ag2 = _ng2 | 8, _Bg2 = _ng2 | 9, _Cg2 = _ng2 | 10, _Dg2 = _ng2 | 11, _Eg2 = _ng2 | 12,
    _hj2 = _7m2 | 1, _jj2 = _7m2 | 2, _lj2 = _7m2 | 3, _nj2 = _7m2 | 4, _pj2 = _7m2 | 5, _rj2 = _7m2 | 6,
    _tj2 = _7m2 | 7, _vj2 = _7m2 | 8, _xj2 = _7m2 | 9, _zj2 = _7m2 | 10, _Bj2 = _7m2 | 11, _Dj2 = _7m2 | 12,
    _Fj2 = _7m2 | 13, _Hj2 = _7m2 | 65, _Jj2 = _7m2 | 66, _Lj2 = _7m2 | 67, _Nj2 = _7m2 | 68, _Pj2 = _7m2 | 69,
    _Rj2 = _7m2 | 70, _Tj2 = _7m2 | 71, _Vj2 = _7m2 | 72, _Xj2 = _7m2 | 73, _Zj2 = _7m2 | 74, _0k2 = _7m2 | 75,
    _2k2 = _7m2 | 76, _4k2 = _7m2 | 77, _pg2 = 0, _qg2 = 1, _sg2 = 2, _Fg2 = 3, _Mg2 = 4, _7j2 = 5, _Ng2 = 6, _nR = 7,
    _5j2 = 8, _9j2 = 9, _bj2 = 10, _dj2 = 11, _rg2 = 12, _fj2 = 13,
    _5k2 = 14, _Og2 = 0, _Pg2 = 1, _Qg2 = 2, _Rg2 = 3, _Sg2 = 4, _Tg2 = 5, _Ug2 = 6, _Vg2 = 7, _Wg2 = 8, _Xg2 = 9,
    _Yg2 = 10, _Zg2 = 11, __g2 = 16, _0h2 = 17, _1h2 = 18, _2h2 = 19, _3h2 = 21, _4h2 = 22, _5h2 = 23, _6h2 = 24,
    _7h2 = 25, _8h2 = 26, _9h2 = 27, _ah2 = 28, _bh2 = 31, _ch2 = 32, _dh2 = 33, _eh2 = 34, _fh2 = 36, _gh2 = 37,
    _hh2 = 38, _ih2 = 39, _jh2 = 40, _kh2 = 41, _lh2 = 42, _mh2 = 43, _nh2 = 50, _oh2 = 51, _qh2 = 52, _sh2 = 53,
    _th2 = 54, _vh2 = 55, _xh2 = 56, _yh2 = 57, _Ah2 = 58, _Ch2 = 60, _Dh2 = 61, _gj2 = 0, _ij2 = 1, _kj2 = 2, _mj2 = 3,
    _oj2 = 4, _qj2 = 5, _sj2 = 6, _uj2 = 7, _wj2 = 8, _yj2 = 9, _Aj2 = 10, _Cj2 = 11, _Ej2 = 12, _Gj2 = 64, _Ij2 = 65,
    _Kj2 = 66, _Mj2 = 67,
    _Oj2 = 68, _Qj2 = 69, _Sj2 = 70, _Uj2 = 71, _Wj2 = 72, _Yj2 = 73, __j2 = 74, _1k2 = 75, _3k2 = 76, _Ig2 = 0,
    _Gg2 = 1, _Kg2 = 2, _Eh2 = 0, _Fh2 = 1, _Gh2 = 2, _Ih2 = 3, _Kh2 = 4, _Mh2 = 5, _Oh2 = 6, _Qh2 = 7, _Sh2 = 8,
    _Th2 = 9, _Vh2 = 30, _Xh2 = 40, _Yh2 = 41, __h2 = 42, _1i2 = 43, _3i2 = 44, _5i2 = 45, _7i2 = 46, _9i2 = 47,
    _bi2 = 50, _ci2 = 51, _ei2 = 52, _gi2 = 53, _ii2 = 54, _ki2 = 55, _mi2 = 56, _oi2 = 57, _Vi2 = 58, _lm2 = 59,
    _mR = 10, _ri2 = 11, _ti2 = 12, _vi2 = 13, _xi2 = 14, _zi2 = 15, _Bi2 = 16, _Di2 = 17, _Fi2 = 18, _Hi2 = 19,
    _Ji2 = 20, _Li2 = 21, _Ni2 = 22, _Pi2 = 23, _Ri2 = 24, _Ti2 = 25, _Wi2 = 60, _Yi2 = 61, _mm2 = 64, _nm2 = 65,
    __i2 = 66, _0j2 = 70, _2j2 = 71, _4j2 = 72,
    _om2 = _aj2 | 0, _pm2 = _aj2 | 1, _qm2 = _aj2 | 1, _rm2 = _aj2 | 8, _sm2 = _aj2 | 9, _tm2 = _aj2 | 13,
    _um2 = _aj2 | 16, _vm2 = _aj2 | 17, _wm2 = _aj2 | 18, _xm2 = _aj2 | 19, _ym2 = _aj2 | 27, _zm2 = _aj2 | 32,
    _Am2 = _aj2 | 33, _Bm2 = _aj2 | 34, _Cm2 = _aj2 | 35, _Dm2 = _aj2 | 36, _Em2 = _aj2 | 37, _Fm2 = _aj2 | 38,
    _Gm2 = _aj2 | 39, _Hm2 = _aj2 | 40, _Im2 = _aj2 | 45, _Jm2 = _aj2 | 46, _Km2 = _aj2 | 48, _Lm2 = _aj2 | 49,
    _Mm2 = _aj2 | 50, _Nm2 = _aj2 | 51, _Om2 = _aj2 | 52, _Pm2 = _aj2 | 53, _Qm2 = _aj2 | 54, _Rm2 = _aj2 | 55,
    _Sm2 = _aj2 | 56, _Tm2 = _aj2 | 57, _Um2 = _aj2 | 65, _Vm2 = _aj2 | 66, _Wm2 = _aj2 | 67, _Xm2 = _aj2 | 68,
    _Ym2 = _aj2 | 69, _Zm2 = _aj2 | 70, __m2 = _aj2 | 71,
    _0n2 = _aj2 | 72, _1n2 = _aj2 | 73, _2n2 = _aj2 | 74, _3n2 = _aj2 | 75, _4n2 = _aj2 | 76, _5n2 = _aj2 | 77,
    _6n2 = _aj2 | 78, _7n2 = _aj2 | 79, _8n2 = _aj2 | 80, _9n2 = _aj2 | 81, _an2 = _aj2 | 82, _bn2 = _aj2 | 83,
    _cn2 = _aj2 | 84, _dn2 = _aj2 | 85, _en2 = _aj2 | 86, _fn2 = _aj2 | 87, _gn2 = _aj2 | 88, _hn2 = _aj2 | 89,
    _in2 = _aj2 | 90, _jn2 = _aj2 | 112, _kn2 = _aj2 | 113, _ln2 = _aj2 | 114, _mn2 = _aj2 | 115, _nn2 = _aj2 | 116,
    _on2 = _aj2 | 117, _pn2 = _aj2 | 118, _qn2 = _aj2 | 119, _rn2 = _aj2 | 120, _sn2 = _aj2 | 121, _tn2 = _aj2 | 122,
    _un2 = _aj2 | 123, _vn2 = _aj2 | 145, _wn2 = _aj2 | 186, _xn2 = _aj2 | 187, _yn2 = _aj2 | 188, _zn2 = _aj2 | 189,
    _An2 = _aj2 | 190, _Bn2 = _aj2 | 191,
    _Cn2 = _aj2 | 192, _Dn2 = _aj2 | 219, _En2 = _aj2 | 220, _Fn2 = _aj2 | 221, _Gn2 = _aj2 | 222, _Hn2 = _aj2 | 223,
    _In2 = _aj2 | 144, _Jn2 = _aj2 | 96, _Kn2 = _aj2 | 97, _Ln2 = _aj2 | 98, _Mn2 = _aj2 | 99, _Nn2 = _aj2 | 100,
    _On2 = _aj2 | 101, _Pn2 = _aj2 | 102, _Qn2 = _aj2 | 103, _Rn2 = _aj2 | 104, _Sn2 = _aj2 | 105, _Tn2 = _aj2 | 106,
    _Un2 = _aj2 | 107, _Vn2 = _aj2 | 109, _Wn2 = _aj2 | 110, _Xn2 = _aj2 | 111, _Yn2 = _8j2 | 0, _Zn2 = _8j2 | 1,
    __n2 = _8j2 | 1, _0o2 = _8j2 | 8, _1o2 = _8j2 | 9, _2o2 = _8j2 | 13, _3o2 = _8j2 | 16, _4o2 = _8j2 | 17,
    _5o2 = _8j2 | 18, _6o2 = _8j2 | 19, _7o2 = _8j2 | 27, _8o2 = _8j2 | 32, _9o2 = _8j2 | 33, _ao2 = _8j2 | 34,
    _bo2 = _8j2 | 35, _co2 = _8j2 | 36,
    _do2 = _8j2 | 37, _eo2 = _8j2 | 38, _fo2 = _8j2 | 39, _go2 = _8j2 | 40, _ho2 = _8j2 | 45, _io2 = _8j2 | 46,
    _jo2 = _8j2 | 48, _ko2 = _8j2 | 49, _lo2 = _8j2 | 50, _mo2 = _8j2 | 51, _no2 = _8j2 | 52, _oo2 = _8j2 | 53,
    _po2 = _8j2 | 54, _qo2 = _8j2 | 55, _ro2 = _8j2 | 56, _so2 = _8j2 | 57, _to2 = _8j2 | 65, _uo2 = _8j2 | 66,
    _vo2 = _8j2 | 67, _wo2 = _8j2 | 68, _xo2 = _8j2 | 69, _yo2 = _8j2 | 70, _zo2 = _8j2 | 71, _Ao2 = _8j2 | 72,
    _Bo2 = _8j2 | 73, _Co2 = _8j2 | 74, _Do2 = _8j2 | 75, _Eo2 = _8j2 | 76, _Fo2 = _8j2 | 77, _Go2 = _8j2 | 78,
    _Ho2 = _8j2 | 79, _Io2 = _8j2 | 80, _Jo2 = _8j2 | 81, _Ko2 = _8j2 | 82, _Lo2 = _8j2 | 83, _Mo2 = _8j2 | 84,
    _No2 = _8j2 | 85, _Oo2 = _8j2 | 86, _Po2 = _8j2 | 87,
    _Qo2 = _8j2 | 88, _Ro2 = _8j2 | 89, _So2 = _8j2 | 90, _To2 = _8j2 | 112, _Uo2 = _8j2 | 113, _Vo2 = _8j2 | 114,
    _Wo2 = _8j2 | 115, _Xo2 = _8j2 | 116, _Yo2 = _8j2 | 117, _Zo2 = _8j2 | 118, __o2 = _8j2 | 119, _0p2 = _8j2 | 120,
    _1p2 = _8j2 | 121, _2p2 = _8j2 | 122, _3p2 = _8j2 | 123, _4p2 = _8j2 | 145, _5p2 = _8j2 | 186, _6p2 = _8j2 | 187,
    _7p2 = _8j2 | 188, _8p2 = _8j2 | 189, _9p2 = _8j2 | 190, _ap2 = _8j2 | 191, _bp2 = _8j2 | 192, _cp2 = _8j2 | 219,
    _dp2 = _8j2 | 220, _ep2 = _8j2 | 221, _fp2 = _8j2 | 222, _gp2 = _8j2 | 223, _hp2 = _8j2 | 144, _ip2 = _8j2 | 96,
    _jp2 = _8j2 | 97, _kp2 = _8j2 | 98, _lp2 = _8j2 | 99, _mp2 = _8j2 | 100, _np2 = _8j2 | 101, _op2 = _8j2 | 102,
    _pp2 = _8j2 | 103,
    _qp2 = _8j2 | 104, _rp2 = _8j2 | 105, _sp2 = _8j2 | 106, _tp2 = _8j2 | 107, _up2 = _8j2 | 109, _vp2 = _8j2 | 110,
    _wp2 = _8j2 | 111, _xp2 = _cj2 | 0, _yp2 = _cj2 | 1, _zp2 = _cj2 | 1, _Ap2 = _cj2 | 8, _Bp2 = _cj2 | 9,
    _Cp2 = _cj2 | 13, _Dp2 = _cj2 | 16, _Ep2 = _cj2 | 17, _Fp2 = _cj2 | 18, _Gp2 = _cj2 | 19, _Hp2 = _cj2 | 27,
    _Ip2 = _cj2 | 32, _Jp2 = _cj2 | 33, _Kp2 = _cj2 | 34, _Lp2 = _cj2 | 35, _Mp2 = _cj2 | 36, _Np2 = _cj2 | 37,
    _Op2 = _cj2 | 38, _Pp2 = _cj2 | 39, _Qp2 = _cj2 | 40, _Rp2 = _cj2 | 45, _Sp2 = _cj2 | 46, _Tp2 = _cj2 | 48,
    _Up2 = _cj2 | 49, _Vp2 = _cj2 | 50, _Wp2 = _cj2 | 51, _Xp2 = _cj2 | 52, _Yp2 = _cj2 | 53, _Zp2 = _cj2 | 54,
    __p2 = _cj2 | 55, _0q2 = _cj2 | 56, _1q2 = _cj2 | 57,
    _2q2 = _cj2 | 65, _3q2 = _cj2 | 66, _4q2 = _cj2 | 67, _5q2 = _cj2 | 68, _6q2 = _cj2 | 69, _7q2 = _cj2 | 70,
    _8q2 = _cj2 | 71, _9q2 = _cj2 | 72, _aq2 = _cj2 | 73, _bq2 = _cj2 | 74, _cq2 = _cj2 | 75, _dq2 = _cj2 | 76,
    _eq2 = _cj2 | 77, _fq2 = _cj2 | 78, _gq2 = _cj2 | 79, _hq2 = _cj2 | 80, _iq2 = _cj2 | 81, _jq2 = _cj2 | 82,
    _kq2 = _cj2 | 83, _lq2 = _cj2 | 84, _mq2 = _cj2 | 85, _nq2 = _cj2 | 86, _oq2 = _cj2 | 87, _pq2 = _cj2 | 88,
    _qq2 = _cj2 | 89, _rq2 = _cj2 | 90, _sq2 = _cj2 | 112, _tq2 = _cj2 | 113, _uq2 = _cj2 | 114, _vq2 = _cj2 | 115,
    _wq2 = _cj2 | 116, _xq2 = _cj2 | 117, _yq2 = _cj2 | 118, _zq2 = _cj2 | 119, _Aq2 = _cj2 | 120, _Bq2 = _cj2 | 121,
    _Cq2 = _cj2 | 122, _Dq2 = _cj2 | 123,
    _Eq2 = _cj2 | 145, _Fq2 = _cj2 | 186, _Gq2 = _cj2 | 187, _Hq2 = _cj2 | 188, _Iq2 = _cj2 | 189, _Jq2 = _cj2 | 190,
    _Kq2 = _cj2 | 191, _Lq2 = _cj2 | 192, _Mq2 = _cj2 | 219, _Nq2 = _cj2 | 220, _Oq2 = _cj2 | 221, _Pq2 = _cj2 | 222,
    _Qq2 = _cj2 | 223, _Rq2 = _cj2 | 144, _Sq2 = _cj2 | 96, _Tq2 = _cj2 | 97, _Uq2 = _cj2 | 98, _Vq2 = _cj2 | 99,
    _Wq2 = _cj2 | 100, _Xq2 = _cj2 | 101, _Yq2 = _cj2 | 102, _Zq2 = _cj2 | 103, __q2 = _cj2 | 104, _0r2 = _cj2 | 105,
    _1r2 = _cj2 | 106, _2r2 = _cj2 | 107, _3r2 = _cj2 | 109, _4r2 = _cj2 | 110, _5r2 = _cj2 | 111, _6r2 = 0, _7r2 = 1,
    _8r2 = 2, _9r2 = [], _mg2 = 12, _ar2 = 8, _br2 = 8, _cr2 = 8, _MQ = 10, _tU = 0x000000, _dr2 = 0x000080,
    _er2 = 0x008000,
    _fr2 = 0x008080, _gr2 = 0x800000, _hr2 = 0x800080, _ir2 = 0x808000, _jr2 = 0x808080, _kr2 = 0xC0C0C0,
    _cW1 = 0x0000FF, _lr2 = 0x00FF00, _mr2 = 0x00FFFF, _dW1 = 0xFF0000, _nr2 = 0xFF00FF, _or2 = 0xFFFF00,
    _pr2 = 0xC0C0C0, _qr2 = 0x808080, _rr2 = 0xFFFFFF, _sr2 = 0xC0DCC0, _tr2 = 0xF0CAA6, _ur2 = 0xF0FBFF,
    _vr2 = 0xA4A0A0, _wr2 = -1, __91 = 0, _lB = 1, global = null, _4s = null, _OW = null, _pB = null, __01 = null,
    _Eh = null, _NN = null, _xr2 = null, _yr2 = null, _mD = null, _z11 = null, _ZW = null, _O02 = null, __61 = null,
    _hR = null, _nO = null, _zr2 = null, _js = null, _Ar2 = null, _ZA = null, _Br2 = null, _Cr2 = null, _Dr2 = null,
    _Er2 = null, _QB = null, _Fr2 = null, _f51 = null, _2C = null, _Gr2 = null, _j41 = null, _nC = null, _Hr2 = null,
    _yD = null, _Ir2 = null, _Of1 = null, _OQ = null, _NQ = null, _Jr2 = null, _RQ = null, _Kr2 = null, _Lr2 = null,
    _Mr2 = null, _Nr2 = null, _Or2 = null, _Pr2 = null, _Tu = null, _tP = null, _2B = null, _2V = null, _5X = null,
    _8d1 = null, _9d1 = null, _bd1 = null, _ad1 = null, _Qr2 = null, _kW = null, _Rr2 = null, _Sr2 = null, _Tr2 = null,
    _Ur2 = null, _191 = null, _Vr2 = null, g_WebAudioContext = null, _xO = null, _4O = null, _Wr2 = null, _kB = __91,
    _Xr2 = !0, _Yr2 = !0, _eZ = !1, _cf2 = !1, _Zr2 = !1, _J91 = !1, _I91 = !1, _Ra1 = !1,
    _IN = !1, __r2 = !1, _1d1 = !1, _0s2 = !1, _1s2 = !1, _8R = !1, _2s2 = !1, _6O = !1, _3s2 = !1, _4s2 = !1,
    _5s2 = !1, _6s2 = 0, _581 = 0, _7s2 = 0, _8s2 = 0, _9s2 = 0, _as2 = 0, _eh1 = 0, _gh1 = 0, _6e1 = 0, _5e1 = 0,
    _9e1 = 0, _8e1 = 0, _bs2 = 0, _cs2 = 0, _ds2 = 0, _Lx = 0, _Mx = 0, _3Q = 0, _sT = 0, _oT = 0, _5U = 0, _7U = 0,
    _es2 = 0, _fs2 = 0, _gs2 = 0, _hs2 = 0, _is2 = 0, _js2 = 0, _ks2 = 0, _ls2 = 0, _ms2 = 0, _ns2 = 0, _os2 = 0,
    _ps2 = 0, _pR = 0, _qR = 0, _qs2 = 0, _rs2 = 0, _ss2 = 0, _GX = 0, _ts2 = 0, _us2 = 0, _vs2 = 0, _ws2 = 0, _Yd1 = 0,
    _xs2 = 0, _cK = 0, _ys2 = 0, _zs2 = 0, _As2 = 0, _Bs2 = 0, _Cs2 = 0, _Ds2 = !1, _Es2 = -1, _Fs2 = -1, _Gs2 = 1,
    _Hs2 = 1, _2X = !0, _Is2 = 0, _Js2 = 0, _Ks2 = 0,
    _Ls2 = 0, _Ms2 = 0, _Ns2 = 0, _Os2 = 0, _Ps2 = 0, _Qs2 = 0, _Rs2 = 0, _Ss2 = 0, _Ts2 = 0, _Us2 = 0, _Vs2 = 0,
    _Ws2 = 0, _Xs2 = 0, _Ys2 = 0, _Zs2 = 0, __s2 = 0, _0t2 = 0, _1t2 = 0, _2t2 = 0, _Oe2 = 0, _3t2 = 0, _4t2 = 0,
    _5t2 = 0, _6t2 = 0, _7t2 = 0, _8t2 = 0, _9t2 = 0, _at2 = 0, _bt2 = 0, _ls = 0, _ct2 = [], _1O = 'canvas',
    _dt2 = '0123456789ABCDEF';

function _et2() {
    var debug = false;
    if ((_NN._xc) && (_NN._xc._yc) && (_NN._xc._yc === true)) {
        debug = true
    }
}

function _ft2() {
    _ct2 = [];
    var _gt2 = 0xEDB88320;
    for (var _t5 = 0; _t5 < 256; ++_t5) {
        var _ht2 = ~~_t5;
        for (var _Rt = 8; _Rt > 0; --_Rt) {
            if ((_ht2 & 1) !== 0) {
                _ht2 = ((_ht2 >> 1) & 0x7fffffff) ^ _gt2
            }
            else {
                _ht2 >>= 1;
                _ht2 &= 0x7fffffff
            }
        }
        _ct2[_t5] = _ht2
    }
}

function _it2() {
    _ft2();
    _jt2();
    if (_kB != _wr2) {
        try {
            var _kt2 = new Audio();
            _kt2.controls = false;
            _J91 = !!_kt2.canPlayType && _kt2.canPlayType('audio/mpeg') !== "";
            _I91 = !!_kt2.canPlayType && _kt2.canPlayType('audio/ogg; codecs="vorbis"') !== "";
            _kt2 = null
        } catch (e) {
            _J91 = false;
            _I91 = false
        }
    }
    if (_J91) debug("Browser CAN play MP3");
    if (_I91) debug("Browser CAN play OGG");
    _et2();
    _Wr2 = _6s2 = 0;
    _js = null;
    _cf2 = false;
    _581 = -1;
    _9d1 = new _lt2();
    _bd1 = new _lt2();
    _Ar2 = new _lt2();
    _Ar2._xf2 = 0;
    _mt2 = new _lt2();
    _ad1 = new _lt2();
    _5X = new _yO();
    _2V = new _yO();
    _8d1 = new _yO();
    _Ar2._B5 = true;
    _mt2._B5 = true;
    _ZA = [];
    _ZA[0] = _Ar2;
    _Cr2 = [];
    _Dr2 = [];
    _Er2 = [];
    _QB = new _571(5);
    _Fr2 = new _571(5);
    _f51 = new _571(5);
    _2C = new _571(5);
    _Gr2 = new _571(5);
    _j41 = new _571(5);
    _nC = new _571(5);
    _yD = new _571(5);
    _Hr2 = new _571(5);
    _Ir2 = new _ED();
    _tP = new _571(5);
    _2B = new _yO();
    _kW = new _nt2();
    _kW._ot2 = "DUMMY INSTANCE";
    _9r2[0] = -1;
    _9r2[1] = 0;
    _9r2[2] = 0x00000000;
    _9r2[3] = 1;
    _9r2[4] = 0;
    _9r2[5] = 0x00000000;
    _9r2[6] = 0;
    _9r2[7] = -1;
    _9r2[8] = 0x00000000;
    _9r2[9] = 0;
    _9r2[10] = 1;
    _9r2[11] = 0x00000000;
    _9r2[12] = 0;
    _9r2[13] = 0;
    _9r2[14] = 0xffffffff;
    _1O = "canvas";
    _Tu = "html5game/";
    if (typeof(g_GameMakerHTML5Dir) != "undefined") {
        _Tu = g_GameMakerHTML5Dir
    } else {
        if (_NN._xc && _NN._xc._Uc) {
            _Tu = _NN._xc._Uc + '/'
        }
    }
    _Of1 = [];
    _OQ = [];
    _NQ = [];
    _Jr2 = "Hiscore Table";
    _RQ = "<Nobody>";
    _Kr2 = "Press <ESC> to Continue";
    _js2 = 0x000000;
    _ns2 = -1;
    _ks2 = 0xffff00;
    _ls2 = 0xffffff;
    _Lr2 = "verdana";
    _ms2 = 16;
    _Mr2 = "";
    _Xr2 = true;
    _QQ();
    _Bs2 = -1;
    _Cs2 = -1;
    _yD._pt2();
    _bs2 = 0.0000001;
    _ws2 = 512;
    _xO = [];
    _1d1 = _4s2 = false;
    _Yr2 = true;
    _6O = false;
    _Tr2 = _ps2 = null;
    _pR = _qR = -1;
    _GX = 0;
    _ds2 = 1.0;
    _7s2 = 0;
    _8s2 = -1;
    _9s2 = 0;
    _os2 = 0;
    _as2 = 0;
    _qt2 = true;
    _is2 = 10000000;
    _cs2 = 100000;
    _Lx = 1.0;
    if (_ls) {
        _Bl(_NN._xc._rt2)
    } else {
        _3Q = 0x00000000;
        _Mx = 0x000000;
        _sT = _tT(_Mx);
        _oT = _LD(_Mx, _Lx)
    }
    _Oe2 = _tT(0x000000);
    _3t2 = _tT(0xffffff);
    _4t2 = _tT(0x0000ff);
    _5t2 = _tT(0x00ff00);
    _6t2 = _tT(0xff0000);
    _7t2 = _tT(0xff000000);
    _8t2 = _tT(0xffffffff);
    _9t2 = _tT(0xff0000ff);
    _at2 = _tT(0xff00ff00);
    _bt2 = _tT(0xffff0000);
    _Is2 = 0;
    _Js2 = -1;
    _Ks2 = -2;
    _Ls2 = -3;
    _Ms2 = -4;
    _Ns2 = -6;
    _Os2 = -7;
    _Ps2 = -8;
    _Qs2 = -9;
    _Rs2 = -10;
    _Ss2 = -11;
    _Ts2 = -12;
    _Us2 = -13;
    _Vs2 = -14;
    _Ws2 = -15;
    _Xs2 = -16;
    _Ys2 = -17;
    _Zs2 = -18;
    __s2 = -19;
    _0t2 = -20;
    _1t2 = -21;
    _2t2 = -22;
    _zs2 = -1;
    _ys2 = _NN._xc._Ic ? _Is2 : _Js2;
    _As2 = 0;
    _st2();
    if (_NN._xc && _NN._xc._Ic === false) {
        canvas.style.cursor = "none"
    }
    _1s2 = false;
    if (_NN._xc && _NN._xc._Xc === true) {
        _1s2 = true
    }
    if (typeof _tt2 == 'function') {
        _tt2()
    }
}

function _ut2(_vt2) {
    return _vt2 * (Math.PI / 180.0)
}

function _wt2(_Ps, _Qs) {
    if (_Ps === 0) return 0;
    var _Mt = ((_Ps * 0x1000000) % (_Qs * 0x1000000));
    _Mt = _Mt / 0x1000000;
    return _Mt
}

function _vK(_Ps) {
    return _Ps * _Ps
}

function _tT(_2y) {
    var _2v = "rgb(" + ((_2y >> 16) & 0xff).toString() + "," + ((_2y >> 8) & 0xff).toString() + "," + (_2y & 0xff).toString() + ")";
    return _2v
}

function _LD(_2y, _Ox) {
    var _2v = "rgba(" + ((_2y >> 16) & 0xff).toString() + "," + ((_2y >> 8) & 0xff).toString() + "," + (_2y & 0xff).toString() + "," + ((_Ox * 255.0) & 0xff).toString() + ")";
    return _2v
}

function _xt2(_vt2) {
    return _Pt * _vt2 / 180.0
}

function _Px(_2y) {
    return (((_2y & 0xff) << 16) | (_2y & 0xff00) | ((_2y & 0xff0000) >> 16))
}

function _kZ(_3R, _kC, _yt2, _U71) {
    var _gC, _NW, _oS, _Kt;
    var _hv = arguments;
    var _bC = arguments.length;
    var _zt2 = _hv[_bC - 1];
    _kC = ~~_kC;
    if (_kC == _lZ) return _U71;
    if (_kC == _L31) {
        _gC = _OW._l41();
        for (_oS = 0; _oS < _gC.length; _oS++) {
            _NW = _gC[_oS];
            if ((_yt2) && (_NW == _3R)) continue;
            if (_NW._S71) continue;
            _Kt = _zt2(_NW);
            if (_Kt > 0) return _Kt
        }
    } else if (_kC < 100000) {
        var _LP = _4s._RB(_kC);
        if (_LP === null) {
            return _U71
        }
        _gC = _LP._LW();
        for (_oS = 0; _oS < _gC.length; _oS++) {
            _NW = _gC[_oS];
            if ((_yt2) && (_3R == _NW)) continue;
            if (_NW._S71) continue;
            _Kt = _zt2(_NW);
            if (_Kt > 0) return _Kt
        }
    } else {
        _NW = _OW._At2(_kC);
        if ((_yt2) && (_3R == _NW)) {
            return _U71
        }
        if (_NW._S71) {
            return _U71
        }
        return _zt2(_NW)
    }
    return _U71
}

function _F41(_3R, _kC, _yt2, _U71) {
    var _gC, _NW, _oS, _cE;
    var _hv = arguments;
    var _bC = arguments.length;
    var _zt2 = _hv[_bC - 1];
    var _Q31 = 10000000000;
    var id = -1;
    _kC = ~~_kC;
    if (_kC == _lZ) return _U71;
    if (_kC == _L31) {
        _gC = _OW._l41();
        for (_oS = 0; _oS < _gC.length; _oS++) {
            _NW = _gC[_oS];
            if ((_yt2) && (_NW == _3R)) continue;
            if (_NW._S71) continue;
            _cE = _zt2(_NW);
            if (_cE < _Q31) {
                _Q31 = _cE
            }
        }
        if (_Q31 != 10000000000) return _Q31;
    } else if (_kC < 100000) {
        var _LP = _4s._RB(_kC);
        if (_LP === null) {
            return _U71
        }
        _gC = _LP._LW();
        for (_oS = 0; _oS < _gC.length; _oS++) {
            _NW = _gC[_oS];
            if ((_yt2) && (_3R == _NW)) continue;
            if (_NW._S71) continue;
            _cE = _zt2(_NW);
            if (_cE < _Q31) {
                _Q31 = _cE
            }
        }
        if (_Q31 != 10000000000) return _Q31
    }
    else {
        _NW = _OW._At2(_kC);
        if ((_yt2) && (_3R == _NW)) {
            return _U71
        }
        if (_NW._S71) {
            return _U71
        }
        return _zt2(_NW)
    }
    return _U71
}

var _WX = {
    init: function () {
        this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
        this._XX = this._Bt2();
        this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "an unknown version";
        this._Ct2 = this.searchString(this.dataOS) || "an unknown OS";
        this._Dt2 = this._Et2()
    },
    _Bt2: function () {
        var _Ft2 = navigator.userAgent.toString().toLowerCase();
        if (_Ft2.indexOf("trident/5") > -1) {
            return 9.0
        } else if (_Ft2.indexOf("trident/6") > -1) {
            return 10.0
        } else if (_Ft2.indexOf("trident/7") > -1) {
            return 11.0
        }
        return -1
    },
    _Et2: function () {
        if (navigator.appVersion.indexOf("CPU OS 5_") != -1) {
            return 5.0
        } else if (navigator.appVersion.indexOf("CPU OS 4_") != -1) {
            return 4.0
        } else if (navigator.appVersion.indexOf("CPU OS 3_") != -1) {
            return 3.0
        } else if (navigator.appVersion.indexOf("Android 4") != -1) {
            return 4.0
        } else if (navigator.appVersion.indexOf("Android 3") != -1) {
            return 3.0
        } else if (navigator.appVersion.indexOf("Android 2") != -1) {
            return 2.0
        } else {
            return _Yl2
        }
    },
    searchString: function (data) {
        for (var _t5 = 0; _t5 < data.length; _t5++) {
            var _Gt2 = data[_t5]._Hg;
            var _Ht2 = data[_t5].prop;
            this.versionSearchString = data[_t5].versionSearch || data[_t5].identity;
            if (_Gt2) {
                if (_Gt2.indexOf(data[_t5]._It2) != -1) {
                    return data[_t5].identity
                }
            } else if (_Ht2) {
                return data[_t5].identity
            }
        }
    },
    searchVersion: function (_Gt2) {
        var index = _Gt2.indexOf(this.versionSearchString);
        if (index == -1) return;
        return parseFloat(_Gt2.substring(index + this.versionSearchString.length + 1))
    },
    dataBrowser: [{
        _Hg: navigator.userAgent, _It2: "Tizen", identity: "Tizen"
    }, {_Hg: navigator.userAgent, _It2: "Edge", identity: "Edge"}, {
        _Hg: navigator.userAgent,
        _It2: "Chrome",
        identity: "Chrome"
    }, {
        _Hg: navigator.userAgent,
        _It2: "OmniWeb",
        versionSearch: "OmniWeb/",
        identity: "OmniWeb"
    }, {_Hg: navigator.vendor, _It2: "Apple", identity: "Safari", versionSearch: "Version"}, {
        prop: window.opera,
        identity: "Opera"
    }, {_Hg: navigator.userAgent, _It2: "KHTML", identity: "KHTML", versionSearch: "Mozilla/"}, {
        _Hg: navigator.vendor,
        _It2: "iCab",
        identity: "iCab"
    }, {
        _Hg: navigator.vendor, _It2: "KDE", identity: "Konqueror"
    }, {_Hg: navigator.userAgent, _It2: "Firefox", identity: "Firefox"}, {
        _Hg: navigator.userAgent,
        _It2: "IceWeasel",
        identity: "IceWeasel"
    }, {_Hg: navigator.vendor, _It2: "Camino", identity: "Camino"}, {
        _Hg: navigator.userAgent,
        _It2: "Netscape",
        identity: "Netscape"
    }, {_Hg: navigator.userAgent, _It2: "IEMobile", identity: "IEMobile"}, {
        _Hg: navigator.userAgent,
        _It2: "MSIE",
        identity: "Explorer",
        versionSearch: "MSIE"
    }, {_Hg: navigator.userAgent, _It2: "Trident/", identity: "Explorer", versionSearch: "rv"}
        , {_Hg: navigator.userAgent, _It2: "Gecko", identity: "Mozilla", versionSearch: "rv"}],
    dataOS: [{_Hg: navigator.userAgent, _It2: "Phone 8", identity: "WindowsPhone8"}, {
        _Hg: navigator.platform,
        _It2: "Win",
        identity: "Windows"
    }, {_Hg: navigator.platform, _It2: "Mac", identity: "Mac"}, {
        _Hg: navigator.userAgent,
        _It2: "iPhone",
        identity: "iPhone"
    }, {_Hg: navigator.userAgent, _It2: "iPod", identity: "iPhone"}, {
        _Hg: navigator.userAgent,
        _It2: "iPad",
        identity: "iPad"
    }, {_Hg: navigator.userAgent, _It2: "Android", identity: "Android"}, {
        _Hg: navigator.userAgent,
        _It2: "Tizen", identity: "Tizen"
    }, {_Hg: navigator.platform, _It2: "Linux", identity: "Linux"}]
};

function _jt2() {
    _WX.init();
    if (_WX._Ct2 == "Windows") {
        _Y91 = _Ol2
    } else if (_WX._Ct2 == "Mac") {
        _Y91 = _Ql2
    } else if (_WX._Ct2 == "iPhone") {
        _Y91 = _Z91
    } else if (_WX._Ct2 == "iPad") {
        _Y91 = _Z91
    } else if (_WX._Ct2 == "Android") {
        _Y91 = _Sl2
    } else if (_WX._Ct2 == "Linux") {
        _Y91 = _Ul2
    } else if (_WX._Ct2 == "Tizen") {
        _Y91 = _Wl2
    } else if (_WX._Ct2 == "WindowsPhone8") {
        _Y91 = _Vl2
    } else {
        _Y91 = _Nl2
    }
    if (_WX._Ct2 !== "") {
        debug(_WX._Ct2 + " Detected(" + _Y91 + ")")
    }
    _ef1 = _WX._Dt2;
    _UX = _Cl2;
    _bf1 = _xl2;
    if (_WX.browser == "Explorer") {
        debug("Internet Explorer detected");
        _UX = _VX
    } else if (_WX.browser == "Explorer") {
        debug("Internet Explorer detected");
        _UX = _VX
    } else if (_WX.browser == "Edge") {
        debug("Microsoft Edge detected");
        _UX = _Ml2
    } else if (_WX.browser == "IEMobile") {
        debug("IE Mobile detected");
        _UX = _Ll2
    } else if (_WX.browser == "Firefox") {
        debug("Firefox detected");
        _UX = _Dl2
    } else if (_WX.browser == "Chrome") {
        debug("Chrome detected");
        _UX = _El2
    } else if (_WX.browser == "Safari") {
        if (_Y91 == _Z91) {
            _UX = _Gl2;
            _bf1 = _yl2;
            if (_WX._Ct2 == "iPad") _bf1 = _Al2;
            debug("Safari mobile detected")
        } else {
            debug("Safari detected");
            _UX = _Fl2
        }
    } else if (_WX.browser == "Opera") {
        debug("BrowserDetect: " + _WX._Ct2);
        debug("Opera detected");
        _UX = _Hl2
    } else if (_WX.browser == "KHTML") {
        debug("Default Android browser detected");
        debug("OS: " + _ef1);
        _UX = _Il2
    } else if (_WX.browser == "Tizen") {
        _UX = _Bl2
    } else {
        debug("Unknown Browser - Please report these strings");
        debug("----------------------------------------------");
        if (navigator.userAgent) debug("userAgent: " + navigator.userAgent);
        debug("---");
        if (navigator.vendor) debug("vendor: " + navigator.vendor);
        debug("---");
        if (navigator.platform) debug("platform: " + navigator.platform);
        debug("----------------------------------------------")
    }
    if (true == _NN._xc._Zc) {
        if (document.URL.substring(0, 5) == "file:") {
            alert("WARNING:  Running this via a file and not a web server is not advised as the browser will enable additional security, and things like files and colours won't work correctly. " + _jf(13) + _jf(13) + "Please check the FAQ for more details. " + _jf(13) + _jf(13) + "http://help.yoyogames.com/entries/40534573")
        }
    }
}

var _Jt2 = 0;
var _Pa1 = 0;
var _Kt2 = 0;
var _Lt2 = 0;
var _Mt2 = null;
var _Nt2 = null;
var _Ot2 = 0, _Pt2 = 1, _Qt2 = 2, _Rt2 = 3;

function _St2() {
    global = new _ul2();
    _Eh = new _Tt2();
    _pB = new _Ut2();
    _fz = new _Kz();
    _Vt2(canvas);
    _OW = new _Wt2();
    _4s = new _Xt2();
    __01 = new _Yt2();
    _Cb1 = new _Zt2();
    _mD = new __t2();
    _yr2 = new _0u2();
    _XN = new _1u2();
    _O02 = [];
    __61 = new _2u2();
    _hR = new _3u2();
    _nO = new _4u2();
    _z11 = new _h01();
    _ZW = new _5V();
    _it2();
    if (_ls) {
        _ZW._6W();
        _5u2()
    }
}

function _6u2(_7u2) {
    switch (_7u2) {
        case 1:
            return "MEDIA_ERR_ABORTED";
        case 2:
            return "MEDIA_ERR_NETWORK";
        case 3:
            return "MEDIA_ERR_DECODE";
        case 4:
            return "MEDIA_ERR_SRC_NOT_SUPPORTED"
    }
    return "Unknown Error"
}

function _8u2(_7u2) {
    switch (_7u2) {
        case _Ot2:
            return "NETWORK_EMPTY";
        case _Pt2:
            return "NETWORK_IDLE";
        case _Qt2:
            return "NETWORK_LOADING";
        case _Rt2:
            return "NETWORK_NO_SOURCE"
    }
    return "Unknown Error"
}

function _9u2(_5R) {
    debug("ImageLoaded: " + this.src);
    _Pa1++
}

function _au2(_5R) {
    debug("ImageError: " + this.src);
    _Pa1++
}

function _bu2(_5R) {
    _Lt2++;
    debug("ExtensionLoaded: ")
}

function _cu2(_5R) {
    _Lt2++;
    debug("ExtensionError: ")
}

function ClearEventListeners(_du2) {
    _du2.removeEventListener('canplaythrough',
        _eu2, false);
    _du2.removeEventListener('error', _fu2, false);
    _du2.removeEventListener("loadstart", _gu2, false);
    _du2.removeEventListener("suspend", _hu2, false);
    _du2.removeEventListener("stalled", _iu2, false);
    _du2.removeEventListener("stall", _iu2, false)
}

function _eu2(_5R) {
    this.completed = true;
    if (_Nt2[this.URL] !== null) {
        _Nt2[this.URL] = null;
        _Pa1++
    }
    ClearEventListeners(this);
    debug("SoundLoaded: " + this.URL)
}

function _fu2(_5R) {
    debug("SoundError: " + this.URL + "   NetworkError: " + _6u2(this.error["code"]));
    this.completed = false;
    if (_Nt2[this.URL] !== null) {
        _Nt2[this.URL] = null;
        _Pa1++
    }
    ClearEventListeners(this)
}

function _gu2(_5R) {
    this._ju2 = true
}

function _hu2(_5R) {
    debug("SoundSuspended: " + this.URL);
    this.completed = true;
    if (_Nt2[this.URL] !== null) {
        _Nt2[this.URL] = null;
        _Pa1++
    }
    ClearEventListeners(this)
}

function _iu2(_5R) {
}

function _ku2(_lu2) {
    debug("Loading: " + _lu2);
    var index = _Su(_lu2);
    var _DD = new _ED();
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = 63;
    _DD._w5 = 63;
    _DD._pc = -32;
    _DD._qc = -32;
    _DD._rc = 63;
    _DD._sc = 63;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = index;
    _DD._Iu = _Ju[index];
    _DD._Fu = [];
    _DD._Hu = 32;
    _DD._Gu = 0;
    var _mu2 = _Cr2.length;
    _Cr2[_mu2] = _DD;
    return _mu2
}

function _nu2(_tX) {
    debug("Loading: " + _Tu + _tX);
    var e = window.document.createElement('script');
    e.setAttribute('src', _Tu + _tX);
    e.setAttribute('type', "text/javascript");
    e.onload = _bu2;
    e.onerror = _cu2;
    window.document.body.appendChild(e);
    _Kt2++
}

function _ou2(_pu2) {
    if (_pu2._D3 !== undefined) {
        for (var _t5 = 0; _t5 < _pu2._D3.length; _t5++) {
            var _qu2 = _pu2._D3[_t5];
            if (_qu2._ru2) {
                for (var _XO = 0; _XO < _qu2._ru2.length; _XO++) {
                    _nu2(_qu2._ru2[_XO])
                }
            }
        }
    }
}

function _su2(_pu2) {
    _Nt2 = [];
    _Kt2 = 0;
    _Lt2 = 0;
    _ou2(_pu2)
}

function _tu2(_lu2) {
    _Jt2++;
    var _4Z = new XMLHttpRequest();
    _4Z.open('GET', _H91(_lu2), true);
    _4Z.send();
    _4Z.onload = function (_6Z) {
        _Pa1++;
        _Cb1._uu2(_4Z.responseText)
    };
    _4Z.onerror = function (_6Z) {
        _Pa1++
    }
}

function _vu2(_lu2) {
    _Jt2++;
    var _4Z = new XMLHttpRequest();
    _4Z.open('GET', _H91(_lu2), true);
    _4Z.responseType = 'arraybuffer';
    _4Z.send();
    _4Z.onload = function (_6Z) {
        _Pa1++;
        _Cb1._wu2(_4Z.response || _4Z.responseText)
    };
    _4Z.onerror = function (_6Z) {
        _Pa1++
    }
}

var _uQ;

function _xu2(_Nu, _Cp1, _yu2) {
    return _yu2
}
;

function _zu2(_pu2) {
    var _Mt, id;
    if (_pu2._Au2) document.title = _pu2._Au2;
    if (typeof(gml_Script_gmcallback_html5_set_load_location) != 'undefined') {
        _uQ = gml_Script_gmcallback_html5_set_load_location
    } else _uQ = _xu2;
    _Mt2 = document.getElementById('GM4HTML5_loadingscreen');
    _su2(_pu2);
    _Bu2 = _Cu2;
    _Pa1 = 0;
    for (index = 0; index < _pu2._wc.length; index++) {
        _Jt2++;
        debug("Loading: " + _Tu + _pu2._wc[index]);
        _Mt = _Su(_Tu + _pu2._wc[index]);
        _Ju[_Mt].onload = _9u2;
        _Ju[_Mt].onerror = _au2;
        _Ju[_Mt].URL = _pu2._wc[index]
    }
    if ((_pu2._Du2 !== null) && (_pu2._Du2 !== undefined)) {
        _vu2(_pu2._Du2)
    }
    if ((_pu2._Eu2 !== null) && (_pu2._Eu2 !== undefined)) {
        _tu2(_pu2._Eu2)
    }
    if (true == _NN._xc._Yc) {
        for (var _t5 = 2; _t5 < 16; _t5++) {
            _Jt2++;
            var _lT = _ku2(_Tu + "particles/IDR_GIF" + _t5 + ".png");
            _Mt = _Cr2[_lT]._vc;
            _Ju[_Mt].onload = _9u2;
            _Ju[_Mt].onerror = _au2;
            _Ju[_Mt].URL = "particles/IDR_GIF" + _t5 + ".png"
        }
    }
    if (_kB == _lB) {
        for (index = 0; index < _pu2._E3.length; index++) {
            if (_pu2._E3[index] !== null) {
                var _L3 = 0;
                if (_pu2._E3[index]._L3 !== undefined) {
                    _L3 = _pu2._E3[index]._L3
                }
                if (_L3 == 0) {
                    _Jt2++;
                    debug("Loading: " + _Tu + _pu2._E3[index]._I3);
                    if (_pu2._E3[index]._G3 === 0) {
                        id = _Xa1(_Tu + _pu2._E3[index]._I3, index, _pu2._E3[index]._H3);
                        if (id === undefined) {
                            _Jt2--
                        }
                    } else if ((_pu2._E3[index]._G3 == 3) || (_pu2._E3[index]._G3 == 1)) {
                        _Sa1(_Tu + _pu2._E3[index]._I3, index, _pu2._E3[index]._H3);
                        _Jt2--
                    } else {
                        debug("Attempting to load sound with unknown type: " + _pu2._E3[index]._G3);
                        _Jt2--
                    }
                }
            }
        }
    } else if (_kB == __91) {
        for (index = 0; index < _pu2._E3.length; index++) {
            if (_pu2._E3[index] !== null) {
                _Jt2++;
                debug("Loading: " + _Tu + _pu2._E3[index]._I3);
                id = _Fu2(_Tu + _pu2._E3[index]._I3, _pu2._E3[index]._F3,
                    _pu2._E3[index]._H3, _eu2, _fu2);
                if ((id !== undefined) && (_2b1[id]) && (_2b1[id].URL)) {
                    _Nt2[_2b1[id].URL] = _2b1[id]
                } else {
                    _Jt2--
                }
            }
        }
    }
}

function _Gu2() {
    for (var _t5 in _Nt2) {
        if (!_Nt2.hasOwnProperty(_t5)) continue;
        var _Hu2 = _Nt2[_t5];
        if (_Hu2) {
            if ((_Hu2.networkState !== null && _Hu2.networkState !== undefined) && (_Hu2.readyState !== null && _Hu2.readyState !== undefined)) {
                if ((_Hu2.networkState == _Pt2 || _Hu2.networkState == _Rt2) && (_Hu2._ju2) && (_Hu2.readyState != 4)) {
                    if (_Hu2.completed !== true) {
                        _Hu2.completed = false;
                        _Pa1++;
                        _Nt2[_t5] = null;
                        ClearEventListeners(_Hu2);
                        debug("SoundError: " + _Hu2.URL + "   NetworkState: " + _8u2(_Hu2.networkState))
                    }
                }
            }
        }
    }
}

function _Iu2(_Ju2, _LP) {
    if (_LP._Ku2) return;
    if (_LP._2O !== null) {
        _Iu2(_LP._2O._LZ, _LP._2O)
    }
    for (var _Lu2 in _LP._Mu2) {
        if (!_LP._Mu2.hasOwnProperty(_Lu2)) continue;
        if (_O02[_Lu2]) {
            if (_O02[_Lu2][_Ju2]) {
                continue
            }
        }
        var _8N = false;
        var _Nu2 = _LP;
        while (_Nu2 !== null) {
            var id = _Nu2._LZ;
            var _Ou2 = _4s._RB(_Lu2);
            while (_Ou2 !== null) {
                var _Pu2 = _Ou2._LZ;
                if (_O02[_Pu2] && _O02[_Pu2][id]) {
                    _8N = true;
                    break
                }
                _Ou2 = _Ou2._2O
            }
            _Nu2 = _Nu2._2O
        }
        if (!_8N) {
            if (!_O02[_Ju2]) {
                _O02[_Ju2] = []
            }
            _O02[_Ju2][_Lu2] = _Lu2
        }
    }
    _LP._Ku2 = true
}

function _Qu2() {
    var _gC = _4s._l41();
    for (var _Ju2 = 0; _Ju2 < _gC.length; _Ju2++) {
        var _LP = _gC[_Ju2];
        if (_LP._2O !== null) {
            _Iu2(_LP._2O._LZ, _LP._2O)
        }
        _Iu2(_Ju2, _LP)
    }
}

function _Ru2(_pu2) {
    var index, __71, _t5;
    _cs2 = 1000000;
    _Eh._Su2 = _pu2._xc._Ec;
    _Yd1 = _pu2._xc._Wc;
    __r2 = _pu2._xc._Jc;
    _9f1 = _pu2._xc._Vc;
    _Eh._Tu2 = _Uu2();
    _Eh._Vu2 = _pu2._xc._1d;
    _Eh._Wu2 = _pu2._xc._1d;
    _Eh._Xu2 = _Tu;
    _Eh._Yu2 = _Uu2();
    if (_uu) _Eh._Zu2 = true;
    _Qr2 = new __u2(_pu2._y5);
    _us2 = _pu2._xc._0d;
    var id = 0;
    for (var index = 0; index < _pu2._z5.length;
         index++) {
        var _lS = _pu2._z5[index];
        if (_lS !== null) {
            var _AZ = _0v2(id, _lS);
            _4s._3C(_AZ)
        }
        id++
    }
    _4s._1v2();
    _Qu2();
    _2v2(_pu2._oc);
    for (index = 0; index < _pu2._N3.length; index++) {
        if (_pu2._N3[index] === null) {
            _Cb1._Tb1(null)
        } else {
            var _3v2 = _4v2(_pu2._N3[index]);
            _Cb1._Tb1(_3v2)
        }
    }
    for (index = 0; index < _pu2._04.length; index++) {
        var _Wv = _mD._5v2(_pu2._04[index]);
        var _5c1 = _mD._nD(_Wv);
        if (_5c1 !== null) _5c1._Wb1 = _6v2
    }
    for (index = 0; index < _pu2._k5.length; index++) {
        _XN._3C(_pu2._k5[index])
    }
    for (var index = 0; index < _pu2._Sb.length; index++) {
        var _7v2 = _pu2._Sb[index];
        if (_7v2 !== null) {
            __71 = new _8v2();
            __71._9v2(_7v2);
            __01._3C(__71)
        } else {
            _6s2++;
            __01._3C(null);
        }
    }
    _us2 = _pu2._xc.__c;
    __01._av2(_pu2._nc);
    for (_t5 = 0; _t5 < _pu2._nc.length; _t5++) {
        __71 = __01._681(_t5);
        __71._381 = _t5
    }
    _Eh._bv2 = __01._681(0).id;
    _Eh._cv2 = __01._681(__01._dv2.length - 1).id;
    for (index = 0; index < _pu2._14.length; index++) {
        var _Z61 = _ev2(_pu2._14[index]);
        __61._3C(_Z61)
    }
    for (index = 0; index < _pu2._E3.length; index++) {
        _yr2._3C(_pu2._E3[index])
    }
    if (_pu2._x5 !== undefined) {
        for (index = 0; index < _pu2._x5.length; index++) {
            _hR._3C(_pu2._x5[index])
        }
    }
    _QQ();
    _IQ();
    if (typeof _fv2 == 'function') {
        _Ur2 = new _fv2()
    }
    if (typeof _9d == 'function') {
        _9d()
    }
    if (_pu2._D3 !== undefined) {
        for (_t5 = 0; _t5 < _pu2._D3.length; _t5++) {
            var _qu2 = _pu2._D3[_t5];
            if (_qu2.init != undefined) {
                try {
                    var _gv2 = eval(_qu2.init);
                    if (_gv2) _gv2()
                } catch (_PQ) {
                    _SB("Error calling extension initialisation function: " + _qu2.init);
                    _SB("exception: " + _PQ.toString())
                }
            } else if (_qu2._hv2 != undefined) {
                for (var _Rt = 0; _Rt < _qu2._hv2.length; _Rt++) {
                    try {
                        var _gv2 = eval(_qu2._hv2[_Rt]);
                        if (_gv2) _gv2();
                    } catch (_PQ) {
                        _SB("Error calling extension initialisation function: " + _qu2._hv2[_Rt]);
                        _SB("exception: " + _PQ.toString())
                    }
                }
            }
        }
    }
}

function _st2() {
    try {
        if (('localStorage' in window) && (window['localStorage'] !== null)) {
            _eZ = true
        }
    } catch (e) {
        _eZ = false
    }
    return _eZ
}

function _Uu2() {
    var _iv2 = "";
    if (_NN._xc._1d !== null && _NN._xc._1d !== undefined) {
        for (var _t5 = 0; _t5 < _NN._xc._1d.length; _t5++) {
            var _jf = _NN._xc._1d[_t5];
            if ((_jf >= 'a' && _jf <= 'z') || (_jf >= 'A' && _jf <= 'Z') || (_jf >= '0' && _jf <= '9') || (_jf === '_')) {
                _iv2 = _iv2 + _NN._xc._1d[_t5]
            }
        }
    }
    if (_iv2.length === 0) {
        _iv2 = "GameMaker"
    }
    return _iv2 + "." + _Eh._Su2 + "."
}

function _jv2(_wP) {
    return (_Eh._Yu2 + _wP)
}

var _fL = 0;
var _jL = 1;
var _nL = 2;
var _kv2 = 3;
var _gL = 4;
var _bK = 5;
var _oL = 6;
var _lv2 = 7;
var _hL = 8;
var _kL = 9;
var _pL = 10;
var _mv2 = 11;
var _iL = 12;
var _lL = 13;
var _qL = 14;
var _nv2 = 15;
var _ov2 = 0;
var _pv2 = 1;
var _qv2 = 2;
var _rv2 = 3;
var _sv2 = 4;
var _tv2 = 5;
var _uv2 = 6;
var _vv2 = 7;
var _wv2 = 8;
var _xv2 = 9;
var _yv2 = 10;
var _zv2 = 11;
var _Av2 = 12;
var _Bv2 = 13;
var _Cv2 = 14;
var _Dv2 = 15;

function _JJ(_OF) {
    this._wt = new Float32Array(16);
    if (arguments.length > 0) {
        for (var _t5 = 0; _t5 < 16; _t5++) {
            this._wt[_t5] = _OF._wt[_t5]
        }
    } else {
        this._Ev2()
    }
}

_JJ.prototype._Ev2 = function (_uw) {
    this._wt[1] = this._wt[2] = this._wt[3] = this._wt[4] = this._wt[6] = this._wt[7] = this._wt[8] = this._wt[9] = this._wt[11] = this._wt[12] = this._wt[13] = this._wt[14] = 0.0;
    this._wt[0] = this._wt[5] = this._wt[10] = this._wt[15] = 1.0
};
_JJ.prototype._5K = function (_Fv2, _Gv2, _Hv2) {
    var _Iv2 = new _2K(_Hv2);
    var _Jv2 = new _2K();
    var _Kv2 = _Gv2._vW(_Fv2);
    _Kv2._xK();
    _Iv2._xK();
    _Jv2._Lv2(_Iv2, _Kv2);
    _Jv2._xK();
    _Iv2._Lv2(_Kv2, _Jv2);
    _Iv2._xK();
    var _AK = _Fv2._Mv2(_Jv2);
    var _BK = _Fv2._Mv2(_Iv2);
    var _CK = _Fv2._Mv2(_Kv2);
    this._wt[_fL] = _Jv2._AK;
    this._wt[_jL] = _Iv2._AK;
    this._wt[_nL] = _Kv2._AK;
    this._wt[_kv2] = 0.0;
    this._wt[_gL] = _Jv2._BK;
    this._wt[_bK] = _Iv2._BK;
    this._wt[_oL] = _Kv2._BK;
    this._wt[_lv2] = 0.0;
    this._wt[_hL] = _Jv2._CK;
    this._wt[_kL] = _Iv2._CK;
    this._wt[_pL] = _Kv2._CK;
    this._wt[_mv2] = 0.0;
    this._wt[_iL] = -_AK;
    this._wt[_lL] = -_BK;
    this._wt[_qL] = -_CK;
    this._wt[_nv2] = 1
};
_JJ.prototype._aK = function (_Nv2, _Ov2, _Pv2, _Qv2) {
    var _hv = _ut2(_Nv2);
    var _Rv2 = 1.0 / Math.tan(_hv * 0.5);
    var _lC1 = _Rv2 / _Ov2;
    this._wt[_fL] = _lC1;
    this._wt[_jL] = this._wt[_nL] = this._wt[_kv2] = 0.0;
    this._wt[_bK] = _Rv2;
    this._wt[_gL] = this._wt[_oL] = this._wt[_lv2] = 0.0;
    this._wt[_hL] = this._wt[_kL] = 0.0;
    this._wt[_mv2] = 1.0;
    this._wt[_pL] = _Qv2 / (_Qv2 - _Pv2);
    this._wt[_iL] = this._wt[_iL] = this._wt[_nv2] = 0.0;
    this._wt[_qL] = -_Pv2 * _Qv2 / (_Qv2 - _Pv2)
};
_JJ.prototype._gK = function (_HB, _IB, _Pv2, _Qv2) {
    this._wt[_fL] = 2 * _Pv2 / _HB;
    this._wt[_jL] = this._wt[_nL] = this._wt[_kv2] = 0.0;
    this._wt[_bK] = 2 * _Pv2 / _IB;
    this._wt[_gL] = this._wt[_oL] = this._wt[_lv2] = 0.0;
    this._wt[_hL] = this._wt[_kL] = 0.0;
    this._wt[_mv2] = 1.0;
    this._wt[_pL] = _Qv2 / (_Qv2 - _Pv2);
    this._wt[_iL] = this._wt[_lL] = this._wt[_nv2] = 0.0;
    this._wt[_qL] = -_Pv2 * _Qv2 / (_Qv2 - _Pv2)
};
_JJ.prototype._fK = function (_HB, _IB, _Pv2, _Qv2) {
    this._wt[_fL] = 2.0 / _HB;
    this._wt[_jL] = this._wt[_nL] = 0.0;
    this._wt[_kv2] = 0;
    this._wt[_bK] = 2.0 / _IB;
    this._wt[_gL] = this._wt[_oL] = 0.0;
    this._wt[_lv2] = 0;
    this._wt[_hL] = this._wt[_kL] = 0.0;
    this._wt[_pL] = 1.0 / (_Qv2 - _Pv2);
    this._wt[_mv2] = 0;
    this._wt[_iL] = this._wt[_lL] = 0.0;
    this._wt[_qL] = _Pv2 / (_Pv2 - _Qv2);
    this._wt[_nv2] = 1.0
};
_JJ.prototype.Multiply = function (_Sv2, _Tv2) {
    this._wt[_fL] = (_Sv2._wt[_fL] * _Tv2._wt[_fL]) + (_Sv2._wt[_jL] * _Tv2._wt[_gL]) + (_Sv2._wt[_nL] * _Tv2._wt[_hL]) + (_Sv2._wt[_kv2] * _Tv2._wt[_iL]);
    this._wt[_jL] = (_Sv2._wt[_fL] * _Tv2._wt[_jL]) + (_Sv2._wt[_jL] * _Tv2._wt[_bK]) + (_Sv2._wt[_nL] * _Tv2._wt[_kL]) + (_Sv2._wt[_kv2] * _Tv2._wt[_lL]);
    this._wt[_nL] = (_Sv2._wt[_fL] * _Tv2._wt[_nL]) + (_Sv2._wt[_jL] * _Tv2._wt[_oL]) + (_Sv2._wt[_nL] * _Tv2._wt[_pL]) + (_Sv2._wt[_kv2] * _Tv2._wt[_qL]);
    this._wt[_kv2] = (_Sv2._wt[_fL] * _Tv2._wt[_kv2]) + (_Sv2._wt[_jL] * _Tv2._wt[_lv2]) + (_Sv2._wt[_nL] * _Tv2._wt[_mv2]) + (_Sv2._wt[_kv2] * _Tv2._wt[_nv2]);
    this._wt[_gL] = (_Sv2._wt[_gL] * _Tv2._wt[_fL]) + (_Sv2._wt[_bK] * _Tv2._wt[_gL]) + (_Sv2._wt[_oL] * _Tv2._wt[_hL]) + (_Sv2._wt[_lv2] * _Tv2._wt[_iL]);
    this._wt[_bK] = (_Sv2._wt[_gL] * _Tv2._wt[_jL]) + (_Sv2._wt[_bK] * _Tv2._wt[_bK]) + (_Sv2._wt[_oL] * _Tv2._wt[_kL]) + (_Sv2._wt[_lv2] * _Tv2._wt[_lL]);
    this._wt[_oL] = (_Sv2._wt[_gL] * _Tv2._wt[_nL]) + (_Sv2._wt[_bK] * _Tv2._wt[_oL]) + (_Sv2._wt[_oL] * _Tv2._wt[_pL]) + (_Sv2._wt[_lv2] * _Tv2._wt[_qL]);
    this._wt[_lv2] = (_Sv2._wt[_gL] * _Tv2._wt[_kv2]) + (_Sv2._wt[_bK] * _Tv2._wt[_lv2]) + (_Sv2._wt[_oL] * _Tv2._wt[_mv2]) + (_Sv2._wt[_lv2] * _Tv2._wt[_nv2]);
    this._wt[_hL] = (_Sv2._wt[_hL] * _Tv2._wt[_fL]) + (_Sv2._wt[_kL] * _Tv2._wt[_gL]) + (_Sv2._wt[_pL] * _Tv2._wt[_hL]) + (_Sv2._wt[_mv2] * _Tv2._wt[_iL]);
    this._wt[_kL] = (_Sv2._wt[_hL] * _Tv2._wt[_jL]) + (_Sv2._wt[_kL] * _Tv2._wt[_bK]) + (_Sv2._wt[_pL] * _Tv2._wt[_kL]) + (_Sv2._wt[_mv2] * _Tv2._wt[_lL]);
    this._wt[_pL] = (_Sv2._wt[_hL] * _Tv2._wt[_nL]) + (_Sv2._wt[_kL] * _Tv2._wt[_oL]) + (_Sv2._wt[_pL] * _Tv2._wt[_pL]) + (_Sv2._wt[_mv2] * _Tv2._wt[_qL]);
    this._wt[_mv2] = (_Sv2._wt[_hL] * _Tv2._wt[_kv2]) + (_Sv2._wt[_kL] * _Tv2._wt[_lv2]) + (_Sv2._wt[_pL] * _Tv2._wt[_mv2]) + (_Sv2._wt[_mv2] * _Tv2._wt[_nv2]);
    this._wt[_iL] = (_Sv2._wt[_iL] * _Tv2._wt[_fL]) + (_Sv2._wt[_lL] * _Tv2._wt[_gL]) + (_Sv2._wt[_qL] * _Tv2._wt[_hL]) + (_Sv2._wt[_nv2] * _Tv2._wt[_iL]);
    this._wt[_lL] = (_Sv2._wt[_iL] * _Tv2._wt[_jL]) + (_Sv2._wt[_lL] * _Tv2._wt[_bK]) + (_Sv2._wt[_qL] * _Tv2._wt[_kL]) + (_Sv2._wt[_nv2] * _Tv2._wt[_lL]);
    this._wt[_qL] = (_Sv2._wt[_iL] * _Tv2._wt[_nL]) + (_Sv2._wt[_lL] * _Tv2._wt[_oL]) + (_Sv2._wt[_qL] * _Tv2._wt[_pL]) + (_Sv2._wt[_nv2] * _Tv2._wt[_qL]);
    this._wt[_nv2] = (_Sv2._wt[_iL] * _Tv2._wt[_kv2]) + (_Sv2._wt[_lL] * _Tv2._wt[_lv2]) + (_Sv2._wt[_qL] * _Tv2._wt[_mv2]) + (_Sv2._wt[_nv2] * _Tv2._wt[_nv2])
};
_JJ.prototype._8L = function (_Ts) {
    this._Ev2();
    var _hv = _ut2(_Ts);
    var _ZN = Math.sin(_hv);
    var _u5 = Math.cos(_hv);
    this._wt[_fL] = _u5;
    this._wt[_jL] = -_ZN;
    this._wt[_gL] = _ZN;
    this._wt[_bK] = _u5
};
_JJ.prototype._7L = function (_Ts) {
    this._Ev2();
    var _hv = _ut2(_Ts);
    var _ZN = Math.sin(_hv);
    var _u5 = Math.cos(_hv);
    this._wt[_fL] = _u5;
    this._wt[_nL] = _ZN;
    this._wt[_hL] = -_ZN;
    this._wt[_pL] = _u5
};
_JJ.prototype._6L = function (_Ts) {
    this._Ev2();
    var _hv = _ut2(_Ts);
    var _ZN = Math.sin(_hv);
    var _u5 = Math.cos(_hv);
    this._wt[_bK] = _u5;
    this._wt[_oL] = -_ZN;
    this._wt[_kL] = _ZN;
    this._wt[_pL] = _u5
};
_JJ.prototype._4L = function (_Ps, _Qs, _0y) {
    this._Ev2();
    this._wt[_iL] = _Ps;
    this._wt[_lL] = _Qs;
    this._wt[_qL] = _0y
};
_JJ.prototype._5L = function (_Ld1, _Md1, _Uv2) {
    this._Ev2();
    this._wt[_fL] = _Ld1;
    this._wt[_bK] = _Md1;
    this._wt[_pL] = _Uv2
}
;_JJ.prototype._9L = function (_Rx, _Ts) {
    _Rx._xK();
    var _hv = _ut2(_Ts);
    var _u5 = Math.cos(_hv);
    var _ZN = Math.sin(_hv);
    var _Vv2 = 1.0 - _u5;
    this._Ev2();
    this._wt[0] = (_Vv2 * _Rx._AK * _Rx._AK + _u5);
    this._wt[1] = (_Vv2 * _Rx._AK * _Rx._BK + _ZN * _Rx._CK);
    this._wt[2] = (_Vv2 * _Rx._AK * _Rx._CK - _ZN * _Rx._BK);
    this._wt[4] = (_Vv2 * _Rx._AK * _Rx._BK - _ZN * _Rx._CK);
    this._wt[5] = (_Vv2 * _Rx._BK * _Rx._BK + _u5);
    this._wt[6] = (_Vv2 * _Rx._BK * _Rx._CK + _ZN * _Rx._AK);
    this._wt[8] = (_Vv2 * _Rx._AK * _Rx._CK + _ZN * _Rx._BK);
    this._wt[9] = (_Vv2 * _Rx._BK * _Rx._CK - _ZN * _Rx._AK);
    this._wt[10] = (_Vv2 * _Rx._CK * _Rx._CK + _u5);
};
_JJ.prototype._KL = function (_Ps, _Qs, _0y, _DL, _EL, _FL, _GL, _HL, _IL) {
    var _Wv2 = Math.sin(_DL);
    var _Xv2 = Math.cos(_DL);
    var _Yv2 = Math.sin(_EL);
    var _Zv2 = Math.cos(_EL);
    var __v2 = Math.sin(_FL);
    var _0w2 = Math.cos(_FL);
    var _1w2 = -__v2 * -_Wv2;
    var _2w2 = _0w2 * -_Wv2;
    this._wt[0] = ((_0w2 * _Zv2) + (_1w2 * -_Yv2)) * _GL;
    this._wt[4] = (-__v2 * _Xv2) * _GL;
    this._wt[8] = ((_0w2 * _Yv2) + (_1w2 * _Zv2)) * _GL;
    this._wt[12] = _Ps;
    this._wt[1] = ((__v2 * _Zv2) + (_2w2 * -_Yv2)) * _HL;
    this._wt[5] = (_0w2 * _Xv2) * _HL;
    this._wt[9] = ((__v2 * _Yv2) + (_2w2 * _Zv2)) * _HL;
    this._wt[13] = _Qs;
    this._wt[2] = (_Xv2 * -_Yv2) * _IL;
    this._wt[6] = _Wv2 * _IL;
    this._wt[10] = (_Xv2 * _Zv2) * _IL;
    this._wt[14] = _0y;
    this._wt[3] = this._wt[7] = this._wt[11] = 0.0;
    this._wt[15] = 1.0
};
_JJ.prototype._zV = function (_3w2) {
    var _4w2 = _3w2._wt[_ov2] * _3w2._wt[_tv2] - _3w2._wt[_sv2] * _3w2._wt[_pv2];
    var _NL = _3w2._wt[_ov2] * _3w2._wt[_uv2] - _3w2._wt[_sv2] * _3w2._wt[_qv2];
    var _OL = _3w2._wt[_ov2] * _3w2._wt[_vv2] - _3w2._wt[_sv2] * _3w2._wt[_rv2];
    var _PL = _3w2._wt[_pv2] * _3w2._wt[_uv2] - _3w2._wt[_tv2] * _3w2._wt[_qv2];
    var _5w2 = _3w2._wt[_pv2] * _3w2._wt[_vv2] - _3w2._wt[_tv2] * _3w2._wt[_rv2];
    var _6w2 = _3w2._wt[_qv2] * _3w2._wt[_vv2] - _3w2._wt[_uv2] * _3w2._wt[_rv2];
    var _7w2 = _3w2._wt[_yv2] * _3w2._wt[_Dv2] - _3w2._wt[_Cv2] * _3w2._wt[_zv2];
    var _8w2 = _3w2._wt[_xv2] * _3w2._wt[_Dv2] - _3w2._wt[_Bv2] * _3w2._wt[_zv2];
    var _dj1 = _3w2._wt[_xv2] * _3w2._wt[_Cv2] - _3w2._wt[_Bv2] * _3w2._wt[_yv2];
    var _2j1 = _3w2._wt[_wv2] * _3w2._wt[_Dv2] - _3w2._wt[_Av2] * _3w2._wt[_zv2];
    var _1j1 = _3w2._wt[_wv2] * _3w2._wt[_Cv2] - _3w2._wt[_Av2] * _3w2._wt[_yv2];
    var _xj1 = _3w2._wt[_wv2] * _3w2._wt[_Bv2] - _3w2._wt[_Av2] * _3w2._wt[_xv2];
    var _6j1 = (_4w2 * _7w2 - _NL * _8w2 + _OL * _dj1 + _PL * _2j1 - _5w2 * _1j1 + _6w2 * _xj1);
    if (_6j1 != 0) {
        var _9w2 = 1.0 / _6j1;
        var _Nt = new Float32Array(16);
        _Nt[_ov2] = (_3w2._wt[_tv2] * _7w2 - _3w2._wt[_uv2] * _8w2 + _3w2._wt[_vv2] * _dj1) * _9w2;
        _Nt[_pv2] = (-_3w2._wt[_pv2] * _7w2 + _3w2._wt[_qv2] * _8w2 - _3w2._wt[_rv2] * _dj1) * _9w2;
        _Nt[_qv2] = (_3w2._wt[_Bv2] * _6w2 - _3w2._wt[_Cv2] * _5w2 + _3w2._wt[_Dv2] * _PL) * _9w2;
        _Nt[_rv2] = (-_3w2._wt[_xv2] * _6w2 + _3w2._wt[_yv2] * _5w2 - _3w2._wt[_zv2] * _PL) * _9w2;
        _Nt[_sv2] = (-_3w2._wt[_sv2] * _7w2 + _3w2._wt[_uv2] * _2j1 - _3w2._wt[_vv2] * _1j1) * _9w2;
        _Nt[_tv2] = (_3w2._wt[_ov2] * _7w2 - _3w2._wt[_qv2] * _2j1 + _3w2._wt[_rv2] * _1j1) * _9w2;
        _Nt[_uv2] = (-_3w2._wt[_Av2] * _6w2 + _3w2._wt[_Cv2] * _OL - _3w2._wt[_Dv2] * _NL) * _9w2;
        _Nt[_vv2] = (_3w2._wt[_wv2] * _6w2 - _3w2._wt[_yv2] * _OL + _3w2._wt[_zv2] * _NL) * _9w2;
        _Nt[_wv2] = (_3w2._wt[_sv2] * _8w2 - _3w2._wt[_tv2] * _2j1 + _3w2._wt[_vv2] * _xj1) * _9w2;
        _Nt[_xv2] = (-_3w2._wt[_ov2] * _8w2 + _3w2._wt[_pv2] * _2j1 - _3w2._wt[_rv2] * _xj1) * _9w2;
        _Nt[_yv2] = (_3w2._wt[_Av2] * _5w2 - _3w2._wt[_Bv2] * _OL + _3w2._wt[_Dv2] * _4w2) * _9w2;
        _Nt[_zv2] = (-_3w2._wt[_wv2] * _5w2 + _3w2._wt[_xv2] * _OL - _3w2._wt[_zv2] * _4w2) * _9w2;
        _Nt[_Av2] = (-_3w2._wt[_sv2] * _dj1 + _3w2._wt[_tv2] * _1j1 - _3w2._wt[_uv2] * _xj1) * _9w2;
        _Nt[_Bv2] = (_3w2._wt[_ov2] * _dj1 - _3w2._wt[_pv2] * _1j1 + _3w2._wt[_qv2] * _xj1) * _9w2;
        _Nt[_Cv2] = (-_3w2._wt[_Av2] * _PL + _3w2._wt[_Bv2] * _NL - _3w2._wt[_Cv2] * _4w2) * _9w2;
        _Nt[_Dv2] = (_3w2._wt[_wv2] * _PL - _3w2._wt[_xv2] * _NL + _3w2._wt[_yv2] * _4w2) * _9w2;
        this._wt = _Nt
    }
};
_JJ.prototype._tW = function (_aw2) {
    var _bw2 = new _2K(0.0, 0.0, 0.0);
    if (_aw2 != undefined) {
        _bw2._AK = (this._wt[_fL] * _aw2._AK) + (this._wt[_gL] * _aw2._BK) + (this._wt[_hL] * _aw2._CK) + this._wt[_iL];
        _bw2._BK = (this._wt[_jL] * _aw2._AK) + (this._wt[_bK] * _aw2._BK) + (this._wt[_kL] * _aw2._CK) + this._wt[_lL];
        _bw2._CK = (this._wt[_nL] * _aw2._AK) + (this._wt[_oL] * _aw2._BK) + (this._wt[_pL] * _aw2._CK) + this._wt[_qL]
    }
    return _bw2
};

function _ED() {
    this.x = 0;
    this.y = 0;
    this._v5 = 0;
    this._w5 = 0;
    this._pc = 0;
    this._qc = 0;
    this._rc = 0;
    this._sc = 0;
    this._tc = 0;
    this._uc = 0;
    this._vc = 0;
    this._Wb1 = _6v2
}

function _6v2(_9c1) {
    this.x = _9c1.x;
    this.y = _9c1.y;
    this._v5 = _9c1._v5;
    this._w5 = _9c1._w5;
    this._pc = _9c1._pc;
    this._qc = _9c1._qc;
    this._rc = _9c1._rc;
    this._sc = _9c1._sc;
    this._tc = _9c1._tc;
    this._uc = _9c1._uc;
    this._vc = _9c1._vc
}

function _cw2(_2v) {
    _zw("splash_set_color()")
}

var _dw2 = _cw2;
var _ew2 = !0;

function _fw2(_Bw) {
    _zw("texture_get_width()")
}

function _gw2(_Bw) {
    _zw("texture_get_height()")
}

function _hw2(_s_) {
    _zw("texture_set_blending()")
}

function _jK(repeat) {
    _zw("texture_set_repeat()")
}

function _iK() {
    _zw("texture_get_repeat()")
}

function _iw2(repeat) {
    _zw("texture_set_repeat_ext()")
}

function _jw2(_DM) {
    _zw("texture_set_interpolation()")
}

function _kw2() {
    _zw("texture_set_interpolation_ext()")
}

function _lw2(_Eu) {
    _zw("texture_get_uvs()")
}

function _mw2() {
    _zw("draw_set_alpha_test()")
}

function _nw2() {
    _zw("draw_set_alpha_test_ref_value()")
}

function _ow2() {
    _zw("draw_get_alpha_test()");
    return 0
}

function _pw2() {
    _zw("draw_get_alpha_test_ref_value()");
    return 0
}

function _2K(_qw2, _rw2, _sw2) {
    if (arguments.length > 0) {
        if (arguments.length == 3) {
            this._AK = _qw2;
            this._BK = _rw2;
            this._CK = _sw2
        } else {
            this._AK = _qw2._AK;
            this._BK = _qw2._BK;
            this._CK = _qw2._CK
        }
    } else {
        this._AK = 1.0;
        this._BK = 0.0;
        this._CK = 0.0
    }
}

_2K.prototype._3C = function (_uw) {
    return new _2K(this._AK + _uw._AK, this._BK + _uw._BK, this._CK + _uw._CK)
};
_2K.prototype._vW = function (_uw) {
    return new _2K(this._AK - _uw._AK, this._BK - _uw._BK, this._CK - _uw._CK)
};
_2K.prototype._xK = function () {
    var _MN = 1.0 / Math.sqrt((this._AK * this._AK) + (this._BK * this._BK) + (this._CK * this._CK));
    this._AK = this._AK * _MN;
    this._BK = this._BK * _MN;
    this._CK = this._CK * _MN
};
_2K.prototype._tw2 = function () {
    var _uw2 = (this._AK * this._AK) + (this._BK * this._BK) + (this._CK * this._CK);
    return _uw2
};
_2K.prototype.Length = function () {
    var _uw2 = this._tw2();
    if (_uw2 > 0.0) {
        return Math.sqrt(_uw2)
    } else {
        return 0.0
    }
};
_2K.prototype._Lv2 = function (_vw2, _ww2) {
    this._AK = (_vw2._BK * _ww2._CK) - (_vw2._CK * _ww2._BK);
    this._BK = (_vw2._CK * _ww2._AK) - (_vw2._AK * _ww2._CK);
    this._CK = (_vw2._AK * _ww2._BK) - (_vw2._BK * _ww2._AK)
};
_2K.prototype._Mv2 = function (_xw2) {
    return (this._AK * _xw2._AK) + (this._BK * _xw2._BK) + (this._CK * _xw2._CK);
};
(function (global, _xN1, _yw2) {
    'use strict';

    function _zw2(_Aw2) {
        if (!_Aw2) return;
        if (!_Aw2.setTargetAtTime) _Aw2.setTargetAtTime = _Aw2.setTargetValueAtTime
    }

    if (window.hasOwnProperty('webkitAudioContext') && !window.hasOwnProperty('AudioContext')) {
        window.AudioContext = webkitAudioContext;
        if (!AudioContext.prototype.hasOwnProperty('createGain')) AudioContext.prototype.createGain = AudioContext.prototype.createGainNode;
        if (!AudioContext.prototype.hasOwnProperty('createDelay')) AudioContext.prototype.createDelay = AudioContext.prototype._Bw2;
        if (!AudioContext.prototype.hasOwnProperty('createScriptProcessor')) AudioContext.prototype.createScriptProcessor = AudioContext.prototype._Cw2;
        if (!AudioContext.prototype.hasOwnProperty('createPeriodicWave')) AudioContext.prototype.createPeriodicWave = AudioContext.prototype._Dw2;
        AudioContext.prototype._Ew2 = AudioContext.prototype.createGain;
        AudioContext.prototype.createGain = function () {
            var _3e1 = this._Ew2();
            _zw2(_3e1.gain);
            return _3e1
        };
        AudioContext.prototype._Fw2 = AudioContext.prototype.createDelay;
        AudioContext.prototype.createDelay = function (_Gw2) {
            var _3e1 = _Gw2 ? this._Fw2(_Gw2) : this._Fw2();
            _zw2(_3e1.delayTime);
            return _3e1
        };
        AudioContext.prototype._Hw2 = AudioContext.prototype.createBufferSource;
        AudioContext.prototype.createBufferSource = function () {
            var _3e1 = this._Hw2();
            if (!_3e1.start) {
                _3e1.start = function (_Iw2, offset, duration) {
                    if (offset || duration) this.noteGrainOn(_Iw2 || 0, offset, duration); else this.noteOn(_Iw2 || 0)
                }
            } else {
                _3e1._Jw2 = _3e1.start;
                _3e1.start = function (_Iw2, offset, duration) {
                    if (typeof duration !== 'undefined') _3e1._Jw2(_Iw2 || 0, offset, duration); else _3e1._Jw2(_Iw2 || 0,
                        offset || 0)
                }
            }
            if (!_3e1.stop) {
                _3e1.stop = function (_Iw2) {
                    this.noteOff(_Iw2 || 0)
                }
            } else {
                _3e1._Kw2 = _3e1.stop;
                _3e1.stop = function (_Iw2) {
                    _3e1._Kw2(_Iw2 || 0)
                }
            }
            _zw2(_3e1.playbackRate);
            return _3e1
        };
        AudioContext.prototype._Lw2 = AudioContext.prototype._Mw2;
        AudioContext.prototype._Mw2 = function () {
            var _3e1 = this._Lw2();
            _zw2(_3e1._Nw2);
            _zw2(_3e1._Ow2);
            _zw2(_3e1._3H1);
            _zw2(_3e1._Pw2);
            _zw2(_3e1._Qw2);
            _zw2(_3e1._Rw2);
            return _3e1
        };
        AudioContext.prototype._Sw2 = AudioContext.prototype._Tw2;
        AudioContext.prototype._Tw2 = function () {
            var _3e1 = this._Sw2();
            _zw2(_3e1._jN1);
            _zw2(_3e1._Uw2);
            _zw2(_3e1._0r1);
            _zw2(_3e1.gain);
            return _3e1
        };
        if (AudioContext.prototype.hasOwnProperty('createOscillator')) {
            AudioContext.prototype._Vw2 = AudioContext.prototype._Ww2;
            AudioContext.prototype._Ww2 = function () {
                var _3e1 = this._Vw2();
                if (!_3e1.start) {
                    _3e1.start = function (_Iw2) {
                        this.noteOn(_Iw2 || 0)
                    }
                } else {
                    _3e1._Jw2 = _3e1.start;
                    _3e1.start = function (_Iw2) {
                        _3e1._Jw2(_Iw2 || 0)
                    }
                }
                if (!_3e1.stop) {
                    _3e1.stop = function (_Iw2) {
                        this.noteOff(_Iw2 || 0)
                    }
                } else {
                    _3e1._Kw2 = _3e1.stop;
                    _3e1.stop = function (_Iw2) {
                        _3e1._Kw2(_Iw2 || 0);
                    }
                }
                if (!_3e1._Xw2) _3e1._Xw2 = _3e1._Yw2;
                _zw2(_3e1._jN1);
                _zw2(_3e1._Uw2);
                return _3e1
            }
        }
    }
    if (window.hasOwnProperty('webkitOfflineAudioContext') && !window.hasOwnProperty('OfflineAudioContext')) {
        window.OfflineAudioContext = webkitOfflineAudioContext
    }
}(window));
var _Zw2 = 0, __w2 = 1, _0x2 = 2, _1x2 = 3, _2x2 = 4, _3x2 = 5, _4x2 = 6, _5x2 = 7, _6x2 = 8, _7x2 = 9, _8x2 = 10,
    _9x2 = 11, _ax2 = 12, _bx2 = 13, _cx2 = 14, _dx2 = 15;

function _MK() {
    this._NA()
}

_MK.prototype._NA = function () {
    this._ex2 = [];
    this._fx2 = []
};
_MK.prototype._gx2 = function () {
    var _hx2 = "100\n";
    _hx2 += this._ex2.length.toString() + "\n";
    for (var _t5 = 0; _t5 < this._ex2.length; _t5++) {
        var _ix2 = this._ex2[_t5];
        _hx2 += _ix2._jx2.toString() + " ";
        switch (_ix2._jx2) {
            case __w2:
                break;
            case _Zw2:
                _hx2 += _ix2._kx2.toString();
                break;
            case _0x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += "0.0 0.0 0.0 0.0 0.0 0.0 0.0\n";
                break;
            case _1x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += (_ix2.color * 1.0).toString() + " ";
                _hx2 += _ix2.alpha.toString() + " ";
                _hx2 += "0.0 0.0 0.0 0.0 0.0\n";
                break;
            case _2x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += _ix2._sv.toString() + " ";
                _hx2 += _ix2._uv.toString() + " ";
                _hx2 += "0.0 0.0 0.0 0.0 0.0\n";
                break;
            case _3x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += _ix2._sv.toString() + " ";
                _hx2 += _ix2._uv.toString() + " ";
                _hx2 += (_ix2.color * 1.0).toString() + " ";
                _hx2 += _ix2.alpha.toString() + " ";
                _hx2 += "0.0 0.0 0.0\n";
                break;
            case _4x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += _ix2._Tw.toString() + " ";
                _hx2 += _ix2._Uw.toString() + " ";
                _hx2 += _ix2._Vw.toString() + " ";
                _hx2 += "0.0 0.0 0.0 0.0\n";
                break;
            case _5x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += _ix2._Tw.toString() + " ";
                _hx2 += _ix2._Uw.toString() + " ";
                _hx2 += _ix2._Vw.toString() + " ";
                _hx2 += (_ix2.color * 1.0).toString() + " ";
                _hx2 += _ix2.alpha.toString() + " ";
                _hx2 += "0.0 0.0\n";
                break;
            case _6x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += _ix2._Tw.toString() + " ";
                _hx2 += _ix2._Uw.toString() + " ";
                _hx2 += _ix2._Vw.toString() + " ";
                _hx2 += _ix2._sv.toString() + " ";
                _hx2 += _ix2._uv.toString() + " ";
                _hx2 += "0.0 0.0\n";
                break;
            case _7x2:
                _hx2 += _ix2.x.toString() + " ";
                _hx2 += _ix2.y.toString() + " ";
                _hx2 += _ix2._Mw.toString() + " ";
                _hx2 += _ix2._Tw.toString() + " ";
                _hx2 += _ix2._Uw.toString() + " ";
                _hx2 += _ix2._Vw.toString() + " ";
                _hx2 += _ix2._sv.toString() + " ";
                _hx2 += _ix2._uv.toString() + " ";
                _hx2 += (_ix2.color * 1.0).toString() + " ";
                _hx2 += _ix2.alpha.toString() + " ";
                _hx2 += "\n";
                break;
            case _8x2:
            case _cx2:
            case _dx2:
                _hx2 += _ix2._xt.toString() + " ";
                _hx2 += _ix2._yt.toString() + " ";
                _hx2 += _ix2._BE.toString() + " ";
                _hx2 += _ix2._zt.toString() + " ";
                _hx2 += _ix2._At.toString() + " ";
                _hx2 += _ix2._CE.toString() + " ";
                _hx2 += (_ix2._kK ? 1.0 : 0.0).toString() + " ";
                _hx2 += (_ix2._lK ? 1.0 : 0.0).toString() + " ";
                _hx2 += "0.0 0.0\n";
                break;
            case _bx2:
                _hx2 += _ix2._xt.toString() + " ";
                _hx2 += _ix2._yt.toString() + " ";
                _hx2 += _ix2._BE.toString() + " ";
                _hx2 += _ix2._zt.toString() + " ";
                _hx2 += _ix2._At.toString() + " ";
                _hx2 += _ix2._CE.toString() + " ";
                _hx2 += (_ix2._kK ? 1.0 : 0.0).toString() + " ";
                _hx2 += (_ix2._lK ? 1.0 : 0.0).toString() + " ";
                _hx2 += (_ix2._GE * 1.0).toString() + " ";
                _hx2 += "0.0\n";
                break;
            case _9x2:
            case _ax2:
                _hx2 += _ix2._xt.toString() + " ";
                _hx2 += _ix2._yt.toString() + " ";
                _hx2 += _ix2._BE.toString() + " ";
                _hx2 += _ix2._zt.toString() + " ";
                _hx2 += _ix2._At.toString() + " ";
                _hx2 += _ix2._CE.toString() + " ";
                _hx2 += (_ix2._kK ? 1.0 : 0.0).toString() + " ";
                _hx2 += (_ix2._lK ? 1.0 : 0.0).toString() + " ";
                _hx2 += (_ix2._JE ? 1.0 : 0.0).toString() + " ";
                _hx2 += (_ix2._GE * 1.0).toString() + " ";
                _hx2 += "\n";
                break
        }
    }
    return _hx2
};
_MK.prototype._NK = function (_wP) {
    if (_eZ === true) {
        var _lx2 = this._gx2();
        var _mx2 = _vP(_wP);
        _yP(_mx2, _lx2);
        _qP(_mx2)
    } else {
        debug("d3d_model_save() browser does not support local storage\n")
    }
};
_MK.prototype._nx2 = function (_ox2) {
    var _px2 = "";
    var _j72 = false;
    for (var _t5 = 0; _t5 < _ox2.length; _t5++) {
        var _qx2 = _ox2.charAt(_t5);
        if (_qx2 == ' ') {
            if (!_j72) {
                _px2 = _px2 + _qx2
            }
            _j72 = true
        } else {
            _j72 = false;
            _px2 = _px2 + _qx2
        }
    }
    return _px2
};
_MK.prototype._rx2 = function (_sx2) {
    var _tx2 = _sx2.split("\n");
    var version = parseInt(_tx2[0]);
    if (version == 100) {
        var _ux2 = parseInt(_tx2[1]);
        for (var _t5 = 2; _t5 < _tx2.length; _t5++) {
            var _ix2 = {};
            var _vx2 = this._nx2(_tx2[_t5]);
            var _wx2 = _vx2.split(" ");
            _ix2._jx2 = parseInt(_wx2[0]);
            switch (_ix2._jx2) {
                case __w2:
                    break;
                case _Zw2: {
                    _ix2._kx2 = parseInt(_wx2[1]);
                    break
                }
                case _0x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    break
                }
                case _1x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2.color = parseInt(_wx2[4]);
                    _ix2.alpha = parseFloat(_wx2[5]);
                    break
                }
                case _2x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2._sv = parseFloat(_wx2[4]);
                    _ix2._uv = parseFloat(_wx2[5]);
                    break
                }
                case _3x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2._sv = parseFloat(_wx2[4]);
                    _ix2._uv = parseFloat(_wx2[5]);
                    _ix2.color = parseInt(_wx2[6]);
                    _ix2.alpha = parseFloat(_wx2[7]);
                    break
                }
                case _4x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2._Tw = parseFloat(_wx2[4]);
                    _ix2._Uw = parseFloat(_wx2[5]);
                    _ix2._Vw = parseFloat(_wx2[6]);
                    break
                }
                case _5x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2._Tw = parseFloat(_wx2[4]);
                    _ix2._Uw = parseFloat(_wx2[5]);
                    _ix2._Vw = parseFloat(_wx2[6]);
                    _ix2.color = parseInt(_wx2[7]);
                    _ix2.alpha = parseFloat(_wx2[8]);
                    break
                }
                case _6x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2._Tw = parseFloat(_wx2[4]);
                    _ix2._Uw = parseFloat(_wx2[5]);
                    _ix2._Vw = parseFloat(_wx2[6]);
                    _ix2._sv = parseFloat(_wx2[7]);
                    _ix2._uv = parseFloat(_wx2[8]);
                    break
                }
                case _7x2: {
                    _ix2.x = parseFloat(_wx2[1]);
                    _ix2.y = parseFloat(_wx2[2]);
                    _ix2._Mw = parseFloat(_wx2[3]);
                    _ix2._Tw = parseFloat(_wx2[4]);
                    _ix2._Uw = parseFloat(_wx2[5]);
                    _ix2._Vw = parseFloat(_wx2[6]);
                    _ix2._sv = parseFloat(_wx2[7]);
                    _ix2._uv = parseFloat(_wx2[8]);
                    _ix2.color = parseInt(_wx2[9]);
                    _ix2.alpha = parseFloat(_wx2[10]);
                    break
                }
                case _8x2:
                case _cx2:
                case _dx2: {
                    _ix2._xt = parseFloat(_wx2[1]);
                    _ix2._yt = parseFloat(_wx2[2]);
                    _ix2._BE = parseFloat(_wx2[3]);
                    _ix2._zt = parseFloat(_wx2[4]);
                    _ix2._At = parseFloat(_wx2[5]);
                    _ix2._CE = parseFloat(_wx2[6]);
                    _ix2._kK = (parseFloat(_wx2[7]) >= 0.5) ? true : false;
                    _ix2._lK = (parseFloat(_wx2[8]) >= 0.5) ? true : false;
                    break
                }
                case _bx2: {
                    _ix2._xt = parseFloat(_wx2[1]);
                    _ix2._yt = parseFloat(_wx2[2]);
                    _ix2._BE = parseFloat(_wx2[3]);
                    _ix2._zt = parseFloat(_wx2[4]);
                    _ix2._At = parseFloat(_wx2[5]);
                    _ix2._CE = parseFloat(_wx2[6]);
                    _ix2._kK = (parseFloat(_wx2[7]) >= 0.5) ? true : false;
                    _ix2._lK = (parseFloat(_wx2[8]) >= 0.5) ? true : false;
                    _ix2._GE = ~~parseFloat(_wx2[9]);
                    break
                }
                case _9x2:
                case _ax2: {
                    _ix2._xt = parseFloat(_wx2[1]);
                    _ix2._yt = parseFloat(_wx2[2]);
                    _ix2._BE = parseFloat(_wx2[3]);
                    _ix2._zt = parseFloat(_wx2[4]);
                    _ix2._At = parseFloat(_wx2[5]);
                    _ix2._CE = parseFloat(_wx2[6]);
                    _ix2._kK = (parseFloat(_wx2[7]) >= 0.5) ? true : false;
                    _ix2._lK = (parseFloat(_wx2[8]) >= 0.5) ? true : false;
                    _ix2._JE = (parseFloat(_wx2[9]) >= 0.5) ? true : false;
                    _ix2._GE = ~~parseFloat(_wx2[10]);
                    break
                }
            }
            this._ex2.push(_ix2)
        }
    }
};
_MK.prototype._Ku = function (_wP) {
    var _xx2 = _KQ(_wP, true);
    if (_xx2 !== null && _xx2 !== undefined) {
        this._rx2(_xx2)
    } else {
        var _QE = _H91(_wP);
        var _Nu = this;
        var _yx2 = new XMLHttpRequest();
        _yx2.open("GET",
            _QE, false);
        _yx2.onload = function () {
            if (_yx2.readyState == 4 && _yx2.status == 200) {
                _Nu._rx2(_yx2.responseText)
            }
        };
        _yx2.send(null)
    }
};
_MK.prototype._By = function (_G3) {
    this._ex2.push({_jx2: _Zw2, _kx2: _G3})
};
_MK.prototype._Dy = function () {
    this._ex2.push({_jx2: __w2})
};
_MK.prototype._PK = function (x, y, _Mw) {
    this._ex2.push({_jx2: _0x2, x: x, y: y, _Mw: _Mw})
};
_MK.prototype._QK = function (x, y, _Mw, _2v, alpha) {
    this._ex2.push({_jx2: _1x2, x: x, y: y, _Mw: _Mw, color: _2v, alpha: alpha})
};
_MK.prototype._RK = function (x, y, _Mw, _Fw, _Gw) {
    this._ex2.push({
        _jx2: _2x2, x: x, y: y, _Mw: _Mw, _sv: _Fw, _uv: _Gw
    })
};
_MK.prototype._SK = function (x, y, _Mw, _Fw, _Gw, _2v, alpha) {
    this._ex2.push({_jx2: _3x2, x: x, y: y, _Mw: _Mw, _sv: _Fw, _uv: _Gw, color: _2v, alpha: alpha})
};
_MK.prototype._TK = function (x, y, _Mw, _Tw, _Uw, _Vw) {
    this._ex2.push({_jx2: _4x2, x: x, y: y, _Mw: _Mw, _Tw: _Tw, _Uw: _Uw, _Vw: _Vw})
};
_MK.prototype._UK = function (x, y, _Mw, _Tw, _Uw, _Vw, _2v, alpha) {
    this._ex2.push({_jx2: _5x2, x: x, y: y, _Mw: _Mw, _Tw: _Tw, _Uw: _Uw, _Vw: _Vw, color: _2v, alpha: alpha})
};
_MK.prototype._VK = function (x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw) {
    this._ex2.push({_jx2: _6x2, x: x, y: y, _Mw: _Mw, _Tw: _Tw, _Uw: _Uw, _Vw: _Vw, _sv: _Fw, _uv: _Gw})
};
_MK.prototype._WK = function (x, y, _Mw, _Tw, _Uw, _Vw, _Fw, _Gw, _2v, alpha) {
    this._ex2.push({
        _jx2: _7x2,
        x: x,
        y: y,
        _Mw: _Mw,
        _Tw: _Tw,
        _Uw: _Uw,
        _Vw: _Vw,
        _sv: _Fw,
        _uv: _Gw,
        color: _2v,
        alpha: alpha
    })
};
_MK.prototype._XK = function (_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    this._ex2.push({_jx2: _8x2, _xt: _xt, _yt: _yt, _BE: _BE, _zt: _zt, _At: _At, _CE: _CE, _kK: _DE, _lK: _EE})
};
_MK.prototype._YK = function (_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE) {
    this._ex2.push({
        _jx2: _9x2,
        _xt: _xt, _yt: _yt, _BE: _BE, _zt: _zt, _At: _At, _CE: _CE, _kK: _DE, _lK: _EE, _JE: _JE, _GE: _GE
    })
};
_MK.prototype._ZK = function (_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _JE, _GE) {
    this._ex2.push({
        _jx2: _ax2,
        _xt: _xt,
        _yt: _yt,
        _BE: _BE,
        _zt: _zt,
        _At: _At,
        _CE: _CE,
        _kK: _DE,
        _lK: _EE,
        _JE: _JE,
        _GE: _GE
    })
};
_MK.prototype.__K = function (_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE, _GE) {
    this._ex2.push({
        _jx2: _bx2,
        _xt: _xt,
        _yt: _yt,
        _BE: _BE,
        _zt: _zt,
        _At: _At,
        _CE: _CE,
        _kK: _DE,
        _lK: _EE,
        _GE: _GE
    })
};
_MK.prototype._0L = function (_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    this._ex2.push({
        _jx2: _cx2, _xt: _xt, _yt: _yt, _BE: _BE, _zt: _zt, _At: _At, _CE: _CE, _kK: _DE, _lK: _EE
    })
};
_MK.prototype._1L = function (_xt, _yt, _BE, _zt, _At, _CE, _DE, _EE) {
    this._ex2.push({_jx2: _dx2, _xt: _xt, _yt: _yt, _BE: _BE, _zt: _zt, _At: _At, _CE: _CE, _kK: _DE, _lK: _EE})
};
_MK.prototype._zx2 = function () {
    this._Ax2 = new _Hx(_Ix, _uu._Jx(_uu._Yx), false);
    this._Ax2._kx2 = -1;
    this._Ax2._Bx2 = null
};
_MK.prototype._Cx2 = function (_xx) {
    switch (_xx) {
        case _6x:
        case _7x:
        case _9x:
            return true
    }
    return false
};
_MK.prototype._Dx2 = function (_Ex2) {
    var _Fx2 = this._Ax2;
    if ((_Fx2._kx2 != -1) && ((_2x != _Fx2._kx2) || (_3x != _Fx2._Bx2) || (this._Cx2(_Fx2._kx2) === false))) {
        _Fx2._2z();
        _Ex2.push({_kx2: _wx(_Fx2._kx2), _Bx2: _Fx2._Bx2, _Gx2: _Fx2});
        this._zx2();
        _Fx2 = this._Ax2
    }
    _Fx2._vV1(_5x);
    _Fx2._kx2 = _2x;
    _Fx2._Bx2 = _3x;
    _Dx()
};
_MK.prototype._Hx2 = function (_Ex2) {
    var _Fx2 = this._Ax2;
    _Fx2._2z();
    _Ex2.push({_kx2: _wx(_Fx2._kx2), _Bx2: _Fx2._Bx2, _Gx2: _Fx2});
    _Dx()
};
_MK.prototype._by1 = function (_ix2, _Ru, _Ex2) {
    var _Ix2 = _0x;
    var _Nu = this;
    _0x = function () {
        _Nu._Dx2(_Ex2)
    };
    switch (_ix2._jx2) {
        case _8x2:
            _HE(_ix2._xt, _ix2._yt, _ix2._BE, _ix2._zt, _ix2._At, _ix2._CE, _Ru, _ix2._kK, _ix2._lK);
            break;
        case _9x2:
            _IE(_ix2._xt,
                _ix2._yt, _ix2._BE, _ix2._zt, _ix2._At, _ix2._CE, _Ru, _ix2._kK, _ix2._lK, _ix2._JE, _ix2._GE);
            break;
        case _ax2:
            _KE(_ix2._xt, _ix2._yt, _ix2._BE, _ix2._zt, _ix2._At, _ix2._CE, _Ru, _ix2._kK, _ix2._lK, _ix2._JE, _ix2._GE);
            break;
        case _bx2:
            _FE(_ix2._xt, _ix2._yt, _ix2._BE, _ix2._zt, _ix2._At, _ix2._CE, _Ru, _ix2._kK, _ix2._lK, _ix2._GE);
            break;
        case _cx2:
            _LE(_ix2._xt, _ix2._yt, _ix2._BE, _ix2._zt, _ix2._At, _ix2._CE, _Ru, _ix2._kK, _ix2._lK);
            break;
        case _dx2:
            _AE(_ix2._xt, _ix2._yt, _ix2._BE, _ix2._zt, _ix2._At, _ix2._CE, _Ru, _ix2._kK, _ix2._lK);
            break
    }
    _0x = _Ix2
};
_MK.prototype._7v = function (x, y, _Mw, _Ru) {
    var _t5, _aL = new _JJ();
    _aL._4L(x, y, _Mw);
    var _bL = _cL(_3L);
    var _wt = new _JJ();
    _wt.Multiply(_aL, _bL);
    _2L(_3L, _wt);
    var _Ub = ((_Lx * 255.0) << 24) | (_Mx & 0x00ffffff);
    var _Jx2 = this._fx2[_Ub];
    if (_Jx2 === undefined) {
        _Jx2 = [];
        this._fx2[_Ub] = _Jx2
    }
    if (_Jx2[_Ru] === undefined) {
        _Jx2[_Ru] = [];
        var _Fu = _Jx2[_Ru];
        this._zx2();
        for (var _t5 = 0; _t5 < this._ex2.length; _t5++) {
            var _ix2 = this._ex2[_t5];
            switch (_ix2._jx2) {
                case _Zw2:
                    _Kw(_ix2._kx2, _Ru);
                    break;
                case __w2:
                    this._Dx2(_Fu);
                    break;
                case _0x2:
                    _Lw(_ix2.x,
                        _ix2.y, _ix2._Mw);
                    break;
                case _1x2:
                    _Nw(_ix2.x, _ix2.y, _ix2._Mw, _ix2.color, _ix2.alpha);
                    break;
                case _2x2:
                    _Pw(_ix2.x, _ix2.y, _ix2._Mw, _ix2._sv, _ix2._uv);
                    break;
                case _3x2:
                    _Qw(_ix2.x, _ix2.y, _ix2._Mw, _ix2._sv, _ix2._uv, _ix2.color, _ix2.alpha);
                    break;
                case _4x2:
                    _Sw(_ix2.x, _ix2.y, _ix2._Mw, _ix2._Tw, _ix2._Uw, _ix2._Vw);
                    break;
                case _5x2:
                    _Ww(_ix2.x, _ix2.y, _ix2._Mw, _ix2._Tw, _ix2._Uw, _ix2._Vw, _ix2.color, _ix2.alpha);
                    break;
                case _6x2:
                    _Yw(_ix2.x, _ix2.y, _ix2._Mw, _ix2._Tw, _ix2._Uw, _ix2._Vw, _ix2._sv, _ix2._uv);
                    break;
                case _7x2:
                    _Zw(_ix2.x,
                        _ix2.y, _ix2._Mw, _ix2._Tw, _ix2._Uw, _ix2._Vw, _ix2._sv, _ix2._uv, _ix2.color, _ix2.alpha);
                    break;
                case _8x2:
                case _9x2:
                case _ax2:
                case _bx2:
                case _cx2:
                case _dx2:
                    this._by1(_ix2, _Ru, _Fu);
                    break
            }
        }
        this._Hx2(_Fu);
        this._Ax2 = null
    }
    var _Kx2 = _Jx2[_Ru];
    for (_t5 = 0; _t5 < _Kx2.length; _t5++) {
        var _Lx2 = _Kx2[_t5];
        var _Xx = _Lx2._Bx2 ? _Lx2._Bx2._bw : null;
        _uu._9z(_Lx2._kx2, _Xx, _Lx2._Gx2, 0)
    }
    _2L(_3L, _bL)
};

function _571(_Mx2) {
    var _aC = arguments;
    var _bC = arguments.length;
    this._gC = [];
    this._qh1 = [];
    this.length = 0;
    this._Gu = 0;
    if (_bC > 0) {
        for (var _t5 = 0; _t5 < _bC;
             _t5++) {
            this._gC[_t5] = null;
            this._qh1.push(_t5)
        }
    }
}

_571.prototype._pt2 = function () {
    var _tt;
    if (this._qh1.length === 0) {
        _tt = this._gC.length;
        this._gC[_tt] = null;
        return _tt
    }
    return this._qh1.pop()
};
_571.prototype._3C = function (_Nx2) {
    var index = this._pt2();
    this._gC[index] = _Nx2;
    this._Gu++;
    this.length = this._gC.length;
    return index
};
_571.prototype._RB = function (__21) {
    var _qC = this._gC[__21];
    if (_qC === undefined) _qC = null;
    return _qC
};
_571.prototype._T11 = function (_Ox2) {
    for (var _It = 0; _It < this._gC.length; _It++) {
        if (this._gC[_It] == _Ox2) return _It
    }
    return -1
};
_571.prototype._E01 = function (_Ox2) {
    var index = _T11(_Ox2);
    if (index < 0) return;
    _gC[index] = null;
    _qh1.push(index);
    this._Gu--
};
_571.prototype._6C = function (__21) {
    if (__21 < 0 || __21 >= this._gC.length) return;
    this._gC[__21] = null;
    this._qh1.push(__21);
    this._Gu--
};
_571.prototype._NA = function () {
    this._gC = [];
    this._qh1 = [];
    this._Gu = 0;
    this.length = this._gC.length
};
_571.prototype._rC = function (_za1, _qs) {
    if (_za1 < 0 || _za1 >= this._gC.length) return;
    this._gC[_za1] = _qs;
};
var _Px2 = 0, _Qx2 = 1, _Rx2 = 2, _Sx2 = 3, _Tx2 = 4, _HX = 5, _oO = 6, _Ux2 = 7,
    _751 = 8, _Vx2 = 0, _hO = 1, _lO = -1, _wX = 0, _Wx2 = 1, _uX = -1;
var _Xx2 = [];
var _Yx2 = [];

function _Zx2(_kC, _KQ1) {
    _Xx2.push(_kC);
    _Yx2.push(_KQ1)
}

function _dO(_kC) {
    var _t5 = 0;
    for (_t5 = 0; _t5 < _Xx2.length; _t5++) {
        if (_Xx2[_t5] == _kC) {
            var _sP = _Yx2[_t5];
            _Yx2.splice(_t5, 1);
            _Xx2.splice(_t5, 1);
            return _sP
        }
    }
    return undefined
}

function __x2() {
    this._0y2 = "";
    this._1y2 = -1;
    this._gO = 0;
    this._2y2 = null;
    this._3y2 = _Px2;
    this._fO = false
}

function _4u2() {
    this._gC = new _571(5)
}

_4u2.prototype._l41 = function () {
    return this._gC;
};
_4u2.prototype._3C = function (_OB, _lu2,
                               _ny, _4y2) {
    var _sP = new __x2();
    _sP._1y2 = _OB;
    _sP._0y2 = _lu2;
    _sP._2y2 = _4y2;
    _sP._3y2 = _ny;
    this._gC._3C(_sP);
    _Zx2(_4y2, _sP);
    return _sP
};
_4u2.prototype._5y2 = function () {
    var map = _Zr();
    _Eh._ib1 = map;
    var _gC = this._gC._gC;
    for (var _t5 = 0; _t5 < _gC.length; _t5++) {
        var _sP = _gC[_t5];
        if (_sP !== null) {
            if (_sP._fO) {
                _pC(map);
                if (_sP._3y2 == _751) {
                    var _AZ = _sP._2y2;
                    for (var prop in _AZ) {
                        if (_AZ.hasOwnProperty(prop)) {
                            _0s(map, prop, _AZ[prop])
                        }
                    }
                } else if (_sP._3y2 == _Ux2) {
                    _0s(map, "filename", _sP._0y2);
                    _0s(map, "url", _sP._0y2)
                } else if (_sP._3y2 == _HX) {
                    _0s(map,
                        "filename", "");
                    _0s(map, "url", _sP._0y2);
                    _0s(map, "result", _sP._vX);
                    _0s(map, "http_status", _sP._zX);
                    _0s(map, "response_headers", _sP._AX)
                } else if (_sP._3y2 == _oO) {
                    _0s(map, "username", _sP._aO);
                    _0s(map, "password", _sP._bO);
                    _0s(map, "url", "");
                    _0s(map, "result", _sP._eO);
                    _0s(map, "value", _sP.value);
                    _0s(map, "http_status", 0)
                } else {
                    _0s(map, "url", "");
                    _0s(map, "result", "");
                    _0s(map, "http_status", 0);
                    _0s(map, "filename", _sP._0y2)
                }
                if (_sP._3y2 != _751) {
                    _0s(map, "id", _sP._1y2);
                    _0s(map, "status", _sP._gO)
                }
                if (_sP._3y2 == _Qx2) _4s._5s(_Xi2,
                    0); else if (_sP._3y2 == _Rx2) _4s._5s(_Xi2, 0); else if (_sP._3y2 == _Sx2) _4s._5s(_Xi2, 0); else if (_sP._3y2 == _Tx2) _4s._5s(_Zi2, 0); else if (_sP._3y2 == _HX) _4s._5s(_8m2, 0); else if (_sP._3y2 == _oO) _4s._5s(_9m2, 0); else if (_sP._3y2 == _Ux2) _4s._5s(_jb1, 0); else if (_sP._3y2 == _751) _4s._5s(_am2, 0);
                this._gC._6C(_t5);
                if (_sP._3y2 == _HX) {
                    _7s(_sP._AX);
                }
                if (_sP._3y2 == _751 && _sP._2y2.type == _L41) {
                    _6y2(_sP._2y2.buffer)
                }
            }
        }
    }
    _7s(map);
    _Eh._ib1 = -1
};

function _CD() {
    this.__type = "[Background]";
    this._F3 = "";
    this._O3 = false;
    this._P3 = false;
    this.preload = false;
    this._qD = null;
    this._7y2 = 0;
    this._8y2 = 0;
    this._9y2 = 0;
    this._ay2 = 0;
    this._by2 = 0;
    this.frames = 0;
    this._cy2 = 0;
    this._a21 = 0;
    this._dy2 = []
}

function _ey2(_fy2) {
    var _5c1 = new _CD();
    _5c1._F3 = _fy2._F3;
    if (_fy2._O3 != undefined) _5c1._O3 = _fy2._O3;
    if (_fy2._P3 != undefined) _5c1._P3 = _fy2._P3;
    if (_fy2.preload != undefined) _5c1.preload = _fy2.preload;
    _5c1._qD = _gy2(_fy2._X3);
    if (_fy2._7y2 != undefined) _5c1._7y2 = _fy2._7y2;
    if (_fy2._8y2 != undefined) _5c1._8y2 = _fy2._8y2;
    if (_fy2._9y2 != undefined) _5c1._9y2 = _fy2._9y2;
    if (_fy2._ay2 != undefined) _5c1._ay2 = _fy2._ay2;
    if (_fy2._by2 != undefined) _5c1._by2 = _fy2._by2;
    if (_fy2.frames != undefined) _5c1.frames = _fy2.frames;
    if (_fy2._cy2 != undefined) _5c1._cy2 = _fy2._cy2;
    if (_fy2._a21 != undefined) _5c1._a21 = _fy2._a21;
    for (var _t5 = 0; _t5 < _fy2.frames * _fy2._cy2; _t5++) {
        if (_fy2._dy2[_t5] != undefined) _5c1._dy2[_t5] = _fy2._dy2[_t5]
    }
    return _5c1
}

function _hy2(_fy2) {
    this._NA();
    if (_fy2._B5 != undefined) this._B5 = _fy2._B5;
    if (_fy2._m_ != undefined) this._m_ = _fy2._m_;
    if (_fy2.index != undefined) this.index = _fy2.index;
    if (_fy2.x != undefined) this.x = _fy2.x;
    if (_fy2.y != undefined) this.y = _fy2.y;
    if (_fy2._n_ != undefined) this._iy2 = _fy2._n_;
    if (_fy2._o_ != undefined) this._jy2 = _fy2._o_;
    if (_fy2._2c != undefined) this._ky2 = _fy2._2c;
    if (_fy2._3c != undefined) this._ly2 = _fy2._3c;
    if (_fy2._r_ != undefined) this._r_ = _fy2._r_;
    if (_fy2.alpha != undefined) this.alpha = _fy2.alpha;
    if (_fy2._s_ != undefined) this._s_ = _fy2._s_;
    if (_fy2._7y2 != undefined) this._7y2 = _fy2._7y2;
    if (_fy2._8y2 != undefined) this._8y2 = _fy2._8y2;
    if (_fy2._9y2 != undefined) this._9y2 = _fy2._9y2;
    if (_fy2._ay2 != undefined) this._ay2 = _fy2._ay2;
    if (_fy2._by2 != undefined) this._by2 = _fy2._by2;
    if (_fy2.frames != undefined) this.frames = _fy2.frames;
    if (_fy2._cy2 != undefined) this._cy2 = _fy2._cy2;
    if (_fy2._my2 != undefined) this._my2 = _fy2._my2;
    if (_fy2._ny2 != undefined) this._ny2 = _fy2._ny2
}

_hy2.prototype._NA = function () {
    this._B5 = false;
    this._m_ = false;
    this.index = -1;
    this.x = 0;
    this.y = 0;
    this._iy2 = true;
    this._jy2 = true;
    this._ky2 = 0;
    this._ly2 = 0;
    this._p_ = 1;
    this._q_ = 1;
    this._r_ = false;
    this.alpha = 1.0;
    this._s_ = 0xffffff
};

function __t2() {
    this.images = [];
    this._lD = []
}

__t2.prototype._nD = function (_za1) {
    return this.images[_za1]
};
__t2.prototype._RB = function (_za1) {
    return this._lD[_za1]
};
__t2.prototype._NA = function () {
    this._lD = []
};
__t2.prototype._5v2 = function (_fy2) {
    var _pD = null;
    if (_fy2 != null) {
        _pD = _ey2(_fy2)
    }
    return this._FD(_pD)
};
__t2.prototype._FD = function (_oy2) {
    var _t5 = this.images.length;
    this.images[_t5] = _oy2;
    return _t5
};
__t2.prototype._3C = function (_fy2) {
    var _pD = null;
    if (_fy2 != null) {
        _pD = new _hy2(_fy2)
    }
    this._lD[this._lD.length] = _pD
};
var _py2 = -1, _qy2 = -2, _ry2 = -3, _sy2 = -4, _ty2 = -5;
var _d51 = 0, _uy2 = 1, _vy2 = 2, _wy2 = 3, _xy2 = 4;
var _yy2 = 0, _zy2 = 1, _Ay2 = 2,
    _By2 = 3, _Cy2 = 4, _r12 = 5, _t12 = 6, _Dy2 = 7, _s12 = 8, _Ey2 = 9, _Fy2 = 10, _Gy2 = 11, _Hy2 = 12, _Iy2 = 13;
var _v12 = 0, _Jy2 = 1, _Ky2 = 2;

function _Ly2(data, _My2, _Ny2, _Oy2, _Py2, _Qy2) {
    var _sR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _tR, _uR, _vR, _wR, _xR, _yR, _zR, _AR;
    var _t5 = 0;
    var _BR = _Oy2;
    var _HR = "";
    var _Ry2 = Math.floor(_Qy2 / 3);
    _t5 = _Ry2 * 4;
    var _Sy2 = _Qy2 % 3;
    if (!data) {
        return data
    }
    data += '';
    do {
        _wR = _xR = _yR = _zR = -1;
        while (_wR < 0) {
            _wR = _sR.indexOf(data.charAt(_t5++))
        }
        while (_xR < 0) {
            _xR = _sR.indexOf(data.charAt(_t5++))
        }
        while (_yR < 0) {
            _yR = _sR.indexOf(data.charAt(_t5++))
        }
        while (_zR < 0) {
            _zR = _sR.indexOf(data.charAt(_t5++))
        }
        var _Ty2 = (_wR << 2) | (_xR >> 4);
        var _Uy2 = ((_xR & 15) << 4) | (_yR >> 2);
        var _Vy2 = ((_yR & 3) << 6) | _zR;
        _Ny2[_BR++] = _Ty2;
        if (_BR >= _My2) return _Ny2;
        if (_yR != 64) {
            _Ny2[_BR++] = _Uy2;
            if (_BR >= _My2) return _Ny2
        }
        if (_zR != 64) {
            _Ny2[_BR++] = _Vy2;
            if (_BR >= _My2) return _Ny2
        }
    } while (_t5 < data.length);
    if (_Py2 && _Wy2 < _My2) {
        _Ny2[_Wy2++] = '\0'
    }
    return _Ny2
}

function _Xy2(_VR, length) {
    var _Yy2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _XR = "";
    var _Ty2,
        _Uy2, _Vy2 = "";
    var _Zy2, __y2, _0z2, _1z2 = "";
    var _t5 = 0;
    do {
        _Ty2 = _VR.charCodeAt(_t5++);
        _Uy2 = _VR.charCodeAt(_t5++);
        _Vy2 = _VR.charCodeAt(_t5++);
        _Zy2 = _Ty2 >> 2;
        __y2 = ((_Ty2 & 3) << 4) | (_Uy2 >> 4);
        _0z2 = ((_Uy2 & 15) << 2) | (_Vy2 >> 6);
        _1z2 = _Vy2 & 63;
        if (isNaN(_Uy2)) {
            _0z2 = _1z2 = 64
        } else if (isNaN(_Vy2)) {
            _1z2 = 64
        }
        _XR = _XR + _Yy2.charAt(_Zy2) + _Yy2.charAt(__y2) + _Yy2.charAt(_0z2) + _Yy2.charAt(_1z2);
        _Ty2 = _Uy2 = _Vy2 = "";
        _Zy2 = __y2 = _0z2 = _1z2 = ""
    } while (_t5 < length);
    return _XR
}

function _vQ1(_9y) {
    var _l5 = 1;
    while (_l5 <= 1024) {
        if (_9y <= _l5) return _l5;
        _l5 = _l5 << 1
    }
    return 1024
}

function _2z2(_9y, _ny, _3z2, _4z2) {
    _3z2 = _vQ1(_3z2 & 0x1ff);
    this._5z2 = _9y + _3z2;
    this._3y2 = _ny;
    this._6z2 = _9y;
    this._7z2 = _3z2;
    this._8z2 = 0;
    this._o12 = 0;
    this._9z2 = 0;
    this._g51 = new ArrayBuffer(_9y);
    this._az2 = new DataView(this._g51);
    if (_4z2 != undefined && _4z2.length > 0) {
        var _bz2 = _Lt(_4z2.length, _9y);
        this._9z2 = _bz2;
        var _cz2 = new Uint8Array(this._g51);
        for (_t5 = 0; _t5 < _bz2; _t5++) {
            _cz2[_t5] = _4z2[_t5]
        }
    }
}

_2z2.prototype._dz2 = function (_AV1) {
    var _ez2 = new ArrayBuffer(_AV1);
    var _fz2 = new Uint8Array(this._g51);
    var _gz2 = new Uint8Array(_ez2);
    if (this._g51.byteLength > _AV1) {
        for (var _t5 = 0; _t5 < _AV1; _t5++) {
            _gz2[_t5] = _fz2[_t5]
        }
    } else {
        _gz2.set(_fz2)
    }
    this._g51 = _ez2;
    this._az2 = new DataView(this._g51);
    this._6z2 = _AV1;
    this._hz2(-1)
};
_2z2.prototype._hz2 = function (_9y, _iz2) {
    if (_9y == undefined) _9y = -1;
    if (_iz2 == undefined) _iz2 = false;
    var _l5 = _9y;
    if (_l5 == -1) _l5 = this._o12;
    if (_iz2) {
        this._9z2 = _l5
    } else {
        this._9z2 = _Jt(this._9z2, _l5);
        this._9z2 = _Lt(this._9z2, this._6z2)
    }
};

function _ER(_zP) {
    var _RN = "";
    for (var _t5 = 0; _t5 < _zP.length; _t5++) {
        var _jz2 = _zP.charCodeAt(_t5);
        if (_jz2 < 0x80) {
            _RN += String.fromCharCode(_jz2 & 0x7f)
        } else if (_jz2 < 0x0800) {
            _RN += String.fromCharCode((((_jz2 >> 6) & 0x1f) | 0xc0));
            _RN += String.fromCharCode((_jz2 & 0x3f) | 0x80)
        } else if (_jz2 < 0x10000) {
            _RN += String.fromCharCode(((_jz2 >> 12) & 0x0f) | 0xe0);
            _RN += String.fromCharCode(((_jz2 >> 6) & 0x3f) | 0x80);
            _RN += String.fromCharCode((_jz2 & 0x3f) | 0x80)
        } else {
            _RN += String.fromCharCode(((_jz2 >> 18) & 0x07) | 0xf0);
            _RN += String.fromCharCode(((_jz2 >> 12) & 0x3f) | 0x80);
            _RN += String.fromCharCode(((_jz2 >> 6) & 0x3f) | 0x80);
            _RN += String.fromCharCode((_jz2 & 0x3f) | 0x80)
        }
    }
    return _RN
}

_2z2.prototype._kz2 = function () {
    this._8z2 = (this._8z2 + this._6z2) % this._7z2
};

function _lz2(_ny) {
    var _mz2 = 0;
    switch (_ny) {
        case _Fy2:
        case _zy2:
        case _Ay2:
            _mz2 = 1;
            break;
        case _By2:
        case _Cy2:
            _mz2 = 2;
            break;
        case _t12:
        case _r12:
        case _s12:
            _mz2 = 4;
            break;
        case _Ey2:
            _mz2 = 8;
            break
    }
    return _mz2
}

function _nz2() {
    this._t5 = new Uint32Array(2);
    this._oz2 = new Uint32Array(4);
    this._pz2 = new Uint8Array(64);
    this._qz2 = new Uint8Array(16);
    this._t5[0] = this._t5[1] = 0;
    this._oz2[0] = this._oz2[1] = this._oz2[2] = this._oz2[3] = 0;
    for (var _t5 = 0; _t5 < 64; _t5++) this._pz2[_t5] = 0;
    for (var _t5 = 0; _t5 < 16; _t5++) this._qz2[_t5] = 0
}

_nz2.prototype._rz2 = function () {
    var _au = "0123456789abcdef";
    var _ZN = "";
    for (var _w5 = 0; _w5 < 16; _w5++) {
        var _Nt = this._qz2[_w5];
        _ZN += _au[((_Nt >> 4) & 0xf)];
        _ZN += _au[(_Nt & 0xf)]
    }
    return _ZN
};

function _sz2() {
    var _tz2 = new _nz2();
    _tz2._t5[0] = _tz2._t5[1] = 0;
    _tz2._oz2[0] = 0x67452301;
    _tz2._oz2[1] = 0xefcdab89;
    _tz2._oz2[2] = 0x98badcfe;
    _tz2._oz2[3] = 0x10325476;
    return _tz2
}

var _uz2 = new Uint32Array(16);

function _vz2(x, y, _Mw) {
    _uz2[0] = x;
    _uz2[1] = y;
    _uz2[2] = _Mw;
    return (((_uz2[0]) & (_uz2[1])) | ((~_uz2[0]) & (_uz2[2])))
}

function _wz2(x, y, _Mw) {
    _uz2[0] = x;
    _uz2[1] = y;
    _uz2[2] = _Mw;
    return (((_uz2[0]) & (_uz2[2])) | ((_uz2[1]) & (~_uz2[2])))
}

function _xz2(x, y, _Mw) {
    _uz2[0] = x;
    _uz2[1] = y;
    _uz2[2] = _Mw;
    return ((_uz2[0]) ^ (_uz2[1]) ^ (_uz2[2]))
}

function _yz2(x, y, _Mw) {
    _uz2[0] = x;
    _uz2[1] = y;
    _uz2[2] = _Mw;
    return ((_uz2[1]) ^ ((_uz2[0]) | (~_uz2[2])))
}

var _zz2 = new Uint32Array(2);

function _Az2(x, _tt) {
    _zz2[0] = x;
    _zz2[1] = ((_zz2[0] << _tt) & 0xffffffff) | ((_zz2[0] >> (32 - _tt)) & ((1 << _tt) - 1));
    return _zz2[1]
}

var _Bz2 = new Uint32Array(7);

function _Cz2(_hv, _Nt, _u5, _cE, x, _ZN, _BR) {
    _Bz2[0] = _hv;
    _Bz2[1] = _Nt;
    _Bz2[2] = _u5;
    _Bz2[3] = _cE;
    _Bz2[4] = x;
    _Bz2[5] = _ZN;
    _Bz2[6] = _BR;
    _Bz2[0] += _vz2(_Bz2[1], _Bz2[2], _Bz2[3]) + _Bz2[4] + (_Bz2[6]);
    _Bz2[0] = _Az2(_Bz2[0], _Bz2[5]);
    _Bz2[0] += _Bz2[1];
    return _Bz2[0]
}

function _Dz2(_hv, _Nt, _u5, _cE, x, _ZN, _BR) {
    _Bz2[0] = _hv;
    _Bz2[1] = _Nt;
    _Bz2[2] = _u5;
    _Bz2[3] = _cE;
    _Bz2[4] = x;
    _Bz2[5] = _ZN;
    _Bz2[6] = _BR;
    _Bz2[0] += _wz2(_Bz2[1], _Bz2[2], _Bz2[3]) + _Bz2[4] + (_Bz2[6]);
    _Bz2[0] = _Az2(_Bz2[0], _Bz2[5]);
    _Bz2[0] += _Bz2[1];
    return _Bz2[0]
}

function _Ez2(_hv, _Nt, _u5, _cE, x, _ZN, _BR) {
    _Bz2[0] = _hv;
    _Bz2[1] = _Nt;
    _Bz2[2] = _u5;
    _Bz2[3] = _cE;
    _Bz2[4] = x;
    _Bz2[5] = _ZN;
    _Bz2[6] = _BR;
    _Bz2[0] += _xz2(_Bz2[1], _Bz2[2], _Bz2[3]) + _Bz2[4] + (_Bz2[6]);
    _Bz2[0] = _Az2(_Bz2[0], _Bz2[5]);
    _Bz2[0] += _Bz2[1];
    return _Bz2[0]
}

function _Fz2(_hv, _Nt, _u5, _cE, x, _ZN, _BR) {
    _Bz2[0] = _hv;
    _Bz2[1] = _Nt;
    _Bz2[2] = _u5;
    _Bz2[3] = _cE;
    _Bz2[4] = x;
    _Bz2[5] = _ZN;
    _Bz2[6] = _BR;
    _Bz2[0] += _yz2(_Bz2[1], _Bz2[2], _Bz2[3]) + _Bz2[4] + (_Bz2[6]);
    _Bz2[0] = _Az2(_Bz2[0], _Bz2[5]);
    _Bz2[0] += _Bz2[1];
    return _Bz2[0]
}

function _XX1(_Gz2, _Hz2) {
    var _hv = _Gz2[0], _Nt = _Gz2[1], _u5 = _Gz2[2], _cE = _Gz2[3];
    var _Iz2 = 7;
    var _Jz2 = 12;
    var _Kz2 = 17;
    var _Lz2 = 22;
    _hv = _Cz2(_hv, _Nt, _u5, _cE, _Hz2[0], _Iz2, 0xD76AA478);
    _cE = _Cz2(_cE, _hv, _Nt, _u5, _Hz2[1], _Jz2, 0xE8C7B756);
    _u5 = _Cz2(_u5, _cE, _hv, _Nt, _Hz2[2], _Kz2, 0x242070DB);
    _Nt = _Cz2(_Nt, _u5, _cE, _hv, _Hz2[3], _Lz2, 0xC1BDCEEE);
    _hv = _Cz2(_hv, _Nt, _u5, _cE, _Hz2[4], _Iz2, 0xF57C0FAF);
    _cE = _Cz2(_cE, _hv, _Nt, _u5, _Hz2[5], _Jz2, 0x4787C62A);
    _u5 = _Cz2(_u5, _cE, _hv, _Nt, _Hz2[6], _Kz2, 0xA8304613);
    _Nt = _Cz2(_Nt, _u5, _cE, _hv, _Hz2[7], _Lz2, 0xFD469501);
    _hv = _Cz2(_hv, _Nt, _u5, _cE, _Hz2[8], _Iz2, 0x698098D8);
    _cE = _Cz2(_cE, _hv,
        _Nt, _u5, _Hz2[9], _Jz2, 0x8B44F7AF);
    _u5 = _Cz2(_u5, _cE, _hv, _Nt, _Hz2[10], _Kz2, 0xFFFF5BB1);
    _Nt = _Cz2(_Nt, _u5, _cE, _hv, _Hz2[11], _Lz2, 0x895CD7BE);
    _hv = _Cz2(_hv, _Nt, _u5, _cE, _Hz2[12], _Iz2, 0x6B901122);
    _cE = _Cz2(_cE, _hv, _Nt, _u5, _Hz2[13], _Jz2, 0xFD987193);
    _u5 = _Cz2(_u5, _cE, _hv, _Nt, _Hz2[14], _Kz2, 0xA679438E);
    _Nt = _Cz2(_Nt, _u5, _cE, _hv, _Hz2[15], _Lz2, 0x49B40821);
    var _Mz2 = 5;
    var _Nz2 = 9;
    var _Oz2 = 14;
    var _Pz2 = 20;
    _hv = _Dz2(_hv, _Nt, _u5, _cE, _Hz2[1], _Mz2, 0xF61E2562);
    _cE = _Dz2(_cE, _hv, _Nt, _u5, _Hz2[6], _Nz2, 0xC040B340);
    _u5 = _Dz2(_u5, _cE, _hv,
        _Nt, _Hz2[11], _Oz2, 0x265E5A51);
    _Nt = _Dz2(_Nt, _u5, _cE, _hv, _Hz2[0], _Pz2, 0xE9B6C7AA);
    _hv = _Dz2(_hv, _Nt, _u5, _cE, _Hz2[5], _Mz2, 0xD62F105D);
    _cE = _Dz2(_cE, _hv, _Nt, _u5, _Hz2[10], _Nz2, 0x02441453);
    _u5 = _Dz2(_u5, _cE, _hv, _Nt, _Hz2[15], _Oz2, 0xD8A1E681);
    _Nt = _Dz2(_Nt, _u5, _cE, _hv, _Hz2[4], _Pz2, 0xE7D3FBC8);
    _hv = _Dz2(_hv, _Nt, _u5, _cE, _Hz2[9], _Mz2, 0x21E1CDE6);
    _cE = _Dz2(_cE, _hv, _Nt, _u5, _Hz2[14], _Nz2, 0xC33707D6);
    _u5 = _Dz2(_u5, _cE, _hv, _Nt, _Hz2[3], _Oz2, 0xF4D50D87);
    _Nt = _Dz2(_Nt, _u5, _cE, _hv, _Hz2[8], _Pz2, 0x455A14ED);
    _hv = _Dz2(_hv, _Nt,
        _u5, _cE, _Hz2[13], _Mz2, 0xA9E3E905);
    _cE = _Dz2(_cE, _hv, _Nt, _u5, _Hz2[2], _Nz2, 0xFCEFA3F8);
    _u5 = _Dz2(_u5, _cE, _hv, _Nt, _Hz2[7], _Oz2, 0x676F02D9);
    _Nt = _Dz2(_Nt, _u5, _cE, _hv, _Hz2[12], _Pz2, 0x8D2A4C8A);
    var _Qz2 = 4;
    var _Rz2 = 11;
    var _Sz2 = 16;
    var _Tz2 = 23;
    _hv = _Ez2(_hv, _Nt, _u5, _cE, _Hz2[5], _Qz2, 0xFFFA3942);
    _cE = _Ez2(_cE, _hv, _Nt, _u5, _Hz2[8], _Rz2, 0x8771F681);
    _u5 = _Ez2(_u5, _cE, _hv, _Nt, _Hz2[11], _Sz2, 0x6D9D6122);
    _Nt = _Ez2(_Nt, _u5, _cE, _hv, _Hz2[14], _Tz2, 0xFDE5380C);
    _hv = _Ez2(_hv, _Nt, _u5, _cE, _Hz2[1], _Qz2, 0xA4BEEA44);
    _cE = _Ez2(_cE, _hv, _Nt,
        _u5, _Hz2[4], _Rz2, 0x4BDECFA9);
    _u5 = _Ez2(_u5, _cE, _hv, _Nt, _Hz2[7], _Sz2, 0xF6BB4B60);
    _Nt = _Ez2(_Nt, _u5, _cE, _hv, _Hz2[10], _Tz2, 0xBEBFBC70);
    _hv = _Ez2(_hv, _Nt, _u5, _cE, _Hz2[13], _Qz2, 0x289B7EC6);
    _cE = _Ez2(_cE, _hv, _Nt, _u5, _Hz2[0], _Rz2, 0xEAA127FA);
    _u5 = _Ez2(_u5, _cE, _hv, _Nt, _Hz2[3], _Sz2, 0xD4EF3085);
    _Nt = _Ez2(_Nt, _u5, _cE, _hv, _Hz2[6], _Tz2, 0x04881D05);
    _hv = _Ez2(_hv, _Nt, _u5, _cE, _Hz2[9], _Qz2, 0xD9D4D039);
    _cE = _Ez2(_cE, _hv, _Nt, _u5, _Hz2[12], _Rz2, 0xE6DB99E5);
    _u5 = _Ez2(_u5, _cE, _hv, _Nt, _Hz2[15], _Sz2, 0x1FA27CF8);
    _Nt = _Ez2(_Nt, _u5,
        _cE, _hv, _Hz2[2], _Tz2, 0xC4AC5665);
    var _Uz2 = 6;
    var _Vz2 = 10;
    var _Wz2 = 15;
    var _Xz2 = 21;
    _hv = _Fz2(_hv, _Nt, _u5, _cE, _Hz2[0], _Uz2, 0xF4292244);
    _cE = _Fz2(_cE, _hv, _Nt, _u5, _Hz2[7], _Vz2, 0x432AFF97);
    _u5 = _Fz2(_u5, _cE, _hv, _Nt, _Hz2[14], _Wz2, 0xAB9423A7);
    _Nt = _Fz2(_Nt, _u5, _cE, _hv, _Hz2[5], _Xz2, 0xFC93A039);
    _hv = _Fz2(_hv, _Nt, _u5, _cE, _Hz2[12], _Uz2, 0x655B59C3);
    _cE = _Fz2(_cE, _hv, _Nt, _u5, _Hz2[3], _Vz2, 0x8F0CCC92);
    _u5 = _Fz2(_u5, _cE, _hv, _Nt, _Hz2[10], _Wz2, 0xFFEFF47D);
    _Nt = _Fz2(_Nt, _u5, _cE, _hv, _Hz2[1], _Xz2, 0x85845DD1);
    _hv = _Fz2(_hv, _Nt, _u5,
        _cE, _Hz2[8], _Uz2, 0x6FA87E4F);
    _cE = _Fz2(_cE, _hv, _Nt, _u5, _Hz2[15], _Vz2, 0xFE2CE6E0);
    _u5 = _Fz2(_u5, _cE, _hv, _Nt, _Hz2[6], _Wz2, 0xA3014314);
    _Nt = _Fz2(_Nt, _u5, _cE, _hv, _Hz2[13], _Xz2, 0x4E0811A1);
    _hv = _Fz2(_hv, _Nt, _u5, _cE, _Hz2[4], _Uz2, 0xF7537E82);
    _cE = _Fz2(_cE, _hv, _Nt, _u5, _Hz2[11], _Vz2, 0xBD3AF235);
    _u5 = _Fz2(_u5, _cE, _hv, _Nt, _Hz2[2], _Wz2, 0x2AD7D2BB);
    _Nt = _Fz2(_Nt, _u5, _cE, _hv, _Hz2[9], _Xz2, 0xEB86D391);
    _Gz2[0] += _hv;
    _Gz2[1] += _Nt;
    _Gz2[2] += _u5;
    _Gz2[3] += _cE
}

function _Yz2(_Zz2, __z2, _0A2, _1A2) {
    var _Hz2 = new Uint32Array(16);
    var _2A2;
    var _t5, _MW;
    var _za1 = 0;
    _2A2 = (_Zz2._t5[0] >> 3) & 0x3F;
    if ((_Zz2._t5[0] + ((_1A2 << 3) & 0xffffffff)) < _Zz2._t5[0]) {
        _tz2._t5[1]++
    }
    _Zz2._t5[0] += (_1A2 << 3) & 0xffffffff;
    _Zz2._t5[1] += (_1A2 >> 29) & 0xffffffff;
    while (_1A2--) {
        _Zz2._pz2[_2A2++] = __z2[_za1++];
        if (_2A2 == 0x40) {
            for (_t5 = 0, _MW = 0; _t5 < 16; _t5++, _MW += 4) _Hz2[_t5] = (((0xffffffff & _Zz2._pz2[_MW + 3]) << 24) | ((0xffffffff & _Zz2._pz2[_MW + 2]) << 16) | ((0xffffffff & _Zz2._pz2[_MW + 1]) << 8) | (0xffffffff & _Zz2._pz2[_MW]));
            _XX1(_Zz2._oz2, _Hz2);
            _2A2 = 0
        }
    }
}

var _3A2 = new Uint8Array(64);

function _4A2(_Zz2) {
    var _Hz2 = new Uint32Array(16);
    var _2A2;
    var _t5, _MW;
    var _5A2;
    _Hz2[14] = _Zz2._t5[0];
    _Hz2[15] = _Zz2._t5[1];
    _2A2 = ((_Zz2._t5[0] >> 3) & 0x3F);
    _5A2 = (_2A2 < 56) ? (56 - _2A2) : (120 - _2A2);
    _3A2[0] = 0x80;
    _Yz2(_Zz2, _3A2, 0, _5A2);
    for (_t5 = 0, _MW = 0; _t5 < 14; _t5++, _MW += 4) {
        _Hz2[_t5] = ((~~_Zz2._pz2[_MW + 3]) << 24) | ((~~_Zz2._pz2[_MW + 2]) << 16) | ((~~_Zz2._pz2[_MW + 1]) << 8) | (~~_Zz2._pz2[_MW])
    }
    _XX1(_Zz2._oz2, _Hz2);
    for (_t5 = 0, _MW = 0; _t5 < 4; _t5++, _MW += 4) {
        _Zz2._qz2[_MW] = (_Zz2._oz2[_t5] & 0xFF);
        _Zz2._qz2[_MW + 1] = ((_Zz2._oz2[_t5] >> 8) & 0xFF);
        _Zz2._qz2[_MW + 2] = ((_Zz2._oz2[_t5] >> 16) & 0xFF);
        _Zz2._qz2[_MW + 3] = ((_Zz2._oz2[_t5] >> 24) & 0xFF)
    }
}

function _6A2(_7A2, _9y, _0A2) {
    var _tz2 = _sz2();
    var _8A2 = _9y;
    while (_8A2 > 0) {
        var _9A2 = _Lt(_8A2, _9y - _0A2);
        _Yz2(_tz2, _7A2, _0A2, _9A2);
        _0A2 = 0;
        _8A2 -= _9A2
    }
    _4A2(_tz2);
    return _tz2._rz2()
}

_2z2.prototype._aA2 = function (_0A2, _9y) {
    if (this._6z2 == 0) return;
    if (_9y < 0) _9y = this._6z2;
    if (_9y == 0) return "";
    if (this._3y2 == _vy2) {
        while (_0A2 < 0) _0A2 += this._6z2;
        while (_0A2 >= this._6z2) _0A2 -= this._6z2
    } else {
        if (_0A2 < 0) _0A2 = 0;
        if (_0A2 >= this._6z2) _0A2 = this._6z2 - 1;
        if ((_0A2 + _9y) > this._6z2) _9y = this._6z2 - _0A2
    }
    if (_9y > this._6z2 - _0A2) {
        return ""
    } else {
        var _bA2 = new Uint8Array(this._g51, _0A2, _9y);
        var _lb2 = String.fromCharCode.apply(null, _bA2);
        return _Xy2(_lb2, _9y)
    }
};
_2z2.prototype._q12 = function (_ny, _AM) {
    var _cA2;
    var _l5 = 0;
    this._o12 = (((this._o12 + this._8z2) + (this._7z2 - 1)) & ~(this._7z2 - 1)) - this._8z2;
    if (this._o12 >= this._6z2 && this._3y2 == _vy2) {
        while (this._o12 >= this._6z2) {
            this._kz2();
            this._o12 -= this._6z2
        }
    }
    if ((this._o12 >= this._6z2) && (this._3y2 != _uy2)) {
        return _qy2
    }
    var _mz2 = _lz2(_ny);
    if ((_ny === _Gy2) || (_ny === _Iy2)) {
        _cA2 = _ER(_AM);
        _mz2 = _cA2.length;
        if (_ny === _Gy2) _mz2++
    }
    if ((this._o12 + _mz2) > this._6z2) {
        if (this._3y2 == _uy2) {
            var _dA2 = this._6z2;
            var _AV1 = this._6z2;
            while ((this._o12 + _mz2) > _AV1) {
                _AV1 = (_AV1 << 1)
            }
            this._dz2(_AV1)
        } else {
            if (this._3y2 != _vy2) {
                return _qy2
            }
        }
    }
    switch (_ny) {
        case _Fy2:
            if (_AM == true) {
                _AM = 1
            } else {
                _AM = 0
            }
        case _zy2: {
            this._az2.setUint8(this._o12, _AM);
            this._o12++
        }
            break;
        case _Gy2:
        case _Iy2: {
            for (var _t5 = 0; _t5 < _cA2.length; _t5++) {
                var _jz2 = _cA2.charCodeAt(_t5) & 0xff;
                this._az2.setUint8(this._o12++, _jz2, true)
            }
            if (_ny === _Gy2) {
                this._az2.setUint8(this._o12++,
                    0, true)
            }
        }
            break;
        case _Ay2:
            this._az2.setInt8(this._o12, _AM);
            this._o12++;
            break;
        case _By2:
            this._az2.setUint16(this._o12, _AM, true);
            this._o12 += 2;
            break;
        case _Cy2:
            this._az2.setInt16(this._o12, _AM, true);
            this._o12 += 2;
            break;
        case _t12:
            this._az2.setInt32(this._o12, _AM, true);
            this._o12 += 4;
            break;
        case _r12:
            this._az2.setUint32(this._o12, _AM, true);
            this._o12 += 4;
            break;
        case _s12:
            this._az2.setFloat32(this._o12, _AM, true);
            this._o12 += 4;
            break;
        case _Ey2:
            this._az2.setFloat64(this._o12, _AM, true);
            this._o12 += 8;
            break;
        case _Hy2:
            _SB("Error (buffer_write): HTML5 buffers do not support U64 types.");
            this._o12 += 8;
            break
    }
    this._hz2(-1)
};
_2z2.prototype._eA2 = function (_ny, _0A2) {
    var _l5 = _lz2(_ny);
    if (_0A2 < 0) return 0;
    if (this._3y2 != _vy2) {
        if (_0A2 > (this._6z2 - _l5)) return 0;
    } else {
        while (_0A2 >= this._6z2) {
            _0A2 -= this._6z2
        }
    }
    var _RL;
    switch (_ny) {
        case _Fy2:
            _RL = this._az2.getUint8(_0A2);
            if (_RL == 1) {
                _RL = true
            } else {
                _RL = false
            }
            break;
        case _zy2: {
            _RL = this._az2.getUint8(_0A2)
        }
            break;
        case _Ay2:
            _RL = this._az2.getInt8(_0A2);
            break;
        case _By2:
            _RL = this._az2.getUint16(_0A2, true);
            break;
        case _Cy2:
            _RL = this._az2.getInt16(_0A2, true);
            break;
        case _t12:
            _RL = this._az2.getInt32(_0A2,
                true);
            break;
        case _r12:
            _RL = this._az2.getUint32(_0A2, true);
            break;
        case _s12:
            _RL = this._az2.getFloat32(_0A2, true);
            break;
        case _Ey2:
            _RL = this._az2.getFloat64(_0A2, true);
            break;
        case _Hy2:
            _SB("Error (buffer_peek): HTML5 buffers do not support U64 types.");
            _RL = 0;
            break
    }
    return _RL
};
_2z2.prototype._fA2 = function (_ny, _0A2, _AM) {
    if (_0A2 < 0) return;
    var _l5 = _lz2(_ny);
    if (this._3y2 != _vy2) {
        if (_0A2 > (this._6z2 - _l5)) return 0
    } else {
        while (_0A2 >= this._6z2) {
            _0A2 -= this._6z2
        }
    }
    switch (_ny) {
        case _Fy2:
            if (_AM == true) {
                _AM = 1
            } else {
                _AM = 0
            }
        case _zy2:
            this._az2.setUint8(_0A2,
                _AM);
            this._hz2(_0A2 + 1);
            return;
            break;
        case _Ay2:
            this._az2.setInt8(_0A2, _AM);
            this._hz2(_0A2 + 1);
            return;
            break;
        case _By2:
            this._az2.setUint16(_0A2, _AM, true);
            break;
        case _Cy2:
            this._az2.setInt16(_0A2, _AM, true);
            break;
        case _t12:
            this._az2.setInt32(_0A2, _AM, true);
            break;
        case _r12:
            this._az2.setUint32(_0A2, _AM, true);
            break;
        case _s12:
            this._az2.setFloat32(_0A2, _AM, true);
            break;
        case _Ey2:
            this._az2.setFloat64(_0A2, _AM, true);
            break;
        case _Hy2:
            _SB("Error (buffer_peek): HTML5 buffers do not support U64 types.");
            break
    }
    this._hz2(_0A2 + _l5)
}
;_2z2.prototype._u12 = function (_gA2, _0A2) {
    switch (_gA2) {
        case _v12:
            if (_0A2 < 0) _0A2 = 0;
            this._o12 = _0A2;
            break;
        case _Jy2:
            this._o12 += _0A2;
            if (this._o12 < 0) this._o12 = 0;
            break;
        case _Ky2:
            this._o12 = this._6z2 - _0A2;
            if (this._o12 > this._6z2) this._o12 = this._6z2;
            break
    }
    return this._o12
};

function _c51(_9y, _ny, _3z2) {
    try {
        return _f51._3C(new _2z2(_9y, _ny, _3z2))
    } catch (e) {
        alert("ArrayBuffer Error : This functionality requires at least IE10");
        return -1
    }
}

function _hA2(_za1, _ny, _AM) {
    var _ew = _f51._RB(_za1);
    if (!_ew) return _ty2;
    return _ew._q12(_ny,
        _AM)
}

function _6y2(_za1) {
    var _ew = _f51._RB(_za1);
    if (!_ew) return _ty2;
    _ew._g51 = null;
    _ew._az2 = null;
    _f51._6C(_za1);
    return 0
}

var _iA2 = -1;

function _jA2(_pd1, _kA2, _8M, _0A2, _lA2) {
    var _ew = _f51._RB(_pd1);
    var _KD = _yD._RB(_kA2);
    if (!_ew || !_KD) return false;
    var data = null;
    var _zD = _KD._Iv;
    try {
        data = _zD._qd1(0, 0, _KD._Zx, _KD.__x)
    } catch (_PQ) {
        return false
    }
    _mA2 = data.data;
    for (var _t5 = 0; _t5 < _mA2.length; _t5++) {
        _ew._fA2(_zy2, _t5, _mA2[_t5])
    }
    return true
}

function _nA2(_pd1, _kA2, _8M, _0A2, _lA2) {
    var _ew = _f51._RB(_pd1);
    var _KD = _yD._RB(_kA2);
    if (!_ew || !_KD) return false;
    var data = null;
    var _zD = _KD._Iv;
    try {
        var _oA2 = _zD.createImageData(_KD._Zx, _KD.__x);
        var data = _oA2.data;
        var _MN = _KD._Zx * _KD.__x * 4;
        for (var _t5 = 0; _t5 < _MN; _t5++) {
            data[_t5] = _ew._eA2(_zy2, _t5)
        }
        _zD._pA2(_oA2, 0, 0)
    } catch (_PQ) {
        return false
    }
    return true
}

_Ok = function () {
    _zw("vertex_create_buffer")
};
_qA2 = function (_l5) {
    _zw("vertex_create_buffer_ext")
};
_rA2 = function (buffer) {
    _zw("vertex_delete_buffer")
};
_sA2 = function (buffer, _9k2) {
    _zw("vertex_begin")
};
_tA2 = function (buffer) {
    _zw("vertex_end")
};
_uA2 = function (buffer, x, y) {
    _zw("vertex_position")
}
;_vA2 = function (buffer, x, y, _Mw) {
    _zw("vertex_position_3d")
};
_wA2 = function (buffer, _2v, alpha) {
    _zw("vertex_colour")
};
_xA2 = function (buffer, _2v, alpha) {
    _zw("vertex_color")
};
_yA2 = function (buffer, _Kt, _gv, _Nt, _hv) {
    _zw("vertex_rgba")
};
_zA2 = function (buffer, _Kt, _gv, _Nt, _hv) {
    _zw("vertex_argb")
};
_AA2 = function (buffer, _sv, _uv) {
    _zw("vertex_texcoord")
};
_BA2 = function (buffer, x, y, _Mw) {
    _zw("vertex_normal");
};
_CA2 = function (buffer, x) {
    _zw("vertex_float1")
};
_DA2 = function (buffer, x, y) {
    _zw("vertex_float2")
};
_EA2 = function (buffer,
                 x, y, _Mw) {
    _zw("vertex_float3")
};
_FA2 = function (buffer, x, y, _Mw, _v5) {
    _zw("vertex_float4")
};
_GA2 = function (buffer, x, y, _Mw, _v5) {
    _zw("vertex_ubyte4")
};
_HA2 = function (buffer) {
    _zw("vertex_freeze")
};
_IA2 = function (buffer) {
    _zw("vertex_submit")
};
_JA2 = function (buffer) {
    _zw("vertex_get_number")
};
_KA2 = function (buffer) {
    _zw("vertex_get_buffer_size")
};
_LA2 = function (buffer) {
    _zw("vertex_create_buffer_from_buffer")
};
_MA2 = function (buffer) {
    _zw("vertex_create_buffer_from_buffer_ext")
};
_NA2 = function () {
};
var _OA2 = 8 * 1024;
var _PA2 = [];

function _QA2() {
    _Ok = _RA2;
    _qA2 = _SA2;
    _LA2 = _TA2;
    _MA2 = _UA2;
    _rA2 = _VA2;
    _sA2 = _WA2;
    _tA2 = _XA2;
    _uA2 = _YA2;
    _vA2 = _ZA2;
    _wA2 = __A2;
    _xA2 = __A2;
    _yA2 = _0B2;
    _zA2 = _1B2;
    _AA2 = _2B2;
    _BA2 = _3B2;
    _CA2 = _4B2;
    _DA2 = _5B2;
    _EA2 = _6B2;
    _FA2 = _7B2;
    _GA2 = _8B2;
    _HA2 = _9B2;
    _IA2 = _aB2;
    _JA2 = _bB2;
    _KA2 = _cB2;
    _NA2 = _dB2
}

function _UA2(_pd1, _zO1, _eB2, _fB2) {
    var _Wa1 = 0;
    var _kU1 = _uu._Jx(_zO1);
    var _ew = _f51._RB(_pd1);
    if (!_ew || !_kU1) return -1;
    if (_fB2 == -1) {
        _eB2 = 0;
        _Wa1 = _ew._9z2;
        _fB2 = _Wa1 / _kU1._wy
    } else {
        _Wa1 = _fB2 * _kU1._wy;
        if ((_Wa1 + _eB2) > _ew._9z2) {
            _Wa1 = (_ew._9z2 - _eB2);
            _fB2 = ~~(_Wa1 / _kU1._wy);
            _Wa1 = _fB2 * _kU1._wy
        }
    }
    var _gB2 = _qA2(_Wa1);
    var _hB2 = _PA2[_gB2];
    var _iB2 = new Uint8Array(_ew._g51);
    var _cz2 = new Uint8Array(_hB2._ez());
    _hB2._By(_zO1);
    var src = _eB2;
    for (var _t5 = 0; _t5 < _Wa1; _t5++) {
        _cz2[_t5] = _iB2[src++]
    }
    _hB2._bz(_fB2);
    _hB2._Dy();
    return _gB2
}

function _TA2(_pd1, _zO1) {
    return _UA2(_pd1, _zO1, 0, -1)
}

function _RA2() {
    return _qA2(_OA2)
}

function _SA2(_9y) {
    var _jB2 = new _8y(_9y);
    var _kB2 = _PA2.length;
    for (var _t5 = 0; _t5 < _PA2; _t5++) {
        if ((_PA2[_t5] === null) || (_PA2[_t5] === undefined)) {
            _kB2 = _t5;
            break
        }
    }
    _PA2[_kB2] = _jB2;
    return _kB2
}

function _VA2(_pd1) {
    _PA2[_pd1] = null
}

function _WA2(_pd1, _zO1) {
    _PA2[_pd1]._By(_zO1)
}

function _XA2(_pd1) {
    _PA2[_pd1]._Dy()
}

function _YA2(_pd1, x, y) {
    _PA2[_pd1]._Ey(x, y)
}

function _ZA2(_pd1, x, y, _Mw) {
    _PA2[_pd1]._Hy(x, y, _Mw)
}

function __A2(_pd1, _2v, alpha) {
    _PA2[_pd1]._Jy(_2v, alpha)
}

function _0B2(_pd1, _Oy) {
    _PA2[_pd1]._Ny(_Oy)
}

function _1B2(_pd1, _Qy) {
    _PA2[_pd1]._Py(_Qy)
}

function _2B2(_pd1, _sv, _uv) {
    _PA2[_pd1]._Ry(_sv, _uv)
}

function _3B2(_pd1, x, y, _Mw) {
    _PA2[_pd1]._Ty(x, y, _Mw)
}

function _4B2(_pd1, x) {
    _PA2[_pd1]._Vy(x)
}

function _5B2(_pd1,
              x, y) {
    _PA2[_pd1]._Xy(x, y)
}

function _6B2(_pd1, x, y, _Mw) {
    _PA2[_pd1]._Yy(x, y, _Mw)
}

function _7B2(_pd1, x, y, _Mw, _v5) {
    _PA2[_pd1]._Zy(x, y, _Mw, _v5)
}

function _8B2(_pd1, x, y, _Mw, _v5) {
    _PA2[_pd1]._0z(x, y, _Mw, _v5)
}

function _9B2(_pd1) {
    var _jB2 = _PA2[_pd1];
    if (_jB2) {
        _jB2._2z()
    }
}

function _dB2() {
    _uu._kd1()
}

function _aB2(_pd1, _7z, _8z) {
    _uu._kd1();
    var _Ux, _jB2 = _PA2[_pd1];
    if (_jB2) {
        _jB2._6z(_wx(_7z), _8z)
    }
}

function _bB2(_pd1) {
    var _jB2 = _PA2[_pd1];
    if (_jB2) {
        return _jB2._dz();
    }
    return 0
}

function _cB2(_pd1) {
    var _jB2 = _PA2[_pd1];
    if (_jB2) {
        return _jB2._ez().byteLength
    }
    return 0
}

function _Tt2() {
    this.__type = "[BuiltIn]";
    this._Z01 = 0;
    this._bv2 = 0;
    this._cv2 = 0;
    this._lB2 = 0;
    this._mB2 = 0;
    this._nB2 = 0;
    this._oB2 = 0;
    this._pB2 = 100;
    this._Su2 = 0;
    this._Xu2 = "/";
    this._qB2 = "/";
    this._rB2 = "/";
    this._sB2 = 0;
    this._tB2 = 0;
    this._Fh = 0;
    this._uB2 = 0;
    this._vB2 = "room";
    this._wB2 = 30;
    this._xB2 = false;
    this._yB2 = 0x00000000;
    this._zB2 = false;
    this._AB2 = false;
    this._BB2 = false;
    this._CB2 = 0;
    this._DB2 = 0;
    this._EB2 = 0;
    this._FB2 = 0;
    this._GB2 = 0;
    this._HB2 = 0;
    this._IB2 = 0;
    this._JB2 = 1.0;
    this._KB2 = 1.0;
    this._LB2 = 0;
    this._MB2 = 0;
    this._NB2 = 0;
    this._OB2 = 1.0;
    this._PB2 = false;
    this._QB2 = 0;
    this._hX = 0;
    this._RB2 = 0;
    this._SB2 = 0;
    this._TB2 = 0;
    this._UB2 = 0;
    this._iX = 0;
    this._jX = 0;
    this._kX = 0;
    this._lX = 0;
    this._VB2 = 0;
    this._WB2 = 0;
    this._XB2 = 0;
    this._YB2 = 0;
    this._ZB2 = 0;
    this.__B2 = 0;
    this._3r = 0;
    this._4r = 0;
    this._0C2 = 0;
    this._1C2 = 0;
    this._Tm = 0;
    this._2C2 = 0;
    this._3C2 = "";
    this._4n = "";
    this._Zu2 = false;
    this._4C2 = false;
    this._5C2 = false;
    this._6C2 = false;
    this._7C2 = "score";
    this._8C2 = "lives";
    this._9C2 = "health";
    this._821 = 0;
    this._aC2 = 0;
    this._bC2 = 0;
    this._cC2 = 0;
    this._dC2 = 0;
    this._eC2 = 0;
    this._fC2 = 0;
    this._gC2 = 0;
    this._hC2 = 0;
    this._iC2 = 0;
    this._jC2 = 0;
    this._ew2 = 0;
    this._kC2 = 0;
    this._lC2 = 0;
    this._mC2 = true;
    this._nC2 = true;
    this._oC2 = 8.2;
    this._ib1 = -1;
    this.__r = -1;
    this._7Z = -1;
    this._pC2 = false;
    this._qC2 = -1;
    this._hX = [];
    this._RB2 = [];
    this._SB2 = [];
    this._TB2 = [];
    this._UB2 = [];
    this._iX = [];
    this._jX = [];
    this._kX = [];
    this._lX = [];
    this._VB2 = [];
    this._WB2 = [];
    this._XB2 = [];
    this._YB2 = [];
    this._ZB2 = [];
    this.__B2 = [];
    this._mX = [];
    this._gX = [];
    this._AB2 = [];
    this._BB2 = [];
    this._CB2 = [];
    this._DB2 = [];
    this._EB2 = [];
    this._FB2 = [];
    this._GB2 = [];
    this._HB2 = [];
    this._IB2 = [];
    this._JB2 = [];
    this._KB2 = [];
    this._LB2 = [];
    this._MB2 = [];
    this._NB2 = [];
    this._OB2 = []
}

_Tt2.prototype._Jm = function () {
    return this._ib1
};
_Tt2.prototype._KB = function (_rC2) {
    for (var _uv = 0; _uv < _rC2.length; _uv++) {
        var _lT = _rC2[_uv];
        this[_uv] = _lT
    }
};

function _oQ() {
    this.__type = "[Font]";
    this._pQ = false;
    this._sC2 = false;
    this._F3 = "";
    this._qQ = "";
    this._l5 = 12;
    this.bold = false;
    this._m5 = false;
    this._n5 = 32;
    this._o5 = 127;
    this._vQ = "";
    this.prop = false;
    this._tC2 = 0;
    this._uC2 = null;
    this.antialias = 0;
    this._p5 = 0;
    this._Ys = 1;
    this._Zs = 1;
    this._vC2 = 0.5;
    this._s5 = null;
    this._qD = null;
    this._wC2 = null
}

_oQ.prototype._xC2 = function (_fy2) {
    this._F3 = _fy2._F3;
    this._qQ = _fy2._q5;
    this._l5 = _fy2._l5;
    this.bold = _fy2.bold;
    this._m5 = _fy2._m5;
    this._n5 = _fy2._n5 & 0xffff;
    this._pQ = false;
    this.antialias = 0;
    this._p5 = 0;
    if (((_fy2._n5 >> 16) & 0xff) !== 0) this._p5 = (_fy2._n5 >> 16) & 0xff;
    if (((_fy2._n5 >> 24) & 0xff) !== 0) this.antialias = ((_fy2._n5 >> 24) & 0xff) - 1;
    this._o5 = _fy2._o5;
    this._Ys = _fy2.scaleX;
    this._Zs = _fy2.scaleY;
    this._s5 = [];
    var _CO = 99999999;
    var _It = -99999999;
    var maxHeight = 0;
    for (var _yC2 = 0; _yC2 < _fy2._s5.length; _yC2++) {
        var index = -2;
        _zC2 = _fy2._s5[_yC2];
        if (_zC2._u5 != undefined) index = _zC2._u5.charCodeAt(0); else if (_zC2._t5 != undefined) index = _zC2._t5;
        this._s5[index] = _zC2;
        if (index < _CO) _CO = index;
        if (index > _It) _It = index;
        if (_zC2._w5 > maxHeight) maxHeight = _zC2._w5
    }
    this._AC2 = maxHeight;
    this._n5 = _CO;
    this._o5 = _It;
    this._qD = _gy2(_fy2._r5)
};
_oQ.prototype._BC2 = function () {
    var height = 0;
    for (var _tt = 0; _tt < this._wC2._Lb1.length; _tt++) {
        var _DD = this._wC2._Lb1[_tt];
        height = _Jt(height, _DD._uc)
    }
    this._l5 = height
}
;_oQ.prototype._CC2 = function (_zP) {
    if ((this._uC2 != null) && (this._uC2 != undefined)) {
        var _LC = "";
        for (var _t5 = 0; _t5 < _zP.length; _t5++) {
            if (_zP.charAt(_t5) === '\n') {
                _LC = _LC + _zP.charAt(_t5)
            } else {
                var _KP = this._uC2.indexOf(_zP.charAt(_t5));
                if ((_KP >= 0) && (_KP < this._uC2.length)) {
                    _LC = _LC + String.fromCharCode(this._n5 + _KP)
                }
            }
        }
        return _LC
    }
    return _zP
};
_oQ.prototype._fQ = function (_zP) {
    if ((!_zP) || (0 === _zP.length)) return 0;
    if (this._pQ) {
        return this._l5
    } else {
        return this._AC2
    }
};
_oQ.prototype._gQ = function (_zP, _DC2) {
    if ((!_zP) || (0 === _zP.length)) return 0;
    var _LC, _dQ;
    if (_DC2) {
        _dQ = [_zP]
    } else {
        var _LC = this._CC2(_zP, this);
        var _dQ = _XN._YN(_LC, -1, this)
    }
    if (this._pQ) {
        if (this._sC2) {
            var _mT = 0;
            for (var _t5 = 0; _t5 < _dQ.length; _t5++) {
                var _EC2 = 0;
                var _da2 = _dQ[_t5];
                for (var _Rt = 0; _Rt < _da2.length; _Rt++) {
                    _EC2 += this._FC2(_da2.charCodeAt(_Rt))
                }
                _mT = _Jt(_mT, _EC2)
            }
            return _mT
        } else {
            var _mT = 0;
            _Iv.font = this._vQ;
            if (_Iv.measureText) {
                for (var _t5 = 0; _t5 < _dQ.length; _t5++) {
                    var _bk2 = _Iv.measureText(_dQ[_t5]);
                    _mT = _Jt(_mT, _bk2.width)
                }
            }
            return _mT
        }
    } else {
        var _mT = 0;
        for (var _t5 = 0; _t5 < _dQ.length; _t5++) {
            var _EC2 = 0;
            var _da2 = _dQ[_t5];
            for (var _Rt = 0; _Rt < _da2.length; _Rt++) {
                var _u5 = _da2.charCodeAt(_Rt);
                var _zC2 = this._s5[_u5];
                if (!_zC2) {
                    _zC2 = this._s5[this._n5]
                }
                _EC2 += _zC2.shift
            }
            _mT = _Jt(_mT, _EC2)
        }
        return _mT
    }
};
_oQ.prototype._FC2 = function (_fh1) {
    if (this._pQ) {
        if (this._sC2) {
            var _mT = this._tC2;
            if ((_fh1 >= this._n5) && (_fh1 < this._o5)) {
                var _DD = this._wC2._Lb1[_fh1 - this._n5];
                if (this.prop) {
                    _mT += _DD._rc
                } else {
                    _mT += _DD._tc
                }
            } else if (_fh1 === 32) {
                _mT += this._GC2
            }
            return _mT
        } else {
            _Iv.font = this._vQ;
            if (_Iv.measureText) {
                var _bk2 = _Iv.measureText(String.fromCharCode(_fh1));
                return _bk2.width
            }
            return 0
        }
    }
    var _zC2 = this._s5[_fh1];
    if (_zC2) {
        return _zC2.shift
    } else if (0x20 >= this._n5 && 0x20 <= this._o5) {
        return this._s5[0x20].shift
    } else {
        return this._s5[this._n5].shift
    }
};
_oQ.prototype._HC2 = function (_Ps, _Qs, _oc1, _GL, _HL, _Ts, _TQ, _UQ, _LT, _MT) {
    var _IC2;
    var _JC2 = this._qD;
    if (!_JC2._Iu.complete) return;
    var _MN = _oc1.length;
    for (var _t5 = 0; _t5 < _MN; _t5++) {
        _fh1 = _oc1.charCodeAt(_t5);
        var _zC2 = this._s5[_fh1];
        if (_zC2) {
            var _0v = _zC2.x;
            var _1v = _zC2.y;
            var _4U = _zC2._v5;
            var _6U = _zC2._w5;
            if (Math.abs(_Ts) < 0.001) {
                _Iv._Kb1(_JC2,
                    _0v + _JC2.x, _1v + _JC2.y, _4U, _6U, _Ps + (_zC2.offset * _GL), _Qs, _4U * this._Ys * _GL, _6U * this._Zs * _HL, _TQ, _UQ, _LT, _MT)
            } else {
                _Iv._Kb1(_JC2, _0v + _JC2.x, _1v + _JC2.y, _4U, _6U, _Ps + (_zC2.offset * _GL), _Qs, _4U, _6U, _TQ, _UQ, _LT, _MT)
            }
            _Ps += _GL * this._FC2(_fh1)
        }
    }
};
_oQ.prototype._KC2 = function (_Ps, _Qs, _Ts) {
    var _aL = new _JJ();
    _aL._4L(-_Ps, -_Qs, 0);
    var _eL = new _JJ();
    _eL._8L(_Ts);
    var _ri1 = new _JJ();
    _ri1.Multiply(_aL, _eL);
    _aL._4L(_Ps, _Qs, 0);
    var _LC2 = new _JJ();
    _LC2.Multiply(_ri1, _aL);
    return _LC2
};
_oQ.prototype._MC2 = function (_Ps, _Qs, _oc1, _GL, _HL,
                               _Ts, _TQ, _UQ, _LT, _MT) {
    if (this._pQ) {
        this._HC2(_Ps, _Qs, _oc1, _GL, _HL, _Ts, _TQ, _UQ, _LT, _MT)
    }
    var _IC2;
    var _JC2 = this._qD;
    if (!_JC2._Iu.complete) return;
    var _MN = _oc1.length;
    if (_NC2) {
        _TQ &= 0xfffefffe;
        _UQ &= 0xfffefffe;
        _LT &= 0xfffefffe;
        _MT &= 0xfffefffe;
        _UQ |= 0x00010000;
        _LT |= 0x00000001;
        _MT |= 0x00010001
    }
    var _ew, _mw, _ow, _qw;
    if (!_JC2._Iu._bw) _cw(_JC2);
    var _OC2;
    if (Math.abs(_Ts) > 0.001) {
        _OC2 = _cL(_3L);
        _2L(_3L, this._KC2(_Ps, _Qs, _Ts))
    }
    var _dw = _MN * 6;
    _ew = _uu._fw(_gw._hw, _JC2._Iu._bw, _uu._iw, _dw);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _dw;
    var _sw = index, _tw = _sw + _jw, _uw = _tw + _jw, _vw = _uw + _jw, _ww = _vw + _jw, _xw = _ww + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    var scaleX, scaleY;
    if (Math.abs(_Ts) < 0.001) {
        scaleX = this._Ys * _GL;
        scaleY = this._Zs * _HL
    } else {
        scaleX = this._Ys * _GL;
        scaleY = this._Zs * _HL
    }
    var _C42 = 0;
    var _PC2 = this._vC2, _QC2 = 1.0 / _JC2._Iu.width, _RC2 = 1.0 / _JC2._Iu.height;
    for (var _t5 = 0; _t5 < _MN; _t5++) {
        _fh1 = _oc1.charCodeAt(_t5);
        var _zC2 = this._s5[_fh1];
        if (_zC2) {
            var _0v = _zC2.x, _1v = _zC2.y, _4U = _zC2._v5, _6U = _zC2._w5;
            var x = _Ps + (_zC2.offset * _GL);
            _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = x - _PC2;
            _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = _Qs - _PC2;
            _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = x + _PC2 + (_4U * scaleX);
            _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = _Qs + _PC2 + (_6U * scaleY);
            _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
            _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = (_JC2.x + _0v - _PC2) * _QC2;
            _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = (_JC2.y + _1v - _PC2) * _RC2;
            _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_JC2.x + _0v + _4U + _PC2) * _QC2;
            _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_JC2.y + _1v + _6U + _PC2) * _RC2;
            _ow[_sw] = _ow[_xw] = _TQ;
            _ow[_tw] = _UQ;
            _ow[_uw] = _ow[_vw] = _LT;
            _ow[_ww] = _MT;
            _sw += (_jw * 6);
            _tw += (_jw * 6);
            _uw += (_jw * 6);
            _vw += (_jw * 6);
            _ww += (_jw * 6);
            _xw += (_jw * 6);
            _Ps += _GL * _zC2.shift
        } else {
            _C42++
        }
    }
    _ew._lw -= _C42;
    if (_OC2 != undefined) {
        _2L(_3L, _OC2)
    }
};
_oQ.prototype._SC2 = function (_Ps, _Qs, _oc1, _GL, _HL, _Ts, _TQ, _UQ, _LT, _MT) {
    var _IC2 = null;
    var _JC2 = _Ju[this._qD._vc];
    if (!_JC2.complete) return;
    var _P52 = _Iv.globalAlpha;
    _Iv.globalAlpha = ((_TQ >> 24) & 0xff) / 255.0;
    var _MN = _oc1.length;
    _TQ = _TQ & 0xffffff;
    _Ts = _xt2(_Ts);
    if (Math.abs(_Ts) > 0.00001) {
        _TC2(_Ps, _Qs, this._Ys * _GL, this._Zs * _HL, -_Ts);
        _Ps = 0;
        _Qs = 0;
        if (_TQ != 0xffffff) {
            for (var _t5 = 0; _t5 < _MN; _t5++) {
                _fh1 = _oc1.charCodeAt(_t5);
                var _zC2 = this._s5[_fh1];
                if (_zC2) {
                    var _4U = _zC2._v5;
                    if (_4U != 99999) {
                        var _6U = _zC2._w5;
                        _IC2 = _UC2(_JC2, _zC2, _zC2.x, _zC2.y, _4U + 2, _6U + 2, _2y);
                        _Iv._Kb1(_IC2, 0, 0, _4U, _6U, _Ps + _zC2.offset, _Qs, _4U, _6U);
                        _Ps += this._FC2(_fh1)
                    }
                }
            }
        } else {
            for (var _t5 = 0; _t5 < _MN; _t5++) {
                _fh1 = _oc1.charCodeAt(_t5);
                var _zC2 = this._s5[_fh1];
                if (_zC2) {
                    var _4U = _zC2._v5;
                    if (_4U != 99999) {
                        var _6U = _zC2._w5;
                        _Iv._Kb1(_JC2, _zC2.x + this._qD.x, _zC2.y + this._qD.y, _4U, _6U, _Ps + _zC2.offset, _Qs, _4U,
                            _6U);
                        _Ps += this._FC2(_fh1)
                    }
                }
            }
        }
        _VC2()
    } else {
        _Ps = ~~(_Ps + 0.5);
        _Qs = ~~(_Qs + 0.5);
        var _WC2 = this._Ys * _GL;
        var _XC2 = this._Zs * _HL;
        if (_TQ != 0xffffff) {
            for (var _t5 = 0; _t5 < _MN; _t5++) {
                _fh1 = _oc1.charCodeAt(_t5);
                var _zC2 = this._s5[_fh1];
                if (_zC2) {
                    var _4U = _zC2._v5;
                    if (_4U != 99999) {
                        var _6U = _zC2._w5;
                        _IC2 = _UC2(_JC2, _zC2, _zC2.x + this._qD.x, _zC2.y + this._qD.y, _4U + 2, _6U + 2, _TQ);
                        _Iv._Kb1(_IC2, 0, 0, _4U + 1, _6U + 1, _Ps + (_zC2.offset * _WC2), _Qs, (_4U + 1) * _WC2, (_6U + 1) * _XC2);
                        _Ps += _WC2 * this._FC2(_fh1)
                    }
                }
            }
        } else {
            for (var _t5 = 0; _t5 < _MN; _t5++) {
                _fh1 = _oc1.charCodeAt(_t5);
                var _zC2 = this._s5[_fh1];
                if (_zC2) {
                    var _4U = _zC2._v5;
                    if (_4U != 99999) {
                        var _6U = _zC2._w5;
                        _Iv._Kb1(_JC2, _zC2.x + this._qD.x, _zC2.y + this._qD.y, _4U, _6U, _Ps + (_zC2.offset * _WC2), _Qs, _4U * _WC2, _6U * _XC2);
                        _Ps += _WC2 * this._FC2(_fh1)
                    }
                }
            }
        }
    }
    _Iv.globalAlpha = _P52
};
_oQ.prototype._YC2 = function (_Ps, _Qs, _oc1, _GL, _HL, _Ts, _TQ, _UQ, _LT, _MT) {
    if (this._wC2 == null) return;
    var _hv = ((_TQ >> 24) & 0xff) / 255.0;
    var _P52 = _Iv.globalAlpha;
    _Iv.globalAlpha = _hv;
    _TQ &= 0xffffff;
    var _WC2 = this._Ys * _GL;
    var _XC2 = this._Zs * _HL;
    if (Math.abs(_Ts) >= 0.001) {
        _TC2(_Ps, _Qs, 1,
            1, -_xt2(_Ts));
        _Qs = _Ps = 0
    }
    var _MN = _oc1.length;
    for (var _t5 = 0; _t5 < _MN; _t5++) {
        _fh1 = _oc1.charCodeAt(_t5);
        if (_fh1 != 20) {
            if (_fh1 < this._n5 || _fh1 >= this._o5) {
            } else {
                var _DD = this._wC2._Lb1[_fh1 - this._n5];
                var _JC2 = _Ju[_DD._vc];
                if (_JC2.complete) {
                    var _EU = _DD._pc;
                    var _FU = _DD._qc;
                    if (this.prop) _EU = 0;
                    if (_TQ != 0xffffff) {
                        var _IC2 = _Nv(_DD, _TQ);
                        _Iv._Kb1(_IC2, 0, 0, _DD._rc, _DD._sc, _Ps + (_EU * _WC2), _Qs + (_FU * _XC2), _DD._rc * _WC2, _DD._sc * _XC2)
                    } else {
                        _Iv._Kb1(_JC2, _DD.x, _DD.y, _DD._v5, _DD._w5, _Ps + (_EU * _WC2), _Qs + (_FU * _XC2), _DD._rc * _WC2, _DD._sc * _XC2)
                    }
                }
            }
        }
        _Ps = _Ps + _WC2 * this._FC2(_fh1)
    }
    if (Math.abs(_Ts) >= 0.001) _VC2();
    _Iv.globalAlpha = _P52
};
_oQ.prototype._ZC2 = function (_Ps, _Qs, _oc1, _GL, _HL, _Ts, _YP, _ZP, __P, _0Q) {
    if (this._wC2 == null) return;
    var _MN = _oc1.length;
    var _WC2 = this._Ys * _GL;
    var _XC2 = this._Zs * _HL;
    var __C2 = undefined;
    if (Math.abs(_Ts) >= 0.001) {
        __C2 = _cL(_3L);
        _2L(_3L, this._KC2(_Ps, _Qs, _Ts))
    }
    var alpha = (_YP & 0xff000000);
    var _0D2 = ((_ZP & 0xff0000) - (_YP & 0xff0000)) / _MN;
    var _1D2 = ((((_ZP & 0xff00) << 8) - ((_YP & 0xff00) << 8))) / _MN;
    var _2D2 = ((((_ZP & 0xff) << 16) - ((_YP & 0xff) << 16))) / _MN;
    var _3D2 = ((__P & 0xff0000) - (_0Q & 0xff0000)) / _MN;
    var _4D2 = ((((__P & 0xff00) << 8) - ((_0Q & 0xff00) << 8))) / _MN;
    var _5D2 = ((((__P & 0xff) << 16) - ((_0Q & 0xff) << 16))) / _MN;
    var _6D2 = _0D2;
    var _7D2 = _1D2;
    var _8D2 = _2D2;
    var _9D2 = _3D2;
    var _aD2 = _4D2;
    var _bD2 = _5D2;
    var _1j1 = _YP;
    var _8w2 = _0Q;
    for (var _t5 = 0; _t5 < _MN; _t5++) {
        var _2j1 = ((_YP & 0xff0000) + (_6D2 & 0xff0000)) & 0xff0000;
        _2j1 |= ((_YP & 0xff00) + (_7D2 >> 8) & 0xff00) & 0xff00;
        _2j1 |= ((_YP & 0xff) + (_8D2 >> 16)) & 0xff;
        _2j1 |= alpha;
        var _dj1 = ((_0Q & 0xff0000) + (_9D2 & 0xff0000)) & 0xff0000;
        _dj1 |= ((_0Q & 0xff00) + (_aD2 >> 8) & 0xff00) & 0xff00;
        _dj1 |= ((_0Q & 0xff) + (_bD2 >> 16)) & 0xff;
        _dj1 |= alpha;
        _6D2 += _0D2;
        _7D2 += _1D2;
        _8D2 += _2D2;
        _9D2 += _3D2;
        _aD2 += _4D2;
        _bD2 += _5D2;
        _fh1 = _oc1.charCodeAt(_t5);
        if (_fh1 != 0x20) {
            if (_fh1 < this._n5 || _fh1 > this._o5) {
            } else {
                var _DD = this._wC2._Lb1[_fh1 - this._n5];
                var _JC2 = _Ju[_DD._vc];
                if (_JC2.complete) {
                    var _EU = _DD._pc;
                    var _FU = _DD._qc;
                    if (this.prop) _EU = 0;
                    _Iv._Kb1(_DD, _DD.x, _DD.y, _DD._v5, _DD._w5, _Ps + (_EU * _WC2), _Qs + (_FU * _XC2), _DD._rc * _WC2, _DD._sc * _XC2, _1j1, _2j1, _dj1, _8w2)
                }
            }
        }
        _8w2 = _dj1;
        _1j1 = _2j1;
        _Ps += _WC2 * this._FC2(_fh1)
    }
    if (__C2 !== undefined) {
        _2L(_3L, __C2)
    }
};

function _1u2() {
    this._k5 = [];
    this.length = 0;
    this._eQ = null;
    this._UP = 0;
    this._cD2 = 0;
    this._SP = 0;
    var _nQ = _hQ("Arial", 12, false, false, 32, 127, false);
    this._k5[-1] = _nQ;
    _xs2 = -1;
    this._UP = _xs2
}

_1u2.prototype._qc1 = function (_za1) {
    return this._k5[_za1]
};
_1u2.prototype._NA = function () {
    this._k5 = [];
    length = 0
};
_1u2.prototype._3C = function (_fy2) {
    var _nQ = null;
    if (_fy2 != null) {
        _nQ = new _oQ();
        _nQ._xC2(_fy2)
    }
    this._k5[this._k5.length] = _nQ;
    return this._k5.length - 1;
};
_1u2.prototype._xQ = function (_dD2) {
    this._k5[this._k5.length] = _dD2;
    return this._k5.length - 1
};
_1u2.prototype._cQ = function () {
    if (this._UP >= 0 && this._UP <= this._k5.length && this._k5[this._UP] != null) {
        this._eQ = this._k5[this._UP]
    } else {
        this._eQ = this._k5[-1]
    }
};
_1u2.prototype._RB = function (_OB) {
    if (_OB >= 0 && _OB <= this._k5.length && this._k5[_OB]) {
        return this._k5[_OB]
    }
    return null
};

function _pc1(_LC, _eQ, _eD2) {
    if (_eD2 === undefined) _eD2 = false;
    if (_eD2 == false && _ls) return _LC;
    if (_LC == null) return 0;
    var hash = _eQ ? _eQ._CC2("#")[0] : '#';
    var _fD2 = _eQ ? _eQ._CC2("\\")[0] : '\\';
    var _gD2 = _LC;
    var _DK1 = "";
    var _t5 = 0;
    var _iq1 = 0;
    while (_iq1 < _gD2.length) {
        var _ZN = _gD2[_iq1];
        if (_ZN == hash) {
            if ((_t5 > 0) && (_gD2[_iq1 - 1] == '\\')) {
                _DK1 = _DK1.substring(0, _DK1.length - 1) + '#'
            } else {
                _DK1 += String.fromCharCode(0x0a);
                _t5++
            }
        } else {
            _DK1 += _ZN;
            _t5++
        }
        _iq1++
    }
    return _DK1
}

_1u2.prototype._YN = function (_oc1, _hD2, _eQ) {
    if (_oc1 == null) return;
    if (_hD2 < 0) _hD2 = 10000000;
    var _iD2 = _eQ ? _eQ._CC2(" ") : " ";
    var _KN = String.fromCharCode(0x0a);
    var _jD2 = String.fromCharCode(0x0d);
    _WN = [];
    var _kD2 = 0;
    if (!_ls) _oc1 = _pc1(_oc1, _eQ);
    var _MN = _oc1.length;
    var _BD = _oc1;
    var _lD2 = _BD[0];
    var start = 0;
    var end = 0;
    while (start < _MN) {
        var _Wa1 = 0;
        if (_hD2 == 10000000) {
            while (end < _MN && _BD[end] != _KN && _BD[end] != _jD2) {
                end++;
                if (end < _MN) _lD2 = _BD[end]; else _lD2 = String.fromCharCode(0x0)
            }
            var _u5;
            if (end < _MN) _u5 = _BD[end]; else _u5 = String.fromCharCode(0x0);
            if ((_KN == _lD2) && (_jD2 == _BD[end])) {
                end++;
                continue
            }
            if ((_jD2 == _lD2) && (_KN == _BD[end])) {
                end++;
                continue
            }
            _lD2 = _BD[end];
            _WN[_kD2++] = _BD.substring(start, end)
        } else {
            while (end < _MN) {
                if (_BD[end] != _iD2) break;
                end++
            }
            start = end;
            while (end < _MN && _Wa1 < _hD2) {
                _u5 = _BD[end];
                if (_u5 == _KN) break;
                _Wa1 += this._eQ._FC2(_u5.charCodeAt(0));
                end++
            }
            if (_Wa1 > _hD2) {
                end--;
                _Wa1 -= this._eQ._FC2(_BD.charCodeAt(end))
            }
            if (_BD[end] == _KN) {
                _WN[_kD2++] = _BD.substring(start, end)
            } else {
                if (end == start) return _WN;
                if (end != _MN) {
                    if ((_BD[end] != _iD2) || (_BD[end] != _iD2 && _BD[end + 1] != _iD2)) {
                        while (end > start) {
                            if (_BD[--end] == _iD2) break
                        }
                    }
                }
                if (end > start) {
                    while (_BD[end - 1] == _iD2) {
                        end--
                    }
                } else if (end == start) {
                    while (_BD[end] != _iD2 && end < _MN) {
                        end++
                    }
                }
                _WN[_kD2++] = _BD.substring(start, end);
            }
        }
        start = ++end
    }
    return _WN
};
_1u2.prototype._VP = function (_zP,
                               x, y, _mD2, _hD2, _Ts, _GL, _HL, _YP, _ZP, __P, _0Q) {
    var _p_ = _GL;
    var _q_ = _HL;
    var _nD2 = 0.0;
    var _oD2 = 0.0;
    var _WN = [];
    var _t5 = 0;
    this._cQ();
    var _eQ = this._eQ;
    if (_YP === undefined) {
        _YP = _Mx | ((_Lx * 255.0) << 24);
        _ZP = _Mx | ((_Lx * 255.0) << 24);
        __P = _Mx | ((_Lx * 255.0) << 24);
        _0Q = _Mx | ((_Lx * 255.0) << 24)
    } else if (_ZP === undefined) {
        _ZP = _YP;
        __P = _YP;
        _0Q = _YP
    }
    var _LC = _zP;
    _WN = this._YN(_LC, _hD2, _eQ);
    var _pD2 = _xt2(_Ts);
    var _bu = Math.sin(_pD2);
    var _cu = Math.cos(_pD2);
    if (_mD2 < 0) {
        _mD2 = _eQ ? _eQ._fQ('M') : 20
    }
    var _qD2 = _bu * _q_ * _mD2;
    var _rD2 = _cu * _q_ * _mD2;
    if (this._cD2 == 1) {
        y = y - Math.round((_WN.length * _rD2) / 2.0);
        x = x - Math.round((_WN.length * _qD2) / 2.0)
    }
    if (this._cD2 == 2) {
        y = y - Math.round(_WN.length * _rD2);
        x = x - Math.round(_WN.length * _qD2)
    }
    if (!_eQ) {
        if (!_uu) {
            _Iv.fillStyle = _oT;
            _Iv.globalAlpha = _Lx;
            for (_t5 = 0; _t5 <= _WN.length - 1; _t5++) {
                var _sD2 = _WN[_t5];
                if (_sD2 != null) {
                    _Iv.fillText(_eQ._CC2(_sD2), x, y + 13);
                    y = y + _rD2;
                    x = x + _qD2
                }
            }
        } else {
            _ON("Error: Runtime canvas fonts are not supported in WebGL.")
        }
    } else {
        for (_t5 = 0; _t5 <= _WN.length - 1; _t5++) {
            _nD2 = 0;
            _oD2 = 0;
            var _sD2 = _WN[_t5];
            if (_sD2 != null) {
                _sD2 = _eQ._CC2(_sD2);
                if (this._SP == 1) _nD2 = -(_p_ * _eQ._gQ(_sD2, true) / 2);
                if (this._SP == 2) _nD2 = -(_p_ * _eQ._gQ(_sD2, true));
                if (_eQ._sC2) {
                    _nD2 -= (_p_ * _eQ._wC2._R3);
                    _oD2 -= (_q_ * _eQ._wC2._S3)
                }
                var _St = x + (_cu * _nD2) + (_bu * _oD2);
                var _Ut = y - (_bu * _nD2) + (_cu * _oD2);
                if (_eQ._pQ) {
                    if (_eQ._sC2) {
                        if (!_uu) {
                            _eQ._YC2(_St, _Ut, _sD2, _p_, _q_, _Ts, _YP, _ZP, __P, _0Q)
                        } else {
                            _eQ._ZC2(_St, _Ut, _sD2, _p_, _q_, _Ts, _YP, _ZP, __P, _0Q)
                        }
                    } else {
                        if (_eQ._rQ) {
                            _tD2(_eQ._vQ, _sD2, _St, _Ut, 1, 1, _pD2, _YP, _ZP, __P, _0Q)
                        }
                    }
                } else {
                    if (_uu) {
                        _eQ._MC2(_St, _Ut, _sD2, _p_, _q_, _Ts, _YP, _ZP, __P, _0Q)
                    } else {
                        _eQ._SC2(_St, _Ut, _sD2, _p_, _q_, _Ts, _YP, _ZP, __P, _0Q)
                    }
                }
            }
            y = y + _rD2;
            x = x + _qD2
        }
    }
};
var _uD2;
var _Ju;
var _vD2 = null;
var _wD2 = 1024;
var _xD2 = 768;
var _yD2 = 1;
var _zD2 = 1;
var _SS = 0;
var _TS = 0;
var _US = 0;
var _VS = 0;
var _zW = 0;
var _AW = 0;
var _xW = 0;
var _yW = 0;
var _IW = [];
var _AD2 = 0;
var _Lv = 0xffffff;
var _BD2;
var _CD2;
var _id1;
var _jd1;
var _VC2;
var _DD2;
var _TC2;
var _ED2;
var _FD2 = !0;

function _GD2() {
    return _wD2
}

function _HD2() {
    return _xD2
}

function _Ib1(_ID2) {
    if (!_ID2) return;
    _ID2._JD2 = _ID2.transform;
    _ID2._RS = _ID2.setTransform;
    _ID2._PS = _ID2.save;
    _ID2._WS = _ID2.restore;
    _ID2._HT = _ID2.fillRect;
    _ID2._GT = _ID2.strokeRect;
    _ID2._WT = _ID2.beginPath;
    _ID2._OU = _ID2.arc;
    _ID2.__T = _ID2.stroke;
    _ID2._ZT = _ID2.closePath;
    _ID2.lineWidth = _ID2.lineWidth;
    _ID2._XT = _ID2.moveTo;
    _ID2._YT = _ID2.lineTo;
    _ID2._cU = _ID2.fill;
    _ID2._Kb1 = _ID2.drawImage;
    _ID2._qd1 = _ID2.getImageData;
    _ID2._KD2 = _ID2.createImageData;
    _ID2._pA2 = _ID2.putImageData;
    _ID2._LD2 = _ID2.clip;
    _ID2._MD2 = _ID2.rect
}

function _ND2(_ID2, _XJ) {
    if (_ID2.imageSmoothingEnabled == _XJ) return;
    _ID2.imageSmoothingEnabled = _XJ;
    _ID2.webkitImageSmoothingEnabled = _XJ;
    _ID2.mozImageSmoothingEnabled = _XJ;
    _ID2.msImageSmoothingEnabled = _XJ;
    _ID2.oImageSmoothingEnabled = _XJ
}

function _0d1(_ID2) {
    if (!_uu) _ND2(_ID2, _FD2)
}

function _jw2(_DM) {
    _DM = _DM > 0.5;
    if (_FD2 != _DM) {
        _FD2 = _DM;
        _ND2(_Iv, _DM)
    }
}

function _Vt2(_GN1) {
    _Ju = [];
    _vD2 = null;
    _SS = 0;
    _TS = 0;
    _US = 0;
    _VS = 0;
    _zW = 0;
    _AW = 0;
    _xW = 0;
    _yW = 0;
    _IW = [];
    _IW[0] = 1;
    _IW[1] = 0;
    _IW[2] = 0;
    _IW[3] = 0;
    _IW[4] = 1;
    _IW[5] = 0;
    if (!_uu) {
        if (_vl2) {
            _BD2 = _OD2
        } else {
            _BD2 = _PD2
        }
        _CD2 = _QD2;
        _RD2 = _SD2;
        _id1 = _TD2;
        _jd1 = _UD2;
        _VD2 = _WD2;
        _VC2 = _XD2;
        _DD2 = _YD2;
        _TC2 = _ZD2;
        _ED2 = __D2;
        _0E2 = _1E2;
        _2E2 = _3E2;
        _tD2 = _4E2;
        _5E2 = _6E2;
        _7E2 = _8E2;
        _9E2 = _aE2;
        _bE2 = function () {
        };
        _cE2 = function () {
        };
        _FD2 = !(_NN._xc && !_NN._xc._Hc);
        if (_wl2) {
            if (_vl2) {
                _Lv = 0x1ffffff;
                _BD2 = _dE2
            } else {
                _BD2 = _eE2
            }
            _CD2 = _QD2;
            _RD2 = _fE2
        }
    } else {
        _gE2()
    }
    _id1(0, 0, _eh1, _gh1);
    _jd1(0, 0, _eh1, _gh1, 0)
}

function _1E2() {
    _Iv._PS()
}

function _3E2() {
    _Iv._WS()
}

function __b1(_9c1) {
    _9c1._Fu = [];
    _9c1._Gu = 0;
    _9c1._Hu = 4;
    _9c1._Rc1 = 0;
    _9c1._Sc1 = null;
    _9c1._Gb1 = null;
    _9c1._Iu = _Ju[_9c1._vc]
}

function _2v2(_hE2) {
    _vD2 = _hE2;
    for (var _t5 = 0; _t5 < _hE2.length; _t5++) {
        var _DD = _hE2[_t5];
        __b1(_DD)
    }
}

function _iE2() {
    this._5c1 = null;
    this._jE2 = 0
}

function _UC2(_8z, _kE2, _Ps, _Qs, _HB, _IB, _Nx) {
    var _lE2 = null;
    if (_kE2._Fu != undefined) {
        _lE2 = _kE2._Fu[_Nx]
    } else {
        _kE2._Fu = [];
        _kE2._Hu = 4;
        _kE2._Gu = 0
    }
    if (_lE2 != null) {
        _lE2._jE2 = _AD2;
        return _lE2._5c1
    }
    var _mE2 = -9999999999;
    _lE2 = null;
    if (_kE2._Gu < _kE2._Hu) {
        _lE2 = new _iE2();
        _kE2._Gu++
    } else {
        var _nE2 = -1;
        for (var _t5 in _kE2._Fu) {
            if (!_kE2._Fu.hasOwnProperty(_t5)) continue;
            var _oE2 = _kE2._Fu[_t5];
            if (_oE2 != null) {
                var _Mt = _AD2 - _oE2._jE2;
                if (_Mt > _mE2) {
                    _nE2 = _t5;
                    _lE2 = _oE2;
                    _mE2 = _Mt
                }
            }
        }
        if (_nE2 >= 0) delete _kE2._Fu[_nE2]
    }
    _kE2._Fu[_Nx] = _lE2;
    _lE2._jE2 = _AD2;
    _lE2._5c1 = _pE2(_8z, _Ps, _Qs, _HB, _IB, _Nx);
    return _lE2._5c1
}

function _Nv(_9c1, _Nx) {
    return _UC2(_9c1._Iu, _9c1, _9c1.x, _9c1.y, _9c1._v5, _9c1._w5, _Nx)
}

function _gy2(_za1) {
    return _vD2[_za1]
}

function _XD2() {
    _Iv._RS(_IW[0], _IW[3], _IW[1], _IW[4], _IW[2], _IW[5])
}

function _YD2(_2y) {
    _Iv._PS();
    var _QS = [];
    _QS[0] = 1;
    _QS[1] = 0;
    _QS[2] = 0;
    _QS[3] = 1;
    _QS[4] = 0;
    _QS[5] = 0;
    _Iv._RS(_QS[0], _QS[1], _QS[2], _QS[3], _QS[4], _QS[5]);
    _Iv.fillStyle = _tT(_2y | 0xff000000);
    _Iv._HT(_SS, _TS, _US, _VS);
    _Iv._WS()
}

function _TD2(_FO1,
              _GO1, _HO1, _IO1) {
    _SS = _FO1;
    _TS = _GO1;
    _US = _HO1;
    _VS = _IO1;
    if (_ls) {
        if ((_SS === 0 && _TS === 0) && (_US == _Iv.canvas.width && _VS === _Iv.canvas.height)) {
        } else {
            _IW[0] = 1;
            _IW[1] = 0;
            _IW[2] = 0;
            _IW[3] = 1;
            _IW[4] = 0;
            _IW[5] = 0;
            _Iv._RS(_IW[0], _IW[1], _IW[2], _IW[3], _IW[4], _IW[5]);
            _Iv.beginPath();
            _Iv.moveTo(_SS, _TS);
            _Iv.lineTo(_SS + _US, _TS);
            _Iv.lineTo(_SS + _US, _TS + _VS);
            _Iv.lineTo(_SS, _TS + _VS);
            if (!(_UX == _Il2 && _ef1 == 4.0)) {
                _Iv.clip()
            }
        }
    }
}

function _qE2(_Ps, _Qs, _HB, _IB, _Ts) {
    var _Hv = new _2K((_Ps + _HB / 2.0), (_Qs + _IB / 2.0), -16000.0);
    var _vv = new _2K((_Ps + _HB / 2.0),
        (_Qs + _IB / 2.0), 0.0);
    var _zv = new _2K(Math.sin(-_Ts * (Math.PI / 180.0)), Math.cos(-_Ts * (Math.PI / 180.0)), 0.0);
    _Sr2._5K(_Hv, _vv, _zv);
    _Rr2._fK(_HB, -_IB * _cK, 1.0, 32000.0)
}

function _ZD2(_Ps, _Qs, _Ld1, _Md1, _Ts) {
    var _QS = [];
    _QS[0] = Math.cos(_Ts);
    _QS[3] = Math.sin(_Ts);
    _QS[1] = -_QS[3];
    _QS[4] = _QS[0];
    _QS[0] *= _Ld1;
    _QS[3] *= _Ld1;
    _QS[1] *= _Md1;
    _QS[4] *= _Md1;
    _QS[2] = _Ps;
    _QS[5] = _Qs;
    _Iv._JD2(_QS[0], _QS[3], _QS[1], _QS[4], _QS[2], _QS[5])
}

function _WD2(_rE2, _sE2, _tE2, _uE2) {
    if ((_SS === 0 && _TS === 0) && (_US == _Iv.canvas.width && _VS === _Iv.canvas.height)) {
    } else {
        _IW[0] = 1;
        _IW[1] = 0;
        _IW[2] = 0;
        _IW[3] = 1;
        _IW[4] = 0;
        _IW[5] = 0;
        _Iv._RS(_IW[0], _IW[1], _IW[2], _IW[3], _IW[4], _IW[5]);
        _Iv.moveTo(_SS, _TS);
        _Iv.lineTo(_SS + _US, _TS);
        _Iv.lineTo(_SS + _US, _TS + _VS);
        _Iv.lineTo(_SS, _TS + _VS);
        if (!(_UX == _Il2 && _ef1 == 4.0)) {
            _Iv.clip()
        }
    }
    _IW[0] = _rE2;
    _IW[1] = 0;
    _IW[2] = _tE2;
    _IW[3] = 0;
    _IW[4] = _sE2;
    _IW[5] = _uE2;
    _Iv._RS(_IW[0], _IW[3], _IW[1], _IW[4], _IW[2], _IW[5])
}

function _UD2(_vE2, _wE2, _xE2, _yE2, _Ts) {
    if ((_SS === 0 && _TS === 0) && (_US == _Iv.canvas.width && _VS === _Iv.canvas.height)) {
    } else {
        _IW[0] = 1;
        _IW[1] = 0;
        _IW[2] = 0;
        _IW[3] = 1;
        _IW[4] = 0;
        _IW[5] = 0;
        _Iv._RS(_IW[0], _IW[1], _IW[2], _IW[3], _IW[4], _IW[5]);
        _Iv.beginPath();
        _Iv.moveTo(_SS, _TS);
        _Iv.lineTo(_SS + _US, _TS);
        _Iv.lineTo(_SS + _US, _TS + _VS);
        _Iv.lineTo(_SS, _TS + _VS);
        if (!(_UX == _Il2 && _ef1 == 4.0)) {
            _Iv.clip()
        }
    }
    var _v5 = _US / _xE2;
    var _w5 = _VS / _yE2;
    _zW = _vE2;
    _AW = _wE2;
    _xW = _xE2;
    _yW = _yE2;
    _IW[0] = _v5;
    _IW[1] = 0;
    _IW[2] = -(_vE2 * _v5) + _SS;
    _IW[3] = 0;
    _IW[4] = _w5;
    _IW[5] = -(_wE2 * _w5) + _TS;
    _Iv._RS(_IW[0], _IW[3], _IW[1], _IW[4], _IW[2], _IW[5])
}

function _Su(_vs) {
    var _t5 = _Ju.length;
    var _Iu = new Image();
    _vs = _H91(_vs);
    _Iu.crossOrigin = 'anonymous';
    _Iu.src = _uQ(null, null, _vs);
    _Ju[_t5] = _Iu;
    return _t5
}

function _zE2(_Cu, _Du) {
    var _u5 = document.createElement("canvas");
    _u5.width = _Cu;
    _u5.height = _Du;
    var _t5 = _Ju.length;
    var _Iu = new Image(_Cu, _Du);
    _Iu.src = _uQ(null, null, _u5.toDataURL());
    _Ju[_t5] = _Iu;
    return _t5
}

function _AE2(_8z, _Ps, _Qs, _HB, _IB, _GN1) {
    var context = _8z.getContext('2d');
    context.globalCompositeOperation = 'copy';
    context.drawImage(_GN1, _Ps, _Qs)
}

function _Mb1(_BE2) {
    var _t5 = _Ju.length;
    _Ju[_t5] = _BE2;
    return _t5
}

function _6E2() {
    _AD2++
}

function _8E2() {
}

function _6c1(_9c1) {
    var _Gb1 = document.createElement(_1O);
    var _zD = _Gb1.getContext('2d');
    _Ib1(_zD);
    _Gb1.width = _9c1._v5;
    _Gb1.height = _9c1._w5;
    _zD._Kb1(_9c1._Iu, _9c1.x, _9c1.y, _9c1._v5, _9c1._w5, 0, 0, _9c1._v5, _9c1._w5);
    _Gb1.complete = true;
    return _Gb1
}

function _gc1(_9c1) {
    var _dc1 = [];
    var _f41 = _9c1._tc * _9c1._uc * 4;
    for (var _t5 = 0; _t5 < _f41; _t5++) _dc1[_t5] = 0;
    if (_9c1._Iu._bw) _CE2 = _uu._bR1(_9c1); else {
        var _Gb1 = document.createElement(_1O);
        var _zD = _Gb1.getContext('2d');
        _Ib1(_zD);
        _Gb1.width = _9c1._v5;
        _Gb1.height = _9c1._w5;
        _zD._Kb1(_9c1._Iu, _9c1.x, _9c1.y, _9c1._v5, _9c1._w5, 0, 0, _9c1._v5, _9c1._w5);
        _Gb1.complete = true;
        var data, _rd1, _DE2, _EE2;
        try {
            data = _zD.getImageData(0, 0, _9c1._v5, _9c1._w5);
        } catch (_PQ) {
            return _dc1
        }
        _CE2 = data.data
    }
    var _FE2 = (_9c1._pc + (_9c1._qc * _9c1._tc)) * 4;
    var _9u = _9c1._v5 * 4;
    for (y = 0; y < _9c1._w5; y++) {
        var _8c = _FE2;
        var _GE2 = y * _9u;
        for (x = 0; x < _9u; x++) {
            _dc1[_8c++] = _CE2[_GE2++]
        }
        _FE2 += _9c1._tc * 4
    }
    return _dc1
}

function _OD2(_9c1, _Ps, _Qs, _Ox) {
    if (!_9c1._Iu) return;
    if (!_9c1._Iu.complete) return;
    if (_9c1._Gb1 == null) _9c1._Gb1 = _6c1(_9c1);
    _Ps += _9c1._pc;
    _Qs += _9c1._qc;
    _Iv.globalAlpha = _Ox;
    _Iv._Kb1(_9c1._Gb1, ~~_Ps, ~~_Qs)
}

function _dE2(_9c1, _Ps, _Qs, _Ox) {
    _OD2(_9c1, _Ps, _Qs, _Ox)
}

function _PD2(_9c1, _Ps, _Qs, _Ox) {
    if (!_9c1._Iu) return;
    if (!_9c1._Iu.complete) return;
    _Iv.globalAlpha = _Ox;
    _Iv._Kb1(_9c1._Iu, ~~_9c1.x, ~~_9c1.y, _9c1._v5, _9c1._w5, Math.floor(_Ps) + _9c1._pc, Math.floor(_Qs) + _9c1._qc, _9c1._rc, _9c1._sc)
}

function _eE2(_9c1, _Ps, _Qs, _Ox) {
    _PD2(_9c1, _Ps, _Qs, _Ox)
}

function _HE2(_GN1) {
    try {
        _Iv._Kb1(_GN1, 0, 0, _GN1.width, _GN1.height, canvas.width, canvas.height,
            0, 0)
    } catch (e) {
        return false
    }
    var _Vv = _GN1.getContext('2d');
    _Vv.fillStyle = "white";
    _Vv.fillRect(0, 0, 1, 1);
    var _oA2 = _Vv.getImageData(0, 0, 1, 1);
    return (_oA2.data[0] === 255)
}

function _QD2(_9c1, _Ps, _Qs, _IE2, _JE2, _KE2, _LE2, _2y, _Ox) {
    var _MV1 = _9c1._Iu;
    if (!_MV1) return;
    if (!_MV1.complete) return;
    if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
    var _t5 = 0;
    if (_KE2) _t5 = 1;
    if (_LE2) _t5 |= 2;
    if (_t5 === 0) {
        _Iv.globalAlpha = _Ox;
        _Iv._Kb1(_MV1, _9c1.x, _9c1.y, _9c1._v5, _9c1._w5, _Ps + _9c1._pc, _Qs + _9c1._qc, (_9c1._rc * _IE2), (_9c1._sc * _JE2));
        return
    }
    var _v5 = _9c1._tc;
    var _w5 = _9c1._uc;
    if (_LE2) {
        _v5 = (((((_ad1._OV + (_9c1._tc - 1)) / _9c1._tc) & 0xffffffff) + 2) * _9c1._tc);
        _Ps = _zW + (((_Ps - _zW) % _9c1._tc) - _9c1._tc)
    }
    if (_KE2) {
        _w5 = (((((_ad1._QV + (_9c1._uc - 1)) / _9c1._uc) & 0xffffffff) + 2) * _9c1._uc);
        _Qs = _AW + (((_Qs - _AW) % _9c1._uc) - _9c1._uc)
    }
    if ((_9c1._Sc1 != null) && (_9c1._Sc1.width < (_v5 * _9c1._ME2) || _9c1._Sc1.height < (_w5 * _9c1._ME2))) {
        _9c1._Sc1 = null;
        _9c1._NE2 = 0
    }
    if ((_9c1._Rc1 != _t5) || (!_9c1._Sc1)) {
        _9c1._Rc1 = _t5;
        var buffer = document.createElement(_1O);
        var _zD = buffer.getContext('2d');
        _Ib1(_zD);
        buffer.width = _v5;
        buffer.height = _w5;
        _Iv.globalAlpha = 1;
        var _OE2 = 1;
        while ((_HE2(buffer) === false) && (buffer.width >= 64) && (buffer.height >= 64)) {
            debug("WARNING: Tiled image quality reduction");
            buffer.width /= 2;
            buffer.height /= 2;
            _OE2 /= 2
        }
        var _PE2 = _9c1.x;
        var _QE2 = _9c1.y;
        if (_2y != _Lv) {
            _MV1 = _Nv(_9c1, _2y);
            _PE2 = 0;
            _QE2 = 0
        }
        var _jp1 = _v5 / _9c1._tc;
        var _kp1 = _w5 / _9c1._uc;
        for (var y = 0; y < _kp1; y++) {
            for (var x = 0; x < _jp1; x++) {
                _zD._Kb1(_MV1, _PE2, _QE2, _9c1._v5, _9c1._w5, _9c1._pc + ((x * _9c1._tc) * _OE2), _9c1._qc + ((y * _9c1._uc) * _OE2), _9c1._rc * _OE2, _9c1._sc * _OE2)
            }
        }
        _9c1._ME2 = _OE2;
        _9c1._Sc1 = buffer
    }
    _Iv.globalAlpha = _Ox;
    _Iv._Kb1(_9c1._Sc1, _Ps, _Qs, _9c1._Sc1.width / _9c1._ME2, _9c1._Sc1.height / _9c1._ME2)
}

function _SD2(_9c1, _Pb1, _Qb1, _Ps, _Qs, _IE2, _JE2, _Rd1, _TQ, _UQ, _LT, _MT, _Ox) {
    if (!_9c1._Iu) return;
    if (!_9c1._Iu.complete) return;
    if ((abs(_IE2) <= 0.0001) || (abs(_JE2) <= 0.0001) || (_Ox <= 0)) {
        return
    }
    _TQ &= 0xffffff;
    var _EU = -(_Pb1 - _9c1._pc);
    var _FU = -(_Qb1 - _9c1._qc);
    var _P52 = _Iv.globalAlpha;
    _Iv.globalAlpha = _Ox;
    if (_TQ != _Lv) {
        var _IC2 = _Nv(_9c1, _TQ);
        var _Kt = Math.abs(_Rd1);
        if ((_Kt < 0.0001) && (_IE2 == 1) && (_JE2 == 1) && (_9c1._v5 === _9c1._rc) && (_9c1._w5 === _9c1._sc)) {
            _Iv._Kb1(_IC2, _Ps + _EU, _Qs + _FU)
        } else {
            if ((_IE2 < 0) || (_JE2 < 0) || (_Kt > 0.0001)) {
                _TC2(_Ps, _Qs, _IE2, _JE2, -_Rd1);
                _Iv._Kb1(_IC2, 0, 0, _9c1._v5, _9c1._w5, _EU, _FU, _9c1._rc, _9c1._sc);
                _VC2()
            } else {
                _Iv._Kb1(_IC2, 0, 0, _9c1._v5, _9c1._w5, _Ps + (_EU * _IE2), _Qs + (_FU * _JE2), _9c1._rc * _IE2, _9c1._sc * _JE2)
            }
        }
    } else {
        var _Kt = Math.abs(_Rd1);
        if ((_Kt < 0.0001) && (_IE2 == 1) && (_JE2 == 1) && (_9c1._v5 === _9c1._rc) && (_9c1._w5 === _9c1._sc)) {
            if (_9c1._Gb1 == null) {
                _9c1._Gb1 = _6c1(_9c1)
            }
            _Iv._Kb1(_9c1._Gb1, _Ps + _EU, _Qs + _FU)
        } else {
            if (_IE2 < 0 || _JE2 < 0 || _Kt > 0.001) {
                _TC2(_Ps,
                    _Qs, _IE2, _JE2, -_Rd1);
                _Iv._Kb1(_9c1._Iu, _9c1.x, _9c1.y, _9c1._v5, _9c1._w5, _EU, _FU, _9c1._rc, _9c1._sc);
                _VC2()
            } else {
                _Iv._Kb1(_9c1._Iu, _9c1.x, _9c1.y, _9c1._v5, _9c1._w5, _Ps + (_EU * _IE2), _Qs + (_FU * _JE2), _9c1._rc * _IE2, _9c1._sc * _JE2)
            }
        }
    }
    _Iv.globalAlpha = _P52
}

function _fE2(_9c1, _Pb1, _Qb1, _Ps, _Qs, _IE2, _JE2, _Rd1, _TQ, _UQ, _LT, _MT, _Ox) {
    try {
        _SD2(_9c1._Iu, _Pb1, _Qb1, _Ps, _Qs, _IE2, _JE2, _Rd1, _TQ, _UQ, _LT, _MT, _Ox)
    } catch (_PQ) {
        debug("error drawing image")
    }
}

function _pE2(_8z, _Ps, _Qs, _HB, _IB, _2y) {
    var buffer = document.createElement(_1O);
    var _zD = buffer.getContext('2d');
    _Ib1(_zD);
    buffer.width = _HB;
    buffer.height = _IB;
    _zD._Kb1(_8z, _Ps, _Qs, _HB, _IB, 0, 0, _HB, _IB);
    if (~~_2y != 0xffffff) {
        var data, _rd1, _DE2, _EE2;
        data = _zD._qd1(0, 0, buffer.width, buffer.height);
        _rd1 = data.data;
        _RE2 = _zD._KD2(buffer.width, buffer.height);
        _EE2 = _RE2.data;
        var _Kt = ((_2y >> 16) & 0xff) / 255;
        var _gv = ((_2y >> 8) & 0xff) / 255;
        var _Nt = (_2y & 0xff) / 255;
        var _Wa1 = (data.height * data.width * 4);
        for (var _t5 = _Wa1 - 4; _t5 >= 0; _t5 -= 4) {
            _EE2[_t5] = (_rd1[_t5] * _Kt) | 0;
            _EE2[_t5 + 1] = (_rd1[_t5 + 1] * _gv) | 0;
            _EE2[_t5 + 2] = (_rd1[_t5 + 2] * _Nt) | 0;
            _EE2[_t5 + 3] = (_rd1[_t5 + 3])
        }
        _RE2.data = _EE2;
        _zD._pA2(_RE2, 0, 0)
    }
    return buffer
}

function _SE2(_9c1, _1u, _2u, _ot, _pt, _aU, _bU, _TE2, _UE2, _Ox) {
    var _MV1 = _9c1._Iu;
    if (!_MV1) return;
    if (!_MV1.complete) return;
    _Iv.globalAlpha = _Ox;
    _VE2(_MV1, _1u, _2u, _ot, _pt, _aU, _bU, _9c1.x, _9c1.y, _9c1.x + _9c1._v5, _9c1.y, _9c1.x + _9c1._v5, _9c1.y + _9c1._w5);
    _VE2(_MV1, _aU, _bU, _TE2, _UE2, _1u, _2u, _9c1.x + _9c1._v5, _9c1.y + _9c1._w5, _9c1.x, _9c1.y + _9c1._w5, _9c1.x, _9c1.y)
}

function _VE2(_Wv, _Xv, _Yv, _xt, _yt, _zt, _At, _Zv, __v, _0w, _1w, _2w, _3w) {
    _Iv._PS();
    _Iv._WT();
    _Iv._XT(_Xv, _Yv);
    _Iv._YT(_xt, _yt);
    _Iv._YT(_zt, _At);
    _Iv._ZT();
    _Iv._LD2();
    var _4w = _Zv * (_3w - _1w) - _0w * _3w + _2w * _1w + (_0w - _2w) * __v;
    if (_4w == 0) return;
    var _5w = -(__v * (_zt - _xt) - _1w * _zt + _3w * _xt + (_1w - _3w) * _Xv) / _4w;
    var _6w = (_1w * _At + __v * (_yt - _At) - _3w * _yt + (_3w - _1w) * _Yv) / _4w;
    var _7w = (_Zv * (_zt - _xt) - _0w * _zt + _2w * _xt + (_0w - _2w) * _Xv) / _4w;
    var _8w = -(_0w * _At + _Zv * (_yt - _At) - _2w * _yt + (_2w - _0w) * _Yv) / _4w;
    var _9w = (_Zv * (_3w * _xt - _1w * _zt) + __v * (_0w * _zt - _2w * _xt) + (_2w * _1w - _0w * _3w) * _Xv) / _4w;
    var _aw = (_Zv * (_3w * _yt - _1w * _At) + __v * (_0w * _At - _2w * _yt) + (_2w * _1w - _0w * _3w) * _Yv) / _4w;
    _Iv._JD2(_5w, _6w, _7w, _8w, _9w, _aw);
    _Iv._Kb1(_Wv, 0, 0);
    _Iv._WS()
}

function __D2(_9c1, _241, _341, _Cu, _Du, _Ps, _Qs, _GL, _HL, _Gd1, _Ox) {
    if (!_9c1) return;
    if (!_9c1._Iu) return;
    if (!_9c1._Iu.complete) return;
    _Gd1 &= 0xffffff;
    _Iv.globalAlpha = _Ox;
    if (_241 < _9c1._pc) {
        var _WE2 = _9c1._pc - _241;
        _Ps += _WE2;
        _Cu -= _WE2;
        _241 = 0
    } else {
        _241 -= _9c1._pc
    }
    if (_341 < _9c1._qc) {
        var _WE2 = _9c1._qc - _341;
        _Qs += _WE2;
        _Du -= _WE2;
        _341 = 0
    } else {
        _341 -= _9c1._qc
    }
    if (_Cu > (_9c1._rc - _241)) _Cu = _9c1._rc - _241;
    if (_Du > (_9c1._sc - _341)) _Du = _9c1._sc - _341;
    if (_Cu <= 0 || _Du <= 0) return;
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    if (_Gd1 != _Lv) {
        var _IC2 = _Nv(_9c1, _Gd1);
        if (_GL < 0 || _HL < 0) {
            _TC2(_Ps, _Qs, _GL, _HL, 0);
            _Iv._Kb1(_IC2, _241, _341, _Cu, _Du, 0, 0, _Cu, _Du);
            _VC2()
        } else {
            _Iv._Kb1(_IC2, _241, _341, _Cu, _Du, _Ps, _Qs, _Cu * _GL, _Du * _HL)
        }
    } else {
        if (_GL < 0 || _HL < 0) {
            _TC2(_Ps, _Qs, _GL, _HL, 0);
            _Iv._Kb1(_9c1._Iu, _241 + _9c1.x, _341 + _9c1.y, _Cu, _Du, 0, 0, _Cu, _Du);
            _VC2()
        } else {
            _Iv._Kb1(_9c1._Iu, _241 + _9c1.x, _341 + _9c1.y, _Cu, _Du, _Ps, _Qs, _Cu * _GL, _Du * _HL)
        }
    }
}

function _Dd1(_9c1, _Ps, _Qs, _HB, _IB, _Gd1, _Ox) {
    if (!_9c1) return;
    if (!_9c1._Iu) return;
    if ((_9c1._Iu instanceof HTMLImageElement) && (!_9c1._Iu.complete)) return;
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    var _PE2 = _HB / _9c1._tc;
    var _QE2 = _IB / _9c1._uc;
    _RD2(_9c1, 0, 0, _Ps, _Qs, _PE2, _QE2, 0, _Gd1, _Gd1, _Gd1, _Gd1, _Ox)
}

function _4E2(_TP, _zP, _Ps, _Qs, _GL, _HL, _Ts, _2y, _Ox) {
    _Iv.globalAlpha = _Ox;
    _Iv.fillStyle = _LD(_2y, 1.0);
    _Iv.font = _TP;
    _Iv.textBaseline = "top";
    _TC2(_Ps, _Qs, _GL, _HL, -_Ts);
    _Iv.fillText(_zP, 0, 0);
    _VC2()
}

function _AD(_XE2, _HB, _IB) {
    try {
        var data, _rd1, _DE2, _EE2;
        data = _XE2._qd1(0, 0, _HB, _IB);
        _rd1 = _EE2 = data.data;
        var _YE2 = (_IB - 1) * _HB * 4;
        var _Kt = _rd1[_YE2 + 0];
        var _gv = _rd1[_YE2 + 1];
        var _Nt = _rd1[_YE2 + 2];
        var _hv = _rd1[_YE2 + 3];
        var _Wa1 = (data.height * data.width * 4);
        for (var _t5 = _Wa1 - 4; _t5 >= 0; _t5 -= 4) {
            _EE2[_t5 + 0] = _rd1[_t5 + 0];
            _EE2[_t5 + 1] = _rd1[_t5 + 1];
            _EE2[_t5 + 2] = _rd1[_t5 + 2];
            if ((_EE2[_t5 + 0] == _Kt) && (_EE2[_t5 + 1] == _gv) && (_EE2[_t5 + 2] == _Nt)) {
                _EE2[_t5 + 3] = 0x0
            } else {
                _EE2[_t5 + 3] = _rd1[_t5 + 3]
            }
        }
        _XE2._pA2(data, 0, 0)
    } catch (_PQ) {
        return false
    }
    return true
}

function _aE2(_PN) {
}

var _ZE2 = 0, __E2 = 0;

function _gZ(_0F2) {
    this._1F2 = false;
    this._2F2 = [];
    this._3F2 = _0F2;
    this._4F2 = "";
    this._5F2 = 0;
    this._6F2 = 0
}

function _fZ(_7F2, _8F2) {
    var _sP = _KQ(_7F2, _8F2);
    _9F2 = new _gZ(_7F2);
    _9F2._4F2 = _sP;
    _9F2._aF2();
    var _Gu = 0;
    for (var _t5 in _9F2._2F2) {
        if (!_9F2._2F2.hasOwnProperty(_t5)) continue;
        _Gu++;
        break
    }
    if (_Gu == 0) return null;
    return _9F2
}

_gZ.prototype._oP = function () {
    while ((this._4F2.charCodeAt(this._5F2) != 0x0a) && (this._4F2.charCodeAt(this._5F2) != 0x0d) && (this._5F2 < this._6z2)) {
        this._5F2++
    }
    this._6F2++;
    this._5F2++;
    if (this._5F2 >= this._6z2) return;
    if ((this._4F2.charCodeAt(this._5F2) == 0x0a) && (this._4F2.charCodeAt(this._5F2) == 0x0d)) {
        this._5F2++
    }
};
_gZ.prototype._bF2 = function () {
    with (this) {
        if (this._5F2 >= _6z2) return false;
        var _u5 = _4F2.charCodeAt(_5F2);
        if (_u5 == 0x20 || _u5 == 0x09 || _u5 == 0x0a || _u5 == 0x0d || _u5 == _od('#') || _u5 == _od(';')) {
            return true
        } else {
            return false
        }
    }
};
_gZ.prototype._pP = function () {
    with (this) {
        while (_bF2() && (_5F2 < _6z2)) {
            var _u5 = _4F2.charCodeAt(_5F2);
            if (_u5 == '#' || _u5 == ';') {
                _oP()
            } else if (_u5 == 0x0a) {
                _6F2++
            }
            _5F2++
        }
        if (_5F2 >= _6z2) return
    }
};
_gZ.prototype._cF2 = function () {
    with (this) {
        _pP();
        while ((_4F2.charAt(_5F2) != '[') && (_5F2 < _6z2)) {
            _5F2++
        }
        if (_5F2 >= _6z2) return null;
        _5F2++;
        var _dF2 = _5F2;
        while ((_4F2.charAt(_5F2) != ']') && (_5F2 < _6z2)) {
            _5F2++
        }
        if (_5F2 >= _6z2) return null;
        var _MN = _5F2 - _dF2;
        var _eF2 = [];
        _eF2.__m_pIniFileName__ = _4F2.substr(_dF2, _MN);
        _5F2++;
        return _eF2
    }
};
_gZ.prototype._fF2 = function (_gF2) {
    with (this) {
        _pP();
        if (_5F2 >= _6z2 || _4F2.charAt(_5F2) == '[') return false;
        var _dF2 = _5F2;
        var _hF2 = -1;
        while ((_4F2.charAt(_5F2) != '=') && (_5F2 < _6z2)) {
            if (_bF2()) {
                if (_hF2 < 0) _hF2 = _5F2
            } else {
                _hF2 = -1
            }
            _5F2++
        }
        if (_5F2 >= _6z2) return false;
        if (_hF2 < 0) _hF2 = _5F2;
        var _MN = _hF2 - _dF2;
        var _Pf1 = _4F2.substr(_dF2, _MN);
        while ((_4F2.charAt(_5F2) != '=') && (_5F2 < _6z2)) {
            _5F2++
        }
        if (_5F2 >= _6z2) return false;
        _5F2++;
        var _da2 = _6F2;
        _pP();
        if (_da2 != _6F2) return false;
        var _iF2 = _od('#');
        var _jF2 = _od(';');
        var _kF2 = false;
        var _cu = _4F2.charCodeAt(_5F2);
        switch (_cu) {
            case 34:
            case 39:
                _iF2 = _cu;
                _jF2 = _cu;
                _kF2 = true;
                _5F2++;
                break;
            case 91:
            case 123:
                _iF2 = -1;
                _jF2 = -1;
                break
        }
        _dF2 = _5F2;
        var _lF2 = -1;
        var _u5 = _4F2.charCodeAt(_5F2);
        while ((_u5 != 0x0a) && (_u5 != 0x0d) && (_u5 != _iF2) && (_u5 != _jF2) && (_5F2 < _6z2)) {
            if (_u5 == 0x20 || _u5 == 0x09) {
                if (_lF2 < 0) _lF2 = _5F2
            } else {
                _lF2 = -1
            }
            if (_u5 == _od('\\')) _5F2++;
            _5F2++;
            _u5 = _4F2.charCodeAt(_5F2)
        }
        if (_lF2 >= 0 && !_kF2) {
            _MN = _lF2 - _dF2
        }
        else {
            _MN = _5F2 - _dF2
        }
        var _mF2 = _4F2.substr(_dF2, _MN);
        _gF2[_Pf1] = _mF2;
        if (_kF2) {
            _cu = _4F2.charCodeAt(_5F2);
            if ((_cu == _iF2) && (_cu == _jF2)) {
                while ((_4F2.charCodeAt(_5F2) != 0x0a) && (_4F2.charCodeAt(_5F2) != 0x0d) && (_5F2 < _6z2)) {
                    _5F2++
                }
            }
        }
        return true
    }
};
_gZ.prototype._aF2 = function () {
    with (this) {
        if (_4F2 == null) return false;
        _6z2 = _4F2.length;
        _5F2 = 0;
        _6F2 = 0;
        var _eF2 = _cF2();
        if (_eF2 == null) {
            _4F2 = null;
            return false
        }
        _2F2[_eF2.__m_pIniFileName__] = _eF2;
        while (_5F2 < _6z2) {
            var _8N = _fF2(_eF2);
            if (!_8N) {
                if (_5F2 < _6z2) {
                    if (_4F2.charAt(_5F2) == '[') {
                        _eF2 = _cF2();
                        if (_eF2 == null) {
                            _4F2 = null;
                            return true
                        }
                        _2F2[_eF2.__m_pIniFileName__] = _eF2
                    }
                }
            }
        }
        _4F2 = null;
        return true
    }
};
_gZ.prototype._nF2 = function (_oF2, _pF2) {
    with (this) {
        var _eF2 = _2F2[_oF2];
        if (_eF2 != null && _eF2 != undefined) {
            var _mF2 = _eF2[_pF2];
            if (_mF2 != undefined) return _mF2
        }
        return null
    }
};
_gZ.prototype._jZ = function (_oF2, _pF2, _qF2) {
    this._1F2 = true;
    var _eF2 = this._2F2[_oF2];
    if (_eF2 == null || _eF2 == undefined) {
        _eF2 = [];
        _eF2.__m_pIniFileName__ = _oF2;
        this._2F2[_eF2.__m_pIniFileName__] = _eF2
    }
    _eF2[_pF2] = _qF2;
    return true
};
_gZ.prototype._hZ = function () {
    var _sP = "";
    var _KN = _jf(0x0d) + _jf(0x0a);
    for (var _rF2 in this._2F2) {
        if (!this._2F2.hasOwnProperty(_rF2)) continue;
        _sP = _sP + "[" + _rF2 + "]" + _KN;
        var _eF2 = this._2F2[_rF2];
        for (var _7N in _eF2) {
            if (!_eF2.hasOwnProperty(_7N)) continue;
            if (_7N != "__m_pIniFileName__") {
                var _mF2 = _eF2[_7N];
                if (_mF2.indexOf('"') < 0) {
                    _sP += _7N + '="' + _mF2 + '"' + _KN
                } else if (_mF2.indexOf("'") < 0) {
                    _sP += _7N + "='" + _mF2 + "'" + _KN
                } else {
                    _sP += _7N + "=" + _mF2 + _KN
                }
            }
        }
    }
    if (this._1F2) {
        _uP(this._3F2, _sP);
        this._1F2 = false
    }
    return _sP
};

function _H91(_7F2) {
    if (_7F2.substring(0, 5) == "file:") return _7F2;
    if ((_7F2.substring(0, 7) == "http://") || (_7F2.substring(0, 8) == "https://")) return _7F2;
    if (_7F2.substring(0, _Tu.length) == _Tu) return _uQ(null, null, _7F2);
    return _uQ(null, null, _Tu + _7F2)
}

function _sF2(_7F2) {
    if (_7F2.substring(0, 5) == "file:") return false;
    if (_7F2.substring(0, 4) == "ftp:") return false;
    if (_7F2.substring(0, 7) == "gopher:") return false;
    if (_7F2.substring(0, 7) == "mailto:") return false;
    if (_7F2.substring(0, 5) == "news:") return false;
    if (_7F2.substring(0, 5) == "nntp:") return false;
    if (_7F2.substring(0, 7) == "telnet:") return false;
    if (_7F2.substring(0, 5) == "wais:") return false;
    if (_7F2.substring(0, 5) == "news:") return false;
    if (_7F2.substring(1, 1) == ":") return false;
    return true
}

function _tF2(_EX) {
    try {
        var _uF2 = new XMLHttpRequest();
        _uF2.open('HEAD', _EX, false);
        _uF2.send();
        __E2 = _uF2.status;
        var _vF2 = (_uF2.status != 404 && _uF2.status != 0);
        return _vF2
    } catch (e) {
        return false
    }
}

function _wF2(_Zc2, _nd2) {
    try {
        var _AK = !window.XMLHttpRequest ? new ActiveXObject('Microsoft.XMLHTTP') : new XMLHttpRequest();
        _AK.open(_nd2 ? 'PUT' : 'GET', _Zc2, false);
        _AK.setRequestHeader('Content-Type',
            'text/html');
        _AK.send(_nd2 ? _nd2 : '');
        __E2 = _AK.status;
        return _AK.responseText
    } catch (e) {
        return null
    }
}

function _uP(_lu2, _tX) {
    if (_xF2) {
        return false
    } else if (_eZ) {
        try {
            localStorage[_jv2(_lu2)] = _tX;
            return true
        } catch (_PQ) {
            return false
        }
    }
}

function _KQ(_7F2, _8F2) {
    var _sP = null;
    if (_7F2.substring(0, 5) == "file:") return null;
    if (_8F2) {
        if ((_7F2.substring(0, 7) == "http://") || (_7F2.substring(0, 8) == "https://")) return;
        if (_xF2) {
            return null
        } else if (_eZ) {
            try {
                _sP = localStorage[_jv2(_7F2)]
            } catch (_PQ) {
                return null
            }
            if ((_sP == undefined) || (_sP == null)) return null
        }
    } else {
        if (!_sF2(_7F2)) return null;
        _7F2 = _H91(_7F2);
        _sP = _wF2(_7F2, false);
        if ((_sP == null) || (_sP == undefined)) return null;
        if (__E2 == 404) return null
    }
    return _sP
}

function _CP(_7F2, _8F2) {
    var _sP = null;
    if (_7F2.substring(0, 5) == "file:") return null;
    if (_8F2) {
        if (_xF2) {
            return false
        } else if (_eZ) {
            try {
                var name = _jv2(_7F2);
                if (localStorage[name] && (localStorage[name] !== undefined)) {
                    return true
                }
                return false
            } catch (_PQ) {
                return false
            }
        }
    } else {
        if (!_sF2(_7F2)) {
            return false
        }
        _7F2 = _H91(_7F2);
        return _tF2(_7F2)
    }
}

var _yF2 = new Array("StepEvent", "DrawEvent",
    "LeftButtonPressed", "RightButtonPressed", "NoButtonPressed");
var _zF2 = new _yO(0, 0, 0, 0);
var _AF2 = null;
var _BF2 = -1;
var _CF2 = -1;
var _hf2 = 0;

function _nt2() {
}

function _DF2(_EF2, _FF2, _OB, _GF2, _HF2) {
    this.__type = "[instance]";
    this.x = _EF2;
    this.y = _FF2;
    this._z41 = _EF2;
    this._A41 = _FF2;
    this._IF2 = _EF2;
    this._zr = _FF2;
    this._2c = 0;
    this._3c = 0;
    this._Wg = 0;
    this._Tb = 0;
    this._Sf = 0;
    this._Zf = 0;
    this._5j = 270;
    this._w02 = _GF2;
    this.id = _OB;
    this._hg = true;
    this._1h = [];
    for (var _t5 = 0; _t5 <= (_mg2 - 1); _t5++) {
        this._1h[_t5] = -1
    }
    this._Ia = true;
    this._B5 = true;
    this._JF2 = false;
    this._1c = 0;
    this._G41 = new _yO(0, 0, 0, 0);
    this._3g = 0;
    this._u_ = 0;
    this._KF2 = 0;
    this._LF2 = 0;
    this._MF2 = 0;
    this._NF2 = 0;
    this._OF2 = 0;
    this._4g = 1.0;
    this._5g = 1.0;
    this._6g = 0;
    this._8g = 1.0;
    this._PF2 = 0xffffff;
    this._t_ = 1;
    this._nf2 = -1;
    this._502 = -1;
    this._Jf2 = 0;
    this._Kf2 = 0;
    this._QF2 = 0;
    this._RF2 = 1;
    this._SF2 = 0;
    this._TF2 = 0;
    this._S61 = 0;
    this._UF2 = 0;
    this._VF2 = 0;
    this._dg2 = -1;
    this._hg2 = 0;
    this._fg2 = 1;
    this._eg2 = true;
    this._ig2 = false;
    this._WF2 = -1;
    this._XF2 = false;
    this._gg = false;
    this._YF2 = null;
    this._ZF2 = false;
    this._TW = true;
    this._6g2 = false;
    this._AZ = null;
    this.__F2 = null;
    this._702 = null;
    this._0G2 = null;
    this._pf2 = false;
    this._jf2 = _hf2;
    this._yZ(_GF2, _HF2, true);
    this._zZ(this._AZ._BZ);
    this._211 = -1;
    this._311 = false
}

_DF2.prototype._1g = function (_Ps) {
    if (this.x === _Ps) return;
    this.x = _Ps;
    this._TW = true
};
_DF2.prototype._Tf = function (_Qs) {
    if (this.y === _Qs) return;
    this.y = _Qs;
    this._TW = true
};
_DF2.prototype._bg = function (_1G2) {
    if (this._6g === _1G2) return;
    this._6g = _1G2;
    this._TW = true
};
_DF2.prototype._fn = function (_mX1) {
    if (this._4g === _mX1) return;
    this._4g = _mX1;
    this._TW = true
};
_DF2.prototype._gn = function (_mX1) {
    if (this._5g === _mX1) return;
    this._5g = _mX1;
    this._TW = true
};
_DF2.prototype.__C = function (_2y) {
    this._PF2 = _2y
};
_DF2.prototype._7g = function () {
    return _Px(this._PF2)
};
_DF2.prototype._Ef = function (_OB) {
    this._3g = _OB;
    this._TW = true;
    this._2G2 = null;
};
_DF2.prototype._4q = function (_OB) {
    this._nf2 = _OB;
    this._TW = true
};
_DF2.prototype._Cr = function (_631) {
    if (_631 < 0) {
        this._t_ = 1
    } else {
        this._t_ = 0;
        this._u_ = _631
    }
};
_DF2.prototype._Pl = function (_w01) {
    if (this._1c != _w01) {
        this._1c = _w01;
        _js._3G2[_js._3G2.length] = this;
        var _Z01 = _js;
        var _NW = this;
        if (_Z01 != null) {
            var _h21 = _z11._E11(_Z01, _NW._211);
            if (_h21 != null) {
                if (floor(_h21._1c) != floor(_NW._1c)) {
                    if (_h21._B_ && _h21._H_.length == 1) {
                        _z11._M11(_Z01, _h21, _NW._1c, true)
                    } else {
                        _z11._I11(_Z01, _h21, _NW);
                        _z11._B11(_Z01, _NW)
                    }
                }
            }
        }
    }
};
_DF2.prototype._Ey = function (_4G2, _rw2) {
    if ((this.x == _4G2) && (this.y == _rw2)) return;
    this.x = _4G2;
    this.y = _rw2;
    this._TW = true
};
_DF2.prototype._yZ = function (_wZ, _5G2, _6G2) {
    this._w02 = _wZ;
    if (this._AZ != null) {
        this._AZ._7G2(this);
        this._AZ = null;
        this.__F2 = null
    }
    if (_wZ == -1) _wZ = 0;
    this.__F2 = this._AZ = _4s._RB(_wZ);
    if (this._AZ != null) {
        if (_5G2) {
            this._AZ._B11(this)
        }
        this._kf2 = this._AZ._kf2;
        this._nf2 = this._AZ._8G2;
        if (!_ls) {
            if (_6G2) {
                this._1c = this._AZ._9G2
            } else {
                this._Pl(this._AZ._9G2)
            }
        }
        this._Ia = this._AZ._aG2;
        this._B5 = this._AZ._bG2;
        this._JF2 = this._AZ._cG2;
        this._TW = true
    }
};
_DF2.prototype._zZ = function (_za1) {
    var _3v2 = _Cb1._RB(_za1);
    if (_3v2) {
        this._G41.left = _3v2._G41.left;
        this._G41.right = _3v2._G41.right;
        this._G41.top = _3v2._G41.top;
        this._G41.bottom = _3v2._G41.bottom
    }
    this._3g = _za1;
    this._2G2 = null;
    if (this._AZ !== null) {
        this._8v()
    }
};
_DF2.prototype._CZ = function (_O01) {
    if (_O01 && this._702) {
        _O01._F71._Qx1(this._702)
    }
    this._702 = null;
    if (this._AZ._dG2._602) {
        this._eG2();
        this._TW = true
    }
};
_DF2.prototype._eG2 = function () {
    if (!this._AZ._dG2._602) {
        return
    }
    if (!_k21(this._3g)) {
        return
    }
    var _kc1 = _Cb1._RB(this._3g);
    if (!_js._F71) {
        return
    }
    var _971 = _871();
    var _fG2 = this._AZ._dG2, _gG2 = 0.0, _hG2 = 0.0;
    switch (_fG2._iG2) {
        case _jG2: {
            var _kG2 = 1.0;
            if (Math.abs(this._4g - this._5g) < 0.0001) {
                _kG2 = this._4g
            } else {
                debug("Image scale for physics object using circle collision should not vary across axes: " + this._AZ._Au2);
            }
            _gG2 = -_fG2._lG2[0] * _kG2;
            _hG2 = -_fG2._lG2[1] * _kG2;
            var _uk1 = _fG2._lG2[2] * _kG2;
            _C71(_971, _uk1)
        }
            break;
        case _mG2:
        case _nG2: {
            _H71(_971);
            if ((this._4g * this._5g) < 0) {
                for (var _tt = _fG2._lG2.length - 2; _tt >= 0; _tt -= 2) {
                    _J71(_971, _fG2._lG2[_tt + 0] * this._4g, _fG2._lG2[_tt + 1] * this._5g)
                }
            } else {
                for (var _tt = 0; _tt < _fG2._lG2.length; _tt += 2) {
                    _J71(_971, _fG2._lG2[_tt + 0] * this._4g, _fG2._lG2[_tt + 1] * this._5g)
                }
            }
        }
            break
    }
    _x71(_971, _fG2._oG2);
    _u71(_971, _fG2._pG2);
    _r71(_971, _fG2._qG2);
    _o71(_971, _fG2._rG2);
    _f71(_971, _fG2._sG2);
    _i71(_971, _fG2._tG2);
    if (_fG2._uG2 != undefined) {
        _l71(_971, _fG2._uG2)
    }
    if (_fG2._vG2 != undefined) {
        _z71(_971, _fG2._vG2)
    }
    if (_fG2._wG2 != undefined) {
        _b71(_971, _fG2._wG2)
    }
    _V71(this, _971, this.id, _gG2, _hG2)
};
_DF2.prototype._xG2 = function () {
    with (this) {
        if (this._2c == 0) {
            if (this._3c > 0) {
                this._Wg = 270
            } else if (this._3c < 0) {
                this._Wg = 90
            } else {
                this._Wg = 0
            }
        } else {
            var _xU = _yG2(180 * (Math.atan2(this._3c, this._2c)) / _Pt);
            if (_xU <= 0) {
                this._Wg = -_xU
            } else {
                this._Wg = 360.0 - _xU
            }
        }
        if (Math.abs(this._Wg - _fC(this._Wg)) < 0.0001) {
            this._Wg = _fC(this._Wg)
        }
        this._Wg = _wt2(this._Wg,
            360.0);
        this._Tb = Math.sqrt(_vK(this._2c) + _vK(this._3c));
        if (Math.abs(this._Tb - _fC(this._Tb)) < 0.0001) this._Tb = _fC(this._Tb)
    }
};
_DF2.prototype._zG2 = function () {
    this._2c = this._Tb * _yG2(Math.cos(this._Wg * 0.0174532925));
    this._3c = -this._Tb * _yG2(Math.sin(this._Wg * 0.0174532925));
    if (Math.abs(this._2c - _fC(this._2c)) < 0.0001) {
        this._2c = _fC(this._2c)
    }
    if (Math.abs(this._3c - _fC(this._3c)) < 0.0001) {
        this._3c = _fC(this._3c)
    }
};

function _yG2(_AG2) {
    return _xU = (~~(_AG2 * 1000000)) / 1000000.0
}

_DF2.prototype._BG2 = function (_831, _gT) {
    this._2c += _gT * _yG2(Math.cos(_831 * 0.0174532925));
    this._3c -= _gT * _yG2(Math.sin(_831 * 0.0174532925));
    this._xG2()
};
_DF2.prototype._CG2 = function () {
    if (this._Sf != 0.0) {
        var _DG2;
        if (this._Tb > 0) {
            _DG2 = this._Tb - this._Sf
        } else {
            _DG2 = this._Tb + this._Sf;
        }
        if ((this._Tb > 0) && (_DG2 < 0)) {
            this._3h(0)
        } else if ((this._Tb < 0) && (_DG2 > 0)) {
            this._3h(0)
        } else if (this._Tb != 0) {
            this._3h(_DG2)
        }
    }
    if (this._Zf != 0) {
        this._BG2(this._5j, this._Zf)
    }
};
_DF2.prototype._EG2 = function () {
    var _FG2 = this._8v();
    if (_FG2) {
        return _FG2._fs()
    }
    return _Cb1._GG2(this._3g)
}
;_DF2.prototype._8t = function (_5R, _za1, _3R, _4R, _HG2) {
    if (_HG2 == undefined) {
        _HG2 = _3R._AZ
    }
    var _IG2 = _AF2;
    var _JG2 = _BF2;
    var _KG2 = _CF2;
    var _eO = false;
    var _LG2 = false;
    if (_5R == _v02) {
        var _MG2 = _4s._RB(_za1);
        while (_MG2 != null && !_LG2) {
            var _LP = _HG2;
            while (_LP != null && !_LG2) {
                if (_LP._kR[_5R]) {
                    if (_LP._Mu2[_MG2._LZ]) {
                        _AF2 = _LP;
                        _BF2 = _5R;
                        _CF2 = _MG2._LZ;
                        _eO = _LP._8t(_5R, _MG2._LZ, _3R, _4R);
                        _LG2 = true;
                        break
                    }
                }
                _LP = _LP._2O
            }
            _MG2 = _MG2._2O
        }
    } else {
        var _LP = _HG2;
        var _NG2 = _5R | _za1;
        while (_LP != null) {
            if (_LP._kR[_NG2]) {
                _AF2 = _LP;
                _BF2 = _5R;
                _CF2 = _za1;
                _eO = _LP._8t(_5R,
                    _za1, _3R, _4R);
                break
            }
            _LP = _LP._2O
        }
    }
    _AF2 = _IG2;
    _BF2 = _JG2;
    _CF2 = _KG2;
    return _eO
};
_DF2.prototype._oR = function (_5R, _za1, _4R) {
    if (_AF2 != null) {
        if (_AF2._2O != null) {
            this._8t(_5R, _za1, this, _4R, _AF2._2O)
        }
    }
};
_DF2.prototype._Uf = function (_qs) {
    if (this._2c == _qs) return;
    this._2c = _qs;
    this._xG2()
};
_DF2.prototype._Yf = function (_qs) {
    if (this._3c == _qs) return;
    this._3c = _qs;
    this._xG2()
};
_DF2.prototype._Kh = function (_qs) {
    while (_qs < 0.0) {
        _qs += 360.0
    }
    while (_qs > 360.0) {
        _qs -= 360.0
    }
    this._Wg = _wt2(_qs, 360.0);
    this._zG2()
};
_DF2.prototype._3h = function (_qs) {
    if (this._Tb == _qs) return;
    this._Tb = _qs;
    this._zG2()
};
_DF2.prototype._UW = function () {
    var _kc1, _Mt;
    var _RW = (this._nf2 >= 0) ? this._nf2 : this._3g;
    if (_RW < 0 || _RW > _Cb1._N3.length) {
        if (!this._G41) {
            this._G41 = new _yO(0, 0, 0, 0)
        }
        this._G41.left = this.x;
        this._G41.top = this.y;
        this._G41.right = this.x;
        this._G41.bottom = this.y;
        this._ZF2 = false
    } else {
        var _G41 = this._G41;
        _kc1 = _Cb1._N3[_RW];
        if (this._6g == 0) {
            var _OG2 = _kc1._G41;
            var width = (_OG2.right + 1) - _OG2.left;
            var height = (_OG2.bottom + 1) - _OG2.top;
            _G41.left = _fC(this.x + this._4g * (_OG2.left - _kc1._R3));
            _G41.right = _fC(_G41.left + (this._4g * width));
            if (_G41.left > _G41.right) {
                _Mt = _G41.left;
                _G41.left = _G41.right;
                _G41.right = _Mt;
            }
            _G41.top = _fC(this.y + this._5g * (_OG2.top - _kc1._S3));
            _G41.bottom = _fC(_G41.top + (this._5g * height));
            if (_G41.top > _G41.bottom) {
                _Mt = _G41.top;
                _G41.top = _G41.bottom;
                _G41.bottom = _Mt
            }
            _G41.right -= 1;
            _G41.bottom -= 1;
            this._ZF2 = _kc1._PG2()
        } else {
            var _OG2 = _kc1._G41;
            var _QG2, _RG2;
            _QG2 = this._4g * (_OG2.left - _kc1._R3);
            _RG2 = this._4g * (_OG2.right - _kc1._R3 + 1);
            var _SG2, _TG2;
            _SG2 = this._5g * (_OG2.top - _kc1._S3);
            _TG2 = this._5g * (_OG2.bottom - _kc1._S3 + 1);
            var _cu, _bu;
            _cu = Math.cos(this._6g * _Pt / 180.0);
            _bu = Math.sin(this._6g * _Pt / 180.0);
            var _UG2 = _cu * _RG2;
            var _VG2 = _cu * _QG2;
            var _WG2 = _bu * _TG2;
            var _XG2 = _bu * _SG2;
            var _Mt;
            if (_UG2 < _VG2) {
                _Mt = _VG2;
                _VG2 = _UG2;
                _UG2 = _Mt
            }
            if (_WG2 < _XG2) {
                _Mt = _XG2;
                _XG2 = _WG2;
                _WG2 = _Mt
            }
            _G41.left = Math.floor((this.x + _VG2 + _XG2) + 0.5);
            _G41.right = Math.floor((this.x + _UG2 + _WG2) - 0.5);
            var _YG2 = _cu * _TG2;
            var _ZG2 = _cu * _SG2;
            var __G2 = _bu * _RG2;
            var _0H2 = _bu * _QG2;
            if (_YG2 < _ZG2) {
                _Mt = _ZG2;
                _ZG2 = _YG2;
                _YG2 = _Mt
            }
            if (__G2 < _0H2) {
                _Mt = _0H2;
                _0H2 = __G2;
                __G2 = _Mt
            }
            _G41.top = Math.floor((this.y + _ZG2 - __G2) + 0.5);
            _G41.bottom = Math.floor((this.y + _YG2 - _0H2) - 0.5);
            this._ZF2 = _kc1._PG2()
        }
        this._G41 = _G41
    }
    this._TW = false
};
_DF2.prototype._uZ = function (_Ps, _Qs, _1H2) {
    if (this._gg) return false;
    var _FG2 = this._8v();
    if (_FG2) {
        var _2H2 = _du;
        _du = this;
        if (_FG2._dt(this._G41, this._u_, this.x, this.y, this._4g, this._5g, this._6g)) {
            this._ZF2 = true;
            this._TW = false
        }
        _du = _2H2
    }
    if (this._TW) this._UW();
    var _G41 = this._G41;
    if (_Ps >= _G41.right + 1) return false;
    if (_Ps < _G41.left) return false;
    if (_Qs >= _G41.bottom + 1) return false;
    if (_Qs < _G41.top) return false;
    if ((!_1H2) || (!this._ZF2)) return true;
    var _mT = false;
    if (_FG2) {
        _mT = _FG2._0u(this._u_, this.x, this.y, this._4g, this._5g, this._6g, _Ps, _Qs)
    } else {
        var _Db1;
        if (this._nf2 < 0) {
            _Db1 = _Cb1._RB(this._3g)
        } else {
            _Db1 = _Cb1._RB(this._nf2)
        }
        if ((_Db1 === null) || (_Db1._Gt === 0)) return false;
        _mT = _Db1._3H2(Math.floor(this._u_), _G41, _fC(this.x), _fC(this.y), this._4g, this._5g, this._6g, _fC(_Ps), _fC(_Qs))
    }
    return _mT
};
_DF2.prototype._4H2 = function (_1u, _2u, _ot, _pt, _1H2) {
    if (this._gg) return false;
    var _FG2 = this._8v();
    if (_FG2) {
        var _2H2 = _du;
        _du = this;
        if (_FG2._dt(this._G41, this._u_, this.x,
            this.y, this._4g, this._5g, this._6g)) {
            this._ZF2 = true;
            this._TW = false
        }
        _du = _2H2
    }
    if (this._TW) this._UW();
    var _G41 = this._G41;
    if (_Lt(_1u, _ot) >= _G41.right + 1) return false;
    if (_Jt(_1u, _ot) < _G41.left) return false;
    if (_Lt(_2u, _pt) >= _G41.bottom + 1) return false;
    if (_Jt(_2u, _pt) < _G41.top) return false;
    if ((!_1H2) || (!this._ZF2)) return true;
    var _mT = false;
    if (_FG2) {
        _mT = _FG2._4u(this._u_, this.x, this.y, this._4g, this._5g, this._6g, _1u, _2u, _ot, _pt)
    } else {
        var _Db1;
        if (this._nf2 < 0) {
            _Db1 = _Cb1._RB(this._3g)
        } else {
            _Db1 = _Cb1._RB(this._nf2)
        }
        if ((_Db1 === null) || (_Db1._Gt == 0)) return false;
        _zF2.left = _fC(_Lt(_1u, _ot));
        _zF2.top = _fC(_Lt(_2u, _pt));
        _zF2.right = _fC(_Jt(_1u, _ot));
        _zF2.bottom = _fC(_Jt(_2u, _pt));
        _mT = _Db1._5H2(Math.floor(this._u_), _G41, _fC(this.x), _fC(this.y), this._4g, this._5g, this._6g, _zF2)
    }
    return _mT
};
_DF2.prototype._6H2 = function (_oS, _7H2) {
    var _8H2 = this._8v();
    var _9H2 = _oS._8v();
    var _aH2 = _Cb1._RB(this._3g);
    var _2H2 = _du;
    _du = this;
    if (_8H2._dt(this._G41, this._u_, this.x, this.y, this._4g, this._5g, this._6g)) {
        this._TW = false
    }
    _du = _oS;
    if (_9H2) {
        if (_9H2._dt(_oS._G41, _oS._u_, _oS.x, _oS.y, _oS._4g,
            _oS._5g, _oS._6g)) {
            _oS._TW = false
        }
    }
    _du = _2H2;
    if (this._TW) this._UW();
    if (_oS._TW) _oS._UW();
    if (_oS._G41.left >= this._G41.right + 1) return false;
    if (_oS._G41.right + 1 <= this._G41.left) return false;
    if (_oS._G41.top >= this._G41.bottom + 1) return false;
    if (_oS._G41.bottom + 1 <= this._G41.top) return false;
    var _aH2 = _Cb1._RB(this._3g);
    var _bH2 = (_oS._nf2 < 0) ? _Cb1._RB(_oS._3g) : _Cb1._RB(_oS._nf2);
    if (_bH2 === null) return false;
    if (!_7H2 || (!this._ZF2 && !_oS._ZF2)) return true;
    if (_9H2) {
        return _8H2._lt(this._u_, this.x, this.y, this._4g, this._5g,
            this._6g, _9H2, _oS._u_, _oS.x, _oS.y, _oS._4g, _oS._5g, _oS._6g)
    } else {
        return _8H2._Dt(this._u_, this.x, this.y, this._4g, this._5g, this._6g, _bH2, _oS._G41, _oS._u_, _oS.x, _oS.y, _oS._4g, _oS._5g, _oS._6g)
    }
};
_DF2.prototype._cH2 = function () {
    if (_ls) {
        var _5c1 = _Cb1._RB(this._3g);
        if (_5c1 != null) {
            if (_5c1._V3 == 1) {
                this._u_ += this._t_ * _5c1._W3
            } else {
                var _821 = _ms._ns();
                this._u_ += this._t_ * _5c1._W3 / _821
            }
        }
    } else {
        this._u_ += this._t_
    }
};
_DF2.prototype._nZ = function (_3R, _1H2) {
    if (this != _3R && !this._gg && !_3R._gg) {
        if (this._8v()) {
            return this._6H2(_3R,
                _1H2)
        }
        if (_3R._8v()) {
            return _3R._6H2(this, _1H2)
        }
        if (this._TW) this._UW();
        if (_3R._TW) _3R._UW();
        var _dH2 = _3R._G41;
        var _eH2 = this._G41;
        if (_dH2.left >= (_eH2.right + 1)) return false;
        if ((_dH2.right + 1) <= _eH2.left) return false;
        if (_dH2.top >= (_eH2.bottom + 1)) return false;
        if ((_dH2.bottom + 1) <= _eH2.top) return false;
        if (!_1H2 || (!this._ZF2 && !_3R._ZF2)) return true;
        var _fH2 = null;
        var _gH2 = null;
        if (this._nf2 < 0) {
            _fH2 = _Cb1._RB(this._3g)
        } else {
            _fH2 = _Cb1._RB(this._nf2)
        }
        if ((_fH2 == null) || (_fH2._Gt == 0)) return false;
        if (_3R._nf2 < 0) {
            _gH2 = _Cb1._RB(_3R._3g)
        }
        else {
            _gH2 = _Cb1._RB(_3R._nf2);
        }
        if ((_gH2 == null) || (_gH2._Gt == 0)) return false;
        return _fH2._hH2(this._u_ | 0, this._G41, _fC(this.x), _fC(this.y), this._4g, this._5g, this._6g, _gH2, _3R._u_ | 0, _3R._G41, _fC(_3R.x), _fC(_3R.y), _3R._4g, _3R._5g, _3R._6g)
    }
    return false
};
_DF2.prototype._T61 = function (_Os, _V31, _mX1, _iH2, _Y61, _jH2) {
    this._502 = -1;
    if (_Os < 0) return;
    var _Z61 = __61._14[_Os];
    if (!_Z61) return;
    if (_Z61.length <= 0) return;
    if (_mX1 < 0) return;
    this._502 = _Os;
    this._QF2 = _V31;
    if (this._QF2 >= 0) {
        this._Jf2 = 0
    } else {
        this._Jf2 = 1
    }
    this._Kf2 = this._Jf2;
    this._RF2 = _mX1;
    this._SF2 = _iH2;
    this._S61 = _jH2;
    if (_Y61) {
        if (this._QF2 >= 0) {
            this._Ey(_Z61._kH2(0), _Z61._lH2(0))
        } else {
            this._Ey(_Z61._kH2(1), _Z61._lH2(1))
        }
    }
    this._UF2 = this.x;
    this._VF2 = this.y
};
_DF2.prototype._802 = function () {
    var _071, _St, _Ut;
    if (this._502 < 0) return false;
    var _Z61 = __61._14[this._502];
    if (!_Z61) return;
    if (_Z61.length <= 0) return;
    var _mH2 = false;
    var _nH2 = this._SF2 * Math.PI / 180.0;
    var _oH2 = _Z61._371(this._Jf2);
    _St = _oH2.x;
    _Ut = _oH2.y;
    _071 = _oH2._Tb;
    _oH2 = null;
    _071 = _071 / (100 * this._RF2);
    this._Jf2 = this._Jf2 + this._QF2 * _071 / _Z61.length;
    var _pH2 = _Z61._371(0);
    if ((this._Jf2 >= 1) || (this._Jf2 <= 0)) {
        _mH2 = (this._QF2 == 0) ? false : true;
        switch (this._S61) {
            case 0: {
                if (this._QF2 != 0) {
                    this._Jf2 = 1;
                    this._502 = -1
                }
                break
            }
            case 1: {
                if (this._Jf2 < 0) {
                    this._Jf2++
                } else {
                    this._Jf2--
                }
                break
            }
            case 2: {
                var _qH2 = _Z61._371(1);
                _St = _qH2.x - _pH2.x;
                _Ut = _qH2.y - _pH2.y;
                var _rH2 = this._RF2 * (_St * Math.cos(_nH2) + _Ut * Math.sin(_nH2));
                var _sH2 = this._RF2 * (_Ut * Math.cos(_nH2) - _St * Math.sin(_nH2));
                if (this._Jf2 < 0) {
                    this._UF2 = this._UF2 - _rH2;
                    this._VF2 = this._VF2 - _sH2;
                    this._Jf2++
                } else {
                    this._UF2 = this._UF2 + _rH2;
                    this._VF2 = this._VF2 + _sH2;
                    this._Jf2--
                }
                break
            }
            case 3: {
                if (this._Jf2 < 0) {
                    this._Jf2 = -this._Jf2;
                    this._QF2 = Math.abs(this._QF2)
                } else {
                    this._Jf2 = 2 - this._Jf2;
                    this._QF2 = -Math.abs(this._QF2);
                }
                break
            }
            default : {
                this._Jf2 = 1;
                this._502 = -1
            }
        }
    }
    _oH2 = _Z61._371(this._Jf2);
    _St = _oH2.x - _pH2.x;
    _Ut = _oH2.y - _pH2.y;
    var _R31 = this._UF2 + this._RF2 * (_St * Math.cos(_nH2) + _Ut * Math.sin(_nH2));
    var _S31 = this._VF2 + this._RF2 * (_Ut * Math.cos(_nH2) - _St * Math.sin(_nH2));
    this._Uf(_R31 - this.x);
    this._Yf(_S31 - this.y);
    this._3h(0);
    this._Ey(_R31, _S31);
    return _mH2
}
;_DF2.prototype._Bf1 = function (_za1) {
    var _mT = -1;
    if ((_za1 >= 0) && (_za1 < _mg2)) {
        _mT = this._1h[_za1]
    }
    return _mT
};
_DF2.prototype._tH2 = function (_za1, _qs) {
    if ((_za1 >= 0) && (_za1 < _mg2)) {
        this._1h[_za1] = _qs
    }
};
_DF2.prototype._of2 = function () {
    if (this._TW) {
        this._UW()
    }
    return this._G41
};
_DF2.prototype._551 = function (_uH2, _PT) {
    var _v5, _w5;
    if (!_k21(this._3g)) {
        _v5 = _w5 = 0
    } else {
        var _Db1 = _Cb1._RB(this._3g);
        _v5 = _Db1.width * this._4g;
        _w5 = _Db1.height * this._5g
    }
    if (_uH2) {
        if ((this._2c < 0) && (this.x < 0)) {
            this._Ey(this.x + _js._DW() + _v5, this.y)
        }
        if ((this._2c > 0) && (this.x >= _js._DW())) {
            this._Ey(this.x - _js._DW() - _v5, this.y)
        }
    }
    if (_PT) {
        if ((this._3c < 0) && (this.y < 0)) {
            this._Ey(this.x, this.y + _js._EW() + _w5)
        }
        if ((this._3c > 0) && (this.y >= _js._EW())) {
            this._Ey(this.x, this.y - _js._EW() - _w5)
        }
    }
};
_DF2.prototype._E02 = function (_Ts, _vH2) {
    var _wH2 = {};
    if ((_vH2.x != 0.0) || (_vH2.y != 0.0)) {
        var _Uh1 = _Ts;
        var _xH2 = Math.cos(_Uh1);
        var _yH2 = Math.sin(_Uh1);
        _wH2.x = ((_vH2.x * _xH2) - (_vH2.y * _yH2));
        _wH2.y = ((_vH2.y * _xH2) + (_vH2.x * _yH2))
    } else {
        _wH2.x = _vH2.x;
        _wH2.y = _vH2.y
    }
    return _wH2
};
_DF2.prototype._c02 = function (_zH2) {
    var _AH2 = _js._ks();
    if (_ls) _AH2 = _ms._ns();
    var _b02 = 1.0 / _js._F71._G71;
    var _D02 = this._E02(_zH2._qj1(), this._702._1X1);
    this.x = (_zH2._371().x * _b02) + _D02.x;
    this.y = (_zH2._371().y * _b02) + _D02.y;
    this._6g = (-_zH2._qj1() * 180.0) / _Pt;
    this._TW = true;
    this._BH2 = (_zH2._qj1() * 180.0) / Math.PI;
    this._CH2 = this.x;
    this._DH2 = this.y;
    this._EH2 = (_zH2._ov1() * 180.0) / Math.PI;
    this._FH2 = _zH2._mv1().x * _b02;
    this._GH2 = _zH2._mv1().y * _b02;
    this._HH2 = this._FH2 / _AH2;
    this._IH2 = this._GH2 / _AH2;
    this._JH2 = _zH2._Xv1();
    this._KH2 = _zH2._yv1();
    this._LH2 = _zH2._zv1();
    this._MH2 = _zH2._jv1().x * _b02;
    this._NH2 = _zH2._jv1().y * _b02;
    this._OH2 = (_zH2._L_ === _aW1._9Z1._Hu1);
    this._PH2 = (_zH2._L_ === _aW1._9Z1._Pu1);
    this._QH2 = !_zH2.__v1();
    this._RH2 = _zH2._3w1();
    this._SH2 = _zH2._1w1();
    this._TH2 = Math.sqrt((this._HH2 * this._HH2) + (this._IH2 * this._IH2));
    this._UH2 = _zH2._Mv1();
    this._VH2 = _zH2._Lv1();
    if (this._d02 === undefined) {
        this._d02 = _zH2._371().x * _b02
    }
    if (this._e02 === undefined) {
        this._e02 = _zH2._371().y * _b02
    }
};
_DF2.prototype._8v = function () {
    if (_k21(this._3g)) {
        var _kc1 = _Cb1._RB(this._3g);
        if (_kc1._0G2) {
            if (!this._2G2) {
                this._2G2 = new _Dr(_kc1._0G2)
            }
        }
    }
    return this._2G2
};
_DF2.prototype._WH2 = function () {
    return this._211
};
_DF2.prototype._H11 = function (_K11) {
    this._211 = _K11
};
_DF2.prototype._C11 = function () {
    return this._311
};
_DF2.prototype._H01 = function (_XH2) {
    this._311 = _XH2
};

function _Wt2() {
    this._YH2 = new _0C();
    this._YH2._1C = true;
    this._ZH2 = []
}

_Wt2.prototype._NA = function () {
    this._ZH2 = [];
    this._YH2._NA()
};
_Wt2.prototype._l41 = function () {
    return this._YH2._gC
};
_Wt2.prototype._3C = function (_NW) {
    this._ZH2[_NW.id] = _NW;
    this._YH2._3C(_NW)
};
_Wt2.prototype._At2 = function (_OB) {
    return this._ZH2[_OB]
};
_Wt2.prototype._RB = function (_OB) {
    var _NW = this._ZH2[_OB];
    if (_NW != undefined && _NW != null) return _NW;
    var _LP = _4s._RB(_OB);
    if (_LP != undefined && _LP != null) {
        _NW = _LP.__H2._gC[0];
        if (_NW != undefined && _NW != null) return _NW
    }
    return null
};
_Wt2.prototype._0I2 = function (_3R) {
    this._YH2._E01(_3R);
    var id = _3R.id;
    this._ZH2[id] = null
};
_Wt2.prototype._1I2 = function () {
    var _gC = _js._tZ._gC;
    var _Z01 = _z11._Y01();
    for (var index = 0; index < _gC.length; index++) {
        var _NW = _gC[index];
        _NW._z41 = _NW.x;
        _NW._A41 = _NW.y;
        _NW._Kf2 = _NW._Jf2;
        _NW._cH2()
    }
};
_Wt2.prototype._2I2 = function () {
    var _gC = _js._tZ._gC;
    for (var index = 0; index < _gC.length; index++) {
        var _NW = _gC[index];
        _NW._CG2();
        if (_NW._802()) {
            _NW._8t(_902, 0, _NW, _NW)
        }
        if (_NW._2c !== 0 || _NW._3c !== 0) {
            _NW.x += _NW._2c;
            _NW.y += _NW._3c;
            _NW._TW = true
        }
    }
};
_Wt2.prototype._3I2 = function () {
    var _gC = _js._tZ._gC;
    for (var index = 0; index < _gC.length; index++) {
        var _NW = _gC[index];
        var _cN = _NW._EG2();
        if (_NW._u_ >= _cN) {
            _NW._u_ -= _cN;
            var _AZ = _NW._AZ;
            if (_AZ._kf2[_Rh2]) {
                _NW._8t(_Rh2, 0, _NW, _NW)
            }
        } else if (_NW._u_ < 0) {
            _NW._u_ += _cN;
            var _AZ = _NW._AZ;
            if (_AZ._kf2[_Rh2]) {
                _NW._8t(_Rh2, 0, _NW, _NW)
            }
        }
    }
};
_Wt2.prototype._8t = function (_5R, _za1) {
    var _Zt1 = true;
    if (_js) {
        var _NG2 = _5R;
        if (_NG2 != _v02) _NG2 |= _za1;
        var _gC = _js._tZ._gC;
        for (var index = 0; index < _gC.length; index++) {
            var _NW = _gC[index];
            if (!_NW._gg) {
                var _AZ = _NW._AZ;
                if (_AZ._kf2[_NG2]) {
                    _Zt1 = _NW._8t(_5R, _za1, _NW, _NW)
                }
            }
        }
    }
    return _Zt1
};
var _Qf = _4I2;

function _4I2(_OB) {
    var _NW = _OW._RB(_OB);
    if (!_NW) {
        _NW = _4s._RB(_OB);
        if (!_NW) {
            _ON("Unknown instance ID: " + _OB);
            debug(_QN());
            return undefined
        }
        _NW = _NW._3g2._RB(0)
    }
    return _NW
}

var _SZ = 256;
var _5I2 = 3;
var _6I2 = 1024;
var _If1 = 1;
var _Qf1 = 2;
var _7I2 = 4;
var _xB = 1;
var _vB = 2;
var _wB = 0x80000000;
var _8I2 = 128;
var _9I2 = 0, _sB = 0, _qB = 0, _rB = 0, _aI2 = -1, _bI2 = 0, _cI2 = 0, _dI2 = 0, _eI2 = 0, _fI2 = 0,
    _9h1 = (typeof(document.hasFocus) == "function" ? document.hasFocus() : !0), _ag2 = 0, _bg2 = 0, _gI2 = !1,
    _hI2 = 0;
var _iI2 = [];
var _jI2 = [];
var _kI2 = [];
var _Lf1 = [];
var __g1 = [];
var _tB = [];
var _lI2 = 0;
var _fB = [];
var _mI2 = {
    8: String.fromCharCode(8),
    9: 0,
    13: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    27: 0,
    22: 0,
    32: " ",
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    45: 0,
    46: 0,
    47: 0,
    48: "0",
    49: "1",
    50: "2",
    51: "3",
    52: "4",
    53: "5",
    54: "6",
    55: "7",
    56: "8",
    57: "9",
    58: "0",
    59: ";",
    61: "=",
    65: "a",
    66: "b",
    67: "c",
    68: "d",
    69: "e",
    70: "f",
    71: "g",
    72: "h",
    73: "i",
    74: "j",
    75: "k",
    76: "l",
    77: "m",
    78: "n",
    79: "o",
    80: "p",
    81: "q",
    82: "r",
    83: "s",
    84: "t",
    85: "u",
    86: "v",
    87: "w",
    88: "x",
    89: "y",
    90: "z",
    91: 0,
    92: 0,
    93: 0,
    96: "0",
    97: "1",
    98: "2",
    99: "3",
    100: "4",
    101: "5",
    102: "6",
    103: "7",
    104: "8",
    105: "9",
    106: "*",
    107: "+",
    109: "-",
    110: ".",
    111: "/",
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    144: 0,
    145: 0,
    173: "-",
    186: ";",
    187: "=",
    188: ",",
    189: "-",
    190: ".",
    191: "/",
    192: "'",
    219: "[",
    220: "\\",
    221: "]",
    222: "#",
    223: "`"
};
var _nI2 = {
    8: String.fromCharCode(8),
    9: 0,
    13: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    27: 0,
    22: 0,
    32: " ",
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    45: 0,
    46: 0,
    47: 0,
    48: ")",
    49: "!",
    50: "\"",
    51: "£",
    52: "$",
    53: "%",
    54: "^",
    55: "&",
    56: "*",
    57: "(",
    58: ")",
    59: ":",
    61: "+",
    65: "A",
    66: "B",
    67: "C",
    68: "D",
    69: "E",
    70: "F",
    71: "G",
    72: "H",
    73: "I",
    74: "J",
    75: "K",
    76: "L",
    77: "M",
    78: "N",
    79: "O",
    80: "P",
    81: "Q",
    82: "R",
    83: "S",
    84: "T",
    85: "U",
    86: "V",
    87: "W",
    88: "X",
    89: "Y",
    90: "Z",
    91: 0,
    92: 0,
    93: 0,
    96: "0",
    97: "1",
    98: "2",
    99: "3",
    100: "4",
    101: "5",
    102: "6",
    103: "7",
    104: "8",
    105: "9",
    106: "*",
    107: "+",
    109: "-",
    110: ".",
    111: "/",
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    144: 0,
    145: 0,
    173: "_",
    186: ":",
    187: "+",
    188: "<",
    189: "_",
    190: ">",
    191: "?",
    192: "@",
    219: "{",
    220: "|",
    221: "}",
    222: "~",
    223: "¬"
};

function _oI2() {
    _9h1 = true
}

function _pI2() {
    _9h1 = false;
    _qI2()
}

function _rI2(_sI2, _tI2) {
    try {
        if (_sI2) {
            if (_sI2._C3) {
                if (_sI2._C3._xc) {
                    if (_sI2._C3._xc._Fc) {
                        if (_sI2._C3._xc._Fc == _C3._xc._Fc) {
                            _sI2.focus();
                            _tI2.focus();
                            return true
                        }
                    }
                }
            }
        }
    } catch (err) {
    }
    return false
}

function _uI2() {
    var _2e1 = document.getElementById(_1O);
    var _vI2;
    if ((_UX == _El2) || (_UX == _Dl2) || (_UX == _Fl2) || (_UX == _Gl2)) {
        _vI2 = parent.frames;
        for (var _wI2 = 0; _wI2 < _vI2.length; _wI2++) {
            var _xI2 = _vI2[_wI2];
            if (_rI2(_xI2, _2e1)) break
        }
    } else {
        _vI2 = parent.document.getElementsByTagName("IFRAME");
        for (var _wI2 in _vI2) {
            var _xI2 = _vI2[_wI2].contentWindow;
            if (_rI2(_xI2, _2e1)) break
        }
    }
}

var _yI2;
var _zI2;
var _AI2;
var _BI2;
var _CI2;
var _DI2;
var _EI2;
var _FI2;
var _GI2;
var _HI2;
var _II2;

function _JI2() {
    var _zc1 = document.getElementById("gm4html5_div_id");
    if (_zc1) {
        _zI2 = _zc1.style.left;
        _AI2 = _zc1.style.top;
        _BI2 = _zc1.style.margin;
        var top = window.parent;
        if (top != null) {
            if (top.chrome != null && top.chrome.app != null && top.chrome.app.window != null) {
                var _KI2 = top.chrome.app.window.current();
                if (_KI2 != null) {
                    var _LI2 = window.parent.document.getElementById("container");
                    var _MI2 = window.parent.document.getElementById("game");
                    if (_LI2 != null) {
                        _CI2 = _LI2.style.width;
                        _DI2 = _LI2.style.height;
                        _GI2 = _LI2.style.left;
                        _EI2 = _LI2.style.margin;
                        _FI2 = _LI2.style.position
                    }
                    if (_MI2 != null) {
                        _HI2 = _MI2.style.width;
                        _II2 = _MI2.style.height
                    }
                    _KI2.fullscreen();
                    var _NI2 = _KI2.getBounds();
                    if (_LI2 != null) {
                        _LI2.style.width = "100%";
                        _LI2.style.height = "100%";
                        _LI2.style.left = "0";
                        _LI2.style.margin = 'auto';
                        _LI2.style.position = 'relative'
                    }
                    if (_MI2 != null) {
                        _MI2.style.width = "100%";
                        _MI2.style.height = "100%";
                        canvas.style.width = "100%";
                        canvas.style.height = "100%"
                    }
                }
            }
        }
        _zc1.style.margin = "0px";
        _zc1.style.top = "0";
        _zc1.style.left = "0";
        _zc1.style._OI2 = "0px";
        _zc1.style._PI2 = "0px";
        if (_zc1.mozRequestFullScreen) {
            _zc1.mozRequestFullScreen()
        } else if (_zc1.webkitRequestFullScreen) {
            _zc1.onwebkitfullscreenchange = function (e) {
                _zc1.onwebkitfullscreenchange = _QI2
            };
            if (_UX == _Fl2) {
                _zc1.webkitRequestFullScreen()
            } else {
                _zc1.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)
            }
        } else if (document.documentElement.requestFullScreen) {
            document.documentElement.requestFullScreen()
        }
        _5s2 = true;
        return
    }
    if (canvas.mozRequestFullScreen) {
        canvas.style.margin = "0px";
        canvas.style.top = "";
        canvas.style.left = "";
        canvas.style._OI2 = "0px";
        canvas.style._PI2 = "0px";
        canvas.mozRequestFullScreen()
    } else if (canvas.webkitRequestFullScreen) {
        canvas.style.margin = "0px";
        canvas.style.top = "";
        canvas.style.left = "";
        canvas.style._OI2 = "0px";
        canvas.style._PI2 = "0px";
        canvas.onwebkitfullscreenchange = function (e) {
            canvas.onwebkitfullscreenchange = _QI2
        };
        if (_UX == _Fl2) {
            canvas.webkitRequestFullScreen()
        } else {
            canvas.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)
        }
    } else if (document.documentElement.requestFullScreen) {
        canvas.style.margin = "0px";
        canvas.style.top = "";
        canvas.style.left = "";
        canvas.style._OI2 = "0px";
        canvas.style._PI2 = "0px";
        document.documentElement.requestFullScreen()
    }
    _5s2 = true
}

function _QI2() {
    if (_Zr2) {
        var _zc1 = document.getElementById("gm4html5_div_id");
        if (_zc1) {
            _zc1.style.left = _zI2;
            _zc1.style.top = _AI2;
            _zc1.style.margin = _BI2
        }
        var top = window.parent;
        if (top != null) {
            if (top.chrome != null && top.chrome.app != null && top.chrome.app.window != null) {
                var _KI2 = top.chrome.app.window.current();
                if (_KI2 != null) _KI2.restore()
            }
        }
        _5s2 = true;
    }
}

function _RI2() {
    var top = window.parent;
    if (top != null) {
        if (top.chrome != null && top.chrome.app != null && top.chrome.app.window != null) {
            var _KI2 = top.chrome.app.window.current();
            if (_KI2 != null) {
                _KI2.restore();
                _5s2 = true;
                var _LI2 = window.parent.document.getElementById("container");
                if (_LI2 != null) {
                    _LI2.style.width = _CI2;
                    _LI2.style.height = _DI2;
                    _LI2.style.left = _GI2;
                    _LI2.style.margin = _EI2;
                    _LI2.style.position = _FI2
                }
                var _MI2 = window.parent.document.getElementById("game");
                if (_MI2 != null) {
                    _MI2.style.width = _HI2;
                    _MI2.style.height = _II2;
                    canvas.style.width = _HI2;
                    canvas.style.height = _II2
                }
            }
        }
    }
    if (document.webkitCancelFullScreen) {
        document.webkitCancelFullScreen()
    } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
        _QI2()
    } else {
        _5s2 = true
    }
}

function _iO() {
    if (_2s2) return;
    window.onkeyup = function () {
        _SI2(arguments[0] || window.event)
    };
    window.onkeydown = function () {
        var _4l2 = arguments[0] || window.event;
        if ((__r2) && (_4l2 != null) && (_4l2.which == 121) && (!_4l2.repeat) && (canvas.mozRequestFullScreen)) {
            if (!document.mozFullScreen) {
                _TI2();
                _JI2();
            } else {
                _UI2()
            }
            _4l2.preventDefault();
            return false
        }
        if (_VI2(_4l2) == false) {
            _4l2.preventDefault();
            return false
        }
    };
    window.onmouseup = _WI2;
    _2s2 = true
}

function _5O() {
    if (_2s2 == false) return;
    window.onkeydown = null;
    window.onkeyup = null;
    window.onmouseup = null;
    _2s2 = false
}

function _XI2(_YI2) {
    if (_YI2 == 121) {
        return true
    }
    if (window.chrome && window.chrome.app) {
        if (_YI2 == 183) return true
    }
    return false
}

function _VI2(_4l2) {
    var _YI2;
    if (_4l2 == null) {
        _YI2 = window.event.which;
        if (_YI2 == 122) return true;
        if (_YI2 != 121) window.event.preventDefault(); else _5s2 = true;
        window.event.preventDefault()
    } else {
        if (_4l2.repeat) return false;
        _YI2 = _4l2.which;
        if (_YI2 == 122) return true;
        if (_YI2 == 120) {
        } else if (!_XI2(_YI2)) {
            _4l2.preventDefault()
        } else {
            if (__r2) {
                if (!_Zr2) {
                    _TI2();
                    _JI2()
                } else {
                    _RI2()
                }
            }
        }
        _4l2.preventDefault()
    }
    if (_iI2[_YI2]) return false;
    _iI2[_YI2] = 1;
    _jI2[_YI2] = 1;
    _fI2 = _YI2;
    if (_UX == _VX) {
        _eI2 = _4l2.char
    } else if (_4l2._7N) {
        if (_4l2._7N.length == 1) {
            _eI2 = _4l2._7N
        } else if (_YI2 == 8) {
            _eI2 = String.fromCharCode(8)
        } else if (_YI2 == 13) {
            _eI2 = String.fromCharCode(13)
        } else {
            _eI2 = ""
        }
    } else {
        if (_4l2.shiftKey) {
            _eI2 = _nI2[_YI2]
        } else {
            _eI2 = _mI2[_YI2]
        }
    }
    if (!_eI2) _eI2 = "";
    return false
}

function _SI2(_4l2) {
    var _YI2;
    if (_4l2 == null) {
        _YI2 = window.event.which;
        if (_YI2 == 122) return;
        window.event.preventDefault()
    }
    else {
        _YI2 = _4l2.which;
        if (_YI2 == 122) return;
        _4l2.preventDefault()
    }
    _kI2[_YI2] = 1;
    _iI2[_YI2] = 0;
    return false
}

function _ZI2(__I2) {
    _qB = __I2.pageX;
    _rB = __I2.pageY;
    _tB[__I2.button].x = _qB;
    _tB[__I2.button].y = _rB
}

function _0J2(__I2) {
    if (!_9h1) {
        _uI2()
    }
    _9I2 = __I2.button;
    if (_9I2 == 2) _9I2 = 1; else if (_9I2 == 1) _9I2 = 2;
    _cI2 = _aI2;
    _aI2 = _9I2;
    _sB |= (1 << _9I2);
    _tB[__I2.button]._uB = _vB | _wB | _xB;
    _tB[__I2.button].x = __I2.pageX;
    _tB[__I2.button].y = __I2.pageY;
    return __I2
}

function _WI2(__I2) {
    _9I2 = __I2.button;
    if (_9I2 == 2) _9I2 = 1; else if (_9I2 == 1) _9I2 = 2;
    _dI2 = _bI2;
    _bI2 = _9I2;
    _sB &= ~(1 << _9I2);
    _aI2 = -1;
    _tB[__I2.button]._uB = 0;
    return false
}

function _1J2(__I2) {
    if (__I2.detail) {
        _hI2 = -__I2.detail
    } else {
        _hI2 = __I2.wheelDelta
    }
}

function _2J2() {
    _OW._8t(_Jh2, 0);
    return undefined
}

function _Ut2() {
    this._3J2 = "a";
    this._4J2 = [];
    this._5J2 = this._6J2 = -1;
    this._QZ = [];
    this._7J2 = [];
    this._RZ = [];
    this._8J2 = this._9J2 = 0;
    this._Cz = [];
    this._Bz = [];
    this._xz = [];
    this._aJ2 = this._bJ2 = false;
    this._TZ = [];
    this._cJ2 = this._dJ2 = this._eJ2 = this._fJ2 = this._Mf2 = this._Nf2 = this._fs = 0;
    for (var _It = 0; _It < _6I2; _It++) {
        this._4J2[_It] = ""
    }
    for (var _It = 0; _It < _SZ; _It++) {
        this._QZ[_It] = this._7J2[_It] = this._RZ[_It] = false;
        this._TZ[_It] = _It
    }
    for (var _It = 0; _It < _5I2; _It++) {
        this._Cz[_It] = this._Bz[_It] = this._xz[_It] = false
    }
    this._OA = _gJ2;
    this._hJ2 = _iJ2;
    this._jJ2 = _jJ2;
    this._kJ2 = _kJ2;
    this._lJ2 = _lJ2;
    this._mJ2 = _mJ2;
    this._nJ2 = _nJ2;
    this._oJ2 = _oJ2;
    this._pJ2 = _pJ2;
    this._qJ2 = _qJ2;
    this._rJ2 = _rJ2;
    this._sJ2 = _sJ2;
    this._tJ2 = _tJ2;
    this._uJ2 = _uJ2;
    this._vJ2 = _vJ2;
    this._wJ2 = _wJ2;
    this._xJ2 = _xJ2;
    this._yJ2 = _yJ2;
    this._zJ2 = _zJ2;
    this._AJ2 = _AJ2;
    this._BJ2 = _BJ2;
    this._CJ2 = _DJ2;
    this._EJ2 = _FJ2;
    this._GJ2 = _HJ2;
    this._IJ2 = _IJ2;
    for (var _It = 0; _It < _SZ; _It++) {
        _iI2[_It] = _kI2[_It] = false
    }
    if (!_xF2) {
        window.onbeforeunload = _2J2
    }
    __g1 = new Array(_8I2);
    _tB = new Array(_8I2);
    for (var _JJ2 = 0; _JJ2 < _8I2; _JJ2++) {
        __g1[_JJ2] = new _KJ2();
        _tB[_JJ2] = new _KJ2()
    }
    _LJ2(true)
}

function _LJ2(_XJ) {
    if (_gI2 == _XJ) return;
    _qI2();
    _gI2 = _XJ;
    if (_XJ) {
        canvas.onmousemove = _ZI2;
        canvas.onmousedown = _0J2;
        window.onmouseup = _WI2;
        canvas.onmousewheel = _1J2;
        canvas.onselectstart = function () {
            return false
        };
        canvas.addEventListener("DOMMouseScroll",
            _1J2, false);
        var _It = document.getElementById("loading_screen");
        if (_It) {
            _It.onmousemove = _ZI2;
            _It.onmousedown = _0J2;
            _It.onmouseup = _WI2;
            _It.onmousewheel = _1J2;
            _It.addEventListener("DOMMouseScroll", _1J2, false)
        }
        document.body.onfocusin = _oI2;
        document.body.onfocusout = _pI2;
        document.onfocusin = _oI2;
        document.onfocusout = _pI2;
        window.onfocus = _oI2;
        window.onblur = _pI2;
        _iO()
    } else {
        canvas.onmousemove = null;
        canvas.onmousedown = null;
        window.onmouseup = null;
        canvas.onmousewheel = null;
        canvas.onselectstart = null;
        canvas.removeEventListener("DOMMouseScroll",
            _1J2);
        var _It = document.getElementById("loading_screen");
        if (_It) {
            _It.onmousemove = null;
            _It.onmousedown = null;
            _It.onmouseup = null;
            _It.onmousewheel = null;
            _It.removeEventListener("DOMMouseScroll", _1J2)
        }
        document.body.onfocusin = null;
        document.body.onfocusout = null;
        document.onfocusin = null;
        document.onfocusout = null;
        window.onfocus = null;
        window.onblur = null;
        _5O()
    }
}

function _KJ2() {
    this._uB = 0;
    this.x = 0;
    this.y = 0
}

function _qI2() {
    _MJ2();
    _NJ2();
    _Eh._Tm = 0;
    _Eh._Tm = "";
    _fI2 = 0;
    _eI2 = ""
}

_Ut2.prototype._NA = function () {
    this._OJ2();
    this._BJ2();
    _Eh._Tm = 0;
    _Eh._2C2 = 0;
    _Eh._Tm = "";
    _fI2 = 0;
    _eI2 = "";
    _Eh._3C2 = "";
    _Eh._4n = ""
};

function _jJ2() {
    return this._3J2
}

function _kJ2(_PJ2) {
    this._3J2 = _fh1
}

function _lJ2() {
    return this._6J2
}

function _mJ2() {
    return this._5J2
}

function _nJ2(_vC) {
    if (_vC < 0 || _vC > 255) return false;
    this._6J2 = _vC
}

function _oJ2(_vC) {
    if (_vC < 0 || _vC > 255) return false;
    this._5J2 = _vC
}

function _pJ2(_vC) {
    if (_vC < 0 || _vC > 255) return false;
    return this._QZ[_vC]
}

function _qJ2(_vC) {
    if (_vC < 0 || _vC > 255) return false;
    return this._RZ[_vC]
}

function _rJ2(_vC) {
    if (_vC < 0 || _vC > 255) return false;
    return this._7J2[_vC]
}

function _sJ2(_vC) {
    if (_vC < 0 || _vC > 255) return;
    this._QZ[_vC] = 0;
    this._RZ[_vC] = 0;
    this._7J2[_vC] = 0
}

_Ut2.prototype._OJ2 = function () {
    this._6J2 = 0;
    this._5J2 = 0;
    this._3J2 = 0;
    for (var _t5 = 0; _t5 <= _SZ; _t5++) {
        this._QZ[_t5] = 0;
        this._RZ[_t5] = 0;
        this._7J2[_t5] = 0;
    }
};

function _MJ2() {
    for (var _t5 = 0; _t5 < _SZ; _t5++) {
        _jI2[_t5] = 0;
        _kI2[_t5] = 0;
        _iI2[_t5] = 0
    }
}

function _tJ2() {
    return this._8J2
}

function _uJ2() {
    return this._9J2
}

function _vJ2(_Rg1) {
    if ((_Rg1 < 1) || (_Rg1 > 3)) return;
    this._8J2 = _Rg1
}

function _wJ2(_Rg1) {
    if ((_Rg1 < 1) || (_Rg1 > 3)) return;
    this._9J2 = _Rg1
}

function _xJ2(_Rg1) {
    _Rg1--;
    if (_Rg1 >= 0 && _Rg1 < _5I2) {
        return this._Cz[_Rg1]
    }
    return false
}

function _yJ2(_Rg1) {
    _Rg1--;
    if (_Rg1 >= 0 && _Rg1 < _5I2) {
        return this._xz[_Rg1]
    }
}

function _zJ2(_Rg1) {
    _Rg1--;
    if (_Rg1 >= 0 && _Rg1 < _5I2) {
        return this._Bz[_Rg1]
    }
    return false
}

function _AJ2(_Rg1) {
    _Rg1--;
    if (_Rg1 >= 0 && _Rg1 < _5I2) {
        this._Cz[_Rg1] = false;
        this._xz[_Rg1] = false;
        this._Bz[_Rg1] = false
    }
}

function _BJ2() {
    this._8J2 = 0;
    this._9J2 = 0;
    for (var _t5 = 0; _t5 <= _5I2; _t5++) {
        this._Cz[_t5] = false;
        this._xz[_t5] = false;
        this._Bz[_t5] = false
    }
    this._bJ2 = false;
    this._aJ2 = false;
    for (var _iB = 0; _iB < _fB.length; _iB++) {
        _fB[_iB]._NA()
    }
}

function _NJ2() {
    _dI2 = -1;
    _bI2 = -1;
    _aI2 = -1;
    _sB = 0;
    _tB[0]._uB = 0;
    _tB[0].x = 0;
    _tB[0].y = 0;
    _9I2 = -1
}

function _gJ2() {
    for (var _iB = 0; _iB < _fB.length; _iB++) {
        var _jB = _fB[_iB];
        if (_jB._Cz) {
            _jB._Bz = 0;
            _jB._xz = _jB._VA ^ _jB._Cz
        } else {
            _jB._Bz = _jB._VA ^ _jB._Cz;
            _jB._xz = 0;
        }
        _jB._VA = _jB._Cz
    }
    for (var _JJ2 = 0; _JJ2 < _tB.length; _JJ2++) {
        __g1[_JJ2]._uB = _tB[_JJ2]._uB;
        __g1[_JJ2].x = _tB[_JJ2].x;
        __g1[_JJ2].y = _tB[_JJ2].y;
        _tB[_JJ2]._uB &= ~_xB
    }
    if (_fI2) {
        if (_eI2) {
            if (_fI2 == 13) {
            } else if (_fI2 == 8) {
                _Eh._3C2 = _eI2;
                if (_Eh._4n.length > 0) {
                    _Eh._4n = _Eh._4n.substring(0, _Eh._4n.length - 1)
                }
            } else {
                _Eh._3C2 = _eI2;
                _Eh._4n += _Eh._3C2;
                if (_Eh._4n.length > 1024) {
                    _Eh._4n = _Eh._4n.substring(1, _Eh._4n.length - 1)
                }
            }
        }
        if (_Eh._Tm != 0) {
            _Eh._2C2 = _Eh._Tm
        }
        _Eh._Tm = _fI2;
        _fI2 = 0
    } else if (!_pB._QZ[_Eh._Tm]) {
        _Eh._Tm = 0
    }
    this._Mf2 = _qB;
    this._Nf2 = _rB;
    this._dJ2 = _sB;
    if ((this._dJ2 & 1) != 0) {
        this._Cz[0] = 1;
        if (((this._eJ2 ^ this._dJ2) & 0x1) != 0) {
            this._xz[0] = 1
        }
    } else {
        this._Cz[0] = 0;
        if (((this._eJ2 ^ this._dJ2) & 0x1) != 0) {
            this._Bz[0] = 1
        }
    }
    if ((this._dJ2 & 2) != 0) {
        this._Cz[1] = 1;
        if (((this._eJ2 ^ this._dJ2) & 0x2) != 0) {
            this._xz[1] = 1
        }
    } else {
        this._Cz[1] = 0;
        if (((this._eJ2 ^ this._dJ2) & 0x2) != 0) {
            this._Bz[1] = 1
        }
    }
    if ((this._dJ2 & 4) != 0) {
        this._Cz[2] = 1;
        if (((this._eJ2 ^ this._dJ2) & 0x4) != 0) {
            this._xz[2] = 1
        }
    } else {
        this._Cz[2] = 0;
        if (((this._eJ2 ^ this._dJ2) & 0x4) != 0) {
            this._Bz[2] = 1
        }
    }
    this._eJ2 = this._dJ2;
    _Eh._3r = this._Mf2;
    _Eh._4r = this._Nf2;
    _Eh._0C2 = _aI2 + 1;
    _Eh._1C2 = _cI2;
    this._IJ2()
}

function _IJ2() {
    var _QJ2 = 0;
    var _ty = 0;
    var _v5 = _Bs2;
    var _w5 = _Cs2;
    var _9u = _4e1();
    var _ec1 = _7e1();
    if (_v5 < 0) _v5 = _9u;
    if (_w5 < 0) _w5 = _ec1;
    for (var _JJ2 = 0;
         _JJ2 < __g1.length; _JJ2++) {
        var _RJ2 = __g1[_JJ2];
        if ((_RJ2._uB & _wB) != 0) {
            _ty = 1;
            for (var _SJ2 = 0; _SJ2 < _Lf1.length; _SJ2++) {
                var _Ff1 = _Lf1[_SJ2];
                if ((_Ff1._Hf1 & _If1) != 0) {
                    var x = (_v5 * (_RJ2.x - _2B.left)) / _9u;
                    var y = (_w5 * (_RJ2.y - _2B.top)) / _ec1;
                    if ((x >= _Ff1.x) && (x < _Ff1._zt) && (y >= _Ff1.y) && (y < _Ff1._At)) {
                        _QJ2 |= _ty
                    }
                }
                _ty <<= 1
            }
            _RJ2._uB = 0
        }
    }
    _ty = 1;
    var _TJ2 = _lI2 ^ _QJ2;
    for (var _SJ2 = 0; _SJ2 < _Lf1.length; _SJ2++) {
        var _Ff1 = _Lf1[_SJ2];
        if ((_Ff1._Hf1 & _If1) != 0) {
            var _UJ2 = _QJ2 & _ty;
            var _LN = _TJ2 & _ty;
            if (_Ff1._7N != 0) {
                this._RZ[_Ff1._7N] |= (_UJ2 && _LN);
                this._QZ[_Ff1._7N] |= (_UJ2 && !_LN);
                this._7J2[_Ff1._7N] |= (!_UJ2 && _LN)
            } else {
                this._xz[_Ff1.button - 1] |= (_UJ2 && _LN);
                this._Cz[_Ff1.button - 1] |= (_UJ2 && !_LN);
                this._Bz[_Ff1.button - 1] |= (!_UJ2 && _LN)
            }
        }
        _ty <<= 1
    }
    _lI2 = _QJ2
}

function _CJ2(_VJ2) {
    var _4l2 = _8j2 | _VJ2;
    var _gC = _js._tZ._gC;
    var _WJ2 = _gC.length;
    for (var _HP = 0; _HP < _WJ2; _HP++) {
        var _NW = _gC[_HP];
        var _LP = _NW._AZ;
        if (_LP._kf2[_4l2]) {
            _NW._8t(_8j2, _VJ2, _NW, _NW)
        }
    }
}

function _XJ2(_YJ2) {
    var _4l2 = _aj2 | _YJ2;
    var _gC = _js._tZ._gC;
    var _WJ2 = _gC.length;
    for (var _HP = 0; _HP < _WJ2; _HP++) {
        var _NW = _gC[_HP];
        if (_NW._gg) {
            continue
        }
        var _LP = _NW._AZ;
        if (_LP._kf2[_4l2]) {
            _NW._8t(_aj2, _YJ2, _NW, _NW)
        }
    }
}

function _GJ2(_ZJ2) {
    var _4l2 = _cj2 | _ZJ2;
    var _gC = _js._tZ._gC;
    var _WJ2 = _gC.length;
    for (var _HP = 0; _HP < _WJ2; _HP++) {
        var _NW = _gC[_HP];
        var _LP = _NW._AZ;
        if (_LP._kf2[_4l2]) {
            _NW._8t(_cj2, _ZJ2, _NW, _NW)
        }
    }
}

function _DJ2() {
    var __J2 = 0;
    for (var _t5 = 2; _t5 < _SZ; _t5++) {
        if (this._QZ[_t5]) {
            __J2 = 1;
            _CJ2(_t5)
        }
    }
    _CJ2(__J2)
}

function _FJ2() {
    var _0K2 = 0;
    for (var _t5 = 2; _t5 < _SZ; _t5++) {
        if (this._RZ[_t5]) {
            _0K2 = 1;
            _XJ2(_t5)
        }
    }
    _XJ2(_0K2)
}

function _HJ2() {
    var _1K2 = 0;
    for (var _t5 = 2; _t5 < _SZ; _t5++) {
        if (this._7J2[_t5]) {
            _1K2 = 1;
            _GJ2(_t5)
        }
    }
    _GJ2(_1K2)
}

function _iJ2() {
    var _2K2 = 0, _3K2 = 0, _4K2 = 0;
    this._fs++;
    for (var _t5 = 0; _t5 < _SZ; _t5++) {
        this._RZ[_t5] = this._7J2[_t5] = this._QZ[_t5] = 0
    }
    for (var _t5 = 0; _t5 < _SZ; _t5++) {
        var _7N = this._TZ[_t5];
        this._RZ[_7N] |= _jI2[_t5];
        this._7J2[_7N] |= _kI2[_t5];
        this._QZ[_7N] |= _iI2[_t5];
        _2K2 |= _jI2[_t5];
        _3K2 |= _iI2[_t5];
        _4K2 |= _kI2[_t5];
        _jI2[_t5] = 0;
        _kI2[_t5] = 0
    }
    this._RZ[1] = _2K2;
    this._QZ[1] = _3K2;
    this._7J2[1] = _4K2;
    this._RZ[0] = _2K2 ^ 1;
    this._QZ[0] = _3K2 ^ 1;
    this._7J2[0] = _4K2 ^ 1;
    _ag2 = _bg2 = 0;
    if (_hI2 > 0) {
        _ag2 = 1
    } else if (_hI2 < 0) {
        _bg2 = 1
    }
    _hI2 = 0;
    for (var _t5 = 0; _t5 <= _5I2; _t5++) {
        this._xz[_t5] = false;
        this._Bz[_t5] = false
    }
    this._bJ2 = false;
    this._aJ2 = false;
    this._OA();
    var _XA;
    if (!_js._YA) {
        _XA = _ZA
    } else {
        _XA = _js.__A
    }
    for (var _uv = 0; _uv <= 7; ++_uv) {
        _0B = _XA[_uv];
        if (_0B && _0B._B5) {
            _Eh._3r = _0B._7B(_pB._Mf2, _pB._Nf2);
            _Eh._4r = _0B._8B(_pB._Mf2, _pB._Nf2);
            break
        }
    }
    for (var _uv = 7; _uv >= 0; _uv--) {
        _0B = _XA[_uv];
        if (_0B && _0B._B5) {
            _1B(canvas, _2B);
            if (((this._Mf2 - _2B.left) >= _0B._3B) && ((this._Mf2 - _2B.left) < _0B._4B) && ((this._Nf2 - _2B.top) >= _0B._5B) && ((this._Nf2 - _2B.top) < _0B._6B)) {
                _Eh._3r = _0B._7B(_pB._Mf2, _pB._Nf2);
                _Eh._4r = _0B._8B(_pB._Mf2, _pB._Nf2);
                break
            }
        }
    }
}

function _5K2() {
    _pB._CJ2();
    _pB._EJ2();
    _pB._GJ2()
}

function _6K2(index) {
    this._Hf1 = 0;
    this.index = index;
    this.x = 0;
    this.y = 0;
    this._zt = 0;
    this._At = 0;
    this._v5 = 0;
    this._w5 = 0;
    this._sv = 0;
    this._uv = 0;
    this._7N = 0;
    this.button = 0
}

function _Gf1() {
    for (var _It = 0; _It < _Lf1.length; ++_It) {
        if (_Lf1[_It]._Hf1 == 0) {
            return _Lf1[_It]
        }
    }
    var _t5 = _Lf1.length;
    _Lf1[_t5] = new _6K2(_t5);
    return _Lf1[_t5]
}

function _Mf1(_7K2) {
    _Lf1[_7K2]._Hf1 = 0
}

function _8K2() {
    for (var _It = 0; _It < _Lf1.length;
         ++_It) {
        _Lf1[_It]._Hf1 = 0
    }
}

_Ut2.prototype._9K2 = function () {
    _mO();
    _0E2();
    var _QS = [];
    _QS[0] = 1;
    _QS[1] = 0;
    _QS[2] = 0;
    _QS[3] = 1;
    _QS[4] = 0;
    _QS[5] = 0;
    _VC2(_QS);
    var _1Q = _pT();
    var _aK2 = _qT();
    _Bh(0xffffff);
    for (var _It = 0; _It < _Of1.length; ++_It) {
        var _Pf1 = _Of1[_It];
        _Am(_Pf1.x, _Pf1.y, _Pf1.x + _Pf1._v5 - 1, _Pf1.y + _Pf1._w5 - 1, true)
    }
    _Bh(_aK2);
    _vm(_1Q);
    _2E2()
};

function _0C() {
    this._bK2 = [];
    this._gC = [];
    this._1C = false;
    this.length = 0;
    this._Gu = 0
}

_0C.prototype._pt2 = function () {
    if (this._bK2.length == 0) {
        return this._gC.length
    }
    return this._bK2.pop()
}
;_0C.prototype._3C = function (_Nx2) {
    var index;
    if (this._1C) {
        index = this._gC.length
    } else {
        index = this._pt2()
    }
    this._gC[index] = _Nx2;
    this._Gu++;
    this.length = this._gC.length;
    return index
};
_0C.prototype._RB = function (__21) {
    if (__21 < 0 || __21 >= this._gC.length) return null;
    return this._gC[__21]
};
_0C.prototype._T11 = function (_Ox2) {
    for (var _It = 0; _It < this._gC.length; _It++) {
        if (this._gC[_It] == _Ox2) return _It
    }
};
_0C.prototype._E01 = function (_Ox2) {
    for (var _It = 0; _It < this._gC.length; _It++) {
        if (this._gC[_It] == _Ox2) {
            if (this._1C) {
                this._gC.splice(_It,
                    1)
            } else {
                this._gC[_It] = null;
                this._bK2.push(_It)
            }
            this._Gu--;
            this.length = this._gC.length;
            return true
        }
    }
    return false
};
_0C.prototype._6C = function (__21) {
    if (__21 < 0 || __21 >= this._gC.length) return false;
    if (this._1C) {
        this._gC.splice(__21, 1)
    } else {
        this._gC[__21] = null;
        this._bK2.push(__21)
    }
    this._Gu--;
    this.length = this._gC.length;
    return true
};
_0C.prototype._NA = function () {
    var _gC = this._gC;
    for (var _t5 = 0; _t5 < _gC.length; _t5++) {
        var _uv = _gC[_t5];
        if (_uv != null && _uv.Object !== undefined) switch (_uv._lC) {
            case _hC:
                _7s(_uv.Object);
                break;
            case _iC:
                _4C(_uv.Object);
                break
        }
    }
    this._gC = [];
    this._bK2 = [];
    this._Gu = 0;
    this.length = this._gC.length
};
_0C.prototype._rC = function (_za1, _qs) {
    if (_za1 < 0 || _za1 >= this._gC.length) return;
    this._gC[_za1] = _qs
};
_0C.prototype._cK2 = function (_dK2) {
    if (_dK2) {
        this._gC.sort(function (_hv, _Nt) {
            return _hv - _Nt
        })
    } else {
        this._gC.sort(function (_hv, _Nt) {
            return _Nt - _hv
        })
    }
    this._bK2 = [];
    for (var _t5 = 0; _t5 < this._gC.length; _t5++) {
        if (this._gC[_t5] == null || this._gC[_t5] == undefined) {
            this._bK2.push(_t5)
        }
    }
};
_0C.prototype._KB = function (_LB) {
    this._gC = _LB._gC.slice();
    this._bK2 = _LB._bK2.slice();
    this._1C = _LB._1C;
    this.length = _LB.length;
    this._Gu = _LB._Gu
};
var _jG2 = 0, _mG2 = 1, _nG2 = 2;

function _eK2() {
    this._fK2 = null;
    this._gK2 = 0;
    this._hK2 = null
}

function _iK2() {
    this._fK2 = null;
    this._jK2 = false;
    this._2y2 = null
}

function _kK2() {
    this._602 = false
}

function _B02(_lK2, _vs) {
    this.__type = "[Object]";
    this._uB = 0;
    this._LZ = _lK2;
    this._Au2 = _vs;
    this._8G2 = -1;
    this._BZ = 0;
    this._9G2 = 0;
    this._aG2 = false;
    this._bG2 = false;
    this._cG2 = false;
    this._JZ = 0;
    this._2O = null;
    this._mK2 = -1;
    this._Ku2 = false;
    this._3g2 = new _0C();
    this.__H2 = new _0C();
    this._3g2._1C = true;
    this.__H2._1C = true;
    this._nK2 = [];
    for (var _hv = 0; _hv < _mg2; _hv++) {
        this._nK2[_hv] = null
    }
    this._oK2 = [];
    this._pK2 = [];
    this._qK2 = [];
    this._Mu2 = [];
    this._y5 = [];
    this._kR = [];
    this._kf2 = [];
    this._dG2 = new _kK2()
}

_B02.prototype._l41 = function () {
    return this._3g2._gC;
};
_B02.prototype._LW = function () {
    return this.__H2._gC
};

function _0v2(_rK2, _sK2) {
    var _LP = new _B02(_rK2, _sK2._F3);
    with (_LP) {
        if (_sK2._A5 != undefined) _BZ = _sK2._A5;
        if (_sK2._B5 != undefined) _bG2 = _sK2._B5;
        if (_sK2._Ia != undefined) _aG2 = _sK2._Ia;
        if (_sK2._1c != undefined) _9G2 = _sK2._1c;
        if (_sK2._JF2 != undefined) _cG2 = _sK2._JF2;
        if (_sK2.parent != undefined) _JZ = _sK2.parent;
        if (_sK2._O5 != undefined) _8G2 = _sK2._O5;
        if (_sK2._K5) {
            _LP._K5 = _sK2._K5;
            _LP._kR[_131] = true
        }
        if (_sK2._C5) {
            _LP._C5 = _sK2._C5;
            _LP._kR[_DZ] = true
        }
        if (_sK2._F7) {
            _LP._F7 = _sK2._F7;
            _LP._kR[_pZ] = true
        }
        if (_sK2._tK2) {
            _LP._tK2 = _sK2._tK2;
            _LP._kR[_qZ] = true
        }
        if (_sK2._uK2) {
            _LP._uK2 = _sK2._uK2;
            _LP._kR[_Hg2] = true
        }
        if (_sK2._Q5) {
            _LP._Q5 = _sK2._Q5;
            _LP._kR[_Jg2] = true
        }
        if (_sK2._pa) {
            _LP._pa = _sK2._pa;
            _LP._kR[_Lg2] = true
        }
        if (_sK2._G5) {
            _LP._G5 = _sK2._G5;
            _LP._kR[_6j2] = true
        }
        if (_sK2._vK2) {
            _LP._vK2 = _sK2._vK2;
            _LP._kR[_bm2] = true
        }
        if (_sK2._wK2) {
            _LP._wK2 = _sK2._wK2;
            _LP._kR[_dm2] = true
        }
        if (_sK2._xK2) {
            _LP._xK2 = _sK2._xK2;
            _LP._kR[_em2] = true
        }
        if (_sK2._yK2) {
            _LP._yK2 = _sK2._yK2;
            _LP._kR[_fm2] = true
        }
        if (_sK2._zK2) {
            _LP._zK2 = _sK2._zK2;
            _LP._kR[_gm2] = true
        }
        if (_sK2._AK2) {
            _LP._AK2 = _sK2._AK2;
            _LP._kR[_hm2] = true
        }
        if (_sK2._BK2) {
            _LP._BK2 = _sK2._BK2;
            _LP._kR[_im2] = true
        }
        if (_sK2._CK2) {
            _LP._CK2 = _sK2._CK2;
            _LP._kR[_cm2] = true
        }
        if (_sK2._DK2) {
            _LP._DK2 = _sK2._DK2;
            _LP._kR[_Zf2] = true
        }
        if (_sK2._EK2) {
            _LP._EK2 = _sK2._EK2;
            _LP._kR[_Qf2] = true
        }
        if (_sK2._FK2) {
            _LP._FK2 = _sK2._FK2;
            _LP._kR[_Sf2] = true
        }
        if (_sK2._GK2) {
            _LP._GK2 = _sK2._GK2;
            _LP._kR[_Rf2] = true
        }
        if (_sK2._HK2) {
            _LP._HK2 = _sK2._HK2;
            _LP._kR[_Tf2] = true
        }
        if (_sK2._IK2) {
            _LP._IK2 = _sK2._IK2;
            _LP._kR[_Vf2] = true
        }
        if (_sK2._JK2) {
            _LP._JK2 = _sK2._JK2;
            _LP._kR[_Uf2] = true
        }
        if (_sK2._KK2) {
            _LP._KK2 = _sK2._KK2;
            _LP._kR[_Wf2] = true
        }
        if (_sK2._LK2) {
            _LP._LK2 = _sK2._LK2;
            _LP._kR[_Yf2] = true
        }
        if (_sK2._MK2) {
            _LP._MK2 = _sK2._MK2;
            _LP._kR[_Xf2] = true;
        }
        if (_sK2._NK2) {
            _LP._NK2 = _sK2._NK2;
            _LP._kR[_1g2] = true
        }
        if (_sK2._OK2) {
            _LP._OK2 = _sK2._OK2;
            _LP._kR[_2g2] = true
        }
        if (_sK2._7b) {
            _LP._7b = _sK2._7b;
            _LP._kR[_7g2] = true
        }
        if (_sK2._PK2) {
            _LP._PK2 = _sK2._PK2;
            _LP._kR[_ph2] = true
        }
        if (_sK2._QK2) {
            _LP._QK2 = _sK2._QK2;
            _LP._kR[_rh2] = true
        }
        if (_sK2._RK2) {
            _LP._RK2 = _sK2._RK2;
            _LP._kR[_8g2] = true
        }
        if (_sK2._SK2) {
            _LP._SK2 = _sK2._SK2;
            _LP._kR[_uh2] = true
        }
        if (_sK2._TK2) {
            _LP._TK2 = _sK2._TK2;
            _LP._kR[_wh2] = true
        }
        if (_sK2._UK2) {
            _LP._UK2 = _sK2._UK2;
            _LP._kR[_9g2] = true
        }
        if (_sK2._VK2) {
            _LP._VK2 = _sK2._VK2;
            _LP._kR[_zh2] = true
        }
        if (_sK2._WK2) {
            _LP._WK2 = _sK2._WK2;
            _LP._kR[_Bh2] = true
        }
        if (_sK2._XK2) {
            _LP._XK2 = _sK2._XK2;
            _LP._kR[__f2] = true
        }
        if (_sK2._YK2) {
            _LP._YK2 = _sK2._YK2;
            _LP._kR[_0g2] = true
        }
        if (_sK2._ZK2) {
            _LP._ZK2 = _sK2._ZK2;
            _LP._kR[_hj2] = true
        }
        if (_sK2.__K2) {
            _LP.__K2 = _sK2.__K2;
            _LP._kR[_jj2] = true
        }
        if (_sK2._0L2) {
            _LP._0L2 = _sK2._0L2;
            _LP._kR[_lj2] = true
        }
        if (_sK2._1L2) {
            _LP._1L2 = _sK2._1L2;
            _LP._kR[_nj2] = true
        }
        if (_sK2._2L2) {
            _LP._2L2 = _sK2._2L2;
            _LP._kR[_pj2] = true
        }
        if (_sK2._3L2) {
            _LP._3L2 = _sK2._3L2;
            _LP._kR[_rj2] = true
        }
        if (_sK2._4L2) {
            _LP._4L2 = _sK2._4L2;
            _LP._kR[_Hj2] = true
        }
        if (_sK2._5L2) {
            _LP._5L2 = _sK2._5L2;
            _LP._kR[_Jj2] = true
        }
        if (_sK2._6L2) {
            _LP._6L2 = _sK2._6L2;
            _LP._kR[_Lj2] = true
        }
        if (_sK2._7L2) {
            _LP._7L2 = _sK2._7L2;
            _LP._kR[_Nj2] = true
        }
        if (_sK2._8L2) {
            _LP._8L2 = _sK2._8L2;
            _LP._kR[_Pj2] = true
        }
        if (_sK2._9L2) {
            _LP._9L2 = _sK2._9L2;
            _LP._kR[_Rj2] = true
        }
        if (_sK2._n9) {
            _LP._n9 = _sK2._n9;
            _LP._kR[_lf2] = true
        }
        if (_sK2._aL2) {
            _LP._aL2 = _sK2._aL2;
            _LP._kR[_rf2] = true
        }
        if (_sK2._bL2) {
            _LP._bL2 = _sK2._bL2;
            _LP._kR[_Hh2] = true
        }
        if (_sK2._cL2) {
            _LP._cL2 = _sK2._cL2;
            _LP._kR[_Jh2] = true
        }
        if (_sK2._dL2) {
            _LP._dL2 = _sK2._dL2;
            _LP._kR[_Lh2] = true
        }
        if (_sK2._eL2) {
            _LP._eL2 = _sK2._eL2;
            _LP._kR[_Nh2] = true;
        }
        if (_sK2._fL2) {
            _LP._fL2 = _sK2._fL2;
            _LP._kR[_Ph2] = true
        }
        if (_sK2._T8) {
            _LP._T8 = _sK2._T8;
            _LP._kR[_Rh2] = true
        }
        if (_sK2._gL2) {
            _LP._gL2 = _sK2._gL2;
            _LP._kR[_902] = true
        }
        if (_sK2._hL2) {
            _LP._hL2 = _sK2._hL2;
            _LP._kR[_Uh2] = true
        }
        if (_sK2._iL2) {
            _LP._iL2 = _sK2._iL2;
            _LP._kR[_Wh2] = true
        }
        if (_sK2._jL2) {
            _LP._jL2 = _sK2._jL2;
            _LP._kR[_yf2] = true
        }
        if (_sK2._kL2) {
            _LP._kL2 = _sK2._kL2;
            _LP._kR[_Zh2] = true
        }
        if (_sK2._lL2) {
            _LP._lL2 = _sK2._lL2;
            _LP._kR[_0i2] = true
        }
        if (_sK2._mL2) {
            _LP._mL2 = _sK2._mL2;
            _LP._kR[_2i2] = true
        }
        if (_sK2._nL2) {
            _LP._nL2 = _sK2._nL2;
            _LP._kR[_4i2] = true
        }
        if (_sK2._oL2) {
            _LP._oL2 = _sK2._oL2;
            _LP._kR[_6i2] = true
        }
        if (_sK2._pL2) {
            _LP._pL2 = _sK2._pL2;
            _LP._kR[_8i2] = true
        }
        if (_sK2._qL2) {
            _LP._qL2 = _sK2._qL2;
            _LP._kR[_ai2] = true
        }
        if (_sK2._rL2) {
            _LP._rL2 = _sK2._rL2;
            _LP._kR[_zf2] = true
        }
        if (_sK2._sL2) {
            _LP._sL2 = _sK2._sL2;
            _LP._kR[_di2] = true
        }
        if (_sK2._tL2) {
            _LP._tL2 = _sK2._tL2;
            _LP._kR[_fi2] = true
        }
        if (_sK2._uL2) {
            _LP._uL2 = _sK2._uL2;
            _LP._kR[_hi2] = true
        }
        if (_sK2._vL2) {
            _LP._vL2 = _sK2._vL2;
            _LP._kR[_ji2] = true
        }
        if (_sK2._wL2) {
            _LP._wL2 = _sK2._wL2;
            _LP._kR[_li2] = true
        }
        if (_sK2._xL2) {
            _LP._xL2 = _sK2._xL2;
            _LP._kR[_ni2] = true
        }
        if (_sK2._yL2) {
            _LP._yL2 = _sK2._yL2;
            _LP._kR[_pi2] = true
        }
        if (_sK2._zL2) {
            _LP._zL2 = _sK2._zL2;
            _LP._kR[_9t] = true;
        }
        if (_sK2._V5) {
            _LP._V5 = _sK2._V5;
            _LP._kR[_qi2] = true
        }
        if (_sK2._AL2) {
            _LP._AL2 = _sK2._AL2;
            _LP._kR[_si2] = true
        }
        if (_sK2._BL2) {
            _LP._BL2 = _sK2._BL2;
            _LP._kR[_ui2] = true
        }
        if (_sK2._CL2) {
            _LP._CL2 = _sK2._CL2;
            _LP._kR[_wi2] = true
        }
        if (_sK2._DL2) {
            _LP._DL2 = _sK2._DL2;
            _LP._kR[_yi2] = true
        }
        if (_sK2._EL2) {
            _LP._EL2 = _sK2._EL2;
            _LP._kR[_Ai2] = true
        }
        if (_sK2._FL2) {
            _LP._FL2 = _sK2._FL2;
            _LP._kR[_Ci2] = true;
        }
        if (_sK2._GL2) {
            _LP._GL2 = _sK2._GL2;
            _LP._kR[_Ei2] = true
        }
        if (_sK2._HL2) {
            _LP._HL2 = _sK2._HL2;
            _LP._kR[_Gi2] = true
        }
        if (_sK2._IL2) {
            _LP._IL2 = _sK2._IL2;
            _LP._kR[_Ii2] = true
        }
        if (_sK2._JL2) {
            _LP._JL2 = _sK2._JL2;
            _LP._kR[_Ki2] = true
        }
        if (_sK2._KL2) {
            _LP._KL2 = _sK2._KL2;
            _LP._kR[_Mi2] = true
        }
        if (_sK2._LL2) {
            _LP._LL2 = _sK2._LL2;
            _LP._kR[_Oi2] = true
        }
        if (_sK2._ML2) {
            _LP._ML2 = _sK2._ML2;
            _LP._kR[_Qi2] = true
        }
        if (_sK2._NL2) {
            _LP._NL2 = _sK2._NL2;
            _LP._kR[_Si2] = true
        }
        if (_sK2._OL2) {
            _LP._OL2 = _sK2._OL2;
            _LP._kR[_Ui2] = true
        }
        if (_sK2._PL2) {
            _LP._PL2 = _sK2._PL2;
            _LP._kR[_Xi2] = true
        }
        if (_sK2._QL2) {
            _LP._QL2 = _sK2._QL2;
            _LP._kR[_Zi2] = true
        }
        if (_sK2._e6) {
            _LP._e6 = _sK2._e6;
            _LP._kR[_8m2] = true
        }
        if (_sK2._RL2) {
            _LP._RL2 = _sK2._RL2;
            _LP._kR[_9m2] = true
        }
        if (_sK2._SL2) {
            _LP._SL2 = _sK2._SL2;
            _LP._kR[_8Z] = true
        }
        if (_sK2._TL2) {
            _LP._TL2 = _sK2._TL2;
            _LP._kR[_1j2] = true
        }
        if (_sK2._UL2) {
            _LP._UL2 = _sK2._UL2;
            _LP._kR[_3j2] = true
        }
        if (_sK2._VL2) {
            _LP._VL2 = _sK2._VL2;
            _LP._kR[_jb1] = true
        }
        if (_sK2._WL2) {
            _LP._WL2 = _sK2._WL2;
            _LP._kR[_am2] = true
        }
        if (_sK2._XL2) {
            _LP._XL2 = _sK2._XL2;
            _LP._kR[_km2] = true
        }
        if (_sK2._YL2) {
            _LP._YL2 = _sK2._YL2;
            _LP._kR[_jm2] = true
        }
        if (_sK2._ZL2) {
            _LP._ZL2 = _sK2._ZL2;
            _LP._kR[_6s] = true
        }
        if (_sK2._E5) {
            _LP._nK2[0] = _sK2._E5;
            _LP._kR[_tg2] = true
        }
        if (_sK2._16) {
            _LP._nK2[1] = _sK2._16;
            _LP._kR[_ug2] = true
        }
        if (_sK2.__5) {
            _LP._nK2[2] = _sK2.__5;
            _LP._kR[_vg2] = true
        }
        if (_sK2.__L2) {
            _LP._nK2[3] = _sK2.__L2;
            _LP._kR[_wg2] = true
        }
        if (_sK2._0M2) {
            _LP._nK2[4] = _sK2._0M2;
            _LP._kR[_xg2] = true
        }
        if (_sK2._1M2) {
            _LP._nK2[5] = _sK2._1M2;
            _LP._kR[_yg2] = true
        }
        if (_sK2._2M2) {
            _LP._nK2[6] = _sK2._2M2;
            _LP._kR[_zg2] = true
        }
        if (_sK2._3M2) {
            _LP._nK2[7] = _sK2._3M2;
            _LP._kR[_Ag2] = true
        }
        if (_sK2._4M2) {
            _LP._nK2[8] = _sK2._4M2;
            _LP._kR[_Bg2] = true
        }
        if (_sK2._5M2) {
            _LP._nK2[9] = _sK2._5M2;
            _LP._kR[_Cg2] = true
        }
        if (_sK2._6M2) {
            _LP._nK2[10] = _sK2._6M2;
            _LP._kR[_Dg2] = true
        }
        if (_sK2._7M2) {
            _LP._nK2[11] = _sK2._7M2;
            _LP._kR[_Eg2] = true
        }
        if (_sK2._8M2) {
            _LP._pK2[_om2] = _sK2._8M2;
            _LP._kR[_om2] = true;
        }
        if (_sK2._I5) {
            _LP._pK2[_qm2] = _sK2._I5;
            _LP._kR[_qm2] = true
        }
        if (_sK2._9M2) {
            _LP._pK2[_rm2] = _sK2._9M2;
            _LP._kR[_rm2] = true
        }
        if (_sK2._aM2) {
            _LP._pK2[_sm2] = _sK2._aM2;
            _LP._kR[_sm2] = true
        }
        if (_sK2._bM2) {
            _LP._pK2[_tm2] = _sK2._bM2;
            _LP._kR[_tm2] = true
        }
        if (_sK2._cM2) {
            _LP._pK2[_um2] = _sK2._cM2;
            _LP._kR[_um2] = true
        }
        if (_sK2._dM2) {
            _LP._pK2[_vm2] = _sK2._dM2;
            _LP._kR[_vm2] = true;
        }
        if (_sK2._eM2) {
            _LP._pK2[_wm2] = _sK2._eM2;
            _LP._kR[_wm2] = true
        }
        if (_sK2._fM2) {
            _LP._pK2[_xm2] = _sK2._fM2;
            _LP._kR[_xm2] = true
        }
        if (_sK2._56) {
            _LP._pK2[_ym2] = _sK2._56;
            _LP._kR[_ym2] = true
        }
        if (_sK2._gM2) {
            _LP._pK2[_zm2] = _sK2._gM2;
            _LP._kR[_zm2] = true
        }
        if (_sK2._hM2) {
            _LP._pK2[_Am2] = _sK2._hM2;
            _LP._kR[_Am2] = true
        }
        if (_sK2._iM2) {
            _LP._pK2[_Bm2] = _sK2._iM2;
            _LP._kR[_Bm2] = true;
        }
        if (_sK2._jM2) {
            _LP._pK2[_Cm2] = _sK2._jM2;
            _LP._kR[_Cm2] = true
        }
        if (_sK2._kM2) {
            _LP._pK2[_Dm2] = _sK2._kM2;
            _LP._kR[_Dm2] = true
        }
        if (_sK2._lM2) {
            _LP._pK2[_Em2] = _sK2._lM2;
            _LP._kR[_Em2] = true
        }
        if (_sK2._mM2) {
            _LP._pK2[_Fm2] = _sK2._mM2;
            _LP._kR[_Fm2] = true
        }
        if (_sK2._nM2) {
            _LP._pK2[_Gm2] = _sK2._nM2;
            _LP._kR[_Gm2] = true
        }
        if (_sK2._oM2) {
            _LP._pK2[_Hm2] = _sK2._oM2;
            _LP._kR[_Hm2] = true
        }
        if (_sK2._pM2) {
            _LP._pK2[_Im2] = _sK2._pM2;
            _LP._kR[_Im2] = true
        }
        if (_sK2._qM2) {
            _LP._pK2[_Jm2] = _sK2._qM2;
            _LP._kR[_Jm2] = true
        }
        if (_sK2._rM2) {
            _LP._pK2[_Km2] = (_sK2._rM2);
            _LP._kR[_Km2] = true
        }
        if (_sK2._sM2) {
            _LP._pK2[_Lm2] = (_sK2._sM2);
            _LP._kR[_Lm2] = true
        }
        if (_sK2._tM2) {
            _LP._pK2[_Mm2] = (_sK2._tM2);
            _LP._kR[_Mm2] = true
        }
        if (_sK2._uM2) {
            _LP._pK2[_Nm2] = (_sK2._uM2);
            _LP._kR[_Nm2] = true
        }
        if (_sK2._vM2) {
            _LP._pK2[_Om2] = (_sK2._vM2);
            _LP._kR[_Om2] = true
        }
        if (_sK2._wM2) {
            _LP._pK2[_Pm2] = (_sK2._wM2);
            _LP._kR[_Pm2] = true
        }
        if (_sK2._xM2) {
            _LP._pK2[_Qm2] = (_sK2._xM2);
            _LP._kR[_Qm2] = true
        }
        if (_sK2._yM2) {
            _LP._pK2[_Rm2] = (_sK2._yM2);
            _LP._kR[_Rm2] = true
        }
        if (_sK2._zM2) {
            _LP._pK2[_Sm2] = (_sK2._zM2);
            _LP._kR[_Sm2] = true
        }
        if (_sK2._AM2) {
            _LP._pK2[_Tm2] = (_sK2._AM2);
            _LP._kR[_Tm2] = true
        }
        if (_sK2._BM2) {
            _LP._pK2[_Um2] = (_sK2._BM2);
            _LP._kR[_Um2] = true
        }
        if (_sK2._gb) {
            _LP._pK2[_Vm2] = (_sK2._gb);
            _LP._kR[_Vm2] = true
        }
        if (_sK2._CM2) {
            _LP._pK2[_Wm2] = (_sK2._CM2);
            _LP._kR[_Wm2] = true
        }
        if (_sK2._DM2) {
            _LP._pK2[_Xm2] = (_sK2._DM2);
            _LP._kR[_Xm2] = true
        }
        if (_sK2._EM2) {
            _LP._pK2[_Ym2] = (_sK2._EM2);
            _LP._kR[_Ym2] = true
        }
        if (_sK2._FM2) {
            _LP._pK2[_Zm2] = (_sK2._FM2);
            _LP._kR[_Zm2] = true
        }
        if (_sK2._eb) {
            _LP._pK2[__m2] = (_sK2._eb);
            _LP._kR[__m2] = true
        }
        if (_sK2._GM2) {
            _LP._pK2[_0n2] = (_sK2._GM2);
            _LP._kR[_0n2] = true
        }
        if (_sK2._HM2) {
            _LP._pK2[_1n2] = (_sK2._HM2);
            _LP._kR[_1n2] = true
        }
        if (_sK2._cb) {
            _LP._pK2[_2n2] = (_sK2._cb);
            _LP._kR[_2n2] = true
        }
        if (_sK2._IM2) {
            _LP._pK2[_3n2] = (_sK2._IM2);
            _LP._kR[_3n2] = true
        }
        if (_sK2._h6) {
            _LP._pK2[_4n2] = (_sK2._h6);
            _LP._kR[_4n2] = true
        }
        if (_sK2._ab) {
            _LP._pK2[_5n2] = (_sK2._ab);
            _LP._kR[_5n2] = true
        }
        if (_sK2._JM2) {
            _LP._pK2[_6n2] = (_sK2._JM2);
            _LP._kR[_6n2] = true
        }
        if (_sK2._KM2) {
            _LP._pK2[_7n2] = (_sK2._KM2);
            _LP._kR[_7n2] = true
        }
        if (_sK2._LM2) {
            _LP._pK2[_8n2] = (_sK2._LM2);
            _LP._kR[_8n2] = true
        }
        if (_sK2._MM2) {
            _LP._pK2[_9n2] = (_sK2._MM2);
            _LP._kR[_9n2] = true
        }
        if (_sK2._NM2) {
            _LP._pK2[_an2] = (_sK2._NM2);
            _LP._kR[_an2] = true
        }
        if (_sK2._OM2) {
            _LP._pK2[_bn2] = (_sK2._OM2);
            _LP._kR[_bn2] = true
        }
        if (_sK2._PM2) {
            _LP._pK2[_cn2] = (_sK2._PM2);
            _LP._kR[_cn2] = true
        }
        if (_sK2._QM2) {
            _LP._pK2[_dn2] = (_sK2._QM2);
            _LP._kR[_dn2] = true
        }
        if (_sK2._RM2) {
            _LP._pK2[_en2] = (_sK2._RM2);
            _LP._kR[_en2] = true
        }
        if (_sK2._SM2) {
            _LP._pK2[_fn2] = (_sK2._SM2);
            _LP._kR[_fn2] = true
        }
        if (_sK2._TM2) {
            _LP._pK2[_gn2] = (_sK2._TM2);
            _LP._kR[_gn2] = true
        }
        if (_sK2._UM2) {
            _LP._pK2[_hn2] = (_sK2._UM2);
            _LP._kR[_hn2] = true
        }
        if (_sK2._VM2) {
            _LP._pK2[_in2] = (_sK2._VM2);
            _LP._kR[_in2] = true
        }
        if (_sK2._WM2) {
            _LP._pK2[_jn2] = (_sK2._WM2);
            _LP._kR[_jn2] = true
        }
        if (_sK2._XM2) {
            _LP._pK2[_kn2] = (_sK2._XM2);
            _LP._kR[_kn2] = true
        }
        if (_sK2._YM2) {
            _LP._pK2[_ln2] = (_sK2._YM2);
            _LP._kR[_ln2] = true
        }
        if (_sK2._ZM2) {
            _LP._pK2[_mn2] = (_sK2._ZM2);
            _LP._kR[_mn2] = true
        }
        if (_sK2.__M2) {
            _LP._pK2[_nn2] = (_sK2.__M2);
            _LP._kR[_nn2] = true
        }
        if (_sK2._0N2) {
            _LP._pK2[_on2] = (_sK2._0N2);
            _LP._kR[_on2] = true
        }
        if (_sK2._1N2) {
            _LP._pK2[_pn2] = (_sK2._1N2);
            _LP._kR[_pn2] = true
        }
        if (_sK2._2N2) {
            _LP._pK2[_qn2] = (_sK2._2N2);
            _LP._kR[_qn2] = true
        }
        if (_sK2._3N2) {
            _LP._pK2[_rn2] = (_sK2._3N2);
            _LP._kR[_rn2] = true
        }
        if (_sK2._4N2) {
            _LP._pK2[_sn2] = (_sK2._4N2);
            _LP._kR[_sn2] = true
        }
        if (_sK2._5N2) {
            _LP._pK2[_tn2] = (_sK2._5N2);
            _LP._kR[_tn2] = true
        }
        if (_sK2._6N2) {
            _LP._pK2[_un2] = (_sK2._6N2);
            _LP._kR[_un2] = true
        }
        if (_sK2._7N2) {
            _LP._pK2[_In2] = (_sK2._7N2);
            _LP._kR[_In2] = true
        }
        if (_sK2._8N2) {
            _LP._pK2[_Jn2] = (_sK2._8N2);
            _LP._kR[_Jn2] = true
        }
        if (_sK2._9N2) {
            _LP._pK2[_Kn2] = (_sK2._9N2);
            _LP._kR[_Kn2] = true
        }
        if (_sK2._aN2) {
            _LP._pK2[_Ln2] = (_sK2._aN2);
            _LP._kR[_Ln2] = true
        }
        if (_sK2._bN2) {
            _LP._pK2[_Mn2] = (_sK2._bN2);
            _LP._kR[_Mn2] = true
        }
        if (_sK2._cN2) {
            _LP._pK2[_Nn2] = (_sK2._cN2);
            _LP._kR[_Nn2] = true
        }
        if (_sK2._dN2) {
            _LP._pK2[_On2] = (_sK2._dN2);
            _LP._kR[_On2] = true
        }
        if (_sK2._eN2) {
            _LP._pK2[_Pn2] = (_sK2._eN2);
            _LP._kR[_Pn2] = true
        }
        if (_sK2._fN2) {
            _LP._pK2[_Qn2] = (_sK2._fN2);
            _LP._kR[_Qn2] = true
        }
        if (_sK2._gN2) {
            _LP._pK2[_Rn2] = (_sK2._gN2);
            _LP._kR[_Rn2] = true
        }
        if (_sK2._hN2) {
            _LP._pK2[_Sn2] = (_sK2._hN2);
            _LP._kR[_Sn2] = true
        }
        if (_sK2._iN2) {
            _LP._pK2[_Tn2] = (_sK2._iN2);
            _LP._kR[_Tn2] = true
        }
        if (_sK2._jN2) {
            _LP._pK2[_Un2] = (_sK2._jN2);
            _LP._kR[_Un2] = true
        }
        if (_sK2._kN2) {
            _LP._pK2[_Vn2] = (_sK2._kN2);
            _LP._kR[_Vn2] = true
        }
        if (_sK2._lN2) {
            _LP._pK2[_Wn2] = (_sK2._lN2);
            _LP._kR[_Wn2] = true
        }
        if (_sK2._mN2) {
            _LP._pK2[_Xn2] = (_sK2._mN2);
            _LP._kR[_Xn2] = true
        }
        if (_sK2._nN2) {
            _LP._oK2[_Yn2] = (_sK2._nN2);
            _LP._kR[_Yn2] = true
        }
        if (_sK2._a7) {
            _LP._oK2[__n2] = (_sK2._a7);
            _LP._kR[__n2] = true
        }
        if (_sK2._oN2) {
            _LP._oK2[_0o2] = (_sK2._oN2);
            _LP._kR[_0o2] = true
        }
        if (_sK2._pN2) {
            _LP._oK2[_1o2] = (_sK2._pN2);
            _LP._kR[_1o2] = true;
        }
        if (_sK2._c7) {
            _LP._oK2[_2o2] = (_sK2._c7);
            _LP._kR[_2o2] = true
        }
        if (_sK2._qN2) {
            _LP._oK2[_3o2] = (_sK2._qN2);
            _LP._kR[_3o2] = true
        }
        if (_sK2._rN2) {
            _LP._oK2[_4o2] = (_sK2._rN2);
            _LP._kR[_4o2] = true
        }
        if (_sK2._sN2) {
            _LP._oK2[_5o2] = (_sK2._sN2);
            _LP._kR[_5o2] = true
        }
        if (_sK2._tN2) {
            _LP._oK2[_6o2] = (_sK2._tN2);
            _LP._kR[_6o2] = true
        }
        if (_sK2._uN2) {
            _LP._oK2[_7o2] = (_sK2._uN2);
            _LP._kR[_7o2] = true
        }
        if (_sK2._vN2) {
            _LP._oK2[_8o2] = (_sK2._vN2);
            _LP._kR[_8o2] = true;
        }
        if (_sK2._wN2) {
            _LP._oK2[_9o2] = (_sK2._wN2);
            _LP._kR[_9o2] = true
        }
        if (_sK2._xN2) {
            _LP._oK2[_ao2] = (_sK2._xN2);
            _LP._kR[_ao2] = true
        }
        if (_sK2._yN2) {
            _LP._oK2[_bo2] = (_sK2._yN2);
            _LP._kR[_bo2] = true
        }
        if (_sK2._zN2) {
            _LP._oK2[_co2] = (_sK2._zN2);
            _LP._kR[_co2] = true
        }
        if (_sK2._AN2) {
            _LP._oK2[_do2] = (_sK2._AN2);
            _LP._kR[_do2] = true
        }
        if (_sK2._BN2) {
            _LP._oK2[_eo2] = (_sK2._BN2);
            _LP._kR[_eo2] = true
        }
        if (_sK2._CN2) {
            _LP._oK2[_fo2] = (_sK2._CN2);
            _LP._kR[_fo2] = true;
        }
        if (_sK2._DN2) {
            _LP._oK2[_go2] = (_sK2._DN2);
            _LP._kR[_go2] = true
        }
        if (_sK2._EN2) {
            _LP._oK2[_ho2] = (_sK2._EN2);
            _LP._kR[_ho2] = true
        }
        if (_sK2._FN2) {
            _LP._oK2[_io2] = (_sK2._FN2);
            _LP._kR[_io2] = true
        }
        if (_sK2._GN2) {
            _LP._oK2[_jo2] = (_sK2._GN2);
            _LP._kR[_jo2] = true
        }
        if (_sK2._HN2) {
            _LP._oK2[_ko2] = (_sK2._HN2);
            _LP._kR[_ko2] = true
        }
        if (_sK2._IN2) {
            _LP._oK2[_lo2] = (_sK2._IN2);
            _LP._kR[_lo2] = true
        }
        if (_sK2._JN2) {
            _LP._oK2[_mo2] = (_sK2._JN2);
            _LP._kR[_mo2] = true
        }
        if (_sK2._KN2) {
            _LP._oK2[_no2] = (_sK2._KN2);
            _LP._kR[_no2] = true
        }
        if (_sK2._LN2) {
            _LP._oK2[_oo2] = (_sK2._LN2);
            _LP._kR[_oo2] = true
        }
        if (_sK2._MN2) {
            _LP._oK2[_po2] = (_sK2._MN2);
            _LP._kR[_po2] = true
        }
        if (_sK2._NN2) {
            _LP._oK2[_qo2] = (_sK2._NN2);
            _LP._kR[_qo2] = true
        }
        if (_sK2._ON2) {
            _LP._oK2[_ro2] = (_sK2._ON2);
            _LP._kR[_ro2] = true
        }
        if (_sK2._PN2) {
            _LP._oK2[_so2] = (_sK2._PN2);
            _LP._kR[_so2] = true
        }
        if (_sK2._QN2) {
            _LP._oK2[_to2] = (_sK2._QN2);
            _LP._kR[_to2] = true
        }
        if (_sK2._RN2) {
            _LP._oK2[_uo2] = (_sK2._RN2);
            _LP._kR[_uo2] = true
        }
        if (_sK2._SN2) {
            _LP._oK2[_vo2] = (_sK2._SN2);
            _LP._kR[_vo2] = true
        }
        if (_sK2._TN2) {
            _LP._oK2[_wo2] = (_sK2._TN2);
            _LP._kR[_wo2] = true
        }
        if (_sK2._UN2) {
            _LP._oK2[_xo2] = (_sK2._UN2);
            _LP._kR[_xo2] = true
        }
        if (_sK2._VN2) {
            _LP._oK2[_yo2] = (_sK2._VN2);
            _LP._kR[_yo2] = true
        }
        if (_sK2._WN2) {
            _LP._oK2[_zo2] = (_sK2._WN2);
            _LP._kR[_zo2] = true
        }
        if (_sK2._XN2) {
            _LP._oK2[_Ao2] = (_sK2._XN2);
            _LP._kR[_Ao2] = true
        }
        if (_sK2._YN2) {
            _LP._oK2[_Bo2] = (_sK2._YN2);
            _LP._kR[_Bo2] = true
        }
        if (_sK2._ZN2) {
            _LP._oK2[_Co2] = (_sK2._ZN2);
            _LP._kR[_Co2] = true
        }
        if (_sK2.__N2) {
            _LP._oK2[_Do2] = (_sK2.__N2);
            _LP._kR[_Do2] = true
        }
        if (_sK2._0O2) {
            _LP._oK2[_Eo2] = (_sK2._0O2);
            _LP._kR[_Eo2] = true
        }
        if (_sK2._1O2) {
            _LP._oK2[_Fo2] = (_sK2._1O2);
            _LP._kR[_Fo2] = true
        }
        if (_sK2._2O2) {
            _LP._oK2[_Go2] = (_sK2._2O2);
            _LP._kR[_Go2] = true
        }
        if (_sK2._3O2) {
            _LP._oK2[_Ho2] = (_sK2._3O2);
            _LP._kR[_Ho2] = true
        }
        if (_sK2._4O2) {
            _LP._oK2[_Io2] = (_sK2._4O2);
            _LP._kR[_Io2] = true
        }
        if (_sK2._5b) {
            _LP._oK2[_Jo2] = (_sK2._5b);
            _LP._kR[_Jo2] = true
        }
        if (_sK2._5O2) {
            _LP._oK2[_Ko2] = (_sK2._5O2);
            _LP._kR[_Ko2] = true
        }
        if (_sK2._6O2) {
            _LP._oK2[_Lo2] = (_sK2._6O2);
            _LP._kR[_Lo2] = true
        }
        if (_sK2._7O2) {
            _LP._oK2[_Mo2] = (_sK2._7O2);
            _LP._kR[_Mo2] = true
        }
        if (_sK2._8O2) {
            _LP._oK2[_No2] = (_sK2._8O2);
            _LP._kR[_No2] = true
        }
        if (_sK2._9O2) {
            _LP._oK2[_Oo2] = (_sK2._9O2);
            _LP._kR[_Oo2] = true
        }
        if (_sK2._aO2) {
            _LP._oK2[_Po2] = (_sK2._aO2);
            _LP._kR[_Po2] = true
        }
        if (_sK2._bO2) {
            _LP._oK2[_Qo2] = (_sK2._bO2);
            _LP._kR[_Qo2] = true
        }
        if (_sK2._cO2) {
            _LP._oK2[_Ro2] = (_sK2._cO2);
            _LP._kR[_Ro2] = true
        }
        if (_sK2._dO2) {
            _LP._oK2[_So2] = (_sK2._dO2);
            _LP._kR[_So2] = true
        }
        if (_sK2._eO2) {
            _LP._oK2[_To2] = (_sK2._eO2);
            _LP._kR[_To2] = true
        }
        if (_sK2._fO2) {
            _LP._oK2[_Uo2] = (_sK2._fO2);
            _LP._kR[_Uo2] = true
        }
        if (_sK2._gO2) {
            _LP._oK2[_Vo2] = (_sK2._gO2);
            _LP._kR[_Vo2] = true
        }
        if (_sK2._hO2) {
            _LP._oK2[_Wo2] = (_sK2._hO2);
            _LP._kR[_Wo2] = true
        }
        if (_sK2._iO2) {
            _LP._oK2[_Xo2] = (_sK2._iO2);
            _LP._kR[_Xo2] = true
        }
        if (_sK2._jO2) {
            _LP._oK2[_Yo2] = (_sK2._jO2);
            _LP._kR[_Yo2] = true
        }
        if (_sK2._kO2) {
            _LP._oK2[_Zo2] = (_sK2._kO2);
            _LP._kR[_Zo2] = true
        }
        if (_sK2._lO2) {
            _LP._oK2[__o2] = (_sK2._lO2);
            _LP._kR[__o2] = true
        }
        if (_sK2._mO2) {
            _LP._oK2[_0p2] = (_sK2._mO2);
            _LP._kR[_0p2] = true
        }
        if (_sK2._nO2) {
            _LP._oK2[_1p2] = (_sK2._nO2);
            _LP._kR[_1p2] = true
        }
        if (_sK2._oO2) {
            _LP._oK2[_2p2] = (_sK2._oO2);
            _LP._kR[_2p2] = true
        }
        if (_sK2._pO2) {
            _LP._oK2[_3p2] = (_sK2._pO2);
            _LP._kR[_3p2] = true
        }
        if (_sK2._qO2) {
            _LP._oK2[_hp2] = (_sK2._qO2);
            _LP._kR[_hp2] = true
        }
        if (_sK2._rO2) {
            _LP._oK2[_ip2] = (_sK2._rO2);
            _LP._kR[_ip2] = true
        }
        if (_sK2._sO2) {
            _LP._oK2[_jp2] = (_sK2._sO2);
            _LP._kR[_jp2] = true
        }
        if (_sK2._tO2) {
            _LP._oK2[_kp2] = (_sK2._tO2);
            _LP._kR[_kp2] = true
        }
        if (_sK2._uO2) {
            _LP._oK2[_lp2] = (_sK2._uO2);
            _LP._kR[_lp2] = true
        }
        if (_sK2._vO2) {
            _LP._oK2[_mp2] = (_sK2._vO2);
            _LP._kR[_mp2] = true
        }
        if (_sK2._wO2) {
            _LP._oK2[_np2] = (_sK2._wO2);
            _LP._kR[_np2] = true
        }
        if (_sK2._xO2) {
            _LP._oK2[_op2] = (_sK2._xO2);
            _LP._kR[_op2] = true
        }
        if (_sK2._yO2) {
            _LP._oK2[_pp2] = (_sK2._yO2);
            _LP._kR[_pp2] = true
        }
        if (_sK2._zO2) {
            _LP._oK2[_qp2] = (_sK2._zO2);
            _LP._kR[_qp2] = true
        }
        if (_sK2._AO2) {
            _LP._oK2[_rp2] = (_sK2._AO2);
            _LP._kR[_rp2] = true
        }
        if (_sK2._BO2) {
            _LP._oK2[_sp2] = (_sK2._BO2);
            _LP._kR[_sp2] = true
        }
        if (_sK2._CO2) {
            _LP._oK2[_tp2] = (_sK2._CO2);
            _LP._kR[_tp2] = true
        }
        if (_sK2._DO2) {
            _LP._oK2[_up2] = (_sK2._DO2);
            _LP._kR[_up2] = true
        }
        if (_sK2._EO2) {
            _LP._oK2[_vp2] = (_sK2._EO2);
            _LP._kR[_vp2] = true
        }
        if (_sK2._FO2) {
            _LP._oK2[_wp2] = (_sK2._FO2);
            _LP._kR[_wp2] = true
        }
        if (_sK2._GO2) {
            _LP._qK2[_xp2] = (_sK2._GO2);
            _LP._kR[_xp2] = true
        }
        if (_sK2._HO2) {
            _LP._qK2[_zp2] = (_sK2._HO2);
            _LP._kR[_zp2] = true
        }
        if (_sK2._IO2) {
            _LP._qK2[_Ap2] = (_sK2._IO2);
            _LP._kR[_Ap2] = true
        }
        if (_sK2._JO2) {
            _LP._qK2[_Bp2] = (_sK2._JO2);
            _LP._kR[_Bp2] = true
        }
        if (_sK2._KO2) {
            _LP._qK2[_Cp2] = (_sK2._KO2);
            _LP._kR[_Cp2] = true
        }
        if (_sK2._LO2) {
            _LP._qK2[_Dp2] = (_sK2._LO2);
            _LP._kR[_Dp2] = true
        }
        if (_sK2._MO2) {
            _LP._qK2[_Ep2] = (_sK2._MO2);
            _LP._kR[_Ep2] = true
        }
        if (_sK2._NO2) {
            _LP._qK2[_Fp2] = (_sK2._NO2);
            _LP._kR[_Fp2] = true
        }
        if (_sK2._OO2) {
            _LP._qK2[_Gp2] = (_sK2._OO2);
            _LP._kR[_Gp2] = true
        }
        if (_sK2._PO2) {
            _LP._qK2[_Hp2] = (_sK2._PO2);
            _LP._kR[_Hp2] = true
        }
        if (_sK2._QO2) {
            _LP._qK2[_Ip2] = (_sK2._QO2);
            _LP._kR[_Ip2] = true
        }
        if (_sK2._RO2) {
            _LP._qK2[_Jp2] = (_sK2._RO2);
            _LP._kR[_Jp2] = true
        }
        if (_sK2._SO2) {
            _LP._qK2[_Kp2] = (_sK2._SO2);
            _LP._kR[_Kp2] = true
        }
        if (_sK2._TO2) {
            _LP._qK2[_Lp2] = (_sK2._TO2);
            _LP._kR[_Lp2] = true
        }
        if (_sK2._UO2) {
            _LP._qK2[_Mp2] = (_sK2._UO2);
            _LP._kR[_Mp2] = true
        }
        if (_sK2._VO2) {
            _LP._qK2[_Np2] = (_sK2._VO2);
            _LP._kR[_Np2] = true
        }
        if (_sK2._WO2) {
            _LP._qK2[_Op2] = (_sK2._WO2);
            _LP._kR[_Op2] = true
        }
        if (_sK2._XO2) {
            _LP._qK2[_Pp2] = (_sK2._XO2);
            _LP._kR[_Pp2] = true
        }
        if (_sK2._YO2) {
            _LP._qK2[_Qp2] = (_sK2._YO2);
            _LP._kR[_Qp2] = true
        }
        if (_sK2._ZO2) {
            _LP._qK2[_Rp2] = (_sK2._ZO2);
            _LP._kR[_Rp2] = true
        }
        if (_sK2.__O2) {
            _LP._qK2[_Sp2] = (_sK2.__O2);
            _LP._kR[_Sp2] = true
        }
        if (_sK2._0P2) {
            _LP._qK2[_Tp2] = (_sK2._0P2);
            _LP._kR[_Tp2] = true
        }
        if (_sK2._1P2) {
            _LP._qK2[_Up2] = (_sK2._1P2);
            _LP._kR[_Up2] = true
        }
        if (_sK2._2P2) {
            _LP._qK2[_Vp2] = (_sK2._2P2);
            _LP._kR[_Vp2] = true
        }
        if (_sK2._3P2) {
            _LP._qK2[_Wp2] = (_sK2._3P2);
            _LP._kR[_Wp2] = true
        }
        if (_sK2._4P2) {
            _LP._qK2[_Xp2] = (_sK2._4P2);
            _LP._kR[_Xp2] = true
        }
        if (_sK2._5P2) {
            _LP._qK2[_Yp2] = (_sK2._5P2);
            _LP._kR[_Yp2] = true
        }
        if (_sK2._6P2) {
            _LP._qK2[_Zp2] = (_sK2._6P2);
            _LP._kR[_Zp2] = true
        }
        if (_sK2._7P2) {
            _LP._qK2[__p2] = (_sK2._7P2);
            _LP._kR[__p2] = true
        }
        if (_sK2._8P2) {
            _LP._qK2[_0q2] = (_sK2._8P2);
            _LP._kR[_0q2] = true
        }
        if (_sK2._9P2) {
            _LP._qK2[_1q2] = (_sK2._9P2);
            _LP._kR[_1q2] = true;
        }
        if (_sK2._aP2) {
            _LP._qK2[_2q2] = (_sK2._aP2);
            _LP._kR[_2q2] = true
        }
        if (_sK2._bP2) {
            _LP._qK2[_3q2] = (_sK2._bP2);
            _LP._kR[_3q2] = true
        }
        if (_sK2._cP2) {
            _LP._qK2[_4q2] = (_sK2._cP2);
            _LP._kR[_4q2] = true
        }
        if (_sK2._dP2) {
            _LP._qK2[_5q2] = (_sK2._dP2);
            _LP._kR[_5q2] = true
        }
        if (_sK2._eP2) {
            _LP._qK2[_6q2] = (_sK2._eP2);
            _LP._kR[_6q2] = true
        }
        if (_sK2._fP2) {
            _LP._qK2[_7q2] = (_sK2._fP2);
            _LP._kR[_7q2] = true
        }
        if (_sK2._gP2) {
            _LP._qK2[_8q2] = (_sK2._gP2);
            _LP._kR[_8q2] = true
        }
        if (_sK2._hP2) {
            _LP._qK2[_9q2] = (_sK2._hP2);
            _LP._kR[_9q2] = true
        }
        if (_sK2._iP2) {
            _LP._qK2[_aq2] = (_sK2._iP2);
            _LP._kR[_aq2] = true
        }
        if (_sK2._jP2) {
            _LP._qK2[_bq2] = (_sK2._jP2);
            _LP._kR[_bq2] = true
        }
        if (_sK2._kP2) {
            _LP._qK2[_cq2] = (_sK2._kP2);
            _LP._kR[_cq2] = true
        }
        if (_sK2._lP2) {
            _LP._qK2[_dq2] = (_sK2._lP2);
            _LP._kR[_dq2] = true
        }
        if (_sK2._mP2) {
            _LP._qK2[_eq2] = (_sK2._mP2);
            _LP._kR[_eq2] = true
        }
        if (_sK2._nP2) {
            _LP._qK2[_fq2] = (_sK2._nP2);
            _LP._kR[_fq2] = true
        }
        if (_sK2._oP2) {
            _LP._qK2[_gq2] = (_sK2._oP2);
            _LP._kR[_gq2] = true
        }
        if (_sK2._pP2) {
            _LP._qK2[_hq2] = (_sK2._pP2);
            _LP._kR[_hq2] = true
        }
        if (_sK2._qP2) {
            _LP._qK2[_iq2] = (_sK2._qP2);
            _LP._kR[_iq2] = true
        }
        if (_sK2._rP2) {
            _LP._qK2[_jq2] = (_sK2._rP2);
            _LP._kR[_jq2] = true
        }
        if (_sK2._sP2) {
            _LP._qK2[_kq2] = (_sK2._sP2);
            _LP._kR[_kq2] = true;
        }
        if (_sK2._tP2) {
            _LP._qK2[_lq2] = (_sK2._tP2);
            _LP._kR[_lq2] = true
        }
        if (_sK2._uP2) {
            _LP._qK2[_mq2] = (_sK2._uP2);
            _LP._kR[_mq2] = true
        }
        if (_sK2._vP2) {
            _LP._qK2[_nq2] = (_sK2._vP2);
            _LP._kR[_nq2] = true
        }
        if (_sK2._wP2) {
            _LP._qK2[_oq2] = (_sK2._wP2);
            _LP._kR[_oq2] = true
        }
        if (_sK2._xP2) {
            _LP._qK2[_pq2] = (_sK2._xP2);
            _LP._kR[_pq2] = true
        }
        if (_sK2._yP2) {
            _LP._qK2[_qq2] = (_sK2._yP2);
            _LP._kR[_qq2] = true
        }
        if (_sK2._zP2) {
            _LP._qK2[_rq2] = (_sK2._zP2);
            _LP._kR[_rq2] = true
        }
        if (_sK2._AP2) {
            _LP._qK2[_sq2] = (_sK2._AP2);
            _LP._kR[_sq2] = true
        }
        if (_sK2._BP2) {
            _LP._qK2[_tq2] = (_sK2._BP2);
            _LP._kR[_tq2] = true
        }
        if (_sK2._CP2) {
            _LP._qK2[_uq2] = (_sK2._CP2);
            _LP._kR[_uq2] = true
        }
        if (_sK2._DP2) {
            _LP._qK2[_vq2] = (_sK2._DP2);
            _LP._kR[_vq2] = true
        }
        if (_sK2._EP2) {
            _LP._qK2[_wq2] = (_sK2._EP2);
            _LP._kR[_wq2] = true
        }
        if (_sK2._FP2) {
            _LP._qK2[_xq2] = (_sK2._FP2);
            _LP._kR[_xq2] = true
        }
        if (_sK2._GP2) {
            _LP._qK2[_yq2] = (_sK2._GP2);
            _LP._kR[_yq2] = true
        }
        if (_sK2._HP2) {
            _LP._qK2[_zq2] = (_sK2._HP2);
            _LP._kR[_zq2] = true
        }
        if (_sK2._IP2) {
            _LP._qK2[_Aq2] = (_sK2._IP2);
            _LP._kR[_Aq2] = true
        }
        if (_sK2._JP2) {
            _LP._qK2[_Bq2] = (_sK2._JP2);
            _LP._kR[_Bq2] = true
        }
        if (_sK2._KP2) {
            _LP._qK2[_Cq2] = (_sK2._KP2);
            _LP._kR[_Cq2] = true
        }
        if (_sK2._LP2) {
            _LP._qK2[_Dq2] = (_sK2._LP2);
            _LP._kR[_Dq2] = true
        }
        if (_sK2._MP2) {
            _LP._qK2[_Rq2] = (_sK2._MP2);
            _LP._kR[_Rq2] = true
        }
        if (_sK2._NP2) {
            _LP._qK2[_Sq2] = (_sK2._NP2);
            _LP._kR[_Sq2] = true
        }
        if (_sK2._OP2) {
            _LP._qK2[_Tq2] = (_sK2._OP2);
            _LP._kR[_Tq2] = true
        }
        if (_sK2._PP2) {
            _LP._qK2[_Uq2] = (_sK2._PP2);
            _LP._kR[_Uq2] = true
        }
        if (_sK2._QP2) {
            _LP._qK2[_Vq2] = (_sK2._QP2);
            _LP._kR[_Vq2] = true
        }
        if (_sK2._RP2) {
            _LP._qK2[_Wq2] = (_sK2._RP2);
            _LP._kR[_Wq2] = true
        }
        if (_sK2._SP2) {
            _LP._qK2[_Xq2] = (_sK2._SP2);
            _LP._kR[_Xq2] = true
        }
        if (_sK2._TP2) {
            _LP._qK2[_Yq2] = (_sK2._TP2);
            _LP._kR[_Yq2] = true
        }
        if (_sK2._UP2) {
            _LP._qK2[_Zq2] = (_sK2._UP2);
            _LP._kR[_Zq2] = true
        }
        if (_sK2._VP2) {
            _LP._qK2[__q2] = (_sK2._VP2);
            _LP._kR[__q2] = true
        }
        if (_sK2._WP2) {
            _LP._qK2[_0r2] = (_sK2._WP2);
            _LP._kR[_0r2] = true;
        }
        if (_sK2._XP2) {
            _LP._qK2[_1r2] = (_sK2._XP2);
            _LP._kR[_1r2] = true
        }
        if (_sK2._YP2) {
            _LP._qK2[_2r2] = (_sK2._YP2);
            _LP._kR[_2r2] = true
        }
        if (_sK2._ZP2) {
            _LP._qK2[_3r2] = (_sK2._ZP2);
            _LP._kR[_3r2] = true
        }
        if (_sK2.__P2) {
            _LP._qK2[_4r2] = (_sK2.__P2);
            _LP._kR[_4r2] = true
        }
        if (_sK2._0Q2) {
            _LP._qK2[_5r2] = (_sK2._0Q2);
            _LP._kR[_5r2] = true
        }
        var _t5 = 0;
        if (_sK2._M5 != undefined) {
            while (_t5 < _sK2._M5.length) {
                var _7N = parseInt(_sK2._M5[_t5]) + 1;
                var _gv2 = _sK2._M5[_t5 + 1];
                var _1Q2 = _Qr2._RB(_7N);
                _LP._kR[_ej2] = true;
                _LP._kR[_ej2 | _7N] = true;
                var _2Q2 = new _eK2();
                _2Q2._fK2 = _gv2;
                _2Q2._hK2 = _1Q2;
                _2Q2._gK2 = _7N;
                _LP._y5[_ej2 | _7N] = _2Q2;
                _t5 += 2
            }
        }
        _t5 = 0;
        if (_sK2._N5 != undefined) {
            while (_t5 < _sK2._N5.length) {
                _LP._kR[_v02] = true;
                var _7N = parseInt(_sK2._N5[_t5]);
                var _wT1 = _sK2._N5[_t5 + 1];
                var _3Q2 = new _iK2();
                _3Q2._fK2 = _wT1;
                _3Q2._4Q2 = false;
                _3Q2._2y2 = this;
                _LP._Mu2[_7N] = _3Q2;
                _t5 += 2
            }
        }
        if (_sK2._602 != undefined) {
            _LP._dG2._602 = _sK2._602;
            _LP._dG2._qG2 = _sK2._qG2;
            _LP._dG2._iG2 = _sK2._iG2;
            _LP._dG2._sG2 = _sK2._sG2;
            _LP._dG2._tG2 = _sK2._tG2;
            _LP._dG2._rG2 = _sK2._rG2;
            _LP._dG2._pG2 = _sK2._pG2;
            _LP._dG2._oG2 = _sK2._oG2;
            _LP._dG2._uG2 = _sK2._uG2;
            _LP._dG2._vG2 = _sK2._vG2;
            _LP._dG2._wG2 = _sK2._wG2;
            _LP._dG2._lG2 = _sK2._lG2
        }
    }
    return _LP
}

_B02.prototype._8t = function (_5R,
                               index, _3R, _4R) {
    if (_581 != -1) {
        return
    }
    var _5Q2 = _pR;
    var _6Q2 = _qR;
    var _7Q2 = _ps2;
    var _8Q2 = _NC;
    _ps2 = this;
    _pR = _5R;
    _qR = index;
    _NC = false;
    var _Zt1 = true;
    switch (_5R) {
        case _131:
            if (this._K5) this._K5(_3R, _4R); else _Zt1 = false;
            break;
        case _DZ:
            if (this._C5) this._C5(_3R, _4R); else _Zt1 = false;
            break;
        case _pZ:
            if (this._F7) this._F7(_3R, _4R); else _Zt1 = false;
            break;
        case _qZ:
            if (this._tK2) this._tK2(_3R, _4R); else _Zt1 = false;
            break;
        case _ng2:
            _Zt1 = false;
            break;
        case _5m2:
            _Zt1 = false;
            break;
        case _v02:
            if (this._Mu2[index]) this._Mu2[index]._fK2(_3R, _4R);
            break;
        case _8j2:
            if (this._oK2[_5R | index]) this._oK2[_5R | index](_3R, _4R); else _Zt1 = false;
            break;
        case _6m2:
            _Zt1 = false;
            break;
        case _qf2:
            _Zt1 = false;
            break;
        case _6j2:
            if (this._G5) this._G5(_3R, _4R); else _Zt1 = false;
            break;
        case _aj2:
            if (this._pK2[_5R | index]) this._pK2[_5R | index](_3R, _4R); else _Zt1 = false;
            break;
        case _cj2:
            if (this._qK2[_5R | index]) this._qK2[_5R | index](_3R, _4R); else _Zt1 = false;
            break;
        case _ej2:
            if (this._y5[_5R | index]) {
                var _9Q2 = this._y5[_5R | index];
                var _2Q2 = _9Q2._hK2;
                var _eO = _2Q2._gv2(_3R, _4R);
                if (_eO | _8R) {
                    _9Q2._fK2(_3R, _4R)
                }
            }
            break;
        case _bm2:
            if (this._vK2) this._vK2(_3R, _4R); else _Zt1 = false;
            break;
        case _dm2:
            if (this._wK2) this._wK2(_3R, _4R); else _Zt1 = false;
            break;
        case _em2:
            if (this._xK2) this._xK2(_3R, _4R); else _Zt1 = false;
            break;
        case _fm2:
            if (this._yK2) this._yK2(_3R, _4R); else _Zt1 = false;
            break;
        case _gm2:
            if (this._zK2) this._zK2(_3R, _4R); else _Zt1 = false;
            break;
        case _hm2:
            if (this._AK2) this._AK2(_3R, _4R); else _Zt1 = false;
            break;
        case _im2:
            if (this._BK2) this._BK2(_3R, _4R); else _Zt1 = false;
            break;
        case _cm2:
            if (this._CK2) this._CK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Hg2:
            if (this._uK2) this._uK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Jg2:
            if (this._Q5) this._Q5(_3R, _4R); else _Zt1 = false;
            break;
        case _Lg2:
            if (this._pa) this._pa(_3R, _4R); else _Zt1 = false;
            break;
        case _lf2:
            if (this._n9) this._n9(_3R, _4R); else _Zt1 = false;
            break;
        case _rf2:
            if (this._aL2) this._aL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Hh2:
            if (this._bL2) this._bL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Jh2:
            if (this._cL2) this._cL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Lh2:
            if (this._dL2) this._dL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Nh2:
            if (this._eL2) this._eL2(_3R,
                _4R); else _Zt1 = false;
            break;
        case _Ph2:
            if (this._fL2) this._fL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Rh2:
            if (this._T8) this._T8(_3R, _4R); else _Zt1 = false;
            break;
        case _902:
            if (this._gL2) this._gL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Uh2:
            if (this._hL2) this._hL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Wh2:
            if (this._iL2) this._iL2(_3R, _4R); else _Zt1 = false;
            break;
        case _yf2:
            if (this._jL2) this._jL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Zh2:
            if (this._kL2) this._kL2(_3R, _4R); else _Zt1 = false;
            break;
        case _0i2:
            if (this._lL2) this._lL2(_3R, _4R); else _Zt1 = false;
            break;
        case _2i2:
            if (this._mL2) this._mL2(_3R, _4R); else _Zt1 = false;
            break;
        case _4i2:
            if (this._nL2) this._nL2(_3R, _4R); else _Zt1 = false;
            break;
        case _6i2:
            if (this._oL2) this._oL2(_3R, _4R); else _Zt1 = false;
            break;
        case _8i2:
            if (this._pL2) this._pL2(_3R, _4R); else _Zt1 = false;
            break;
        case _ai2:
            if (this._qL2) this._qL2(_3R, _4R); else _Zt1 = false;
            break;
        case _zf2:
            if (this._rL2) this._rL2(_3R, _4R); else _Zt1 = false;
            break;
        case _di2:
            if (this._sL2) this._sL2(_3R, _4R); else _Zt1 = false;
            break;
        case _fi2:
            if (this._tL2) this._tL2(_3R, _4R); else _Zt1 = false;
            break;
        case _hi2:
            if (this._uL2) this._uL2(_3R, _4R); else _Zt1 = false;
            break;
        case _ji2:
            if (this._vL2) this._vL2(_3R, _4R); else _Zt1 = false;
            break;
        case _li2:
            if (this._wL2) this._wL2(_3R, _4R); else _Zt1 = false;
            break;
        case _ni2:
            if (this._xL2) this._xL2(_3R, _4R); else _Zt1 = false;
            break;
        case _pi2:
            if (this._yL2) this._yL2(_3R, _4R); else _Zt1 = false;
            break;
        case _9t:
            if (this._zL2) this._zL2(_3R, _4R); else _Zt1 = false;
            break;
        case _6s:
            if (this._ZL2) this._ZL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Xi2:
            if (this._PL2) this._PL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Zi2:
            if (this._QL2) this._QL2(_3R,
                _4R); else _Zt1 = false;
            break;
        case _8m2:
            if (this._e6) this._e6(_3R, _4R); else _Zt1 = false;
            break;
        case _9m2:
            if (this._RL2) this._RL2(_3R, _4R); else _Zt1 = false;
            break;
        case _8Z:
            if (this._SL2) this._SL2(_3R, _4R); else _Zt1 = false;
            break;
        case _1j2:
            if (this._TL2) this._TL2(_3R, _4R); else _Zt1 = false;
            break;
        case _3j2:
            if (this._UL2) this._UL2(_3R, _4R); else _Zt1 = false;
            break;
        case _jb1:
            if (this._VL2) this._VL2(_3R, _4R); else _Zt1 = false;
            break;
        case _am2:
            if (this._WL2) this._WL2(_3R, _4R); else _Zt1 = false;
            break;
        case _km2:
            if (this._XL2) this._XL2(_3R, _4R); else _Zt1 = false;
            break;
        case _jm2:
            if (this._YL2) this._YL2(_3R, _4R); else _Zt1 = false;
            break;
        case _qi2:
            if (this._V5) this._V5(_3R, _4R); else _Zt1 = false;
            break;
        case _si2:
            if (this._AL2) this._AL2(_3R, _4R); else _Zt1 = false;
            break;
        case _ui2:
            if (this._BL2) this._BL2(_3R, _4R); else _Zt1 = false;
            break;
        case _wi2:
            if (this._CL2) this._CL2(_3R, _4R); else _Zt1 = false;
            break;
        case _yi2:
            if (this._DL2) this._DL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Ai2:
            if (this._EL2) this._EL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Ci2:
            if (this._FL2) this._FL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Ei2:
            if (this._GL2) this._GL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Gi2:
            if (this._HL2) this._HL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Ii2:
            if (this._IL2) this._IL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Ki2:
            if (this._JL2) this._JL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Mi2:
            if (this._KL2) this._KL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Oi2:
            if (this._LL2) this._LL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Qi2:
            if (this._ML2) this._ML2(_3R, _4R); else _Zt1 = false;
            break;
        case _Si2:
            if (this._NL2) this._NL2(_3R, _4R); else _Zt1 = false;
            break;
        case _Ui2:
            if (this._OL2) this._OL2(_3R,
                _4R); else _Zt1 = false;
            break;
        case _Zf2:
            if (this._DK2) this._DK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Qf2:
            if (this._EK2) this._EK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Sf2:
            if (this._FK2) this._FK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Rf2:
            if (this._GK2) this._GK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Tf2:
            if (this._HK2) this._HK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Vf2:
            if (this._IK2) this._IK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Uf2:
            if (this._JK2) this._JK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Wf2:
            if (this._KK2) this._KK2(_3R, _4R);
            else _Zt1 = false;
            break;
        case _Yf2:
            if (this._LK2) this._LK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Xf2:
            if (this._MK2) this._MK2(_3R, _4R); else _Zt1 = false;
            break;
        case _1g2:
            if (this._NK2) this._NK2(_3R, _4R); else _Zt1 = false;
            break;
        case _2g2:
            if (this._OK2) this._OK2(_3R, _4R); else _Zt1 = false;
            break;
        case _7g2:
            if (this._7b) this._7b(_3R, _4R); else _Zt1 = false;
            break;
        case _ph2:
            if (this._PK2) this._PK2(_3R, _4R); else _Zt1 = false;
            break;
        case _rh2:
            if (this._QK2) this._QK2(_3R, _4R); else _Zt1 = false;
            break;
        case _8g2:
            if (this._RK2) this._RK2(_3R, _4R); else _Zt1 = false;
            break;
        case _uh2:
            if (this._SK2) this._SK2(_3R, _4R); else _Zt1 = false;
            break;
        case _wh2:
            if (this._TK2) this._TK2(_3R, _4R); else _Zt1 = false;
            break;
        case _9g2:
            if (this._UK2) this._UK2(_3R, _4R); else _Zt1 = false;
            break;
        case _zh2:
            if (this._VK2) this._VK2(_3R, _4R); else _Zt1 = false;
            break;
        case _Bh2:
            if (this._WK2) this._WK2(_3R, _4R); else _Zt1 = false;
            break;
        case __f2:
            if (this._XK2) this._XK2(_3R, _4R); else _Zt1 = false;
            break;
        case _0g2:
            if (this._YK2) this._YK2(_3R, _4R); else _Zt1 = false;
            break;
        case _hj2:
            if (this._ZK2) this._ZK2(_3R, _4R); else _Zt1 = false;
            break;
        case _jj2:
            if (this.__K2) this.__K2(_3R, _4R); else _Zt1 = false;
            break;
        case _lj2:
            if (this._0L2) this._0L2(_3R, _4R); else _Zt1 = false;
            break;
        case _nj2:
            if (this._1L2) this._1L2(_3R, _4R); else _Zt1 = false;
            break;
        case _pj2:
            if (this._2L2) this._2L2(_3R, _4R); else _Zt1 = false;
            break;
        case _rj2:
            if (this._3L2) this._3L2(_3R, _4R); else _Zt1 = false;
            break;
        case _Hj2:
            if (this._4L2) this._4L2(_3R, _4R); else _Zt1 = false;
            break;
        case _Jj2:
            if (this._5L2) this._5L2(_3R, _4R); else _Zt1 = false;
            break;
        case _Lj2:
            if (this._6L2) this._6L2(_3R, _4R); else _Zt1 = false;
            break;
        case _Nj2:
            if (this._7L2) this._7L2(_3R,
                _4R); else _Zt1 = false;
            break;
        case _Pj2:
            if (this._8L2) this._8L2(_3R, _4R); else _Zt1 = false;
            break;
        case _Rj2:
            if (this._9L2) this._9L2(_3R, _4R); else _Zt1 = false;
            break;
        case _tg2:
            if (this._nK2[0] != null) this._nK2[0](_3R, _4R); else _Zt1 = false;
            break;
        case _ug2:
            if (this._nK2[1] != null) this._nK2[1](_3R, _4R); else _Zt1 = false;
            break;
        case _vg2:
            if (this._nK2[2] != null) this._nK2[2](_3R, _4R); else _Zt1 = false;
            break;
        case _wg2:
            if (this._nK2[3] != null) this._nK2[3](_3R, _4R); else _Zt1 = false;
            break;
        case _xg2:
            if (this._nK2[4] != null) this._nK2[4](_3R, _4R); else _Zt1 = false;
            break;
        case _yg2:
            if (this._nK2[5] != null) this._nK2[5](_3R, _4R); else _Zt1 = false;
            break;
        case _zg2:
            if (this._nK2[6] != null) this._nK2[6](_3R, _4R); else _Zt1 = false;
            break;
        case _Ag2:
            if (this._nK2[7] != null) this._nK2[7](_3R, _4R); else _Zt1 = false;
            break;
        case _Bg2:
            if (this._nK2[8] != null) this._nK2[8](_3R, _4R); else _Zt1 = false;
            break;
        case _Cg2:
            if (this._nK2[9] != null) this._nK2[9](_3R, _4R); else _Zt1 = false;
            break;
        case _Dg2:
            if (this._nK2[10] != null) this._nK2[10](_3R, _4R); else _Zt1 = false;
            break;
        case _Eg2:
            if (this._nK2[11] != null) this._nK2[11](_3R,
                _4R); else _Zt1 = false;
            break;
        default :
            _Zt1 = false
    }
    _NC = _8Q2;
    _pR = _5Q2;
    _qR = _6Q2;
    _ps2 = _7Q2;
    return _Zt1
};
_B02.prototype._B11 = function (_mZ) {
    this._3g2._3C(_mZ);
    var _LP = this;
    while (_LP != null) {
        _LP.__H2._3C(_mZ);
        _LP = _LP._2O
    }
};
_B02.prototype._7G2 = function (_mZ) {
    this._3g2._E01(_mZ);
    var _aQ2 = this;
    while (_aQ2 != null) {
        _aQ2.__H2._E01(_mZ);
        _aQ2 = _aQ2._2O
    }
};
_B02.prototype._bQ2 = function (_5R, _za1) {
    if (!this._kR[_5R | _za1]) return;
    var _gC = this.__H2._gC;
    for (var _t5 = 0; _t5 < _gC.length; _t5++) {
        var _NW = _gC[_t5];
        this._8t(_5R, _za1, _NW, _NW)
    }
};

function _Xt2() {
    this._cQ2 = [];
    this._S02 = [];
    this.length = 0
}

_Xt2.prototype._l41 = function () {
    return this._S02
};
_Xt2.prototype._3C = function (_dQ2) {
    this.length++;
    this._cQ2[_dQ2._Au2] = _dQ2;
    this._S02[_dQ2._LZ] = _dQ2
};
_Xt2.prototype._RB = function (_rK2) {
    return this._S02[_rK2]
};
_Xt2.prototype._FZ = function (_OB) {
    if (!this._S02[_OB]) return false; else return true
};
_Xt2.prototype._5s = function (_5R, _za1) {
    for (var _HP = 0; _HP < _4s._S02.length; _HP++) {
        var _LP = _4s._S02[_HP];
        if (_LP._kR[_5R | _za1]) {
            _LP._bQ2(_5R | _za1)
        }
    }
};
_Xt2.prototype._1v2 = function () {
    var _gC = this._S02;
    for (var index = 0; index < _gC.length; index++) {
        var _LP = _gC[index];
        _LP._2O = _4s._RB(_LP._JZ);
        if (!_LP._2O) _LP._2O = null;
        for (var e = 0; e < _LP._kR.length; e++) {
            var _4l2 = _LP._kR[e];
            if (_4l2) {
                _LP._kf2[e] = true
            }
        }
    }
    for (var index = 0; index < _gC.length; index++) {
        var __F2 = _gC[index];
        var _LP = __F2._2O;
        while (_LP != null) {
            for (var e = 0; e < _LP._kR.length; e++) {
                var _4l2 = _LP._kR[e];
                if (_4l2) {
                    __F2._kf2[e] = true
                }
            }
            _LP = _LP._2O
        }
    }
};

function _dg(_rK2) {
    if (_rK2 === undefined) {
        _rK2 = 0
    }
    if (_rK2 === _L31) {
        return _js._l41().slice(0)
    }
    var _LP = _4s._RB(_rK2);
    if (_LP != null) {
        return _LP.__H2._gC.slice(0)
    }
    var _NW = _OW._RB(_rK2);
    if (_NW != null) {
        var _Mt = [];
        _Mt[0] = _NW;
        return _Mt
    }
    return []
}

function _eQ2() {
    this._gC = [];
    this.length = 0;
    this._Gu = 0;
    this._fQ2 = -1
}

_eQ2.prototype._RB = function (_za1) {
    return this._gC[_za1]
};
_eQ2.prototype._3C = function (_Nx2) {
    for (var _t5 = 0; _t5 < this._gC.length; _t5++) {
        if (_Nx2._1c < this._gC[_t5]._1c) {
            this._gC.splice(_t5, 0, _Nx2);
            this._Gu++;
            this.length = this._gC.length;
            return _t5;
        }
    }
    this._gC[this._gC.length] = _Nx2;
    this._Gu++;
    this.length = this._gC.length;
    return this.length - 1
};
_eQ2.prototype._gQ2 = function (_Nx2) {
    if (this._fQ2 < 0) {
        this._fQ2 = this._gC.length
    }
    this._gC[this._gC.length] = _Nx2;
    this._Gu++;
    this.length = this._gC.length;
    return this.length - 1
};
_eQ2.prototype._cK2 = function (_Nx2) {
    var _t5 = this._fQ2;
    if (_t5 < 0) return;
    var _8C = [];
    while (_t5 < this._gC.length) {
        _8C[_8C.length] = this._gC[_t5];
        _t5++
    }
    this._gC.splice(this._fQ2, this._gC.length - this._fQ2);
    for (_t5 = 0; _t5 < _8C.length; _t5++) {
        this._3C(_8C[_t5])
    }
    this._fQ2 = -1;
};
_eQ2.prototype._L11 = function (_Nx2) {
    for (var _t5 = 0; _t5 < this._gC.length; _t5++) {
        if (_Nx2 == this._gC[_t5]) {
            this._gC.splice(_t5,
                1);
            this._Gu--;
            this.length = this._gC.length;
            return true
        }
    }
    return false
};
_eQ2.prototype._NA = function () {
    this._gC = [];
    this.length = this._Gu = 0
};
_eQ2.prototype._RB = function (_za1) {
    return this._gC[_za1]
};
_eQ2.prototype._T11 = function (_Nx2) {
    for (var _t5 = 0; _t5 < this._gC.length; _t5++) {
        if (_Nx2 == this._gC[_t5]) {
            return _t5
        }
    }
    return -1
};
_eQ2.prototype._KB = function (_LB) {
    this._gC = _LB._gC.slice();
    this.length = _LB.length;
    this._Gu = _LB._Gu;
    this._fQ2 = _LB._fQ2
};
var _hQ2 = 0, _iQ2 = 1, _jQ2 = 2, _3f2 = 3, _Ye2 = 4, _kQ2 = 5, _Qe2 = 6, _lQ2 = 7, _Te2 = 8, __e2 = 9,
    _Ne2 = 10, _mQ2 = 11, _nQ2 = 12, _5f2 = 13, _oQ2 = 14, _pQ2 = 0, _qQ2 = 1, _rQ2 = 2, _sQ2 = 3, _tQ2 = 4, _uQ2 = 5,
    _vQ2 = 0, _wQ2 = 1, _xQ2 = 2, _yQ2 = 0, _zQ2 = 1, _AQ2 = 2, _BQ2 = 3;

function _CQ2() {
    this._xS = _DQ2;
    this._NA = _DQ2;
    this._xS()
}

function _DQ2() {
    this.__type = "[ParticleType]";
    this._EQ2 = true;
    this._FQ2 = -1;
    this._GQ2 = true;
    this._HQ2 = false;
    this._IQ2 = false;
    this._gl1 = _hQ2;
    this._JQ2 = 1.0;
    this._KQ2 = 1.0;
    this._LQ2 = 0.0;
    this._MQ2 = 0.0;
    this._p_ = 1.0;
    this._q_ = 1.0;
    this._NQ2 = 100;
    this._OQ2 = 100;
    this._PQ2 = 0;
    this._QQ2 = 0;
    this._RQ2 = 0;
    this._SQ2 = 0;
    this._TQ2 = 0.0;
    this._UQ2 = 0.0;
    this._VQ2 = 0.0;
    this._WQ2 = 0.0;
    this._XQ2 = 0.0;
    this._YQ2 = 0.0;
    this._ZQ2 = 0.0;
    this.__Q2 = 0.0;
    this._0R2 = 0.0;
    this._1R2 = 0.0;
    this._2R2 = 0.0;
    this._3R2 = 0.0;
    this._4R2 = 0.0;
    this._5R2 = 0.0;
    this._6R2 = 270.0;
    this._7R2 = _pQ2;
    this._8R2 = [];
    this._8R2[0] = _rr2;
    this._8R2[1] = _rr2;
    this._8R2[2] = _rr2;
    this._9R2 = 1.0;
    this._aR2 = 1.0;
    this._bR2 = 1.0;
    this._cR2 = false
}

function _dR2() {
    this._NA = _eR2;
    this._xS = _eR2;
    this._xS()
}

function _eR2() {
    this._EQ2 = true;
    this._fR2 = 0;
    this._gR2 = 0;
    this._QG2 = 0.0;
    this._RG2 = 0.0;
    this._SG2 = 0.0;
    this._TG2 = 0.0;
    this._gl1 = _yQ2;
    this._hR2 = _vQ2
}

function _iR2() {
    this._jR2 = false;
    this._gR2 = 0;
    this._kR2 = 0;
    this._lR2 = 0;
    this.x = 0;
    this.y = 0;
    this._Tb = 0;
    this._u41 = 0;
    this._pD2 = 0;
    this.color = 0xffffff;
    this.alpha = 1.0;
    this._l5 = 0;
    this._mR2 = 0;
    this._nR2 = 0
}

function _oR2() {
    this._NA = _pR2;
    this._xS = _pR2;
    this._xS()
}

function _pR2() {
    this._EQ2 = false;
    this._qR2 = [];
    this._rR2 = [];
    this._sR2 = true;
    this._1c = 0.0;
    this._tR2 = 0.0;
    this._uR2 = 0.0;
    this._vR2 = true;
    this._wR2 = true;
    this._xR2 = -1;
    this._yR2 = -1;
    this._zR2 = false
}

function _Ve2(_Rx) {
    var _Kt = _i31();
    return _Kt * _Rx
}

function _AR2(_BR2,
              _CR2, _DR2) {
    var _wE = _CR2 - _BR2;
    if (_wE <= 0) return _BR2;
    var _St = 0.0;
    var _mT = 0.0;
    switch (_DR2) {
        case _vQ2:
            _mT = _BR2 + _Ve2(1) * _wE;
            break;
        case _wQ2: {
            do {
                _St = (_Ve2(1) - 0.5) * 6.0
            } while ((exp(-(_St * _St) * 0.5) <= _Ve2(1)));
            _mT = _BR2 + ((_St + 3.0) * (1.0 / 6.0)) * _wE
        }
            break;
        case _xQ2: {
            do {
                _St = (_Ve2(1) - 0.5) * 6.0
            } while (!(exp(-(_St * _St) * 0.5) > _Ve2(1)));
            if (_St < 0.0) _St += 6.0;
            _mT = _BR2 + (_St * (1.0 / 6.0)) * _wE
        }
            break;
        default :
            _mT = _BR2 + _Ve2(1) * _wE
    }
    return _mT
}

function _ER2(_IB, _Rx) {
    var _u41;
    if (_IB == 0) {
        if (_Rx > 0) {
            _u41 = 270
        } else if (_Rx < 0) {
            _u41 = 90
        } else {
            _u41 = 0
        }
    } else {
        var _xU = 180.0 * (Math.atan2(_Rx, _IB)) / Math.PI;
        if (_xU <= 0) {
            _u41 = -_xU
        } else {
            _u41 = 360.0 - _xU
        }
    }
    return _u41 - 360.0 * Math.floor(_u41 / 360.0)
}

function _FR2(_831, _GR2) {
    return _GR2 * Math.cos(_831 * Math.PI / 180.0)
}

function _HR2(_831, _GR2) {
    return -_GR2 * Math.sin(_831 * Math.PI / 180.0)
}

function _IR2(_JR2) {
    _KR2 = _Dr2[_JR2._gR2];
    {
        if (_JR2._kR2 <= 0 || _JR2._lR2 <= 0) {
            switch (_KR2._7R2) {
                case _pQ2:
                    _JR2.color = _KR2._8R2[0];
                    break;
                case _qQ2:
                    _JR2.color = _KR2._8R2[0];
                    break;
                case _rQ2:
                    _JR2.color = _KR2._8R2[0];
                    break;
                case _sQ2: {
                    var _Kt = ~~(_AR2(_KR2._8R2[0], _KR2._8R2[1],
                        _vQ2));
                    var _gv = ~~(_AR2(_KR2._8R2[2], _KR2._8R2[3], _vQ2));
                    var _Nt = ~~(_AR2(_KR2._8R2[4], _KR2._8R2[5], _vQ2));
                    _JR2.color = (_Kt << 16) + (_gv << 8) + _Nt
                }
                    break;
                case _tQ2: {
                    var _w5 = ~~(_AR2(_KR2._8R2[0], _KR2._8R2[1], _vQ2));
                    var _ZN = ~~(_AR2(_KR2._8R2[2], _KR2._8R2[3], _vQ2));
                    var _uv = ~~(_AR2(_KR2._8R2[4], _KR2._8R2[5], _vQ2));
                    _JR2.color = 0xffffff
                }
                    break;
                case _uQ2:
                    _JR2.color = _Px(_1R(_KR2._8R2[0], _KR2._8R2[1], _Ve2(1)));
                    break
            }
        } else {
            switch (_KR2._7R2) {
                case _qQ2: {
                    var _rz = _JR2._kR2 / _JR2._lR2;
                    if (_rz > 1) _rz = 1;
                    _JR2.color = _1R((_KR2._8R2[0]), (_KR2._8R2[1]),
                        _rz)
                }
                    break;
                case _rQ2: {
                    var _rz = 2.0 * _JR2._kR2 / _JR2._lR2;
                    if (_rz > 2) _rz = 2;
                    if (_rz < 1) {
                        _JR2.color = _1R(_KR2._8R2[0], _KR2._8R2[1], _rz)
                    } else {
                        _JR2.color = _1R(_KR2._8R2[1], _KR2._8R2[2], _rz - 1)
                    }
                }
                    break
            }
        }
    }
}

function _Bz1(_Ps, _Qs, _LR2) {
    var _mT = new _iR2;
    _MR2 = _Dr2[_LR2];
    if (_MR2 == null || _MR2 == undefined) return null;
    _mT._jR2 = true;
    _mT._gR2 = _LR2;
    _mT.x = _Ps;
    _mT.y = _Qs;
    _mT._Tb = _AR2(_MR2._TQ2, _MR2._UQ2, 0);
    _mT._u41 = _AR2(_MR2._XQ2, _MR2._YQ2, 0);
    _mT._pD2 = _AR2(_MR2._0R2, _MR2._1R2, 0);
    _mT._lR2 = _AR2(_MR2._NQ2, _MR2._OQ2, 0);
    _mT._kR2 = 0;
    _mT.color = 0xffffff;
    _IR2(_mT);
    _mT.alpha = _MR2._9R2;
    _mT._l5 = _AR2(_MR2._JQ2, _MR2._KQ2, 0);
    _mT._cR2 = _MR2._cR2;
    if (_MR2._IQ2) {
        _mT._mR2 = _Ve2(10000)
    } else {
        _mT._mR2 = 0
    }
    _mT._nR2 = _Ve2(100000);
    return _mT
}

function _dD() {
    var _tE = _Dr2.length;
    _Dr2[_tE] = new _CQ2();
    return _tE
}

function _N51(_Os) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return false;
    _Dr2[_Os] = null;
    return true
}

function _R51(_Os) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return false;
    _Dr2[_Os]._NA();
    return true
}

function _P51(_Os) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return false;
    return true
}

function _T51(_Os, _OR2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._gl1 = _OR2;
    _NR2._FQ2 = -1
}

function _V51(_Os, _Pd1, _PR2, _QR2, _RR2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._FQ2 = _Pd1;
    _NR2._GQ2 = _PR2;
    _NR2._HQ2 = _QR2;
    _NR2._IQ2 = _RR2
}

function _X51(_Os, _SR2, _TR2, _UR2, _VR2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._JQ2 = _SR2;
    _NR2._KQ2 = _TR2;
    _NR2._LQ2 = _UR2;
    _NR2._MQ2 = _VR2
}

function _Z51(_Os, _GL, _HL) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._p_ = _GL;
    _NR2._q_ = _HL
}

function _p61(_Os, _WR2, _XR2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._NQ2 = _WR2;
    _NR2._OQ2 = _XR2
}

function _r61(_Os, _YR2, _ZR2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._QQ2 = _YR2;
    _NR2._PQ2 = _ZR2
}

function _t61(_Os, __R2, _0S2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._SQ2 = __R2;
    _NR2._RQ2 = _0S2
}

function _x61(_Os, _1S2, _2S2, _3S2, _4S2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._TQ2 = _1S2;
    _NR2._UQ2 = _2S2;
    _NR2._VQ2 = _3S2;
    _NR2._WQ2 = _4S2
}

function _z61(_Os, _5S2, _6S2, _7S2, _8S2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._XQ2 = _5S2;
    _NR2._YQ2 = _6S2;
    _NR2._ZQ2 = _7S2;
    _NR2.__Q2 = _8S2
}

function _v61(_Os, _9S2, _aS2, _bS2, _cS2, _dS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._0R2 = _9S2;
    _NR2._1R2 = _aS2;
    _NR2._2R2 = _bS2;
    _NR2._3R2 = _cS2;
    _NR2._4R2 = _dS2
}

function _B61(_Os, _eS2, _fS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._5R2 = _eS2;
    _NR2._6R2 = _fS2
}

function _e61(_Os, _gS2, _hS2, _iS2, _jS2, _kS2, _lS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._7R2 = _sQ2;
    _NR2._8R2[0] = _gS2;
    _NR2._8R2[1] = _hS2;
    _NR2._8R2[2] = _iS2;
    _NR2._8R2[3] = _jS2;
    _NR2._8R2[4] = _kS2;
    _NR2._8R2[5] = _lS2
}

function _fD(_Os, _TQ, _UQ) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._7R2 = _uQ2;
    _NR2._8R2[0] = _Px(_TQ);
    _NR2._8R2[1] = _Px(_UQ)
}

function _h61(_Os, _mS2, _nS2, _oS2, _pS2, _qS2, _rS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._7R2 = _tQ2;
    _NR2._8R2[0] = _mS2;
    _NR2._8R2[1] = _nS2;
    _NR2._8R2[2] = _oS2;
    _NR2._8R2[3] = _pS2;
    _NR2._8R2[4] = _qS2;
    _NR2._8R2[5] = _rS2
}

function _261(_Os, _sS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._7R2 = _pQ2;
    _NR2._8R2[0] = _Px(_sS2)
}

function _gD(_Os, _sS2, _tS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._7R2 = _qQ2;
    _NR2._8R2[0] = _Px(_sS2);
    _NR2._8R2[1] = _Px(_tS2)
}

function _761(_Os, _sS2, _uS2, _tS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._7R2 = (_uu === null) ? _pQ2 : _rQ2;
    _NR2._8R2[0] = _Px(_sS2);
    _NR2._8R2[1] = _Px(_uS2);
    _NR2._8R2[2] = _Px(_tS2)
}

function _k61(_Os,
              _vS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._9R2 = _vS2;
    _NR2._aR2 = _vS2;
    _NR2._bR2 = _vS2
}

function _hD(_Os, _vS2, _wS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._9R2 = _vS2;
    _NR2._aR2 = (_vS2 + _wS2) / 2.0;
    _NR2._bR2 = _wS2
}

function _n61(_Os, _vS2, _xS2, _wS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._9R2 = _vS2;
    _NR2._aR2 = _xS2;
    _NR2._bR2 = _wS2;
}

function _061(_Os, _yS2) {
    var _NR2 = _Dr2[_Os];
    if (_NR2 == null || _NR2 == undefined) return;
    _NR2._cR2 = _yS2
}

function _D61(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return -1;
    var _tE = _zS2._rR2.length;
    _zS2._rR2[_tE] = new _dR2();
    return _tE
}

function _F61(_Me2, _Os) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return false;
    var _AS2 = _zS2._rR2[_Os];
    if (_AS2 == null || _AS2 == undefined) return false;
    _zS2._rR2[_Os] = null;
    return true
}

function _H61(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return false;
    _zS2._rR2 = [];
    return true
}

function _J61(_Me2, _Os) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return false;
    var _AS2 = _zS2._rR2[_Os];
    if (_AS2 == null || _AS2 == undefined) return false;
    return true
}

function _L61(_Me2, _Os) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return false;
    var _AS2 = _zS2._rR2[_Os];
    if (_AS2 == null || _AS2 == undefined) return false;
    _AS2._xS()
}

function _N61(_Me2, _Os, _BS2, _CS2, _DS2, _ES2, _OR2, _FS2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    var _AS2 = _zS2._rR2[_Os];
    if (_AS2 == null || _AS2 == undefined) return;
    _AS2._QG2 = _BS2;
    _AS2._RG2 = _CS2;
    _AS2._SG2 = _DS2;
    _AS2._TG2 = _ES2;
    _AS2._gl1 = _OR2;
    _AS2._hR2 = _FS2
}

function _P61(_Me2, _Os, _GS2, _HS2) {
    if (_HS2 < 0) {
        var _i31 = _Ve2(-_HS2) | 0;
        if (_i31 == 0) {
            _HS2 = 1
        } else {
            return
        }
    }
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    var _AS2 = _zS2._rR2[_Os];
    if (_AS2 == null || _AS2 == undefined) return;
    for (var _t5 = 0; _t5 <= _HS2 - 1; _t5++) {
        var _St, _Ut;
        var _IS2 = false;
        while (_IS2 == false) {
            _St = _AR2(0.0, 1.0, _AS2._hR2);
            _Ut = _AR2(0.0, 1.0, _AS2._hR2);
            if ((_AS2._hR2 == _xQ2) && (_AS2._gl1 != _BQ2)) {
                if (_Ve2() < 0.5) {
                    _St = _AR2(0.0, 1.0, 0)
                } else {
                    _Ut = _AR2(0.0, 1.0, 0)
                }
            }
            switch (_AS2._gl1) {
                case _yQ2:
                    _IS2 = true;
                    break;
                case _zQ2: {
                    var _9w = _St - 0.5;
                    var _aw = _Ut - 0.5;
                    if ((_9w * _9w + _aw * _aw) <= 0.25) _IS2 = true;
                    break
                }
                case _AQ2:
                    if ((Math.abs(_St - 0.5) + Math.abs(_Ut - 0.5)) <= 0.5) _IS2 = true;
                    break;
                case _BQ2:
                    _IS2 = true;
                    break;
                default :
                    _IS2 = true;
                    break
            }
        }
        if (_AS2._gl1 == _BQ2) {
            _D51(_Me2, _AS2._QG2 + (_AS2._RG2 - _AS2._QG2) * _St, _AS2._SG2 + (_AS2._TG2 - _AS2._SG2) * _St, _GS2, 1)
        } else {
            _D51(_Me2, _AS2._QG2 + (_AS2._RG2 - _AS2._QG2) * _St, _AS2._SG2 + (_AS2._TG2 - _AS2._SG2) * _Ut, _GS2, 1)
        }
    }
}

function _R61(_Me2, _Os, _GS2, _HS2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    var _AS2 = _zS2._rR2[_Os];
    if (_AS2 == null || _AS2 == undefined) return;
    _AS2._fR2 = _HS2;
    _AS2._gR2 = _GS2
}

function _D51(_Me2, _Ps, _Qs, _LR2, _HS2) {
    _HS2 = ~~_HS2;
    _LR2 = ~~_LR2;
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    var _MR2 = _Dr2[_LR2];
    if (_MR2 == null || _MR2 == undefined) return false;
    for (var _t5 = 0; _t5 < _HS2; _t5++) {
        var index = _zS2._qR2.length;
        _zS2._qR2[index] = _Bz1(_Ps, _Qs, _LR2)
    }
}

function _F51(_Me2, _Ps, _Qs, _LR2, _2y, _HS2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    var _MR2 = _Dr2[_LR2];
    if (_MR2 == null || _MR2 == undefined) return false;
    for (var _t5 = 1; _t5 <= _HS2; _t5++) {
        var index = _zS2._qR2.length;
        _zS2._qR2[index] = _Bz1(_Ps, _Qs, _LR2);
        _zS2._qR2[index].color = _Px(_2y)
    }
}

function _I51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return false;
    _zS2._qR2 = [];
    return true
}

function _K51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return 0;
    return _zS2._qR2.length
}

function _cD(_K11, _JS2) {
    if (_K11 == undefined) _K11 = -1;
    if (_JS2 == undefined) _JS2 = true;
    if (_ls) {
        var _KS2 = null;
        if (_K11 == -1) {
            _KS2 = new _901();
            _z11._g11(_js, 0, _KS2, true, true)
        } else {
            var _Z01 = _z11._Y01();
            if (_Z01 != null) {
                _S01 = _z11._E11(_Z01, _K11);
                if (_S01 != null) {
                    _KS2 = new _901();
                    if (_Z01 == _js) {
                        var _RL = _z11._d11(_js, _S01, _KS2, true);
                        if (_RL == -1) {
                            _z11._U01(_js, _KS2._aV, true);
                            _KS2 = _LS2
                        }
                    } else {
                        _z11._g11(_js, 0, _KS2, true, true)
                    }
                }
            }
        }
        if (_KS2 == null) return -1
    }
    var _S01 = null;
    var index = _Er2.length;
    _Er2[index] = new _oR2();
    if (_ls) {
        _Er2[index]._xR2 = -1;
        _Er2[index]._yR2 = -1
    }
    _Er2[index]._NA();
    if (_ls) {
        _KS2._a01 = index;
        _Er2[index]._xR2 = _KS2._aV;
        _Er2[index]._zR2 = !_JS2;
        if (_K11 != -1) {
            _S01 = _z11._E11(_Z01, _K11);
            _Er2[index]._yR2 = _K11;
            _Er2[index]._1c = _S01._1c
        }
    }
    return index
}

function _l51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return false;
    return true
}

function _j51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    _n51(_Me2);
    _Er2[_Me2] = null;
    return true
}

function _n51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    if (_ls) {
        if (_Er2[_Me2]._xR2 !== undefined) {
            _z11._U01(_js, _Er2[_Me2]._xR2, true)
        }
        _Er2[_Me2]._xR2 = -1;
        _Er2[_Me2]._yR2 = -1;
        _Er2[_Me2]._zR2 = false
    }
    _zS2._NA()
}

function _p51(_Me2, _MS2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    _zS2._sR2 = _MS2
}

function _r51(_Me2, _w01) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    _zS2._1c = _w01;
    if (_ls) {
        _z11._U01(_js, _zS2._xR2, true);
        var _KS2 = new _901();
        _KS2._a01 = _Me2;
        _Er2[_Me2]._yR2 = -1;
        _Er2[_Me2]._xR2 = _z11._g11(_js, _Er2[_Me2]._1c, _KS2, true, true)
    }
}

function _t51(_Me2, _Ps, _Qs) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    _zS2._tR2 = _Ps;
    _zS2._uR2 = _Qs
}

function _v51(_Me2, _NS2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    _zS2._vR2 = _NS2
}

function _x51(_Me2, _NS2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    _zS2._wR2 = _NS2
}

function _OS2(_Me2) {
    var _t5 = 0;
    var _Gt = 0;
    var _tE = 0;
    var _zS2 = _Er2[_Me2];
    var _PS2 = _zS2._qR2;
    _t5 = 0;
    while (_t5 < _PS2.length) {
        var _QS2 = _PS2[_t5];
        var _MR2 = _Dr2[_QS2._gR2];
        _QS2._kR2++;
        if (_QS2._kR2 >= _QS2._lR2) {
            _Gt = _MR2._SQ2;
            if (_Gt < 0) {
                if (_Ve2(-_Gt) == 0) _Gt = 1
            }
            if (_Gt > 0) {
                _D51(_Me2, _QS2.x, _QS2.y, _MR2._RQ2, _Gt)
            }
            _PS2.splice(_t5, 1)
        } else {
            _Gt = _MR2._QQ2;
            if (_Gt < 0) {
                if (_Ve2(-_Gt) == 0) _Gt = 1
            }
            if (_Gt > 0) {
                _D51(_Me2, _QS2.x, _QS2.y, _MR2._PQ2, _Gt)
            }
            _t5++
        }
    }
}

function _RS2(_Me2) {
    var _t5 = 0;
    var _Rt = 0;
    var _2c = 0.0;
    var _3c = 0.0;
    var _xR = 0.0;
    var _uw = 0.0;
    var _SS2 = 0.0;
    var _KD1 = 0.0;
    var _TS2 = 0.0;
    var _US2 = 0.0;
    var _VS2 = 0.0;
    var _h62 = 0.0;
    var _WS2 = 0.0;
    var _zS2 = _Er2[_Me2];
    var _PS2 = _zS2._qR2;
    for (_t5 = 0; _t5 < _PS2.length; _t5++) {
        var _QS2 = _PS2[_t5];
        var _MR2 = _Dr2[_QS2._gR2];
        _QS2._Tb = _QS2._Tb + _MR2._VQ2;
        if (_QS2._Tb < 0) _QS2._Tb = 0;
        _QS2._u41 = _QS2._u41 + _MR2._ZQ2;
        _QS2._pD2 = _QS2._pD2 + _MR2._2R2;
        _US2 = 0;
        _VS2 = 0;
        if ((_MR2._5R2 != 0) || (_zS2._n21 > 0)) {
            _2c = _FR2(_QS2._u41, _QS2._Tb);
            _3c = _HR2(_QS2._u41, _QS2._Tb);
            if (_MR2._5R2 != 0) {
                _xR = _FR2(_MR2._6R2, _MR2._5R2);
                _uw = _HR2(_MR2._6R2, _MR2._5R2);
                _2c = _2c + _xR;
                _3c = _3c + _uw
            }
            _QS2._u41 = _ER2(_2c, _3c);
            _QS2._Tb = Math.sqrt(_2c * _2c + _3c * _3c)
        }
        _h62 = ((_QS2._kR2 + 3 * _QS2._nR2) % 24) / 6.0;
        if (_h62 > 2.0) {
            _h62 = 4.0 - _h62
        }
        _h62 = _h62 - 1.0;
        _WS2 = ((_QS2._kR2 + 4 * _QS2._nR2) % 20) / 5.0;
        if (_WS2 > 2.0) {
            _WS2 = 4.0 - _WS2
        }
        _WS2 = _WS2 - 1.0;
        _2c = _FR2(_QS2._u41 + _h62 * _MR2.__Q2, _QS2._Tb + _WS2 * _MR2._WQ2);
        _3c = _HR2(_QS2._u41 + _h62 * _MR2.__Q2, _QS2._Tb + _WS2 * _MR2._WQ2);
        _QS2.x = _QS2.x + _2c + _US2;
        _QS2.y = _QS2.y + _3c + _VS2
    }
}

function _XS2(_Me2) {
    var _zS2 = _Er2[_Me2];
    var _PS2 = _zS2._qR2;
    for (var _t5 = 0; _t5 < _PS2.length; _t5++) {
        var _QS2 = _PS2[_t5];
        var _MR2 = _Dr2[_QS2._gR2];
        _QS2._l5 = _QS2._l5 + _MR2._LQ2;
        if (_QS2._l5 < 0) {
            _QS2._l5 = 0
        }
        _IR2(_QS2);
        var _YS2;
        if (_QS2._lR2 > 0) {
            _YS2 = 2.0 * _QS2._kR2 / _QS2._lR2
        } else {
            _YS2 = 1
        }
        if (_YS2 < 1) {
            _QS2.alpha = _MR2._9R2 * (1.0 - _YS2) + _MR2._aR2 * _YS2;
        } else {
            _QS2.alpha = _MR2._aR2 * (2.0 - _YS2) + _MR2._bR2 * (_YS2 - 1)
        }
    }
}

function _z51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return 0;
    _OS2(_Me2);
    _RS2(_Me2);
    _XS2(_Me2);
    var _ZS2 = _zS2._rR2;
    if (_ZS2) {
        for (var _t5 = 0; _t5 < _ZS2.length; _t5++) {
            if (_ZS2[_t5] != null && _ZS2[_t5]._fR2 != 0) {
                _P61(_Me2, _t5, _ZS2[_t5]._gR2,
                    _ZS2[_t5]._fR2)
            }
        }
    }
}

function __S2() {
    for (var _t5 = 0; _t5 < _Er2.length; _t5++) {
        var _zS2 = _Er2[_t5];
        if (_zS2 != null) {
            if (_zS2._vR2) {
                _z51(_t5)
            }
        }
    }
}

function _0T2(_JR2, _W61, _X61) {
    var _kc1 = null;
    var _MV1 = null;
    if (_JR2._lR2 <= 0) return;
    var _MR2 = _Dr2[_JR2._gR2];
    _kc1 = _Cb1._RB(_MR2._FQ2);
    if (_kc1 == null) {
        var _gl1 = _MR2._gl1;
        if ((_gl1 >= 0) && (_gl1 < _oQ2)) {
            _MV1 = _Cr2[_gl1];
            if (_MV1 == null) {
                return
            }
        } else {
            return
        }
    }
    var _tt;
    if (_MV1 != null) {
    } else {
        if (_kc1._cN <= 0) return;
        if (!_MR2._GQ2) {
            _tt = _JR2._mR2
        } else if (_MR2._HQ2) {
            _tt = _JR2._mR2 + (_kc1._Gt * _JR2._kR2 / _JR2._lR2)
        }
        else {
            _tt = _JR2._mR2 + _JR2._kR2
        }
    }
    var _Kt = ((_JR2._kR2 + 2 * _JR2._nR2) % 16) / 4.0;
    if (_Kt > 2.0) _Kt = 4.0 - _Kt;
    _Kt = _Kt - 1.0;
    var _J62 = _JR2._pD2;
    if (_MR2._4R2) _J62 = _J62 + _JR2._u41;
    _J62 = _J62 + _Kt * _MR2._3R2;
    _Kt = ((_JR2._kR2 + _JR2._nR2) % 16) / 4.0;
    if (_Kt > 2.0) _Kt = 4.0 - _Kt;
    _Kt = _Kt - 1.0;
    _YU(_JR2._cR2 ? 1 : 0);
    var _ZN = _JR2._l5 + _Kt * _MR2._MQ2;
    var _u5 = _JR2.color;
    if (_MV1 != null) {
        var _p_, _q_, _pD2;
        var _WC2 = _MR2._p_ * _ZN;
        var _XC2 = _MR2._q_ * _ZN;
        var _1T2 = _J62;
        var _2T2 = ~~(_JR2.x + _W61);
        var _3T2 = ~~(_JR2.y + _X61);
        if (_WC2 == 1 && _XC2 == 1 && _1T2 == 0 && _JR2.color == 0xffffff) {
            _BD2(_MV1, _2T2, _3T2, _JR2.alpha)
        } else {
            _RD2(_MV1, 0, 0, _2T2, _3T2, _WC2, _XC2, _1T2 * 0.017453293, _u5, _u5, _u5, _u5, _JR2.alpha)
        }
    } else {
        _kc1._7v(_tt, _JR2.x + _W61, _JR2.y + _X61, _Dr2[_JR2._gR2]._p_ * _ZN, _Dr2[_JR2._gR2]._q_ * _ZN, _J62, _u5, _JR2.alpha)
    }
}

function _B51(_Me2) {
    var _zS2 = _Er2[_Me2];
    if (_zS2 == null || _zS2 == undefined) return;
    var src, _wG;
    if (_uu != null) {
        src = _4T2;
        _wG = _5T2
    }
    var _PS2 = _zS2._qR2;
    if (_zS2._sR2) {
        for (var _t5 = 0; _t5 < _zS2._qR2.length; _t5++) {
            _0T2(_PS2[_t5], _zS2._tR2, _zS2._uR2)
        }
    } else {
        for (var _t5 = _zS2._qR2.length - 1; _t5 >= 0;
             _t5--) {
            _0T2(_PS2[_t5], _zS2._tR2, _zS2._uR2)
        }
    }
    if (_uu != null) {
        __U(src, _wG)
    } else {
        _YU(0)
    }
}

function _6T2(_7T2) {
    for (var _t5 = 0; _t5 < _Er2.length; _t5++) {
        var _zS2 = _Er2[_t5];
        if (_zS2 != null) {
            if (_zS2._wR2) {
                if (Math.abs(_zS2._1c - _7T2) < 0.01) _B51(_t5)
            }
        }
    }
}

function _8T2() {
    if (_ls) {
        for (var _t5 = 0; _t5 < _Er2.length; _t5++) {
            var _zS2 = _Er2[_t5];
            if (_zS2 != null) {
                if (_zS2._xR2 == -1) {
                    var _KS2 = new _901();
                    _KS2._a01 = _t5;
                    if (_zS2._yR2 != -1) {
                        var _S01 = _z11._E11(_js, _zS2._yR2);
                        if (_S01 != null) {
                            _zS2._xR2 = _z11._d11(_js, _S01, _KS2, true)
                        }
                    }
                    if (_zS2._xR2 == -1) {
                        _zS2._xR2 = _z11._g11(_js,
                            _zS2._1c, _KS2, true, true)
                    }
                }
            }
        }
    }
};

function _9T2() {
    if (_ls) {
        for (var _t5 = 0; _t5 < _Er2.length; _t5++) {
            var _zS2 = _Er2[_t5];
            if (_zS2 != null) {
                if (_zS2._xR2 != -1) {
                    _z11._U01(_js, _Er2[_t5]._xR2, true);
                    _zS2._xR2 = -1
                }
                if (_zS2._zR2 == true) {
                    _j51(_t5)
                }
            }
        }
    }
}

function _aT2(_Me2) {
    if (true == _l51(_Me2)) {
        var _zS2 = _Er2[_t5];
        if (_zS2 != null) {
            if (_zS2._wR2) {
                _B51(_Me2)
            }
        }
    }
};

function _bT2() {
    var _mT = -1000000000;
    for (var _t5 = 0; _t5 < _Er2.length; _t5++) {
        var _zS2 = _Er2[_t5];
        if (_zS2 != null && _zS2._qR2.length > 0) {
            if (_zS2._wR2) {
                if (_zS2._1c > _mT) _mT = _zS2._1c
            }
        }
    }
    return _mT
}

function _cT2(_7T2) {
    var _mT = -1000000000;
    for (var _t5 = 0; _t5 < _Er2.length; _t5++) {
        var _zS2 = _Er2[_t5];
        if (_zS2 != null && _zS2._qR2.length > 0) {
            if (_zS2._wR2) {
                if ((_zS2._1c > _mT) && (_zS2._1c < _7T2)) _mT = _zS2._1c
            }
        }
    }
    return _mT
}

var _dT2 = 0, _eT2 = 1;
var _fT2 = 0;

function _gT2(_Ps, _Qs, _V31) {
    this.x = _Ps;
    this.y = _Qs;
    this._Tb = _V31;
    this._It = 0
}

function _hT2() {
    this.__type = "[Path]";
    this.name = "";
    this.id = _fT2++;
    this._G3 = 0;
    this._JE = 1;
    this._iT2 = 4;
    this._NA()
}

_hT2.prototype._NA = function () {
    this._Yo1 = [];
    this._jT2 = [];
    this._Gu = 0;
    this._kT2 = 0;
    this.length = 0
}
;_hT2.prototype._lT2 = function () {
    var _t5 = 0;
    this.length = 0;
    if (this._kT2 <= 0) return;
    this._jT2[0]._It = 0;
    for (_t5 = 1; _t5 < this._kT2; _t5++) {
        this._jT2[_t5]._It = this.length = this.length + sqrt(_vK(this._jT2[_t5].x - this._jT2[_t5 - 1].x) + _vK(this._jT2[_t5].y - this._jT2[_t5 - 1].y))
    }
};
_hT2.prototype._mT2 = function (_EF2, _FF2, _nT2) {
    this._kT2++;
    var _oT2 = new _gT2();
    this._jT2[this._kT2 - 1] = _oT2;
    _oT2.x = _EF2;
    _oT2.y = _FF2;
    _oT2._Tb = _nT2
};
_hT2.prototype._pT2 = function () {
    this._kT2 = 0;
    if (this._Gu <= 0) return;
    for (var _t5 = 0; _t5 < this._Gu; _t5++) {
        this._mT2(this._Yo1[_t5].x, this._Yo1[_t5].y, this._Yo1[_t5]._Tb)
    }
    if (this._JE) {
        this._mT2(this._Yo1[0].x, this._Yo1[0].y, this._Yo1[0]._Tb)
    }
};
_hT2.prototype._qT2 = function (_w01, _1u, _2u, _LL, _ot, _pt, _ML, _aU, _bU, _rT2) {
    if (_w01 == 0) return;
    var _7u = (_1u + _ot + _ot + _aU) / 4.0;
    var _8u = (_2u + _pt + _pt + _bU) / 4.0;
    var _dL = (_LL + _ML + _ML + _rT2) / 4.0;
    if (_vK(_ot - _1u) + _vK(_pt - _2u) > 16.0) {
        this._qT2(_w01 - 1, _1u, _2u, _LL, (_ot + _1u) / 2.0, (_pt + _2u) / 2.0, (_ML + _LL) / 2.0, _7u, _8u, _dL)
    }
    this._mT2(_7u, _8u, _dL);
    if (_vK(_ot - _aU) + _vK(_pt - _bU) > 16.0) {
        this._qT2(_w01 - 1,
            _7u, _8u, _dL, (_aU + _ot) / 2.0, (_bU + _pt) / 2.0, (_rT2 + _ML) / 2.0, _aU, _bU, _rT2)
    }
};
_hT2.prototype._sT2 = function () {
    var _t5 = 0;
    var _tt = 0;
    this._kT2 = 0;
    if (this._Gu <= 0) return;
    if (!this._JE) {
        this._mT2(this._Yo1[0].x, this._Yo1[0].y, this._Yo1[0]._Tb)
    }
    if (this._JE) {
        _tt = this._Gu - 1
    } else {
        _tt = this._Gu - 3
    }
    for (_t5 = 0; _t5 <= _tt; _t5++) {
        var _ny1 = this._Yo1[_t5 % this._Gu];
        var _oy1 = this._Yo1[(_t5 + 1) % this._Gu];
        var _tT2 = this._Yo1[(_t5 + 2) % this._Gu];
        this._qT2(this._iT2, (_ny1.x + _oy1.x) / 2.0, (_ny1.y + _oy1.y) / 2.0, (_ny1._Tb + _oy1._Tb) / 2.0, _oy1.x, _oy1.y,
            _oy1._Tb, (_oy1.x + _tT2.x) / 2.0, (_oy1.y + _tT2.y) / 2.0, (_oy1._Tb + _tT2._Tb) / 2.0)
    }
    if (!this._JE) {
        this._mT2(this._Yo1[this._Gu - 1].x, this._Yo1[this._Gu - 1].y, this._Yo1[this._Gu - 1]._Tb)
    } else {
        this._mT2(this._jT2[0].x, this._jT2[0].y, this._jT2[0]._Tb)
    }
};
_hT2.prototype._uT2 = function () {
    if (this._G3 == 1) {
        this._sT2()
    } else {
        this._pT2()
    }
    this._lT2()
};

function _ev2(_fy2) {
    var _Z61 = new _hT2();
    if ((_fy2 != undefined) && (_fy2 != null)) {
        if (_fy2._iT2 != undefined) {
            _Z61._iT2 = _fy2._iT2
        }
        if (_fy2._JE != undefined) {
            _Z61._JE = _fy2._JE
        }
        if (_fy2._G3 != undefined) {
            _Z61._G3 = _fy2._G3
        }
        if (_fy2._F3 != undefined) {
            _Z61.name = _fy2._F3
        }
        if (_fy2._Yo1 != undefined) {
            _Z61._Gu = _fy2._Yo1.length
        }
        for (var _lT = 0; _lT < _fy2._Yo1.length; _lT++) {
            var _vT2 = _fy2._Yo1[_lT];
            var _wT2 = new _gT2(_vT2.x, _vT2.y, _vT2._Tb);
            _Z61._Yo1[_Z61._Yo1.length] = _wT2
        }
        _Z61._uT2()
    }
    return _Z61
}

var _xT2 = new _gT2(0, 0, 100);
_hT2.prototype._371 = function (_Os) {
    var _eC = 0;
    if (this._kT2 <= 0) {
        _xT2.x = 0;
        _xT2.y = 0;
        _xT2._Tb = 0;
        return _xT2
    }
    if ((this._kT2 == 1) || (this.length == 0) || (_Os <= 0)) {
        return this._jT2[0]
    }
    if (_Os >= 1) {
        return this._jT2[this._kT2 - 1];
    }
    var _It = this.length * _Os;
    _eC = 0;
    while ((_eC < this._kT2 - 2) && (_It >= this._jT2[_eC + 1]._It)) {
        _eC++
    }
    var _oH2 = this._jT2[_eC];
    _It = _It - _oH2._It;
    var _v5 = this._jT2[_eC + 1]._It - _oH2._It;
    if (_v5 != 0) {
        _eC++;
        _xT2.x = _oH2.x + _It * (this._jT2[_eC].x - _oH2.x) / _v5;
        _xT2.y = _oH2.y + _It * (this._jT2[_eC].y - _oH2.y) / _v5;
        _xT2._Tb = _oH2._Tb + _It * (this._jT2[_eC]._Tb - _oH2._Tb) / _v5;
        _oH2 = _xT2
    }
    return _oH2
};
_hT2.prototype._kH2 = function (_Os) {
    _lT = this._371(_Os);
    return _lT.x
};
_hT2.prototype._lH2 = function (_Os) {
    _lT = this._371(_Os);
    return _lT.y
};
_hT2.prototype._yT2 = function (_W61,
                                _X61) {
    for (var _t5 = 0; _t5 <= this._Gu - 1; _t5++) {
        this._Yo1[_t5].x += _W61;
        this._Yo1[_t5].y += _X61
    }
    this._uT2()
};
_hT2.prototype._zT2 = function () {
    var _QG2 = 100000000;
    var _RG2 = -100000000;
    var _SG2 = 100000000;
    var _TG2 = -100000000;
    for (var _t5 = 0; _t5 <= this._Gu - 1; _t5++) {
        if (this._Yo1[_t5].x < _QG2) _QG2 = this._Yo1[_t5].x;
        if (this._Yo1[_t5].x > _RG2) _RG2 = this._Yo1[_t5].x;
        if (this._Yo1[_t5].y < _SG2) _SG2 = this._Yo1[_t5].y;
        if (this._Yo1[_t5].y > _TG2) _TG2 = this._Yo1[_t5].y
    }
    return new _gT2((_QG2 + _RG2) / 2.0, (_SG2 + _TG2) / 2.0, 0)
};
_hT2.prototype._AT2 = function (_EF2,
                                _FF2, _nT2) {
    _vT2 = new _gT2(_EF2, _FF2, _nT2);
    if (!this._Yo1) this._Yo1 = [];
    this._Yo1[this._Yo1.length] = _vT2;
    this._Gu++;
    this._uT2()
};

function _2u2() {
    this._14 = [];
    _fT2 = 0
}

_2u2.prototype._3C = function (_BT2) {
    this._14[_BT2.id] = _BT2
};
_2u2.prototype._L11 = function (_BT2) {
    this._14[_BT2.id] = undefined
};

function _CT2(_w01) {
    this._1c = _w01;
    this._B5 = true;
    this._DT2 = new _0C()
}

_CT2.prototype._3C = function (_ET2) {
    this._DT2._3C(_ET2)
};
_CT2.prototype._L11 = function (_ET2) {
    this._DT2._E01(_ET2)
};
_CT2.prototype._7v = function (_MD2) {
    if (!this._B5) {
        return
    }
    var _gC = this._DT2._gC;
    for (var index = 0; index < _gC.length; index++) {
        var _FT2 = _gC[index];
        if (_FT2 != null) {
            var _pL1 = _FT2.x + (_FT2._p_ * _FT2._v5), _GT2 = _FT2.y + (_FT2._q_ * _FT2._w5);
            var _xt = (_FT2.x < _pL1) ? _FT2.x : _pL1, _zt = (_FT2.x > _pL1) ? _FT2.x : _pL1,
                _yt = (_FT2.y < _GT2) ? _FT2.y : _GT2, _At = (_FT2.y > _GT2) ? _FT2.y : _GT2;
            if ((_xt <= _MD2.right) && (_yt <= _MD2.bottom) && (_zt >= _MD2.left) && (_At >= _MD2.top)) {
                _FT2._7v()
            }
        }
    }
};
_CT2.prototype._l41 = function () {
    return this._DT2._gC
};

function _HT2() {
    this._IT2 = new _eQ2();
    this._JT2 = -1
}

_HT2.prototype._RB = function (_w01) {
    var _KT2;
    for (var index = 0; index < this._IT2._Gu; index++) {
        _KT2 = this._IT2._RB(index);
        if (_KT2._1c == _w01) return _KT2
    }
    return null
};
_HT2.prototype._L11 = function (_w01) {
    var _KT2 = this._RB(_w01);
    if (_KT2) {
        this._IT2._L11(_KT2)
    }
};
_HT2.prototype._3C = function (_ET2) {
    var _KT2;
    _KT2 = this._RB(_ET2._1c);
    if (!_KT2) {
        _KT2 = new _CT2(_ET2._1c);
        this._IT2._3C(_KT2)
    }
    _KT2._3C(_ET2)
};
_HT2.prototype._LT2 = function (_ET2) {
    _KT2 = this._RB(_ET2._1c);
    if (_KT2) {
        _KT2._L11(_ET2)
    }
};
_HT2.prototype._MT2 = function () {
    this._JT2 = this._IT2.length - 1;
    return this._IT2._RB(this._JT2)
}
;_HT2.prototype._7w1 = function () {
    this._JT2--;
    if (this._JT2 < 0) return null;
    return this._IT2._RB(this._JT2)
};

function _NT2() {
    this._zA1 = [];
    this.offset = 0;
    this._hA1 = _NT2.prototype._OT2;
    this._gA1 = _NT2.prototype._PT2
};_NT2.prototype.Length = function () {
    return (this._zA1.length - this.offset)
};
_NT2.prototype._QT2 = function () {
    return (this._zA1.length == 0)
};
_NT2.prototype._PT2 = function (_Ox2) {
    this._zA1.push(_Ox2)
};
_NT2.prototype._OT2 = function () {
    if (this._QT2()) return undefined;
    var _zC = this._zA1[this.offset];
    if ((++this.offset * 2) >= this._zA1.length) {
        this._zA1 = this._zA1.slice(this.offset);
        this.offset = 0
    }
    return _zC
};

function _8v2() {
    this.id = _6s2++;
    this._A01()
};_8v2.prototype._A01 = function () {
    this.__type = "[Room]";
    this._RT2 = "";
    this._ST2 = "";
    this._TT2 = 30;
    this._e21 = 1024;
    this._g21 = 768;
    this._UT2 = false;
    this._VT2 = false;
    this._WT2 = 0xc0c0c0;
    this._XT2 = true;
    this._YT2 = true;
    this._ZT2 = true;
    this.__T2 = [];
    for (var _Mt = 0; _Mt < _ar2; _Mt++) {
        this.__T2[_Mt] = null
    }
    this._YA = false;
    this._0U2 = null;
    this._tZ = new _eQ2();
    this._1U2 = new _0C();
    this._1U2._1C = true;
    this._3G2 = [];
    this._2U2 = 0;
    this._3U2 = [];
    this._4U2 = new _HT2();
    this.__A = [];
    this._5U2 = [];
    this._181 = null;
    this._C_ = "Room";
    this._F71 = null;
    this._W01 = new _eQ2()
};
_8v2.prototype._6U2 = function () {
    return this._YA
};
_8v2.prototype._DW = function () {
    return this._e21
};
_8v2.prototype._EW = function () {
    return this._g21
};
_8v2.prototype._ks = function () {
    return this._TT2
};
_8v2.prototype._l41 = function () {
    return this._tZ._gC
};
_8v2.prototype._7U2 = function (_qs) {
    this._e21 = _qs;
    _Eh._Fh = _qs
};
_8v2.prototype._8U2 = function (_qs) {
    this._g21 = _qs;
    _Eh._uB2 = _qs
};
_8v2.prototype._9U2 = function (_qs) {
    this._TT2 = _qs;
    _Eh._wB2 = _qs
};
_8v2.prototype._aU2 = function (_vs) {
    this._C_ = _vs
};
_8v2.prototype._bU2 = function (_cU2) {
    this._ST2 = _cU2;
    _Eh._vB2 = _cU2
};
_8v2.prototype._dU2 = function (_qs) {
    this._UT2 = _qs;
    _Eh._xB2 = _qs
};
_8v2.prototype._eU2 = function () {
    this._181 = {
        _F3: "room_empty_" + this.id,
        width: 640,
        height: 480,
        _Xb: [{}, {}, {}, {}, {}, {}, {}, {}],
        _Yb: [{}, {}, {}, {}, {}, {}, {}, {}],
        _Zb: [],
        __b: []
    };
    this._9v2(this._181)
};
_8v2.prototype._fU2 = function (_fy2) {
    if (_fy2 != null) {
        this._181.width = _fy2.width;
        this._181.height = _fy2.height;
        this._181._Ub = _fy2._Ub;
        this._181._Wb = _fy2._Wb;
        this._181._fc = _fy2._fc;
        this._181._mc = _fy2._mc;
        this._181._gU2 = _fy2._gU2;
        this._181._Tb = _fy2._Tb;
        this._181._JF2 = _fy2._JF2;
        for (var _t5 = 0; _t5 < _fy2._Xb.length; _t5++) {
            var _hU2 = _fy2._Xb[_t5];
            if (_hU2 != null) {
                this._181._Xb[_t5] = {
                    _B5: _hU2._B5,
                    index: _hU2.index,
                    _3c: _hU2._3c,
                    _2c: _hU2._2c,
                    _m_: _hU2._m_,
                    x: _hU2.x,
                    y: _hU2.y,
                    _n_: _hU2._n_,
                    _o_: _hU2._o_,
                    _2c: _hU2._2c,
                    _3c: _hU2._3c,
                    _r_: _hU2._r_,
                    alpha: _hU2.alpha,
                    _s_: _hU2._s_
                }
            }
        }
        for (var _t5 = 0; _t5 < _fy2._Yb.length; _t5++) {
            var _iU2 = _fy2._Yb[_t5];
            if (_iU2) {
                this._181._Yb[_t5] = {
                    _B5: _iU2._B5,
                    _kc: _iU2._kc,
                    _lc: _iU2._lc,
                    _gc: _iU2._gc,
                    _hc: _iU2._hc,
                    _oX: _iU2._oX,
                    _pX: _iU2._pX,
                    _ic: _iU2._ic,
                    _jc: _iU2._jc,
                    _UV: _iU2._UV,
                    _WV: _iU2._WV,
                    _2c: _iU2._2c,
                    _3c: _iU2._3c,
                    index: _iU2.index
                }
            }
        }
        this._181._Zb = new Array(_fy2._Zb.length);
        for (var _t5 = 0; _t5 < _fy2._Zb.length; _t5++) {
            var _jU2 = _fy2._Zb[_t5];
            if (_jU2) {
                this._181._Zb[_t5] = {
                    x: _jU2.x,
                    y: _jU2.y,
                    index: _jU2.index,
                    id: _jU2.id,
                    rotation: _jU2._6g,
                    scaleX: _jU2.scaleX,
                    scaleY: _jU2.scaleY,
                    _Ub: _jU2._PF2,
                    _kU2: _jU2._kU2
                }
            }
        }
        this._181.__b = new Array(_fy2.__b.length);
        for (var _t5 = 0;
             _t5 < _fy2.__b.length; _t5++) {
            var _lU2 = _fy2.__b[_t5];
            if (_lU2 != null) {
                this._181.__b[_t5] = {
                    x: _lU2.x,
                    y: _lU2.y,
                    index: _lU2.index,
                    _mU2: _lU2._mU2,
                    _nU2: _lU2._nU2,
                    _v5: _lU2._v5,
                    _w5: _lU2._w5,
                    _1c: _lU2._1c,
                    id: _lU2.id
                }
            }
        }
    }
};
_8v2.prototype._9v2 = function (_oU2) {
    this._A01();
    this._181 = _oU2;
    if (_oU2._F3 != undefined) this._aU2(_oU2._F3);
    if (_oU2._gU2 != undefined) this._bU2(_oU2._gU2);
    if (_oU2.width != undefined) this._7U2(_oU2.width);
    if (_oU2.height != undefined) this._8U2(_oU2.height);
    if (_oU2._Tb != undefined) this._9U2(_oU2._Tb);
    if (_oU2._JF2 != undefined) this._dU2(_oU2._JF2);
    if (_oU2._Ub != undefined) this._WT2 = _oU2._Ub;
    if (_oU2._Wb != undefined) this._XT2 = _oU2._Wb;
    if (_oU2._fc != undefined) this._YA = _oU2._fc;
    if (_oU2._mc != undefined) this._YT2 = _oU2._mc;
    if (_oU2._pU2 != undefined) this._ZT2 = _oU2._pU2;
    this._7U2(this._e21);
    this._8U2(this._g21);
    this._9U2(this._TT2);
    this._bU2(this._ST2);
    this._dU2(this._UT2);
    this.__A = [];
    this._2U2 = 0;
    for (var index = 0; index < _oU2.__b.length; index++) {
        var _qU2 = _oU2.__b[index];
        if (_qU2 != null) {
            var _FT2 = _rU2(_qU2);
            this._4U2._3C(_FT2);
            this._3U2[_FT2.id] = _FT2;
            this._2U2++
        }
    }
    if (_oU2._kU2 != undefined) this._0U2 = _oU2._kU2;
    for (var _uv = 0; _uv < _oU2._Yb.length; _uv++) {
        this.__A[_uv] = _sU2(_oU2._Yb[_uv])
    }
    if (_oU2._Vb != undefined) {
        if (_oU2._Vb > 0) {
            _z11._b21(this, _oU2._0c)
        }
    }
};
_8v2.prototype._tU2 = function () {
    if (this._181._uU2) {
        if (_ls) {
            this._F71 = new _H_1(this._181._vU2, _ms._ns())
        } else {
            this._F71 = new _H_1(this._181._vU2, this._ks());
        }
        this._F71._Cy1(this._181._wU2, this._181._xU2)
    }
};
_8v2.prototype._yU2 = function (_zU2) {
    var _t5;
    var _AU2 = 0;
    var _BU2 = [];
    for (_t5 = this._tZ.length - 1; _t5 >= 0; _t5--) {
        var _oS = this._tZ._RB(0);
        if (_zU2) {
            _oS._8t(_qZ, 0, _oS, _oS)
        }
        this._CU2(_oS)
    }
    for (_t5 = this._1U2.length - 1; _t5 >= 0; _t5--) {
        this._CU2(this._1U2._RB(0))
    }
};
_8v2.prototype._rV1 = function (index) {
    if (this.__A != undefined) {
        var _1K = this.__A[index];
        if (_1K != undefined) return _1K
    }
    return undefined
};
_8v2.prototype._DU2 = function () {
    var _t5, _v5, _w5;
    if (_js._6U2()) {
    } else {
        _v5 = _js._DW();
        _w5 = _js._EW()
    }
    if (_v5 > _GD2()) _v5 = _GD2();
    if (_w5 > _HD2()) _w5 = _HD2()
};
_8v2.prototype._EU2 = function (_Ps, _Qs, _FU2) {
    return this._B11(_Ps, _Qs, _cs2++, _FU2, false, 0)
};
_8v2.prototype._031 = function (_Ps,
                                _Qs, _w01, _FU2) {
    var _oS = this._B11(_Ps, _Qs, _cs2++, _FU2, true, _w01);
    return _oS
};
_8v2.prototype._GU2 = function (_Ps, _Qs, _OB, _wZ, _HU2, _IU2, _aX1, _Nx) {
    var _JU2 = new _DF2(_Ps, _Qs, _OB, _wZ, true);
    this._tZ._gQ2(_JU2);
    _OW._3C(_JU2);
    if (_HU2 != undefined) _JU2._4g = _HU2;
    if (_IU2 != undefined) _JU2._5g = _IU2;
    if (_aX1 != undefined) _JU2._6g = _aX1;
    if (_Nx != undefined) {
        _JU2._PF2 = _Nx & 0xffffff;
        _JU2._8g = ((_Nx >> 24) & 0xff) / 255.0
    }
    if (_ls) {
        var _021 = _z11._321(this, _OB);
        if (_021 == null) {
            _z11._B11(this, _JU2)
        } else {
            _z11._911(this, _021._S01, _021._ry)
        }
    }
    _JU2._eG2();
    return _JU2
};
_8v2.prototype._B11 = function (_Ps, _Qs, _OB, _wZ, _KU2, _w01) {
    var _JU2 = new _DF2(_Ps, _Qs, _OB, _wZ, true);
    this._tZ._gQ2(_JU2);
    _OW._3C(_JU2);
    if (_KU2) {
        _JU2._1c = _w01
    }
    if (_ls) {
        var _021 = _z11._321(this, _OB);
        if (_021 == null) {
            _z11._B11(this, _JU2)
        } else {
            _z11._911(this, _021._S01, _021._ry)
        }
    }
    _JU2._eG2();
    return _JU2
};
_8v2.prototype._LU2 = function (_Ps, _Qs, _C01, _OB, _wZ) {
    var _JU2 = new _DF2(_Ps, _Qs, _OB, _wZ, true);
    _JU2._1c = _C01._1c;
    this._tZ._gQ2(_JU2);
    _OW._3C(_JU2);
    _JU2._eG2();
    if (_ls) _z11._D11(this, _C01, _JU2);
    return _JU2
};
_8v2.prototype._MU2 = function () {
    var index = 0;
    for (var _t5 = 0; _t5 < this.__A.length; _t5++) {
        _0B = this.__A[_t5];
        _Eh._hX[index] = _0B._B5;
        _Eh._RB2[index] = _0B._KV;
        _Eh._SB2[index] = _0B._MV;
        _Eh._TB2[index] = _0B._OV;
        _Eh._UB2[index] = _0B._QV;
        _Eh._iX[index] = _0B._cd1;
        _Eh._jX[index] = _0B._dd1;
        _Eh._kX[index] = _0B._ed1;
        _Eh._lX[index] = _0B._fd1;
        _Eh._VB2[index] = _0B.angle;
        _Eh._WB2[index] = _0B._UV;
        _Eh._XB2[index] = _0B._WV;
        _Eh._YB2[index] = _0B._2c;
        _Eh._ZB2[index] = _0B._3c;
        _Eh.__B2[index] = _0B._ZV;
        _Eh._mX[index] = _0B._qX;
        _Eh._gX[index] = _0B._xf2;
        index++
    }
};
_8v2.prototype._NU2 = function () {
    var index = 0;
    for (var _t5 = 0; _t5 < this.__A.length; _t5++) {
        _0B = this.__A[_t5];
        _0B._B5 = _Eh._hX[index];
        _0B._KV = _Eh._RB2[index];
        _0B._MV = _Eh._SB2[index];
        _0B._OV = _Eh._TB2[index];
        _0B._QV = _Eh._UB2[index];
        _0B._cd1 = _Eh._iX[index];
        _0B._dd1 = _Eh._jX[index];
        _0B._ed1 = _Eh._kX[index];
        _0B._fd1 = _Eh._lX[index];
        _0B.angle = _Eh._VB2[index];
        _0B._UV = _Eh._WB2[index];
        _0B._WV = _Eh._XB2[index];
        _0B._2c = _Eh._YB2[index];
        _0B._3c = _Eh._ZB2[index];
        _0B._ZV = _Eh.__B2[index];
        _0B._qX = _Eh._mX[index];
        _0B._xf2 = _Eh._gX[index];
        index++
    }
};
_8v2.prototype._OU2 = function () {
    for (var _t5 = 0; _t5 < _mD._lD.length; _t5++) {
        var _pD = _mD._RB(_t5);
        _pD._2c = _Eh._LB2[_t5];
        _pD._3c = _Eh._MB2[_t5];
        _pD.x = _Eh._DB2[_t5];
        _pD.y = _Eh._EB2[_t5];
        _pD.x += _pD._2c;
        _pD.y += _pD._3c;
        _Eh._DB2[_t5] = _pD.x;
        _Eh._EB2[_t5] = _pD.y
    }
};
_8v2.prototype._PU2 = function () {
    var _t5;
    var _It, _Mt, _RW, _SW;
    var _0B;
    var _NW;
    if (!this._YA) return;
    this._NU2();
    for (_t5 = 0; _t5 < this.__A.length; _t5++) {
        _0B = this.__A[_t5];
        if (!_0B._B5) continue;
        if (_ls && _uu == null) {
            if (_0B._xf2 != -1) {
                var __W = _ZW._DV(_0B._xf2);
                if (__W != null) {
                    _0B._ZV = __W._qV
                }
            }
        }
        if (_ls) {
            if (_0B._xf2 != -1) {
                var __W = _ZW._DV(_0B._xf2);
                if (__W != null) {
                    __W._OA()
                }
            }
        } else if ((_0B._B5) && (_0B._ZV >= 0)) {
            _NW = null;
            if (_0B._ZV < 100000) {
                var _LP = _4s._RB(_0B._ZV);
                if (_LP != null) {
                    var _gC = _LP._LW();
                    for (var _HP = 0; _HP < _gC.length; _HP++) {
                        _NW = _gC[_HP];
                        if (!_NW._gg) break;
                        _NW = null
                    }
                }
            } else {
                _NW = _OW._RB(_0B._ZV);
                if (!_NW && _NW._gg) _NW = null
            }
            if (_NW != null) {
                _It = _0B._KV;
                _Mt = _0B._MV;
                _RW = _NW.x;
                _SW = _NW.y;
                if (2 * _0B._UV >= _0B._OV) {
                    _It = _RW - _0B._OV / 2
                } else if (_RW - _0B._UV < _0B._KV) {
                    _It = _RW - _0B._UV
                } else if (_RW + _0B._UV > _0B._KV + _0B._OV) {
                    _It = _RW + _0B._UV - _0B._OV
                }
                if (2 * _0B._WV >= _0B._QV) {
                    _Mt = _SW - _0B._QV / 2
                } else if (_SW - _0B._WV < _0B._MV) {
                    _Mt = _SW - _0B._WV
                } else if (_SW + _0B._WV > _0B._MV + _0B._QV) {
                    _Mt = _SW + _0B._WV - _0B._QV
                }
                if (_It < 0) _It = 0;
                if (_It + _0B._OV > this._e21) _It = this._e21 - _0B._OV;
                if (_Mt < 0) _Mt = 0;
                if (_Mt + _0B._QV > this._g21) _Mt = this._g21 - _0B._QV;
                if (_0B._2c >= 0) {
                    if ((_It < _0B._KV) && (_0B._KV - _It > _0B._2c)) _It = _0B._KV - _0B._2c;
                    if ((_It > _0B._KV) && (_It - _0B._KV > _0B._2c)) _It = _0B._KV + _0B._2c
                }
                if (_0B._3c >= 0) {
                    if ((_Mt < _0B._MV) && (_0B._MV - _Mt > _0B._3c)) _Mt = _0B._MV - _0B._3c;
                    if ((_Mt > _0B._MV) && (_Mt - _0B._MV > _0B._3c)) _Mt = _0B._MV + _0B._3c;
                }
                _0B._KV = _It;
                _0B._MV = _Mt
            }
        }
    }
    this._MU2();
    var left, right, top, bottom;
    left = 999999;
    right = -999999;
    top = 999999;
    bottom = -999999;
    for (var _t5 = 0; _t5 < _js.__A.length; _t5++) {
        _0B = _js.__A[_t5];
        if (_0B._B5) {
            if (left > _0B._cd1) left = _0B._cd1;
            if (right < (_0B._cd1 + _0B._ed1)) right = _0B._cd1 + _0B._ed1;
            if (top > _0B._dd1) top = _0B._dd1;
            if (bottom < (_0B._dd1 + _0B._fd1)) bottom = _0B._dd1 + _0B._fd1
        }
    }
    _yD2 = _jh1 / (right - left);
    _zD2 = _kh1 / (bottom - top)
};
var _QU2 = !1;
_8v2.prototype._RU2 = function (_MD2) {
    var _KT2 = this._4U2._MT2();
    var _SU2 = _KT2._1c;
    for (var _t5 = this._tZ.length - 1;
         _t5 >= 0; _t5--) {
        var _NW = this._tZ._RB(_t5);
        if (_NW._gg || _NW._B5 == 0) continue;
        while (_SU2 > _NW._1c) {
            _KT2._7v(_MD2);
            _KT2 = this._4U2._7w1();
            if (_KT2) {
                _SU2 = _KT2._1c
            } else {
                _SU2 = -1000000000000
            }
        }
        if (!_NW._kf2[_6j2]) {
            var _3v2 = _Cb1._RB(_NW._3g);
            if (_3v2) {
                if ((_NW._4g == 1.0) && (_NW._5g == 1.0) && (_NW._6g == 0.0) && (_NW._PF2 == 0xffffff)) {
                    _3v2._Sd1(_NW._u_, _NW.x, _NW.y, _NW._8g * _Lx)
                } else {
                    _3v2._7v(_NW._u_, _NW.x, _NW.y, _NW._4g, _NW._5g, _NW._6g, _NW._7g(), _NW._8g * _Lx)
                }
            }
        } else {
            _du = _NW;
            _NW._8t(_6j2, 0, _NW, _NW);
            _du = null
        }
    }
    while (_KT2) {
        _KT2._7v(_MD2);
        _KT2 = this._4U2._7w1()
    }
};
_8v2.prototype._TU2 = function (_MD2) {
    var _3v2, _NW, _t5, _gC, _wC2;
    _gC = this._tZ._gC;
    _wC2 = _Cb1._N3;
    for (_t5 = _gC.length - 1; _t5 >= 0; _t5--) {
        _NW = _gC[_t5];
        if (_NW._gg || !_NW._B5) continue;
        if (!_NW._kf2[_6j2]) {
            _3v2 = _wC2[_NW._3g];
            if (_3v2) {
                _du = _NW;
                if ((_NW._4g == 1.0) && (_NW._5g == 1.0) && (_NW._6g == 0.0) && (_NW._PF2 == 0xffffff)) {
                    _3v2._Sd1(_NW._u_, _NW.x, _NW.y, _NW._8g * _Lx)
                } else {
                    _3v2._7v(_NW._u_, _NW.x, _NW.y, _NW._4g, _NW._5g, _NW._6g, _NW._7g(), _NW._8g * _Lx)
                }
                _du = null
            }
        } else {
            _du = _NW;
            _NW._8t(_6j2, 0, _NW, _NW);
            _du = null
        }
    }
};
_8v2.prototype._UU2 = function (_MD2) {
    var _VU2 = _bT2();
    for (var _t5 = this._tZ.length - 1; _t5 >= 0; _t5--) {
        var _NW = this._tZ._RB(_t5);
        if (_NW._gg || _NW._B5 == 0) continue;
        var _WU2 = _VU2;
        while (_VU2 > _NW._1c) {
            _6T2(_VU2);
            _VU2 = _cT2(_VU2);
            if (_VU2 == _WU2) {
                break
            }
            _WU2 = _VU2
        }
        if (!_NW._kf2[_6j2]) {
            var _3v2 = _Cb1._RB(_NW._3g);
            if (_3v2) {
                if ((_NW._4g == 1.0) && (_NW._5g == 1.0) && (_NW._6g == 0.0) && (_NW._PF2 == 0xffffff)) {
                    _3v2._Sd1(_NW._u_, _NW.x, _NW.y, _NW._8g * _Lx)
                } else {
                    _3v2._7v(_NW._u_, _NW.x, _NW.y, _NW._4g, _NW._5g, _NW._6g, _NW._7g(), _NW._8g * _Lx)
                }
            }
        } else {
            _du = _NW;
            _NW._8t(_6j2, 0, _NW, _NW);
            _du = null
        }
    }
    while (_VU2 > -1000000000) {
        _6T2(_VU2);
        _VU2 = _cT2(_VU2)
    }
};
_8v2.prototype._XU2 = function (_MD2) {
    var _VU2 = _bT2();
    var _KT2 = this._4U2._MT2();
    var _YU2 = _KT2._1c;
    for (var _t5 = this._tZ.length - 1; _t5 >= 0; _t5--) {
        var _NW = this._tZ._RB(_t5);
        if (_NW._gg || _NW._B5 == 0) continue;
        while (true) {
            if (_YU2 > _NW._1c) {
                if (_YU2 > _VU2) {
                    _KT2._7v(_MD2);
                    _KT2 = this._4U2._7w1();
                    if (_KT2) {
                        _YU2 = _KT2._1c
                    } else {
                        _YU2 = -1000000000000
                    }
                } else {
                    _6T2(_VU2);
                    _VU2 = _cT2(_VU2)
                }
            } else if (_VU2 > _NW._1c) {
                _6T2(_VU2);
                _VU2 = _cT2(_VU2)
            } else {
                break
            }
        }
        if (!_NW._kf2[_6j2]) {
            var _3v2 = _Cb1._RB(_NW._3g);
            if (_3v2) {
                if ((_NW._4g == 1.0) && (_NW._5g == 1.0) && (_NW._6g == 0.0) && (_NW._PF2 == 0xffffff)) {
                    _3v2._Sd1(_NW._u_, _NW.x, _NW.y, _NW._8g * _Lx)
                } else {
                    _3v2._7v(_NW._u_, _NW.x, _NW.y, _NW._4g, _NW._5g, _NW._6g, _NW._7g(), _NW._8g * _Lx)
                }
            }
        } else {
            _du = _NW;
            _NW._8t(_6j2, 0, _NW, _NW);
            _du = null
        }
    }
    while (true) {
        if (_YU2 > _VU2) {
            _KT2._7v(_MD2);
            _KT2 = this._4U2._7w1();
            if (_KT2) {
                _YU2 = _KT2._1c
            } else {
                _YU2 = -1000000000000
            }
        } else {
            if (_VU2 <= -1000000000) break;
            _6T2(_VU2);
            _VU2 = _cT2(_VU2)
        }
    }
};
_8v2.prototype._ZU2 = function (_MD2,
                                _C01, _P01) {
    var _oS = _P01._K_;
    if (_oS != null) {
        if (!(_oS._gg || (!_oS._hg) || (!_oS._B5))) {
            var _aP = _4s._RB(_oS._w02);
            if (_aP != null) {
                if (_aP._kf2[_6j2]) {
                    _du = _oS;
                    _oS._8t(_6j2, 0, _oS, _oS);
                    _du = null
                } else {
                    var _5c1 = _Cb1._RB(_oS._3g);
                    if (_5c1 != null) {
                        if ((_oS._4g === 1) && (_oS._5g === 1) && (_oS._6g === 0) && (_oS._7g() === 0xffffff) && (_oS._8g === 1)) {
                            _5c1._Sd1(_oS._u_, _oS.x, _oS.y, _oS._8g * _Lx)
                        } else {
                            _5c1._7v(_oS._u_, _oS.x, _oS.y, _oS._4g, _oS._5g, _oS._6g, _oS._7g(), _oS._8g)
                        }
                    }
                }
            }
        }
    }
};
_8v2.prototype.__U2 = function (_MD2, _C01, _P01) {
    for (var _t5 = 0; _t5 < _P01._0V2.length();
         _t5++) {
        var _1V2 = _P01._2V2;
        for (var _Rt = 0; _Rt < _1V2.length(); _Rt++) {
            var _3V2 = _1V2[_Rt]
        }
    }
};
_8v2.prototype._4V2 = function (_MD2, _C01, _P01) {
    var _921 = _P01._P_;
    if (!_921._B5) return;
    if (_921._m_) return;
    var _5V2 = _921._s_;
    if (_k21(_921.index)) {
        var _5c1 = _Cb1._RB(_921.index);
        if (!_5c1) return;
        var _6V2 = (~~_921._u_) % _5c1._Lb1.length;
        if (_5c1._Lb1[_6V2] != undefined) {
            if (_921._r_) {
                var _p_ = _js._DW() / _5c1.width;
                var _q_ = _js._EW() / _5c1.height;
                _RD2(_5c1._Lb1[_6V2], _C01._w_, 0, 0, _C01._x_, _p_, _q_, 0, _5V2, _5V2, _5V2, _5V2, _921.alpha)
            } else _CD2(_5c1._Lb1[_6V2],
                _C01._w_, _C01._x_, _921._p_, _921._q_, _921._o_, _921._n_, _5V2, _921.alpha)
        }
    } else {
        var _7V2 = _Lx;
        _Lx = _921.alpha;
        if (!_uu) _5V2 = _Px(_921._s_);
        _IT(0, 0, _Eh._Fh, _Eh._uB2, _5V2, _5V2, _5V2, _5V2, false);
        _Lx = _7V2
    }
};
_8v2.prototype._8V2 = function (_MD2, _C01, _P01) {
    if (_k21(_P01.___)) {
        var _5c1 = _Cb1._RB(_P01.___);
        if (!_5c1) return;
        var _6V2 = (~~_P01._301) % _5c1._Lb1.length;
        if (_5c1._Lb1[_6V2] != undefined) {
            _RD2(_5c1._Lb1[_6V2], 0, 0, _P01._S_ + _C01._w_ - _5c1._R3, _P01._T_ + _C01._x_ - _5c1._S3, _P01._401, _P01._501, _P01._601 * 0.0174532925, _P01._701,
                _P01._701, _P01._701, _P01._701, _P01._801)
        }
    }
};
var _9V2 = -1;

function _5u2() {
    _9V2 = _ZW._BV()
}

function _aV2(_Ps, _Qs, _HB, _IB, _Ts) {
    var _bV2 = _ZW._DV(_9V2);
    if (_bV2) {
        _bV2._JV(_Ps);
        _bV2._LV(_Qs);
        _bV2._NV(_HB);
        _bV2._PV(_IB);
        _bV2._XV(_Ts);
        if (_bV2._uV) {
            _bV2.__V(_bV2._0W() + (_bV2._1W() * 0.5), _bV2._2W() + (_bV2._3W() * 0.5));
            _bV2._nW()
        } else {
            _bV2._YW(_bV2._0W() + (_bV2._1W() * 0.5), _bV2._2W() + (_bV2._3W() * 0.5));
            _bV2._nW();
            _zW = _Ps;
            _AW = _Qs;
            _xW = _HB;
            _yW = _IB;
            var _CW = _Ts;
            _1V(_zW, _AW, _xW, _yW, _CW)
        }
        _ZW._bW(_9V2);
        _bV2._nW()
    }
};
;_8v2.prototype._cV2 = function (_MD2,
                                 _C01, _P01, _dV2, _eV2, _w01) {
    if (_jD(_P01._R_)) {
        var _fV2 = _oD(_P01._R_);
        var _gV2 = _rD(_P01._R_);
        var _pD = _mD._nD(_P01._R_);
        var _hV2 = null;
        var _iV2 = 1;
        var _jV2 = 1;
        var _kV2 = false;
        var _7y2 = 0;
        var _8y2 = 0;
        var _lV2 = 0, _mV2 = 0;
        var _nV2 = 0, _oV2 = 0;
        if (_pD._qD === null || _pD._qD === undefined) {
        } else {
            var _Gx = _pD._qD;
            var _Ru = _Gx._Iu;
            if (!_Ru.complete) return;
            if (_uu) if (!_Ru._bw) _cw({_Iu: _Ru});
            _iV2 = _Gx._v5 / _Gx._tc;
            _jV2 = _Gx._w5 / _Gx._uc;
            if (_Gx._pc != 0 || _Gx._qc != 0 || _Gx._rc != _Gx._tc || _Gx._sc != _Gx._uc) {
                _kV2 = false
            } else {
                _kV2 = true;
                _7y2 = _pD._7y2 * _iV2 / _Ru.width;
                _8y2 = _pD._8y2 * _jV2 / _Ru.height;
                var _9y2 = _pD._9y2 * _iV2 / _Ru.width;
                var _ay2 = _pD._ay2 * _jV2 / _Ru.height;
                _nV2 = _9y2 + _Gx.x / _Ru.width;
                _oV2 = _ay2 + _Gx.y / _Ru.height;
                _lV2 = _7y2 + _9y2 * 2;
                _mV2 = _8y2 + _ay2 * 2;
            }
        }
        var _pV2, _qV2, _1c;
        if (_C01 != null) {
            _pV2 = _C01._w_ + _P01._S_;
            _qV2 = _C01._x_ + _P01._T_;
            _1c = _C01._1c
        } else {
            _pV2 = _dV2;
            _qV2 = _eV2;
            _1c = _w01
        }
        if (_Ru != null) {
            var _rV2 = _z11._z01();
            _rV2 &= _P01._Y_;
            if (_kV2) {
                var _sV2 = 2048;
                var _al2 = Math.floor((_MD2.left - _pV2) / _pD._7y2);
                var _bl2 = Math.floor(((_MD2.right - _pV2) + _pD._7y2) / _pD._7y2);
                var _cl2 = Math.floor((_MD2.top - _qV2) / _pD._8y2);
                var _dl2 = Math.floor(((_MD2.bottom - _qV2) + _pD._8y2) / _pD._8y2);
                _al2 = _Jt(0, _al2);
                _bl2 = _Lt(_P01._U_, _bl2);
                _cl2 = _Jt(0, _cl2);
                _dl2 = _Lt(_P01._V_, _dl2);
                var _tV2 = _pD._7y2;
                var _uV2 = _pD._8y2;
                var _by2 = _pD._by2;
                var _vV2 = (_bl2 - _al2) * (_dl2 - _cl2);
                var _wV2 = 0;
                var _xV2 = null;
                var _yV2 = null;
                var _jw, _8c, _mw, _ow, _qw, _sw, _tw, _uw, _vw, _ww, _xw;
                if (_uu) {
                    for (var y = _cl2; y < _dl2; y++) {
                        var index = y * _P01._U_ + _al2;
                        for (var x = _al2; x < _bl2; x++, index++, _vV2--) {
                            var _zV2 = _P01._X_[index];
                            _zV2 &= _rV2;
                            var _AV2 = (_zV2 >> _i_) & _k_;
                            if (_AV2 === 0) continue;
                            _AV2 = _pD._dy2[_AV2 * _pD.frames + _P01._W_];
                            if (_AV2 === 0) continue;
                            if (_wV2 === 0) {
                                _wV2 = _Lt(_vV2, _sV2);
                                _xV2 = _uu._fw(_gw._hw, _Ru._bw, _uu._iw, _wV2 * 6);
                                _jw = _xV2._kw() >> 2;
                                _8c = _jw * _xV2._lw;
                                _xV2._lw += _wV2 * 6;
                                _mw = _xV2._nw;
                                _ow = _xV2._pw;
                                _qw = _xV2._rw;
                                _sw = _8c;
                                _tw = _sw + _jw;
                                _uw = _tw + _jw;
                                _vw = _uw + _jw;
                                _ww = _vw + _jw;
                                _xw = _ww + _jw
                            }
                            var _pl2 = x * _tV2 + _pV2;
                            var _BV2 = y * _uV2 + _qV2;
                            var _mU2 = ((_AV2 % _by2) * _lV2) + _nV2;
                            var _nU2 = (Math.floor(_AV2 / _by2) * _mV2) + _oV2;
                            var _CV2 = _pl2;
                            var _DV2 = _BV2;
                            var _EV2 = _pl2 + _tV2;
                            var _FV2 = _BV2;
                            var _GV2 = _pl2;
                            var _HV2 = _BV2 + _uV2;
                            var _IV2 = _pl2 + _tV2;
                            var _JV2 = _BV2 + _uV2;
                            var _KV2 = _mU2;
                            var _LV2 = _nU2;
                            var _MV2 = _mU2 + _7y2;
                            var _NV2 = _nU2;
                            var _OV2 = _mU2;
                            var _PV2 = _nU2 + _8y2;
                            var _QV2 = _mU2 + _7y2;
                            var _RV2 = _nU2 + _8y2;
                            if (_zV2 & _g_) {
                                if (_zV2 & _d_) {
                                    var _CT;
                                    _CT = _KV2;
                                    _KV2 = _MV2;
                                    _MV2 = _CT;
                                    _CT = _OV2;
                                    _OV2 = _QV2;
                                    _QV2 = _CT
                                }
                                if (_zV2 & _c_) {
                                    var _CT;
                                    _CT = _LV2;
                                    _LV2 = _PV2;
                                    _PV2 = _CT;
                                    _CT = _NV2;
                                    _NV2 = _RV2;
                                    _RV2 = _CT
                                }
                                if (_zV2 & _e_) {
                                    var _CT;
                                    _CT = _KV2;
                                    _KV2 = _OV2;
                                    _OV2 = _QV2;
                                    _QV2 = _MV2;
                                    _MV2 = _CT;
                                    _CT = _LV2;
                                    _LV2 = _PV2;
                                    _PV2 = _RV2;
                                    _RV2 = _NV2;
                                    _NV2 = _CT
                                }
                            }
                            _mw[_sw + 0] = _CV2;
                            _mw[_sw + 1] = _DV2;
                            _mw[_sw + 2] = _1c;
                            _mw[_tw + 0] = _mw[_ww + 0] = _EV2;
                            _mw[_tw + 1] = _mw[_ww + 1] = _FV2;
                            _mw[_tw + 2] = _mw[_ww + 2] = _1c;
                            _mw[_uw + 0] = _mw[_vw + 0] = _GV2;
                            _mw[_uw + 1] = _mw[_vw + 1] = _HV2;
                            _mw[_uw + 2] = _mw[_vw + 2] = _1c;
                            _mw[_xw + 0] = _IV2;
                            _mw[_xw + 1] = _JV2;
                            _mw[_xw + 2] = _1c;
                            _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = 0xffffffff;
                            _qw[_sw + 0] = _KV2;
                            _qw[_sw + 1] = _LV2;
                            _qw[_tw + 0] = _qw[_ww + 0] = _MV2;
                            _qw[_tw + 1] = _qw[_ww + 1] = _NV2;
                            _qw[_uw + 0] = _qw[_vw + 0] = _OV2;
                            _qw[_uw + 1] = _qw[_vw + 1] = _PV2;
                            _qw[_xw + 0] = _QV2;
                            _qw[_xw + 1] = _RV2;
                            _sw += _jw * 6;
                            _tw += _jw * 6;
                            _uw += _jw * 6;
                            _vw += _jw * 6;
                            _ww += _jw * 6;
                            _xw += _jw * 6;
                            _wV2--
                        }
                    }
                    if (_wV2 > 0) _xV2._lw -= _wV2 * 6
                } else {
                    for (var y = _cl2; y < _dl2; y++) {
                        var index = y * _P01._U_ + _al2;
                        for (var x = _al2; x < _bl2; x++, index++, _vV2--) {
                            var _zV2 = _P01._X_[index];
                            var _AV2 = (_zV2 >> _i_) & _k_;
                            if (_AV2 === 0) continue;
                            _AV2 = _pD._dy2[_AV2 * _pD.frames + _P01._W_];
                            if (_AV2 === 0) continue;
                            var _pl2 = x * _tV2 + _pV2;
                            var _BV2 = y * _uV2 + _qV2;
                            var _mU2 = ((_AV2 % _by2) * _lV2) + _nV2;
                            var _nU2 = (Math.floor(_AV2 / _by2) * _mV2) + _oV2;
                            var _CV2 = _pl2;
                            var _DV2 = _BV2;
                            var _EV2 = _pl2 + _tV2;
                            var _FV2 = _BV2;
                            var _GV2 = _pl2;
                            var _HV2 = _BV2 + _uV2;
                            var _IV2 = _pl2 + _tV2;
                            var _JV2 = _BV2 + _uV2;
                            var _KV2 = _mU2;
                            var _LV2 = _nU2;
                            var _MV2 = _mU2 + _7y2;
                            var _NV2 = _nU2;
                            var _OV2 = _mU2;
                            var _PV2 = _nU2 + _8y2;
                            var _QV2 = _mU2 + _7y2;
                            var _RV2 = _nU2 + _8y2;
                            if (_zV2 & _g_) {
                                var _IE2 = 1;
                                var _JE2 = 1;
                                var _Rd1 = 0;
                                if (_zV2 & _d_) {
                                    _IE2 = -_IE2
                                }
                                if (_zV2 & _c_) {
                                    _JE2 = -_JE2
                                }
                                if (_zV2 & _e_) {
                                    _Rd1 = -1.5708
                                }
                                _TC2(Math.floor(_CV2) + _tV2 * 0.5, Math.floor(_DV2) + _uV2 * 0.5, _IE2, _JE2, -_Rd1);
                                _Iv._Kb1(_Ru, Math.floor(_KV2 * _Ru.width), Math.floor(_LV2 * _Ru.height), Math.floor(_7y2 * _Ru.width), Math.floor(_8y2 * _Ru.height), -_tV2 * 0.5, -_tV2 * 0.5, _tV2, _uV2);
                                _VC2()
                            } else {
                                _Iv._Kb1(_Ru, Math.floor(_KV2 * _Ru.width), Math.floor(_LV2 * _Ru.height), Math.floor(_7y2 * _Ru.width), Math.floor(_8y2 * _Ru.height), Math.floor(_CV2),
                                    Math.floor(_DV2), _tV2, _uV2)
                            }
                        }
                    }
                }
            }
        }
    }
};
_8v2.prototype._SV2 = function (_MD2, _C01, _P01) {
    _aT2(_P01._a01)
};
_8v2.prototype._TV2 = function (_MD2, _C01, _P01) {
    if (!_P01._A_) return false;
    var _5c1 = _Cb1._RB(_P01._kP);
    if (_5c1 != null) {
        var _DD = _5c1._Lb1[0];
        if ((_DD._Iu instanceof HTMLImageElement) && (_DD._vc >= _Ju.length)) return;
        if ((_Ju[_DD._vc] instanceof HTMLImageElement) && (!_Ju[_DD._vc].complete)) return;
        _ED2(_DD, _P01._e01, _P01._f01, _P01._c01, _P01._d01, _P01._S_, _P01._T_, _P01._401, _P01._501, _P01._701, _P01._801)
    }
};
_8v2.prototype._UV2 = function (_MD2) {
    var _b11, _c11, _t5, _gC;
    _gC = this._W01._gC;
    for (_t5 = _gC.length - 1; _t5 >= 0; _t5--) {
        _b11 = _gC[_t5];
        if (_b11 === null || _b11._A_ <= 0) {
            continue
        }
        if (_z11._x01()) {
            _WH(_z11._y01())
        } else {
            _WH(_b11._1c)
        }
        for (var _Rt = 0; _Rt < _b11._H_.length; _Rt++) {
            _c11 = _b11._H_._RB(_Rt);
            if (_c11 != null) {
                if (_c11._L_ === _0_) {
                    this._4V2(_MD2, _b11, _c11)
                } else if (_c11._L_ === _1_) {
                    this._ZU2(_MD2, _b11, _c11)
                } else if (_c11._L_ === _2_) {
                    this.__U2(_MD2, _b11, _c11)
                } else if (_c11._L_ === _3_) {
                    this._8V2(_MD2, _b11, _c11, 0, 0, 0)
                } else if (_c11._L_ === _4_) {
                    this._cV2(_MD2, _b11, _c11)
                }
                else if (_c11._L_ === _5_) {
                    this._SV2(_MD2, _b11, _c11);
                } else if (_c11._L_ === _6_) {
                    this._TV2(_MD2, _b11, _c11)
                }
            }
        }
    }
};
_8v2.prototype._VV2 = function (_MD2) {
    _2V = _MD2;
    _1X();
    if (this._XT2) {
        _DD2(_Px(_Eh._yB2))
    }
    this._WV2(_MD2, _dm2);
    if (this._W01 != null && this._W01.length > 0) {
        this._UV2(_MD2)
    } else {
        for (var _t5 = 0; _t5 < _mD._lD.length; _t5++) {
            var _pD = _mD._RB(_t5);
            if (_pD) {
                _pD._B5 = _Eh._AB2[_t5];
                _pD._m_ = _Eh._BB2[_t5];
                _pD.x = _Eh._DB2[_t5];
                _pD.y = _Eh._EB2[_t5];
                _pD.index = _Eh._CB2[_t5];
                _pD._iy2 = _Eh._HB2[_t5];
                _pD._jy2 = _Eh._IB2[_t5];
                _pD.alpha = _Eh._OB2[_t5];
                _pD._s_ = _Eh._NB2[_t5];
                _pD._2c = _Eh._LB2[_t5];
                _pD._3c = _Eh._MB2[_t5];
                _pD._p_ = _Eh._JB2[_t5];
                _pD._q_ = _Eh._KB2[_t5];
                if (_pD != null && _pD._B5 && !_pD._m_) {
                    var _5c1 = _mD._nD(_pD.index);
                    if (_5c1 != null) {
                        if (_pD._r_) {
                            _Dd1(_5c1._qD, _pD.x, _pD.y, this._e21, this._g21, _pD._s_, _pD.alpha)
                        } else {
                            _CD2(_5c1._qD, _pD.x, _pD.y, _pD._p_, _pD._q_, _pD._jy2, _pD._iy2, _pD._s_, _pD.alpha)
                        }
                    }
                }
            }
        }
        if (this._4U2._IT2._Gu > 0) {
            if (_Er2.length != 0) {
                this._XU2(_MD2)
            } else {
                this._RU2(_MD2)
            }
        } else if (_Er2.length != 0) {
            this._UU2(_MD2);
        } else {
            this._TU2(_MD2)
        }
        for (var _t5 = 0;
             _t5 < _mD._lD.length; _t5++) {
            var _pD = _mD._RB(_t5);
            if (_pD != null && _pD._B5 && _pD._m_) {
                var _5c1 = _mD._nD(_pD.index);
                if (_5c1 != null) {
                    if (_pD._r_) {
                        _Dd1(_5c1._qD, _pD.x, _pD.y, this._e21, this._g21, _pD._s_, _pD.alpha)
                    } else {
                        _CD2(_5c1._qD, _pD.x, _pD.y, _pD._p_, _pD._q_, _pD._jy2, _pD._iy2, _pD._s_, _pD.alpha)
                    }
                }
            }
        }
    }
    this._WV2(_MD2, _em2)
};
_8v2.prototype._XV2 = function () {
    if (_zs2 >= 0) {
        var _Db1 = _Cb1._RB(_zs2);
        if (_Db1 != null) {
            _Db1._7v(_As2, _pB._Mf2 - _2B.left, _pB._Nf2 - _2B.top, 1.0, 1.0, 0, 0xffffff, 1.0)
        }
        _As2++;
        if (_As2 > _Db1._Gt) _As2 -= _Db1._Gt;
    }
};

function _YV2(_ZV2, __V2) {
    if (__V2 != -1) {
        _C3._24[__V2](null, null)
    }
};

function _0W2(_1W2) {
    if (_1W2 != -1) {
        _p81(_1W2)
    }
};

function _2W2(_1W2) {
    if (_1W2 != -1) {
        _r81()
    }
};_8v2.prototype._WV2 = function (_MD2, _5R) {
    var _3v2, _NW, _t5, _gC, _wC2;
    _1X();
    if ((this._W01.length > 0)) {
        var _b11, _c11;
        _gC = this._W01._gC;
        for (_t5 = _gC.length - 1; _t5 >= 0; _t5--) {
            _b11 = _gC[_t5];
            if (_b11 == null || _b11._A_ == false) {
                continue
            }
            _0W2(_b11._F_);
            _YV2(_b11._aV, _b11._D_);
            for (var _Rt = 0; _Rt < _b11._H_.length; _Rt++) {
                _c11 = _b11._H_._RB(_Rt);
                if (_c11 != null) {
                    if (_c11._L_ === _1_) {
                        _NW = _c11._K_;
                        if (_NW != null) {
                            if (!(_NW._gg || (!_NW._hg) || (!_NW._B5))) {
                                if (_NW._kf2[_5R]) {
                                    _NW._8t(_5R, 0, _NW, _NW)
                                }
                            }
                        }
                    }
                }
            }
            _YV2(_b11._aV, _b11._E_);
            _2W2(_b11._F_)
        }
    } else {
        _gC = this._tZ._gC;
        _wC2 = _Cb1._N3;
        for (_t5 = _gC.length - 1; _t5 >= 0; _t5--) {
            _NW = _gC[_t5];
            if (_NW._gg || !_NW._B5) continue;
            if (_NW._kf2[_5R]) {
                _NW._8t(_5R, 0, _NW, _NW)
            }
        }
    }
};
_8v2.prototype._3W2 = function (_Kt) {
    _ad1 = _mt2;
    _ad1._3B = 0;
    _ad1._5B = 0;
    _ad1._gd1 = _Kt.right;
    _ad1._hd1 = _Kt.bottom;
    _ad1._4B = _Kt.right;
    _ad1._6B = _Kt.bottom;
    _ad1._4W2 = 1.0;
    _ad1._5W2 = 1.0;
    _0E2();
    {
        _id1(0,
            0, _Kt.right, _Kt.bottom);
        _jd1(0, 0, _Kt.right, _Kt.bottom, 0);
        if (this._ZT2 && _ih1) {
            _DD2(_Yd1)
        }
        this._WV2(_Kt, _hm2)
    }
    _2E2()
};
_8v2.prototype._6W2 = function () {
    if (_ih1) {
        if (_Ic1 < 0) {
            _Ic1 = _wD(_jh1, _kh1);
            _Eh._qC2 = _Ic1;
            debug("Application Surface created: w=" + _jh1 + ", h=" + _kh1)
        }
        if (_Jc1) {
            _Jc1 = false;
            _wD(_Kc1, _Lc1, _Ic1);
            _jh1 = _Kc1;
            _kh1 = _Lc1;
            debug("Application Surface resized: w=" + _jh1 + ", h=" + _kh1);
            _7W2()
        }
        _6d1(_Ic1)
    }
};
_8v2.prototype._8W2 = function (_Kt) {
    var _9W2 = new _yO();
    _9W2._KB(_2V);
    if (_ls) {
        _aV2(0, 0, _Kt.right, _Kt.bottom,
            0)
    }
    _yD2 = 1;
    _zD2 = 1;
    this._6W2();
    this._PU2();
    var _XA;
    if (!this._YA) {
        _XA = _ZA;
        _id1(0, 0, _jh1, _kh1);
        if (_ls) {
            _aV2(0, 0, _js._e21, _js._g21, 0)
        } else _jd1(0, 0, _js._e21, _js._g21, 0)
    } else {
        _XA = this.__A;
        if (this._YT2) {
            _id1(0, 0, _jh1, _kh1);
            _jd1(0, 0, _jh1, _kh1, 0);
            _DD2(_Yd1)
        }
    }
    var _aW2 = _2V.right - _2V.left;
    var _bW2 = _2V.bottom - _2V.top;
    var _cW2 = _lh1._v5 / _aW2;
    var _dW2 = _lh1._w5 / _bW2;
    var _PE2 = _jh1 / _aW2;
    var _QE2 = _kh1 / _bW2;
    _Wr2 = 0;
    for (_t5 = 0; _t5 < _XA.length; _t5++) {
        _ad1 = _XA[_t5];
        if (_ad1._B5) {
            var _eW2 = _od1;
            _0E2();
            {
                if (_ad1._qX != -1) {
                    _Yc1(_ad1._qX)
                }
                _ad1._3B = _ad1._cd1 * _cW2 + _lh1.x;
                _ad1._5B = _ad1._dd1 * _dW2 + _lh1.y;
                _ad1._gd1 = _ad1._ed1 * _cW2;
                _ad1._hd1 = _ad1._fd1 * _dW2;
                _ad1._4B = _ad1._3B + _ad1._gd1;
                _ad1._6B = _ad1._5B + _ad1._hd1;
                _ad1._4W2 = _ad1._gd1 / _ad1._OV;
                _ad1._5W2 = _ad1._hd1 / _ad1._QV;
                if (_ad1._qX != -1) {
                    _id1(0, 0, _Vc1(_ad1._qX), _Wc1(_ad1._qX))
                } else {
                }
                if (_ls) {
                    _ZW._bW(_ad1._xf2);
                    var __W = _ZW._aW();
                    if (__W != null) {
                        __W._By();
                        __W._nW()
                    }
                } else _jd1(_ad1._KV, _ad1._MV, _ad1._OV, _ad1._QV, _ad1.angle);
                if ((!_ls)) {
                    if (Math.abs(_ad1.angle) < 0.001) {
                        _Kt.left = _ad1._KV;
                        _Kt.top = _ad1._MV;
                        _Kt.right = _ad1._KV + _ad1._OV;
                        _Kt.bottom = _ad1._MV + _ad1._QV
                    } else {
                        var _3V = _ad1.angle * (_Pt / 180);
                        var _ZN = Math.abs(Math.sin(_3V));
                        var _u5 = Math.abs(Math.cos(_3V));
                        var _PQ = (_u5 * _ad1._OV) + (_ZN * _ad1._QV);
                        var _4V = (_ZN * _ad1._OV) + (_u5 * _ad1._QV);
                        _Kt.left = _ad1._KV + (_ad1._OV - _PQ) / 2;
                        _Kt.right = _ad1._KV + (_ad1._OV + _PQ) / 2;
                        _Kt.top = _ad1._MV + (_ad1._QV - _4V) / 2;
                        _Kt.bottom = _ad1._MV + (_ad1._QV + _4V) / 2
                    }
                    _Eh._QB2 = _Wr2;
                    this._VV2(_Kt)
                } else {
                    _Eh._QB2 = _Wr2;
                    this._VV2(_2V)
                }
                if (_ad1._qX != -1) {
                    _ld1()
                }
                _Wr2++;
                if (_ls) {
                    var __W = _ZW._aW();
                    if (__W != null) {
                        __W._Dy()
                    }
                    _ZW._bW(-1)
                }
            }
            _2E2()
        }
    }
    _2V._KB(_9W2)
};
_8v2.prototype._fW2 = function (_Kt) {
    if (_gW2 && _ih1) {
        _0E2({_hW2: true, _iW2: true});
        _Kt.left = 0;
        _Kt.top = 0;
        _Kt.right = _4e1();
        _Kt.bottom = _7e1();
        var rect = _lh1;
        var _jW2 = _lH();
        _CG(false);
        _id1(0, 0, _Kt.right, _Kt.bottom);
        _jd1(0, 0, _Kt.right, _Kt.bottom, 0);
        _Cd1(_Ic1, rect.x, rect.y, rect._v5, rect._w5);
        _CG(_jW2);
        _2E2({_kW2: true, _lW2: true})
    }
};
_8v2.prototype._mW2 = function (_Kt) {
    _Kt.left = 0;
    _Kt.top = 0;
    _Kt.right = _4e1();
    _Kt.bottom = _7e1();
    _ad1 = _mt2;
    _ad1._3B = 0;
    _ad1._5B = 0;
    _ad1._gd1 = _Kt.right;
    _ad1._hd1 = _Kt.bottom;
    _ad1._4B = _Kt.right;
    _ad1._6B = _Kt.bottom;
    _ad1._4W2 = 1.0;
    _ad1._5W2 = 1.0;
    _0E2();
    {
        _id1(0, 0, _Kt.right, _Kt.bottom);
        _jd1(0, 0, _Kt.right, _Kt.bottom, 0);
        this._WV2(_Kt, _im2)
    }
    _2E2()
};
_8v2.prototype._vK2 = function (_Kt) {
    var _nW2 = _yD2;
    var _oW2 = _zD2;
    var _pW2 = _Bs2;
    var _qW2 = _Cs2;
    if (_pW2 < 0) _pW2 = _4e1();
    if (_qW2 < 0) _qW2 = _7e1();
    _0E2({_hW2: true});
    {
        _Kt.left = 0;
        _Kt.top = 0;
        _Kt.right = _4e1();
        _Kt.bottom = _7e1();
        _yD2 = _Kt.right / _pW2;
        _zD2 = _Kt.bottom / _qW2;
        _ad1 = _mt2;
        _ad1._3B = 0;
        _ad1._5B = 0;
        _ad1._gd1 = _Kt.right;
        _ad1._hd1 = _Kt.bottom;
        _ad1._4B = _Kt.right;
        _ad1._6B = _Kt.bottom;
        _ad1._4W2 = _yD2;
        _ad1._5W2 = _zD2;
        _rW2 = true;
        _id1(0, 0, _Kt.right, _Kt.bottom);
        _sW2();
        var _9W2 = new _yO();
        _9W2._KB(_2V);
        _2V.left = 0;
        _2V.top = 0;
        _2V.right = _pW2;
        _2V.bottom = _qW2;
        this._WV2(_Kt, _fm2);
        this._WV2(_Kt, _bm2);
        this._WV2(_Kt, _gm2);
        _rW2 = false;
        _2V._KB(_9W2)
    }
    _2E2({_kW2: true});
    _yD2 = _nW2;
    _zD2 = _oW2
};
_8v2.prototype._tW2 = function (_Kt) {
    if (_zs2 >= 0) {
        _0E2();
        _id1(0, 0, _Kt.right, _Kt.bottom);
        _jd1(0, 0, _Kt.right, _Kt.bottom, 0);
        this._XV2();
        _2E2()
    }
};
_8v2.prototype._7v = function () {
    _0E2();
    var _Kt = new _yO();
    _Kt.left = 0;
    _Kt.top = 0;
    _Kt.right = _4e1();
    _Kt.bottom = _7e1();
    this._3W2(_Kt);
    this._8W2(_Kt);
    if (_ih1) {
        _ld1()
    }
    if (_Fc1.length != 0) {
        _SB("Unbalanced surface stack. You MUST use surface_reset_target() for each set.");
        return
    }
    this._mW2(_Kt);
    this._fW2(_Kt);
    this._vK2(_Kt);
    this._tW2(_Kt);
    _2E2()
};

function _sW2() {
    var _pW2 = _Bs2;
    var _qW2 = _Cs2;
    if (_pW2 < 0) _pW2 = _eh1;
    if (_qW2 < 0) _qW2 = _gh1;
    var _PE2 = 1;
    var _QE2 = 1;
    var _w62 = 0;
    var _x62 = 0;
    if (_Ds2) {
        _PE2 = _Gs2;
        _QE2 = _Hs2;
        _w62 = _Es2;
        _x62 = _Fs2;
        _VD2(_PE2, _QE2, _w62, _x62)
    } else {
        _w62 = _lh1.x;
        _x62 = _lh1.y;
        if (_Bs2 > 0) {
            _PE2 = _lh1._v5 / _pW2
        }
        if (_Cs2 > 0) {
            _QE2 = _lh1._w5 / _qW2
        }
        _VD2(_PE2, _QE2, _w62, _x62)
    }
    _1X()
};_8v2.prototype._uW2 = function () {
    var _vW2 = [];
    var _wW2 = _OW._YH2._gC;
    for (var _t5 = 0; _t5 < _wW2.length; _t5++) {
        var _NW = _wW2[_t5];
        if (_NW._gg) {
            _vW2[_vW2.length] = _NW;
        }
    }
    for (var _t5 = 0; _t5 < _vW2.length; _t5++) {
        var _NW = _vW2[_t5];
        this._CU2(_NW)
    }
};
_8v2.prototype._CU2 = function (_NW) {
    if (this._F71 && _NW._702) {
        this._F71._Qx1(_NW._702)
    }
    _OW._0I2(_NW);
    this._tZ._L11(_NW);
    this._1U2._E01(_NW);
    _NW._AZ._7G2(_NW)
};
_8v2.prototype._xW2 = function (_3R) {
    if (_3R._hg) {
        this._tZ._L11(_3R);
        _3R._AZ._7G2(_3R);
        this._1U2._3C(_3R);
        _3R._hg = false
    }
};
_8v2.prototype._yW2 = function (_3R) {
    if (!_3R._hg) {
        this._1U2._E01(_3R);
        this._tZ._gQ2(_3R);
        _3R._AZ._B11(_3R);
        _3R._hg = true
    }
};
_8v2.prototype._LT2 = function (_OB) {
    var _FT2 = this._3U2[_OB];
    if (_FT2) {
        this._4U2._LT2(_FT2);
        this._3U2[_OB] = undefined;
        this._2U2--
    }
};
_8v2.prototype._zW2 = function () {
    if (this._3G2.length == 0) return;
    var _8C = this._3G2;
    var _hg = this._tZ;
    var _AW2;
    if (_hg._fQ2 < 0) {
        _BW2 = _hg._gC.length
    } else {
        _BW2 = _hg._fQ2
    }
    var _Gu = 0;
    for (var _t5 = 0;
         _t5 < _8C.length; _t5++) {
        var _NW = _8C[_t5];
        for (var _Rt = 0; _Rt < _BW2; _Rt++) {
            if (_NW == _hg._gC[_Rt]) {
                _hg._gC.splice(_Rt, 1);
                _hg._gC[_hg._gC.length] = _NW;
                _Gu += 1;
                _BW2 -= 1;
                _CW2 = true;
                break
            }
        }
    }
    if (_Gu > 0) {
        if (_hg._fQ2 < 0) {
            _hg._fQ2 = _hg._gC.length - _Gu
        } else {
            _hg._fQ2 -= _Gu
        }
    }
    this._3G2 = []
};

function _Yt2() {
    this._481 = [];
    this._dv2 = [];
}

_Yt2.prototype._av2 = function (_tP1) {
    this._dv2 = _tP1
};
_Yt2.prototype._3C = function (_DW2) {
    return this._481[this._481.length] = _DW2
};
_Yt2.prototype._RB = function (_EW2) {
    if (_EW2 < 0 || _EW2 >= this._481.length) return null;
    return this._481[_EW2]
};
_Yt2.prototype._681 = function (_EW2) {
    return this._481[this._dv2[_EW2]]
};
_Yt2.prototype._L11 = function (_EW2) {
    this._481[_EW2] = null
};
_Yt2.prototype._FW2 = function () {
    for (var _GW2 in this._481) {
        if (!this._481.hasOwnProperty(_GW2)) continue;
        var _Z01 = this._481[_GW2];
        _Z01._9v2(_Z01._181)
    }
};
var _2b1 = [];

function _HW2() {
    this.__type = "[sound]";
    this._F3 = "";
    this._G3 = 0;
    this._H3 = "";
    this._I3 = "";
    this._J3 = 0;
    this.volume = 1;
    this._K3 = 0;
    this.preload = true;
    this._IW2 = 1.0;
    this._JW2 = 0;
    this._KW2 = []
}

_HW2.prototype._LW2 = function (_fy2) {
    this._F3 = _fy2._F3;
    this._G3 = _fy2._G3;
    this._H3 = _fy2._H3;
    this._I3 = _fy2._I3;
    this._J3 = _fy2._J3;
    this.volume = _fy2.volume;
    this._K3 = _fy2._K3;
    this.preload = _fy2.preload;
    this._IW2 = this.volume;
    this._eb1(this._F3)
};
_HW2.prototype._eb1 = function (_du2) {
    this._JW2 = 0;
    this._KW2 = [];
    if ((_UX == _El2) || (_UX == _VX) || (_UX == _Dl2)) {
        _cr2 = 1;
        this._KW2[0] = _2b1[this._F3]
    } else {
        if (_2b1[this._F3] != null) {
            for (var _t5 = 0; _t5 < _cr2; _t5++) {
                this._KW2[_t5] = _2b1[this._F3].cloneNode(true)
            }
        }
    }
};
var _MW2 = !1;

function _Fu2(_EX, _OB, _Ta1, _yX, _jb2) {
    _EX = _H91(_EX);
    if (_Za1 == false) {
        return undefined
    }
    var _NW2 = false;
    var _G91;
    var index;
    index = _EX.indexOf(_Ta1);
    if (index > 0) {
        _EX = _EX.substr(0, index)
    }
    if (_I91) {
        _Ta1 = "ogg"
    } else if (_J91) {
        _Ta1 = "mp3"
    } else {
        _Ta1 = "ogg"
    }
    _NW2 = true;
    if (_NW2) {
        _EX = _EX + "." + _Ta1;
        try {
            var _OW2 = new Audio();
            _OW2.URL = _EX;
            _OW2._IW2 = 1.0;
            _OW2.autobuffer = true;
            if (typeof _OW2.loop == 'boolean') _OW2.loop = false;
            _OW2.preload = 'auto';
            _OW2._ju2 = false;
            _OW2._PW2 = false;
            var _HD = document.createElement('source');
            _HD.setAttribute("src", _EX);
            if (_Ta1 == "ogg") {
                _HD.setAttribute("type", 'audio/ogg');
                _HD.setAttribute("codecs", 'vorbis')
            } else {
                _HD.setAttribute("type", 'audio/mpeg')
            }
            _OW2.setAttribute("networkState", 0);
            _OW2.insertBefore(_HD, null);
            document.body.appendChild(_OW2);
            _2b1[_OB] = _OW2;
            _OW2.addEventListener('canplaythrough', _yX, false);
            _OW2.addEventListener('error', _jb2, false);
            _OW2.addEventListener("loadstart", _gu2, false);
            _OW2.addEventListener("suspend", _hu2, false);
            _OW2.addEventListener("stalled", _iu2, false);
            _OW2.addEventListener("stall", _iu2, false);
            _OW2.load()
        } catch (e) {
            if (_UX == _Fl2 && _MW2 == false) {
                var _QW2 = navigator;
                _MW2 = true;
                var _RW2 = _QW2.userAgent.indexOf("Windows");
                if (_RW2 != -1) {
                    alert("Audio Error: Please ensure that quicktime is installed")
                }
            }
        }
    }
    return _OB
}

function _0u2() {
    this._E3 = [];
    this.length = 0
}

_0u2.prototype._L11 = function (_za1) {
    if (this._E3[_za1]) {
        this._SW2(_za1);
        this._E3[_za1] = undefined
    }
};

function _TW2() {
    this._PW2 = false
}

_0u2.prototype._UW2 = function (_za1) {
    try {
        var _VW2 = this._E3[_za1];
        if (!_VW2) return null;
        var _WW2 = _VW2._KW2[this._E3[_za1]._JW2];
        this._E3[_za1]._JW2++;
        if (this._E3[_za1]._JW2 >= _cr2) {
            this._E3[_za1]._JW2 = 0
        }
        return _WW2
    } catch (e) {
        debug("Sound buffer unavailable for sound: " + _za1);
    }
    return null
};
_0u2.prototype._SW2 = function (_ny) {
    with (this) {
        var _XW2 = this._E3[_ny];
        if (!_XW2) return;
        _XW2 = _XW2._KW2;
        for (var _t5 = 0; _t5 < _XW2.length; _t5++) {
            _VW2 = _XW2[_t5];
            if (_VW2 != null) {
                try {
                    _VW2.pause();
                    _VW2._PW2 = false
                } catch (_PQ) {
                    if (_Ra1) debug("Error stopping sound: " + this._E3[_ny]._F3)
                }
            }
        }
    }
};

function _YW2() {
    try {
        this.currentTime = 0
    } catch (_PQ) {
        if (_Ra1) debug("Error setting current sound time: " + this._E3[_za1]._F3)
    }
    this.play()
}

_0u2.prototype._RB = function (_za1) {
    if (_za1 < 0 || _za1 >= this._E3.length) return null;
    return this._E3[_za1]
};
_0u2.prototype._NA = function () {
    this._E3 = [];
    length = 0
};
_0u2.prototype._3C = function (_fy2) {
    with (this) {
        var _pD = null;
        if (_fy2 != null) {
            _pD = new _HW2();
            _pD._LW2(_fy2)
        }
        _E3[_E3.length] = _pD
    }
};

function _yO() {
    this.left = 0;
    this.top = 0;
    this.right = 0;
    this.bottom = 0
}

_yO.prototype._KB = function (_bc1) {
    this.left = _bc1.left;
    this.right = _bc1.right;
    this.top = _bc1.top;
    this.bottom = _bc1.bottom
};

function _Rb1() {
    this.__type = "[sprite]";
    this._F3 = "sprite";
    this.width = 16;
    this.height = 16;
    this._G41 = new _yO;
    this._O3 = true;
    this._P3 = true;
    this.preload = true;
    this._Ub1 = 0;
    this._Vb1 = false;
    this._R3 = 0;
    this._S3 = 0;
    this._Wb1 = false;
    this._Gt = 0;
    this._4c1 = 8;
    this._Xb1 = false;
    this._Yb1 = false;
    this._Ht = [];
    this._ZW2 = [];
    this._Lb1 = [];
    this._Y3 = [];
    this._V3 = 0;
    this._W3 = 30
}

_Rb1.prototype._PG2 = function () {
    return this._Vb1
};
_Rb1.prototype._y12 = function () {
    return this._Gt;
};
_Rb1.prototype._Zb1 = function () {
    var __W2 = (this._S3 * this._S3);
    var _0X2 = (this._R3 * this._R3);
    var _1X2 = (this.width - this._R3) * (this.width - this._R3);
    var _2X2 = (this.height - this._S3) * (this.height - this._S3);
    var _3X2 = ~~ceil(sqrt(_0X2 + __W2));
    var _4X2 = ~~ceil(sqrt(_1X2 + __W2));
    var _5X2 = ~~ceil(sqrt(_0X2 + _2X2));
    var _6X2 = ~~ceil(sqrt(_1X2 + _2X2));
    this._4c1 = _Jt(_3X2, _Jt(_4X2, _Jt(_5X2, _6X2)))
};
_Rb1.prototype._7X2 = function (_8X2, _O71, _P71) {
    try {
        if (_Cb1._9X2 !== undefined) {
            var _aX2 = true;
            var _b51 = 0;
            var _bX2 = _Cb1._9X2[_8X2];
            var _MQ1 = new DataView(_bX2);
            if (_MQ1 !== undefined) {
                var _cX2 = _MQ1.getInt32(_b51, _aX2);
                var _dX2 = (1 << 31);
                if ((_cX2 & _dX2) != 0) {
                    _cX2 &= (~_dX2);
                    _b51 += 4
                }
                _b51 += 4;
                var _eX2 = null;
                if (_cX2 > 0) {
                    _eX2 = new Uint8Array(_bX2, _b51, _cX2);
                    _b51 += ((_cX2 + 3) & ~3)
                }
                var _fX2 = _MQ1.getUint32(_b51, _aX2);
                _b51 += 4;
                this._gX2 = [];
                for (var _t5 = 0; _t5 < _fX2; _t5++) {
                    var type = _MQ1.getInt32(_b51, _aX2);
                    _b51 += 4;
                    var id = _MQ1.getInt32(_b51, _aX2);
                    _b51 += 4;
                    var _hX2 = null;
                    if (type === _pb2) {
                        _hX2 = new _yb2(type, id);
                        _b51 = _hX2._zb2(_MQ1, _b51, _aX2, this._gX2)
                    } else if (type === _qb2) {
                        _hX2 = new _5b2(type, id);
                        _b51 = _hX2._7b2(_bX2, _MQ1, _b51, _aX2, _eX2)
                    } else {
                        _hX2 = {type: _ob2, id: id}
                    }
                    this._gX2.push(_hX2)
                }
                this._iX2 = new _vc2();
                _b51 = this._iX2._zc2(_MQ1, _b51,
                    _aX2);
                if (this._iX2._yc2._Ac2 > 0) {
                    _b51 = this._jX2(_MQ1, _b51, _aX2)
                } else {
                    this.width = this._iX2._it;
                    this.height = this._iX2._kt;
                    this._Vb1 = false
                }
                this._Ub1 = 0;
                this.preload = true;
                if (!this._Vb1) {
                    this._G41.left = this._iX2._ht;
                    this._G41.right = this._iX2._it;
                    this._G41.top = this._iX2._jt;
                    this._G41.bottom = this._iX2._kt;
                    this._R3 = _O71;
                    this._S3 = _P71
                }
                this._Zb1();
                this._kX2()
            }
        }
    } catch (e) {
        debug("Cannot build SWF data " + e.message)
    }
};
_Rb1.prototype._jX2 = function (_8b2, _9b2, _ab2) {
    if (true != this._Vb1) {
        return
    }
    this._Ht = [];
    this.width = this._iX2._yc2._Bc2;
    this.height = this._iX2._yc2._Cc2;
    var _Ac2 = this._iX2._yc2._Ac2;
    for (var _t5 = 0; _t5 < _Ac2; _t5++) {
        var _lX2 = _8b2.getInt32(_9b2, _ab2);
        _9b2 += 4;
        var _mX2 = _9b2;
        var _nX2 = 0;
        var _uT1 = [];
        for (var _Rt = 0; _Rt < _lX2; _Rt++) {
            var _oX2 = _8b2.getUint8(_9b2, _ab2);
            _9b2 += 1;
            var _pX2 = ((_oX2) & 0x80) != 0 ? true : false;
            var _qX2 = ((_oX2) & 0x7f) + 1;
            for (var _tC = 0; _tC < _qX2; _tC++) {
                _uT1[_nX2++] = _pX2
            }
        }
        this._Ht[_t5] = _uT1;
        _9b2 = _mX2 + ((_lX2 + 3) & ~3)
    }
    this._Xb1 = true;
    return _9b2
};
_Rb1.prototype._kX2 = function () {
    this._7v = function (_Os, _Ps, _Qs, _GL, _HL, _Ts, _Nx, _Ox) {
        _bE2(this._gX2,
            this._iX2, _Os, this._R3, this._S3, _Ps, _Qs, _GL, _HL, _Ts, _Nx, _Ox, this._Lb1)
    };
    this._Sd1 = function (_rX2, _Ps, _Qs, _Ox) {
        _bE2(this._gX2, this._iX2, _rX2, this._R3, this._S3, _Ps, _Qs, 1.0, 1.0, 0.0, 0xffffffff, _Ox, this._Lb1)
    }
};
_Rb1.prototype._sX2 = function (_tX2) {
    if (_tX2 >= 0) {
        if (_Cb1._R82 !== undefined) {
            var _U32 = _Cb1._R82[_tX2];
            this._0G2 = new _qu();
            this._0G2._Ku(_U32._WY, _U32._na2, _U32.width, _U32.height)
        }
        this._7v = function (_Os, _Ps, _Qs, _GL, _HL, _Ts, _Nx, _Ox) {
            this._0G2._7v(_Os, _Ps, _Qs, _GL, _HL, _Ts, _Nx, _Ox)
        };
        this._Sd1 = function (_Os,
                              _Ps, _Qs, _Ox) {
            this._0G2._7v(_Os, _Ps, _Qs, 1, 1, 0, 0xffffff, _Ox)
        }
    }
};

function _uX2(_vX2, _MT1) {
    if (_vX2._Y3[_MT1] != null) {
        var _wt = [];
        var src = 0;
        var _wG = 0;
        var _cE;
        while (src < _vX2._Y3[_MT1].length) {
            var _wX2 = _vX2._Y3[_MT1][src++];
            if (_wX2 & 0x80) {
                _wX2 = (_wX2 & 0x7f) + 1;
                _cE = _vX2._Y3[_MT1][src++];
                for (var _uv = 0; _uv < _wX2; _uv++) {
                    _wt[_wG++] = _cE
                }
            } else {
                _wX2++;
                for (var _uv = 0; _uv < _wX2; _uv++) {
                    _wt[_wG++] = _vX2._Y3[_MT1][src++]
                }
            }
        }
    }
    _vX2._Y3[_MT1] = _wt
}

function _4v2(_xX2) {
    var _3v2 = new _Rb1();
    if (_xX2._F3 !== undefined) _3v2._F3 = _xX2._F3;
    if (_xX2.width !== undefined) _3v2.width = _xX2.width;
    if (_xX2.height !== undefined) _3v2.height = _xX2.height;
    if (_xX2._Z3 !== undefined) _3v2._G41.left = _xX2._Z3;
    if (_xX2._T3 !== undefined) _3v2._G41.right = _xX2._T3;
    if (_xX2.__3 !== undefined) _3v2._G41.top = _xX2.__3;
    if (_xX2._U3 !== undefined) _3v2._G41.bottom = _xX2._U3;
    if (_xX2._O3 !== undefined) _3v2._O3 = _xX2._O3;
    if (_xX2._P3 !== undefined) _3v2._P3 = _xX2._P3;
    if (_xX2.preload !== undefined) _3v2.preload = _xX2.preload;
    if (_xX2._yX2 !== undefined) _3v2._Ub1 = _xX2._yX2;
    if (_xX2._Q3 !== undefined) _3v2._Vb1 = _xX2._Q3;
    if (_xX2._R3 !== undefined) _3v2._R3 = _xX2._R3;
    if (_xX2._S3 !== undefined) _3v2._S3 = _xX2._S3;
    if (_xX2._V3 !== undefined) _3v2._V3 = _xX2._V3;
    if (_xX2._W3 !== undefined) _3v2._W3 = _xX2._W3;
    _3v2._Y3 = null;
    if (_xX2._zX2 !== undefined) {
        _3v2._7X2(_xX2._zX2, _3v2._R3, _3v2._S3)
    }
    if (_xX2._AX2 !== undefined) {
        _3v2._sX2(_xX2._AX2)
    }
    if (_xX2._Y3 !== undefined) _3v2._Y3 = _xX2._Y3;
    _3v2._Lb1 = [];
    for (var _t5 = _xX2._X3.length - 1; _t5 >= 0; _t5--) {
        _3v2._Lb1[_t5] = _xX2._X3[_t5]
    }
    _3v2._Gt = _3v2._Lb1.length;
    _3v2._Zb1();
    for (var _t5 = 0; _t5 < _3v2._Lb1.length; _t5++) {
        _3v2._Lb1[_t5] = _gy2(_3v2._Lb1[_t5]);
        if (_3v2._Lb1[_t5] != null) {
            if (_3v2._Lb1[_t5]._rc == 0) _3v2._Lb1[_t5]._rc = 1;
            if (_3v2._Lb1[_t5]._sc == 0) _3v2._Lb1[_t5]._sc = 1
        }
    }
    if (_3v2._Y3) {
        for (var _t5 = 0; _t5 < _xX2._Y3.length; _t5++) {
            if (!_xX2._BX2) _uX2(_3v2, _t5);
            _3v2._Xb1 = true;
            var _l5 = _3v2.width * _3v2.height;
            var _uT1 = [];
            _uT1[_l5 - 1] = 0;
            var _CX2 = ((_3v2.width + 7) >> 3);
            var _wH2 = 0;
            for (var y = 0; y < _3v2.height; ++y, _wH2 += _CX2) {
                var _wt = 0x80;
                var _DX2 = _wH2;
                for (var x = 0; x < _3v2.width; ++x, _wt >>= 1) {
                    if (_wt == 0) {
                        _wt = 0x80;
                        ++_DX2
                    }
                    _uT1[x + (y * _3v2.width)] = ((_3v2._Y3[_t5][_DX2] & _wt) != 0)
                }
            }
            _3v2._Ht[_t5] = _uT1
        }
    }
    _xX2._BX2 = true;
    return _3v2
}

_Rb1.prototype._Sd1 = function (_rX2, _Ps, _Qs, _Ox) {
    if (this._Gt <= 0) return;
    if (_2X) {
        _3X()
    }
    var _4c1 = this._4c1;
    if (((_5X.top - _Qs) <= _4c1) && ((_Qs - _5X.bottom) <= _4c1) && ((_5X.left - _Ps) <= _4c1) && ((_Ps - _5X.right) <= _4c1) || ((_ls) && (_ZW._aW() != null) && (_ZW._aW()._uV == false))) {
        _rX2 = (~~_rX2) % this._Gt;
        if (_rX2 < 0) _rX2 = _rX2 + this._Gt;
        var _DD = this._Lb1[_rX2];
        if ((_DD._v5 == _DD._rc) && (_DD._w5 == _DD._sc)) {
            _BD2(_DD, _Ps - this._R3, _Qs - this._S3, _Ox)
        } else {
            var _2v = 0xffffffff;
            _RD2(_DD, 0, 0, _Ps - this._R3, _Qs - this._S3, 1, 1, 0, _2v, _2v, _2v,
                _2v, 1)
        }
    }
};
_Rb1.prototype._7v = function (_Os, _Ps, _Qs, _GL, _HL, _Ts, _Nx, _Ox) {
    if (this._Gt <= 0) return;
    if (_2X) {
        _3X()
    }
    var _EX2 = abs(this._4c1 * _GL);
    var _FX2 = abs(this._4c1 * _HL);
    var _4c1;
    if (_EX2 > _FX2) {
        _4c1 = _EX2
    } else {
        _4c1 = _FX2
    }
    if (((_5X.top - _Qs) <= _4c1) && ((_Qs - _5X.bottom) <= _4c1) && ((_5X.left - _Ps) <= _4c1) && ((_Ps - _5X.right) <= _4c1) || ((_ls) && (_ZW._aW() != null) && (_ZW._aW()._uV == false))) {
        _Os = (~~_Os) % this._Gt;
        if (_Os < 0) _Os += this._Gt;
        _Ts = _wt2(_Ts, 360.0);
        _RD2(this._Lb1[_Os], this._R3, this._S3, _Ps, _Qs, _GL, _HL, _Ts * Math.PI / 180.0, _Nx,
            undefined, undefined, undefined, _Ox)
    }
};
_Rb1.prototype._3H2 = function (_GX2, _HX2, _1u, _2u, _Rs, _Ss, _Ts, _Ps, _Qs) {
    var _St, _Ut;
    if (!this._Xb1) return true;
    if (this._Gt <= 0) return false;
    _GX2 = _GX2 % this._Ht.length;
    if (_GX2 < 0) _GX2 = _GX2 + this._Ht.length;
    if (Math.abs(_Ts) < 0.0001) {
        _St = Math.floor((_Ps - _1u) / _Rs + this._R3);
        _Ut = Math.floor((_Qs - _2u) / _Ss + this._S3)
    } else {
        var _bu = Math.sin(-_Ts * Math.PI / 180.0);
        var _cu = Math.cos(-_Ts * Math.PI / 180.0);
        _St = Math.floor((_cu * (_Ps - _1u) + _bu * (_Qs - _2u)) / _Rs + this._R3);
        _Ut = Math.floor((_cu * (_Qs - _2u) - _bu * (_Ps - _1u)) / _Ss + this._S3)
    }
    if ((_St < 0) || (_St >= this.width)) return false;
    if ((_Ut < 0) || (_Ut >= this.height)) return false;
    return this._Ht[_GX2][_St + (_Ut * this.width)];
};
_Rb1.prototype._5H2 = function (_GX2, _HX2, _1u, _2u, _Rs, _Ss, _Ts, _6u) {
    if (!this._Xb1) return true;
    if (this._Gt <= 0) return false;
    _GX2 = _GX2 % this._Ht.length;
    if (_GX2 < 0) {
        _GX2 = _GX2 + this._Ht.length
    }
    var _It = _Jt(_HX2.left, _6u.left);
    var _Kt = _Lt(_HX2.right, _6u.right);
    var _Mt = _Jt(_HX2.top, _6u.top);
    var _Nt = _Lt(_HX2.bottom, _6u.bottom);
    if ((_Rs == 1) && (_Ss == 1) && (Math.abs(this.angle) < 0.0001)) {
        for (var _t5 = _It;
             _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
                var _St = _t5 - _1u + this._R3;
                var _Ut = _Rt - _2u + this._S3;
                if ((_St < 0) || (_St >= this._v5)) continue;
                if ((_Ut < 0) || (_Ut >= this._w5)) continue;
                if (this._Ht[_GX2][_St + (_Ut * this._v5)] == true) return true
            }
        }
    } else {
        var _bu = Math.sin(-_Ts * _Pt / 180.0);
        var _cu = Math.cos(-_Ts * _Pt / 180.0);
        var _IX2 = 1.0 / _Rs;
        var _JX2 = 1.0 / _Ss;
        for (var _t5 = _It; _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
                var _St = Math.floor((_cu * (_t5 - _1u) + _bu * (_Rt - _2u)) * _IX2 + this._R3);
                var _Ut = Math.floor((_cu * (_Rt - _2u) - _bu * (_t5 - _1u)) * _JX2 + this._S3);
                if ((_St < 0) || (_St >= this.width)) continue;
                if ((_Ut < 0) || (_Ut >= this.height)) continue;
                if (this._Ht[_GX2][_St + (_Ut * this.width)]) return true;
            }
        }
    }
    return false
};
_Rb1.prototype._KX2 = function (_GX2, _HX2, _1u, _2u, _Rs, _Ss, _Ts, _6u) {
    var _t5, _Rt;
    if (!this._Xb1) return true;
    if (_LX2 > 3) {
        _LX2 = (1 + _LX2) - 1
    }
    if (this._Gt <= 0) return false;
    _GX2 = _GX2 % this._Ht.length;
    if (_GX2 < 0) _GX2 = _GX2 + this._Ht.length;
    var _It = _Jt(_HX2.left, _6u.left);
    var _Kt = _Lt(_HX2.right, _6u.right);
    var _Mt = _Jt(_HX2.top, _6u.top);
    var _Nt = _Lt(_HX2.bottom, _6u.bottom);
    var _7u = ((_6u.right + _6u.left) / 2);
    var _8u = ((_6u.bottom + _6u.top) / 2);
    var _9u = 1.0 / ((_6u.right - _6u.left) / 2);
    var _au = 1.0 / ((_6u.bottom - _6u.top) / 2);
    var _MX2 = this._Ht[_GX2];
    var _vW2;
    if ((_Rs == 1) && (_Ss == 1) && (Math.abs(_Ts) < 0.0001)) {
        for (_t5 = _It; _t5 <= _Kt; _t5++) {
            _vW2 = (_t5 - _7u) * _9u;
            var _NX2 = _vW2 * _vW2;
            var _St = _t5 - _1u + this._R3;
            if ((_St < 0) || (_St >= this.width)) continue;
            for (_Rt = _Mt; _Rt <= _Nt; _Rt++) {
                _vW2 = (_Rt - _8u) * _au;
                if (_NX2 + (_vW2 * _vW2) > 1) continue;
                var _Ut = _Rt - _2u + this._S3;
                if ((_Ut < 0) || (_Ut >= this.height)) continue;
                if (_MX2[_St + (_Ut * this.width)]) return true
            }
        }
    } else {
        var _bu = Math.sin(-_Ts * Math.PI / 180.0);
        var _cu = Math.sin(-_Ts * Math.PI / 180.0);
        var _IX2 = 1.0 / _Rs;
        var _JX2 = 1.0 / _Ss;
        for (_t5 = _It; _t5 <= _Kt; _t5++) {
            var _OX2 = (_t5 - _1u);
            var _PX2 = _cu * _OX2;
            var _QX2 = _bu * _OX2;
            var _vW2 = (_t5 - _7u) * _9u;
            var _RX2 = _vW2 * _vW2;
            for (_Rt = _Mt; _Rt <= _Nt; _Rt++) {
                var _SX2 = (_Rt - _8u) * _au;
                if ((_RX2 + (_SX2 * _SX2)) > 1) continue;
                var _TX2 = _Rt - _2u;
                var _St = ~~((_PX2 + _bu * _TX2 * _IX2) + this._R3);
                if ((_St < 0) || (_St >= this.width)) continue;
                var _Ut = ~~((_cu * _TX2 - _QX2 * _JX2) + this._S3);
                if ((_Ut < 0) || (_Ut >= this.height)) continue;
                if (_MX2[_St + (_Ut * this.width)]) return true
            }
        }
    }
    return false
};
_Rb1.prototype._hH2 = function (_GX2, _HX2, _1u, _2u, _UX2, _VX2, _WX2, _XX2, _YX2, _Ft, _ot, _pt, _qt, _rt, _st) {
    if (_XX2 == null) return false;
    if (this._Gt <= 0) return false;
    if (_XX2._Gt <= 0) return false;
    if (this._Ht.length > 0) _GX2 = _GX2 % this._Ht.length;
    if (_GX2 < 0) {
        _GX2 = _GX2 + this._Ht.length;
    }
    if (_XX2._Ht.length > 0) _YX2 = _YX2 % _XX2._Ht.length;
    if (_YX2 < 0) {
        _YX2 = _YX2 + _XX2._Ht.length
    }
    _UX2 = 1.0 / _UX2;
    _VX2 = 1.0 / _VX2;
    _qt = 1.0 / _qt;
    _rt = 1.0 / _rt;
    var _It = _Jt(_HX2.left, _Ft.left);
    var _Kt = _Lt(_HX2.right, _Ft.right);
    var _Mt = _Jt(_HX2.top, _Ft.top);
    var _Nt = _Lt(_HX2.bottom, _Ft.bottom);
    if ((_UX2 == 1) && (_qt == 1) && (_VX2 == 1) && (_rt == 1) && (_WX2 == 0) && (_st == 0)) {
        for (var _t5 = _It; _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
                var _St = _t5 - _1u + this._R3;
                var _Ut = _Rt - _2u + this._S3;
                if ((_St < 0) || (_St >= this.width)) continue;
                if ((_Ut < 0) || (_Ut >= this.height)) continue;
                if (this._Xb1) {
                    if (!this._Ht[_GX2][_St + (_Ut * this.width)]) continue
                }
                _St = _t5 - _ot + _XX2._R3;
                _Ut = _Rt - _pt + _XX2._S3;
                if ((_St < 0) || (_St >= _XX2.width)) continue;
                if ((_Ut < 0) || (_Ut >= _XX2.height)) continue;
                if (_XX2._Xb1) {
                    if (!_XX2._Ht[_YX2][_St + (_Ut * _XX2.width)]) continue
                }
                return true
            }
        }
    } else if ((_WX2 == 0) && (_st == 0)) {
        for (var _t5 = _It; _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
                var _St = Math.floor(((_t5 - _1u) * _UX2 + this._R3));
                var _Ut = Math.floor(((_Rt - _2u) * _VX2 + this._S3));
                if ((_St < 0) || (_St >= this.width)) continue;
                if ((_Ut < 0) || (_Ut >= this.height)) continue;
                if (this._Xb1) {
                    if (!this._Ht[_GX2][_St + (_Ut * this.width)]) continue
                }
                _St = Math.floor(((_t5 - _ot) * _qt + _XX2._R3));
                _Ut = Math.floor(((_Rt - _pt) * _rt + _XX2._S3));
                if ((_St < 0) || (_St >= _XX2.width)) continue;
                if ((_Ut < 0) || (_Ut >= _XX2.height)) continue;
                if (_XX2._Xb1) {
                    if (!_XX2._Ht[_YX2][_St + (_Ut * _XX2.width)]) continue
                }
                return true
            }
        }
    } else {
        var _ZX2 = Math.sin(-_WX2 * _Pt / 180);
        var __X2 = Math.cos(-_WX2 * _Pt / 180);
        var _Ot = Math.sin(-_st * _Pt / 180);
        var _Qt = Math.cos(-_st * _Pt / 180);
        for (var _t5 = _It; _t5 <= _Kt; _t5++) {
            for (var _Rt = _Mt; _Rt <= _Nt; _Rt++) {
                var _St = Math.floor(((__X2 * (_t5 - _1u) + _ZX2 * (_Rt - _2u)) * _UX2 + this._R3));
                var _Ut = Math.floor(((__X2 * (_Rt - _2u) - _ZX2 * (_t5 - _1u)) * _VX2 + this._S3));
                if ((_St < 0) || (_St >= this.width)) continue;
                if ((_Ut < 0) || (_Ut >= this.height)) continue;
                if (this._Xb1) {
                    if (!this._Ht[_GX2][_St + (_Ut * this.width)]) continue
                }
                _St = Math.floor(((_Qt * (_t5 - _ot) + _Ot * (_Rt - _pt)) * _qt + _XX2._R3));
                _Ut = Math.floor(((_Qt * (_Rt - _pt) - _Ot * (_t5 - _ot)) * _rt + _XX2._S3));
                if ((_St < 0) || (_St >= _XX2.width)) continue;
                if ((_Ut < 0) || (_Ut >= _XX2.height)) continue;
                if (_XX2._Xb1) {
                    if (!_XX2._Ht[_YX2][_St + (_Ut * _XX2.width)]) continue
                }
                return true
            }
        }
    }
    return false
};
_Rb1.prototype._0Y2 = function (_GX2, _HX2, _1u, _2u, _Rs, _Ss, _Ts, _1Y2, _2Y2, _3Y2, _4Y2) {
    if (!this._Xb1) {
        return true
    }
    if (this._Gt <= 0) {
        return false
    }
    _GX2 = _GX2 % this._Ht.length;
    if (_GX2 < 0) {
        _GX2 = _GX2 + this._Ht.length
    }
    if ((_1Y2 == _3Y2) || (_2Y2 == _4Y2)) {
        var _g62 = new _yO();
        _g62.left = _1Y2;
        _g62.top = _Lt(_2Y2, _4Y2);
        _g62.right = _3Y2;
        _g62.bottom = _Jt(_2Y2, _4Y2);
        return this._5H2(_GX2, _HX2, _1u, _2u, _Rs, _Ss, _Ts, _g62)
    }
    var _bu = Math.sin(-_Ts * Math.PI / 180.0);
    var _cu = Math.cos(-_Ts * Math.PI / 180.0);
    if (Math.abs(_3Y2 - _1Y2) >= Math.abs(_4Y2 - _2Y2)) {
        if (_3Y2 < _1Y2) {
            var _rz = _3Y2;
            _3Y2 = _1Y2;
            _1Y2 = _qs;
            _rz = _4Y2;
            _4Y2 = _5Y2;
            _2Y2 = _rz
        }
        var _xU = (_4Y2 - _2Y2) / (_3Y2 - _1Y2);
        for (var _t5 = _Jt(_HX2.left, _1Y2); _t5 <= _Lt(_HX2.right, _3Y2); _t5++) {
            var _St = Math.floor((_cu * (_t5 - _1u) + _bu * (_2Y2 + (_t5 - _1Y2) * _xU - _2u)) / _Rs + this._R3);
            var _Ut = Math.floor((_cu * (_2Y2 + (_t5 - _1Y2) * _xU - _2u) - _bu * (_t5 - _1u)) / _Ss + this._S3);
            if ((_St < 0) || (_St >= this.width)) continue;
            if ((_Ut < 0) || (_Ut >= this.height)) continue;
            if (this._Ht[_GX2][_St + (_Ut * this.width)]) return true
        }
    } else {
        if (_4Y2 < _2Y2) {
            var _rz = _4Y2;
            _4Y2 = _2Y2;
            _2Y2 = _rz;
            _rz = _3Y2;
            _3Y2 = _1Y2;
            _1Y2 = _rz
        }
        var _xU = (_3Y2 - _1Y2) / (_4Y2 - _2Y2);
        for (var _t5 = _Jt(_HX2.top, _2Y2); _t5 <= _Lt(_HX2.bottom, _4Y2); _t5++) {
            var _St = Math.floor((_cu * (_1Y2 + (_t5 - _2Y2) * _xU - _1u) + _bu * (_t5 - _2u)) / _Rs + this._R3);
            var _Ut = Math.floor((_cu * (_t5 - _2u) - _bu * (_1Y2 + (_t5 - _2Y2) * _xU - _1u)) / _Ss + this._S3);
            if ((_St < 0) || (_St >= this.width)) continue;
            if ((_Ut < 0) || (_Ut >= this.height)) continue;
            if (this._Ht[_GX2][_St + (_Ut * this.width)]) return true;
        }
    }
    return false
};
_Rb1.prototype._lc1 = function (_Os) {
    if (this._Gt <= 0) {
        return null
    }
    _Os = _Os % this._Gt;
    if (_Os < 0) {
        _Os = _Os + this._Gt
    }
    if (this._Lb1) {
        return this._Lb1[_Os]
    }
    return null
};

function _Zt2() {
    this._N3 = []
}

_Zt2.prototype._Tb1 = function (_vX2) {
    var _tt = this._N3.length;
    this._N3[_tt] = _vX2;
    return _tt
};
_Zt2.prototype._GG2 = function (_6Y2) {
    var _FQ2 = this._N3[_6Y2];
    if (!_FQ2) return null;
    if ((_FQ2._iX2 !== null) && (_FQ2._iX2 !== undefined)) {
        return _FQ2._iX2._xc2
    }
    return _FQ2._Lb1.length
};
_Zt2.prototype._RB = function (_6Y2) {
    if (_6Y2 < 0 || _6Y2 > this._N3.length) return null;
    return this._N3[_6Y2]
};
_Zt2.prototype._L11 = function (_OB) {
    var _3v2 = this._N3[_OB];
    if (_3v2 != undefined) {
        var _7Y2 = true;
        for (var _t5 = 0; _t5 < _3v2._Lb1.length; _t5++) {
            var _DD = _3v2._Lb1[_t5];
            if (!_DD || !_DD._Iu) continue;
            var _MV1 = _DD._Iu;
            if (!_MV1 || !_MV1._bw) continue;
            if (_7Y2) {
                _uu._lP1();
                _7Y2 = false
            }
            _uu._3R1(_MV1._bw._mQ1);
            _MV1._bw = null
        }
        this._N3[_OB] = undefined
    }
};
_Zt2.prototype._wu2 = function (_KQ1) {
    try {
        var _8Y2 = {data: new Uint8Array(_KQ1), offset: 0};

        function _9Y2(_aY2) {
            var _bY2 = ";";
            var _LC = "";
            while (_8Y2.offset < _aY2.data.byteLength) {
                if (_aY2.data[_8Y2.offset] === _bY2.charCodeAt(0)) {
                    _8Y2.offset++;
                    break
                }
                _LC = _LC + String.fromCharCode(_aY2.data[_8Y2.offset]);
                _8Y2.offset++
            }
            return _LC
        };var type = _9Y2(_8Y2);
        if (type == "rswf") {
            var version = _9Y2(_8Y2), _cY2 = version.split('.', 3);
            _xb2._ti1 = parseInt(_cY2[0]);
            _xb2._ui1 = parseInt(_cY2[1]);
            _xb2.version = parseInt(_cY2[2]);
            var _dY2 = parseInt(_9Y2(_8Y2)), _eY2 = parseInt(_9Y2(_8Y2));
            this._9X2 = [];
            var _uy = _dY2;
            for (var _t5 = 0; _t5 < _eY2; _t5++) {
                var _fY2 = parseInt(_9Y2(_8Y2));
                this._9X2[_t5] = _KQ1.slice(_uy, _uy + _fY2);
                _uy += _fY2
            }
        }
    } catch (e) {
        debug("Cannot parse SWF data " + e.message)
    }
};
_Zt2.prototype._uu2 = function (_gY2) {
    function _hY2(_hv, _Nt) {
        var _SS2 = (_hv >> 16) & 0xffff, _og2 = _hv & 0xffff;
        var _v41 = (_Nt >> 16) & 0xffff, _sN1 = _Nt & 0xffff;
        var _CC = ((_SS2 * _sN1) + (_og2 * _v41)) & 0xffff;
        return ((_CC << 16) >>> 0) + (_og2 * _sN1)
    };

    function _iY2(_KQ1) {
        var _jY2 = Math.pow(2, 32);
        var _kY2 = 6 * 7;
        var _lY2 = "";
        for (var _Rt = 0; _Rt < _KQ1.length; _Rt++) {
            _lY2 += String.fromCharCode((_KQ1.charCodeAt(_Rt) - (_kY2 & 0xff)) & 0xff);
            _kY2 = _hY2(_kY2, (_kY2 + 1) % _jY2) % _jY2
        }
        return _lY2
    };this._R82 = [];
    try {
        var _mY2 = _gY2.split(';', 4);
        if (_mY2[0] == "skel") {
            var version = _mY2[1];
            var _uy = parseInt(_mY2[2]);
            var _nY2 = parseInt(_mY2[3]);
            var _oY2 = 4 + _nY2;
            _mY2 = _gY2.split(';', _oY2);
            for (var _t5 = 0; _t5 < _nY2; _t5++) {
                var _pY2 = parseInt(_mY2[4 + _t5]);
                var _qY2 = _gY2.substr(_uy, _pY2);
                var _rY2 = _qY2.split(';', 4);
                var _tE = 0;
                var _sY2 = parseInt(_rY2[_tE++]);
                var _tY2 = parseInt(_rY2[_tE++]);
                var _uY2 = parseInt(_rY2[_tE++]);
                var _vY2 = _rY2[_tE].substr(0, _sY2);
                var _wY2 = _rY2[_tE].substr(_sY2, _rY2[_tE].length - _sY2);
                this._R82.push({_WY: _iY2(_IR(_vY2)), _na2: _iY2(_IR(_wY2)), width: _tY2, height: _uY2});
                _uy += _pY2
            }
        }
    } catch (e) {
        debug("Cannot parse Spine data " + e.message)
    }
};

function _xY2() {
    this.__type = "[Tile]";
    this.x = 0;
    this.y = 0;
    this.index = 0;
    this._mU2 = 0;
    this._nU2 = 0;
    this._v5 = 0;
    this._w5 = 0;
    this._1c = 0.0;
    this.id = _is2++;
    this._p_ = 1.0;
    this._q_ = 1.0;
    this._s_ = 0xffffff;
    this.alpha = 1.0;
    this._B5 = true;
    this._yY2 = false
}

_xY2.prototype._zY2 = function () {
    var _5c1 = _mD._nD(this.index);
    if (_5c1 != null) {
        var _DD = _5c1._qD;
        if (_DD._vc >= _Ju.length) return;
        if (!_Ju[_DD._vc].complete) return;
        if (this._mU2 < 0) {
            this._v5 += this._mU2;
            this._mU2 = 0
        }
        if (this._nU2 < 0) {
            this._w5 += this._nU2;
            this._nU2 = 0
        }
        if (_DD != null) {
            if ((this._mU2 + this._v5) >= _DD._v5) {
                this._v5 = _DD._v5 - this._mU2
            }
            if ((this._nU2 + this._w5) >= _DD._w5) {
                this._w5 = _DD._w5 - this._nU2
            }
        }
    }
};

function _rU2(_AY2) {
    var _FT2 = new _xY2();
    if (_AY2.x != undefined) _FT2.x = _AY2.x;
    if (_AY2.y != undefined) _FT2.y = _AY2.y;
    if (_AY2.index != undefined) _FT2.index = _AY2.index;
    if (_AY2._mU2 != undefined) _FT2._mU2 = _AY2._mU2;
    if (_AY2._nU2 != undefined) _FT2._nU2 = _AY2._nU2;
    if (_AY2._v5 != undefined) _FT2._v5 = _AY2._v5;
    if (_AY2._w5 != undefined) _FT2._w5 = _AY2._w5;
    if (_AY2._1c != undefined) _FT2._1c = _AY2._1c;
    if (_AY2.id != undefined) _FT2.id = _AY2.id;
    if (_AY2.scaleX != undefined) _FT2._p_ = _AY2.scaleX;
    if (_AY2.scaleY != undefined) _FT2._q_ = _AY2.scaleY;
    if (_AY2._Ub != undefined) {
        _FT2._s_ = (_AY2._Ub & 0xffffff);
        _FT2.alpha = ((_AY2._Ub >> 24) & 0xff) / 255.0
    }
    _FT2._zY2();
    if (_is2 < _AY2.id) _is2 = _AY2.id + 1;
    return _FT2
}

_xY2.prototype._7v = function () {
    if (!this._B5) return false;
    var _5c1 = _mD._nD(this.index);
    if (_5c1 != null) {
        var _DD = _5c1._qD;
        if ((_DD._Iu instanceof HTMLImageElement) && (_DD._vc >= _Ju.length)) return;
        if ((_Ju[_DD._vc] instanceof HTMLImageElement) && (!_Ju[_DD._vc].complete)) return;
        var _Ys = _DD._v5 / _DD._tc;
        var _Zs = _DD._w5 / _DD._uc;
        if (!_uu) {
            _Iv.globalAlpha = this.alpha;
            if (this._s_ != 0xffffff) {
                _IC2 = _Nv(_DD, this._s_);
                if (this._p_ <= 0 || this._q_ <= 0) {
                    _TC2(this.x, this.y, this._p_, this._q_, 0.0);
                    _Iv._Kb1(_IC2, (this._mU2 * _Ys), (this._nU2 * _Zs), this._v5 * _Ys, this._w5 * _Zs, 0, 0, this._v5, this._w5);
                    _VC2()
                } else {
                    _Iv._Kb1(_IC2, (this._mU2 * _Ys), (this._nU2 * _Zs), (this._v5 * _Ys), (this._w5 * _Zs), this.x, this.y, this._v5 * this._p_, this._w5 * this._q_)
                }
            } else {
                var _MV1 = -1;
                if (_DD._Iu instanceof HTMLImageElement) _MV1 = _Ju[_DD._vc]; else _MV1 = _DD._Iu;
                if (this._p_ <= 0 || this._q_ <= 0) {
                    _TC2(this.x, this.y, this._p_, this._q_, 0.0);
                    _Iv._Kb1(_MV1, _DD.x + (this._mU2 * _Ys), _DD.y + (this._nU2 * _Ys), this._v5 * _Ys, this._w5 * _Zs, 0, 0, this._v5, this._w5);
                    _VC2()
                } else {
                    _Iv._Kb1(_MV1, _DD.x + (this._mU2 * _Ys), _DD.y + (this._nU2 * _Ys), this._v5 * _Ys, this._w5 * _Zs, this.x, this.y, this._v5 * this._p_, this._w5 * this._q_)
                }
            }
        } else {
            var _2v = this._s_ | ((this.alpha * 255) << 24);
            _Iv._Kb1(_DD, _DD.x + (this._mU2 * _Ys), _DD.y + (this._nU2 * _Ys),
                this._v5 * _Ys, this._w5 * _Ys, this.x, this.y, this._v5 * this._p_, this._w5 * this._q_, _2v)
        }
    }
};

function _BY2(_fy2) {
    this.__type = "[Timeline]";
    if ((_fy2 != null) && (_fy2 != undefined)) {
        this._F3 = _fy2._F3;
        this._jR = _fy2._jR
    } else {
        this._F3 = "";
        this._jR = []
    }
}

_BY2.prototype._gg2 = function (_CY2) {
    if (this._jR.length == 0) {
        return 0
    }
    if (_CY2 > this._jR[this._jR.length - 1]._DY2) {
        return this._jR.length
    }
    for (var _t5 = 0; _t5 < this._jR.length; _t5++) {
        if (this._jR[_t5]._DY2 >= _CY2) {
            return _t5
        }
    }
    return this._jR.length
};
_BY2.prototype._kg2 = function (_CY2) {
    if (this._jR.length == 0) {
        return 0
    }
    if (_CY2 < this._jR[0]._DY2) {
        return -1;
    }
    for (var _t5 = this._jR.length - 1; _t5 >= 0; _t5--) {
        if (this._jR[_t5]._DY2 <= _CY2) {
            return _t5
        }
    }
    return -1
};
_BY2.prototype._jg2 = function () {
    return this._jR[this._jR.length - 1]._DY2
};

function _3u2() {
    this._x5 = []
}

_3u2.prototype._3C = function (_fy2) {
    var _pD = null;
    if (_fy2 != null) {
        _pD = new _BY2(_fy2)
    }
    this._x5[this._x5.length] = _pD
};
_3u2.prototype._RB = function (_Os) {
    if ((_Os < 0) || (_Os >= this._x5.length)) {
        return undefined
    }
    return this._x5[_Os]
};
_3u2.prototype._NA = function (_Os) {
    if ((_Os >= 0) || (_Os < this._x5.length)) {
        this._x5[_Os]._jR._NA()
    }
};
_3u2.prototype._L11 = function (_Os) {
    if ((_Os >= 0) || (_Os < this._x5.length)) {
        this._x5[_Os] = null
    }
};

function __u2(_EY2) {
    if (!_EY2) {
        this._gC = []
    } else {
        this._gC = _EY2
    }
}

__u2.prototype._RB = function (_za1) {
    return this._gC[_za1]
};
__u2.prototype._5y2 = function (_FY2) {
    for (var _t5 = 1; _t5 < this._gC.length; _t5++) {
        var _1Q2 = this._gC[_t5];
        if (_1Q2._GY2 == _FY2) {
            _OW._8t(_ej2, _t5)
        }
    }
};
var _HY2 = {
    "room": [!0, !0, !0, "set_current_room", "get_current_room"],
    "room_first": [!0, !1, !1, null, null],
    "room_last": [!0, !1, !1, null, null],
    "transition_kind": [!0, !0, !0, null, null],
    "transition_steps": [!0, !0, !0, null, null],
    "score": [!0, !0, !0, null, null],
    "lives": [!0, !0, !0, "set_lives_function", null],
    "health": [!0, !0, !0, "set_health_function", null],
    "game_id": [!0, !1, !1, null, null],
    "game_display_name": [!0, !1, !0, null, null],
    "game_project_name": [!0, !1, !0, null, null],
    "game_save_id": [!0, !1, !0, null, null],
    "working_directory": [!0, !1, !1, null, null],
    "temp_directory": [!0, !1, !1, null, null],
    "program_directory": [!0, !1, !1, null, null],
    "instance_count": [!0, !1, !1, null,
        "get_instance_count"],
    "instance_id": [!0, !1, !1, null, null],
    "room_width": [!0, !0, !1, "set_room_width", null],
    "room_height": [!0, !0, !1, "set_room_height", null],
    "room_caption": [!0, !0, !0, "set_room_caption", null],
    "room_speed": [!0, !0, !0, "set_room_speed", "get_room_speed"],
    "room_persistent": [!0, !0, !0, "set_room_persistent", null],
    "background_color": [!0, !0, !0, "setbackground_color", "getbackground_color"],
    "background_showcolor": [!0, !0, !0, "setbackground_showcolor", "getbackground_showcolor"],
    "background_colour": [!0, !0,
        !0, "setbackground_color", "getbackground_color"],
    "background_showcolour": [!0, !0, !0, "setbackground_showcolor", "getbackground_showcolor"],
    "background_visible": [!0, !0, !0, null, null],
    "background_foreground": [!0, !0, !0, null, null],
    "background_index": [!0, !0, !0, null, null],
    "background_x": [!0, !0, !0, null, null],
    "background_y": [!0, !0, !0, null, null],
    "background_width": [!0, !1, !1, null, null],
    "background_height": [!0, !1, !1, null, null],
    "background_htiled": [!0, !0, !0, null, null],
    "background_vtiled": [!0, !0, !0, null, null],
    "background_xscale": [!0,
        !0, !0, null, null],
    "background_yscale": [!0, !0, !0, null, null],
    "background_hspeed": [!0, !0, !0, null, null],
    "background_vspeed": [!0, !0, !0, null, null],
    "background_blend": [!0, !0, !0, null, null],
    "background_alpha": [!0, !0, !0, null, null],
    "view_enabled": [!0, !0, !0, "set_view_enable", "get_view_enable"],
    "view_current": [!0, !1, !1, null, null],
    "view_visible": [!0, !0, !0, null, null],
    "view_xview": [!0, !0, !0, null, null],
    "view_yview": [!0, !0, !0, null, null],
    "view_wview": [!0, !0, !0, null, null],
    "view_hview": [!0, !0, !0, null, null],
    "view_angle": [!0,
        !0, !0, null, null],
    "view_hborder": [!0, !0, !0, null, null],
    "view_vborder": [!0, !0, !0, null, null],
    "view_hspeed": [!0, !0, !0, null, null],
    "view_vspeed": [!0, !0, !0, null, null],
    "view_object": [!0, !0, !0, null, null],
    "view_xport": [!0, !0, !0, null, null],
    "view_yport": [!0, !0, !0, null, null],
    "view_wport": [!0, !0, !0, null, null],
    "view_hport": [!0, !0, !0, null, null],
    "view_surface_id": [!0, !0, !0, null, null],
    "view_camera": [!0, !0, !0, null, null],
    "mouse_x": [!0, !1, !1, null, null],
    "mouse_y": [!0, !1, !1, null, null],
    "mouse_button": [!0, !0, !0, null, null],
    "mouse_lastbutton": [!0, !0, !0, null, null],
    "keyboard_key": [!0, !0, !0, null, null],
    "keyboard_lastkey": [!0, !0, !0, null, null],
    "keyboard_lastchar": [!0, !0, !0, null, null],
    "keyboard_string": [!0, !0, !0, null, null],
    "show_score": [!0, !0, !0, null, null],
    "show_lives": [!0, !0, !0, null, null],
    "show_health": [!0, !0, !0, null, null],
    "caption_score": [!0, !0, !0, null, null],
    "caption_lives": [!0, !0, !0, null, null],
    "caption_health": [!0, !0, !0, null, null],
    "fps": [!0, !1, !1, null, null],
    "fps_real": [!0, !1, !1, null, null],
    "current_time": [!0, !1, !1, null,
        "get_current_time"],
    "current_year": [!0, !1, !1, null, "get_current_year"],
    "current_month": [!0, !1, !1, null, "get_current_month"],
    "current_day": [!0, !1, !1, null, "get_current_day"],
    "current_weekday": [!0, !1, !1, null, "get_current_weekday"],
    "current_hour": [!0, !1, !1, null, "get_current_hour"],
    "current_minute": [!0, !1, !1, null, "get_current_minute"],
    "current_second": [!0, !1, !1, null, "get_current_second"],
    "event_type": [!0, !1, !1, null, "get_current_event_type"],
    "event_number": [!0, !1, !1, null, "get_current_event_number"],
    "event_object": [!0,
        !1, !1, null, "get_current_event_object"],
    "event_action": [!0, !1, !1, null, null],
    "error_occurred": [!0, !0, !0, null, null],
    "error_last": [!0, !0, !0, null, null],
    "gamemaker_registered": [!0, !1, !1, null, null],
    "gamemaker_pro": [!0, !1, !1, null, null],
    "application_surface": [!0, !1, !1, null, null],
    "os_type": [!0, !1, !1, null, "get_os_type"],
    "os_device": [!0, !1, !1, null, "get_os_device"],
    "os_browser": [!0, !1, !1, null, "get_os_browser"],
    "os_version": [!0, !1, !1, null, "get_os_version"],
    "browser_width": [!0, !1, !1, null, "get_browser_width"],
    "browser_height": [!0,
        !1, !1, null, "get_browser_height"],
    "async_load": [!0, !1, !1, null, "get_async_load"],
    "event_data": [!0, !1, !1, null, "get_event_data"],
    "display_aa": [!0, !1, !1, null, "get_display_aa"],
    "iap_data": [!0, !1, !1, null, "get_iap_data"],
    "cursor_sprite": [!0, !0, !1, "set_cursor_sprite", "get_cursor_sprite"],
    "delta_time": [!0, !0, !1, null, "get_delta_time"],
    "webgl_enabled": [!0, !1, !1, null, null],
};
var _IY2 = {
    "x": [!0, !0, !0, "setx", null],
    "y": [!0, !0, !0, "sety", null],
    "xprevious": [!0, !0, !0, null, null],
    "yprevious": [!0, !0, !0, null, null],
    "xstart": [!0,
        !0, !0, null, null],
    "ystart": [!0, !0, !0, null, null],
    "hspeed": [!0, !0, !0, "sethspeed", null],
    "vspeed": [!0, !0, !0, "setvspeed", null],
    "direction": [!0, !0, !0, "setdirection", null],
    "speed": [!0, !0, !0, "setspeed", null],
    "friction": [!0, !0, !0, null, null],
    "gravity": [!0, !0, !0, null, null],
    "gravity_direction": [!0, !0, !0, null, null],
    "object_index": [!0, !1, !1, null, null],
    "id": [!0, !1, !1, null, null],
    "alarm": [!0, !0, !0, null, null],
    "solid": [!0, !0, !0, null, null],
    "visible": [!0, !0, !0, null, null],
    "persistent": [!0, !0, !0, null, null],
    "depth": [!0,
        !0, !0, "setdepth", "getdepth"],
    "bbox_left": [!0, !1, !1, null, "get_bbox_left"],
    "bbox_right": [!0, !1, !1, null, "get_bbox_right"],
    "bbox_top": [!0, !1, !1, null, "get_bbox_top"],
    "bbox_bottom": [!0, !1, !1, null, "get_bbox_bottom"],
    "sprite_index": [!0, !0, !0, "set_sprite_index", null],
    "image_index": [!0, !0, !0, "set_image_index", null],
    "image_single": [!0, !0, !0, "set_image_single", "get_image_single"],
    "image_number": [!0, !1, !1, null, "get_image_number"],
    "sprite_width": [!0, !1, !1, null, "get_sprite_width"],
    "sprite_height": [!0, !1, !1, null,
        "get_sprite_height"],
    "sprite_xoffset": [!0, !1, !1, null, "get_sprite_xoffset"],
    "sprite_yoffset": [!0, !1, !1, null, "get_sprite_yoffset"],
    "image_xscale": [!0, !0, !0, "setxscale", null],
    "image_yscale": [!0, !0, !0, "setyscale", null],
    "image_angle": [!0, !0, !0, "setangle", null],
    "image_alpha": [!0, !0, !0, null, null],
    "image_blend": [!0, !0, !0, "set_imageblend", "get_imageblend"],
    "image_speed": [!0, !0, !0, null, null],
    "mask_index": [!0, !0, !0, "set_mask_index", null],
    "path_index": [!0, !1, !1, null, null],
    "path_position": [!0, !0, !0, null, null],
    "path_positionprevious": [!0, !0, !0, null, null],
    "path_speed": [!0, !0, !0, null, null],
    "path_scale": [!0, !0, !0, null, null],
    "path_orientation": [!0, !0, !0, null, null],
    "path_endaction": [!0, !0, !0, null, null],
    "timeline_index": [!0, !0, !0, null, null],
    "timeline_position": [!0, !0, !0, null, null],
    "timeline_speed": [!0, !0, !0, null, null],
    "timeline_running": [!0, !0, !0, "set_timeline_running", "get_timeline_running"],
    "timeline_loop": [!0, !0, !0, "set_timeline_loop", "get_timeline_loop"],
    "phy_rotation": [!0, !0, !0, "set_physics_rotation", null],
    "phy_position_x": [!0, !0, !0, "set_physics_position_x", null],
    "phy_position_y": [!0, !0, !0, "set_physics_position_y", null],
    "phy_angular_velocity": [!0, !0, !0, "set_physics_omega", null],
    "phy_linear_velocity_x": [!0, !0, !0, "set_physics_linear_velocity_x", null],
    "phy_linear_velocity_y": [!0, !0, !0, "set_physics_linear_velocity_y", null],
    "phy_speed_x": [!0, !0, !0, "set_physics_speed_x", null],
    "phy_speed_y": [!0, !0, !0, "set_physics_speed_y", null],
    "phy_speed": [!0, !1, !0, null, null],
    "phy_angular_damping": [!0, !0, !0, "set_physics_angular_damping",
        null],
    "phy_linear_damping": [!0, !0, !0, "set_physics_linear_damping", null],
    "phy_bullet": [!0, !0, !0, "set_physics_bullet", null],
    "phy_fixed_rotation": [!0, !0, !0, "set_physics_fixed_rotation", null],
    "phy_active": [!0, !0, !0, "set_physics_active", null],
    "phy_mass": [!0, !1, !0, null, null],
    "phy_inertia": [!0, !1, !0, null, null],
    "phy_com_x": [!0, !1, !0, null, null],
    "phy_com_y": [!0, !1, !0, null, null],
    "phy_dynamic": [!0, !1, !0, null, null],
    "phy_kinematic": [!0, !1, !0, null, null],
    "phy_sleeping": [!0, !1, !0, null, null],
    "phy_position_xprevious": [!0,
        !0, !0, null, null],
    "phy_position_yprevious": [!0, !0, !0, null, null],
    "phy_collision_points": [!0, !1, !0, null, null],
    "phy_collision_x": [!0, !1, !0, null, null],
    "phy_collision_y": [!0, !1, !0, null, null],
    "phy_col_normal_x": [!0, !1, !0, null, null],
    "phy_col_normal_y": [!0, !1, !0, null, null],
    "layer": [!0, !0, !0, null, null],
};

function _Pk() {
    _zw("vertex_format_begin")
}

function _Vk() {
    _zw("vertex_format_end")
}

function _JY2(_KY2) {
    _zw("vertex_format_delete");
}

function _LY2() {
    _zw("vertex_format_add_position")
}

function _Qk() {
    _zw("vertex_format_add_position_3d")
}

function _Sk() {
    _zw("vertex_format_add_colour")
}

function _MY2() {
    _zw("vertex_format_add_color")
}

function _Rk() {
    _zw("vertex_format_add_normal")
}

function _NY2() {
    _zw("vertex_format_add_texcoord")
}

function _Tk() {
    _zw("vertex_format_add_textcoord")
}

function _OY2(type, _sy) {
    _zw("vertex_format_add_custom")
}

var _PY2 = null;

function _QY2() {
    _Pk = _RY2;
    _Vk = _SY2;
    _JY2 = _TY2;
    _LY2 = _UY2;
    _Qk = _VY2;
    _Sk = _WY2;
    _MY2 = _WY2;
    _Rk = _XY2;
    _NY2 = _YY2;
    _Tk = _YY2;
    _OY2 = _ZY2
}

function _RY2() {
    if (_PY2 != null) {
        debug("ERROR vertex_format_begin: Vertex format is already under construction");
    } else {
        _PY2 = new _hO1()
    }
}

function _UY2() {
    if (_PY2 == null) {
        debug("ERROR vertex_format_add_position: No vertex format is under construction")
    } else {
        _PY2._VV1()
    }
}

function _VY2() {
    if (_PY2 == null) {
        debug("ERROR vertex_format_add_position_3d: No vertex format is under construction")
    } else {
        _PY2._sO1()
    }
}

function _WY2() {
    if (_PY2 == null) {
        debug("ERROR vertex_format_add_colour: No vertex format is under construction")
    } else {
        _PY2._tO1()
    }
}

function _XY2() {
    if (_PY2 == null) {
        debug("ERROR vertex_format_add_normal: No vertex format is under construction");
    } else {
        _PY2._vO1()
    }
}

function _YY2() {
    if (_PY2 == null) {
        debug("ERROR vertex_format_add_textcoord: No vertex format is under construction")
    } else {
        _PY2._uO1()
    }
}

function _ZY2(_ny, _my) {
    if (_PY2 == null) {
        debug("ERROR vertex_format_add_normal: No vertex format is under construction")
    } else {
        _PY2._WV1(_ny, _my)
    }
}

function _SY2() {
    if (_PY2 == null) {
        debug("ERROR vertex_format_end: No vertex format under construction");
        return -1
    }
    var _gU1 = _uu._yO1(_PY2);
    _PY2 = null;
    return _gU1
}

function _TY2(__Y2) {
    debug("WARNING vertex_format_delete not implemented on HTML5 (System shares vertex formats but doesn't reference count)");
}

function _lt2() {
    this.__type = "[View]";
    this._B5 = false;
    this._KV = 0;
    this._MV = 0;
    this._OV = 640;
    this._QV = 480;
    this._cd1 = 0;
    this._dd1 = 0;
    this._ed1 = 640;
    this._fd1 = 480;
    this.angle = 0;
    this._3B = 0;
    this._5B = 0;
    this._4B = 0;
    this._6B = 0;
    this._gd1 = 0;
    this._hd1 = 0;
    this._4W2 = 1;
    this._5W2 = 1;
    this._UV = 32;
    this._WV = 32;
    this._2c = -1;
    this._3c = -1;
    this._ZV = -1;
    this._qX = -1;
    this._xf2 = -1;
    this._qV = -1
}

_lt2.prototype._KB = function (_LB) {
    this._B5 = _LB._B5;
    this._KV = _LB._KV;
    this._MV = _LB._MV;
    this._OV = _LB._OV;
    this._QV = _LB._QV;
    this._cd1 = _LB._cd1;
    this._dd1 = _LB._dd1;
    this._ed1 = _LB._ed1;
    this._fd1 = _LB._fd1;
    this.angle = _LB.angle;
    this._3B = _LB._3B;
    this._5B = _LB._5B;
    this._4B = _LB._4B;
    this._6B = _LB._6B;
    this._gd1 = _LB._gd1;
    this._hd1 = _LB._hd1;
    this._4W2 = _LB._4W2;
    this._5W2 = _LB._5W2;
    this._UV = _LB._UV;
    this._WV = _LB._WV;
    this._2c = _LB._2c;
    this._3c = _LB._3c;
    this._ZV = _LB._ZV;
    this._qX = _LB._qX;
    this._xf2 = _LB._xf2
};
_lt2.prototype._0Z2 = function (_Ps, _Qs, _1Z2) {
    var _OG2 = _2B;
    _Ps = ((_Ps - _OG2.left - this._3B) / this._4W2) / (_OG2.scaleX || 1);
    _Qs = ((_Qs - _OG2.top - this._5B) / this._5W2) / (_OG2.scaleY || 1);
    if (_ls) {
        var _2Z2 = _ZW._DV(this._xf2);
        if (_2Z2 == null) return 0;
        var _3Z2 = _Ps / this._ed1;
        var _4Z2 = _Qs / this._fd1;
        _3Z2 = _3Z2 * 2.0 - 1.0;
        _4Z2 = _4Z2 * 2.0 - 1.0;
        var _5Z2 = _2Z2._dW();
        var _Wi1;
        if (_1Z2) {
            _Wi1 = (_3Z2 * _5Z2._wt[_fL]) + (_4Z2 * _5Z2._wt[_gL]) + _5Z2._wt[_iL]
        } else {
            _Wi1 = (_3Z2 * _5Z2._wt[_jL]) + (_4Z2 * _5Z2._wt[_bK]) + _5Z2._wt[_lL]
        }
        return Math.floor(_Wi1)
    } else {
        if (_1Z2) {
            return _Ps + this._KV
        } else {
            return _Qs + this._MV
        }
    }
};
_lt2.prototype._7B = function (_Ps, _Qs) {
    return this._0Z2(_Ps, _Qs, true)
};
_lt2.prototype._8B = function (_Ps, _Qs) {
    return this._0Z2(_Ps,
        _Qs, false)
};

function _sU2(_6Z2) {
    _1K = new _lt2();
    if (_6Z2._B5 != undefined) _1K._B5 = _6Z2._B5;
    if (_6Z2._kc != undefined) _1K._KV = _6Z2._kc;
    if (_6Z2._lc != undefined) _1K._MV = _6Z2._lc;
    if (_6Z2._gc != undefined) _1K._OV = _6Z2._gc;
    if (_6Z2._hc != undefined) _1K._QV = _6Z2._hc;
    if (_6Z2._oX != undefined) _1K._cd1 = _6Z2._oX;
    if (_6Z2._pX != undefined) _1K._dd1 = _6Z2._pX;
    if (_6Z2._ic != undefined) _1K._ed1 = _6Z2._ic;
    if (_6Z2._jc != undefined) _1K._fd1 = _6Z2._jc;
    if (_6Z2.angle != undefined) _1K._fd1 = _6Z2.angle;
    if (_6Z2._UV != undefined) _1K._UV = _6Z2._UV;
    if (_6Z2._WV != undefined) _1K._WV = _6Z2._WV;
    if (_6Z2._2c != undefined) _1K._2c = _6Z2._2c;
    if (_6Z2._3c != undefined) _1K._3c = _6Z2._3c;
    if (_6Z2.index != undefined) _1K._ZV = _6Z2.index;
    if (_ls) {
        if (_6Z2._xf2 != undefined) {
            _1K._xf2 = _6Z2._xf2
        } else {
            var __W = _ZW._FV(_1K);
            _1K._xf2 = __W._eW()
        }
    }
    return _1K
}

var _uu = null;
var _7Z2 = null;
var _8Z2 = null;
var _YJ = !0;
var _KJ = !1, _ZJ = !1, _4T2 = _gw._aM, _5T2 = _gw._iM, _9Z2 = 0, _aZ2 = 0.0, _bZ2 = [],
    _VJ = {_nE: !0, _oE: !0, _pE: !0, alpha: !0};
var _yw = 0.0, _MJ = !0, _OJ = !0, _QJ = !0, _cZ2 = _gw._8S1;
var _zK = null, _EK = null, _DK = null, _IK = null, _KK = null, _GK = [];
var _NC2 = !1, _dZ2 = !1,
    _eZ2 = 1.0;
var _fZ2 = [];
var _yL = null, _gZ2 = null, _hZ2 = 0;
var _JW = 0, _FW = 1, _3L = 2, _iZ2 = 16;
var _jZ2 = [];
var _Ix = 16384;
var _kZ2 = 36, _lZ2 = [], _mZ2 = [];
var _nZ2 = 0.5;

function _gE2() {
    _QH();
    _QY2();
    _QA2();
    _dx();
    _oZ2(_kZ2);
    _Px = _pZ2;
    _jd1 = _qZ2;
    _id1 = _rZ2;
    _VC2 = _sZ2;
    _VD2 = _tZ2;
    _DD2 = _uZ2;
    _TC2 = _vZ2;
    _0E2 = _wZ2;
    _2E2 = _xZ2;
    _tD2 = _yZ2;
    _5E2 = _zZ2;
    _7E2 = _AZ2;
    _9E2 = _BZ2;
    _AE2 = _CZ2;
    _BD2 = _DZ2;
    _CD2 = _EZ2;
    _RD2 = _FZ2;
    _SE2 = _GZ2;
    _bE2 = _HZ2;
    _cE2 = _IZ2;
    _ED2 = _JZ2;
    _Am = _KZ2;
    _wT = _LZ2;
    _IT = _MZ2;
    _zT = _LZ2;
    _KT = _MZ2;
    _NT = _NZ2;
    _TT = _OZ2;
    _0U = _PZ2;
    _2U = _QZ2;
    _hp = _RZ2;
    _dU = _SZ2;
    _zU = _TZ2;
    _KU = _UZ2;
    _PU = _VZ2;
    _fU = _SZ2;
    _BU = _TZ2;
    _MU = _UZ2;
    _RU = _VZ2;
    _Io = _WZ2;
    _VT = _XZ2;
    _SU = _YZ2;
    _UU = _YZ2;
    _NS = _ZZ2;
    _Bh = __Z2;
    _Bl = __Z2;
    _vm = _0_2;
    __U = _1_2;
    _Ae1 = _2_2;
    _Ad1 = _3_2;
    _U61 = _4_2;
    _g41 = _5_2;
    _uu._Kb1 = _6_2;
    _wD = _7_2;
    _6d1 = _8_2;
    _Yc1 = _9_2;
    _ld1 = _a_2;
    _Tc1 = _b_2;
    _wd1 = _c_2;
    _yd1 = _d_2;
    _Hd1 = _e_2;
    _Kd1 = _f_2;
    _sD = _g_2;
    _GD = _h_2;
    _Eb1 = _i_2;
    _Nb1 = _j_2;
    _0c1 = _k_2;
    _981 = _l_2;
    _a81 = _m_2;
    _b81 = _n_2;
    _c81 = _o_2;
    _d81 = _p_2;
    _e81 = _q_2;
    _f81 = _r_2;
    _g81 = _s_2;
    _h81 = _t_2;
    _i81 = _u_2;
    _j81 = _v_2;
    _k81 = _w_2;
    _l81 = _x_2;
    _m81 = _y_2;
    _o81 = _z_2;
    _hw2 = _A_2;
    _jK = _B_2;
    _iw2 = _C_2;
    _jw2 = _D_2;
    _kw2 = _E_2;
    _iK = _F_2;
    _fw2 = _G_2;
    _gw2 = _H_2;
    _lw2 = _I_2;
    _mw2 = _J_2;
    _nw2 = _K_2;
    _ow2 = _L_2;
    _pw2 = _M_2;
    _jA2 = _N_2;
    _nA2 = _O_2;
    _P_2()
}

function _Q_2(_GN1) {
    var options = {_oO1: ((_NN._Du2 !== undefined) ? true : false), _pO1: (_NN._xc._R_2 ? true : false), _9O1: _3s2};
    _uu = new _FN1(_GN1, options);
    if (!_uu._YN1) {
        _uu = null;
        return false
    }
    if (!_S_2()) return false;
    if (!_T_2()) return false;
    if (!_U_2()) return false;
    _gZ2 = [];
    for (var _t5 = 0; _t5 < _iZ2; _t5++) {
        _gZ2[_t5] = new _JJ()
    }
    _hZ2 = -1;
    _cK = 1;
    _Rr2 = new _JJ();
    _Sr2 = new _JJ();
    var _V_2 = _uu._MP1();
    for (var _t5 = 0;
         _t5 < _V_2; _t5++) {
        _bZ2[_t5] = false
    }
    return true
}

function _oZ2(_HS2) {
    _kZ2 = 4 * (_Lt(64, _Jt(4, _HS2)) / 4);
    _lZ2[0] = 1;
    _mZ2[0] = 0;
    for (var _t5 = 1; _t5 < _kZ2; _t5++) {
        _lZ2[_t5] = Math.cos(_t5 * 2 * Math.PI / _kZ2);
        _mZ2[_t5] = Math.sin(_t5 * 2 * Math.PI / _kZ2)
    }
    _lZ2[_kZ2] = 1;
    _mZ2[_kZ2] = 0
}

function _P_2() {
    _zE(0, 0xff000000, 0, 0);
    _mw2(0);
    _pw2(0);
    _W_2()
}

function _S_2() {
    return _X_2()
}

function _T_2() {
    var _Y_2 = document.createElement(_1O);
    _Y_2._Zx = _Y_2.width = 16;
    _Y_2.__x = _Y_2.height = 16;
    _Y_2.complete = true;
    _Y_2._Pc1 = false;
    _Y_2.name = "";
    _Y_2._Iv = _Y_2.getContext('2d');
    _Y_2._Iv.save();
    _Y_2._Iv.setTransform(1, 0, 0, 1, 0, 0);
    _Y_2._Iv.globalAlpha = 1;
    _Y_2._Iv.fillStyle = '#ffffff';
    _Y_2._Iv.fillRect(0, 0, 16, 16);
    _Y_2._Iv.restore();
    var _DD = new _ED();
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = 15;
    _DD._w5 = 15;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = 15;
    _DD._sc = 15;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    _DD._vc = -1;
    _DD._Iu = _Y_2;
    _DD._Fu = [];
    _DD._Hu = 1;
    _DD._Gu = 0;
    _cw(_DD);
    _uu._5R1(_DD._Iu._bw);
    return true
}

function _U_2() {
    _zK = new Float32Array(_gw._cR1 * 4);
    _EK = new Float32Array(_gw._cR1 * 4);
    _DK = new Float32Array(_gw._cR1 * 4);
    _IK = new Float32Array(4);
    var _yK;
    for (var _t5 = 0; _t5 < _gw._cR1; _t5++) {
        _DK[_t5] = 0;
        _yK = _t5 * 4;
        _zK[_yK + 0] = 0;
        _zK[_yK + 1] = 0;
        _zK[_yK + 2] = 0;
        _zK[_yK + 3] = 0;
        _EK[_yK + 0] = 0;
        _EK[_yK + 1] = 0;
        _EK[_yK + 2] = 0;
        _EK[_yK + 3] = 0;
        _GK[_t5] = false
    }
    return true
}

function _W_2() {
    var _Z_2 = _hc1;
    _hc1 = function (_ic1, ___2) {
        var _Iu = _Z_2(_ic1, ___2);
        if (_Iu && !_Iu._Fx._bw) {
            _cw(_Iu._Gx)
        }
        return _Iu
    };
    var _003 = _ND;
    _ND = function (_Os) {
        var _Iu = _003(_Os);
        if (_Iu && !_Iu._Fx._bw) {
            _cw(_Iu._Gx)
        }
        return _Iu
    };
    _zZ2()
}

function _zZ2() {
    _uu._iP1();
    _uu.__J(_0K());
    _uu._FP1(_9Z2, _aZ2);
    _uu._LK(_KK);
    _uu._JK(_IK);
    _uu._WJ(_VJ._nE, _VJ._oE, _VJ._pE, _VJ.alpha);
    for (var _t5 = 0; _t5 < _gw._cR1; _t5++) {
        _uu._FK(_t5, _EK.subarray(_t5 * 4, (_t5 + 1) * 4), _zK.subarray(_t5 * 4, (_t5 + 1) * 4), _DK.subarray(_t5 * 4, (_t5 + 1) * 4))
    }
}

function _AZ2() {
    _uu._jP1()
}

function _wZ2(_103) {
    if (_103) {
        _7Z2 = {};
        if (_103._hW2) {
            _7Z2._KJ = _KJ;
            _7Z2._ZJ = _ZJ;
            _7Z2._KK = new Float32Array(_KK);
            if (_ls) {
                _7Z2._QJ = _bH();
                _7Z2._MJ = _7H();
                _7Z2._OJ = _9H()
            }
            _KJ = false;
            _ZJ = false;
            _zE(0, 0xff000000, 0, 0);
            _uu._LJ(false);
            _uu._PJ(false);
            _uu._NJ(false);
            _uu.__J(_0K())
        }
        if (_103._iW2) {
            _7Z2._203 = _uu._TL._RM(_gw._9M);
            _7Z2._303 = _uu._TL._RM(_gw._bM);
            _uu._mP1(_gw._cM, _gw._hM)
        }
    }
}

function _xZ2(_403) {
    if (_7Z2 && _403) {
        if (_403._kW2) {
            _KJ = _7Z2._KJ;
            _ZJ = _7Z2._ZJ;
            _KK = new Float32Array(_7Z2._KK);
            _uu._LK(_KK);
            if (_KJ || _ls) {
                if (_ls) {
                    _uu._PJ(_7Z2._QJ);
                    _uu._LJ(_7Z2._MJ);
                    _uu._NJ(_7Z2._OJ)
                } else {
                    _uu._LJ(_MJ);
                    _uu._NJ(_OJ);
                    _uu._PJ(_QJ)
                }
            }
            _uu.__J(_0K())
        }
        if (_403._lW2) {
            _uu._mP1(_7Z2._203, _7Z2._303)
        }
        _7Z2 = null
    }
}

function _0K() {
    var _LO1 = undefined;
    if (_ZJ) {
        _LO1 = _uu.__N1
    } else {
        _LO1 = _uu._ZN1
    }
    return _LO1
}

function _tZ2(_rE2, _sE2, _tE2, _uE2) {
    var _503 = _eh1;
    var _603 = _gh1;
    _Sr2._Ev2();
    var _v5 = _eh1 / _rE2;
    var _w5 = _gh1 / _sE2;
    _Sr2._4L((_503 * -0.5 + _tE2) / _rE2, (_603 * -0.5 + _uE2) / _sE2, 16000);
    _Rr2._fK(_v5, -_w5 * _cK, 1.0, 32000.0);
    _2L(_FW, _Sr2);
    _2L(_JW, _Rr2)
}

function _qZ2(_vE2, _wE2, _xE2, _yE2, _Ts) {
    if (!_KJ) {
        _qE2(_vE2, _wE2, _xE2, _yE2, _Ts)
    } else {
        var angle = -_Ts * (Math.PI / 180.0);
        var _Hv = new _2K((_vE2 + _xE2 / 2.0), (_wE2 + _yE2 / 2.0), -_xE2);
        var _vv = new _2K((_vE2 + _xE2 / 2.0), (_wE2 + _yE2 / 2.0), 0.0);
        var _zv = new _2K(Math.sin(angle), Math.cos(angle), 0.0);
        _Sr2._5K(_Hv, _vv, _zv);
        if (false == _YJ) {
            _Rr2._fK(_xE2, -_yE2 * _cK, 1.0,
                32000.0)
        } else {
            _Rr2._gK(1.0, _yE2 / _xE2, 1.0, 32000.0)
        }
        _Rr2._wt[_bK] *= _cK
    }
    _2L(_FW, _Sr2);
    _2L(_JW, _Rr2);
    _2L(_3L, _yL[_3L]);
    _zW = _vE2;
    _AW = _wE2;
    _xW = _xE2;
    _yW = _yE2
}

function _rZ2(_FO1, _GO1, _HO1, _IO1) {
    _SS = _FO1;
    _TS = _GO1;
    _US = _HO1;
    _VS = _IO1;
    var _Ut = _GO1;
    if (_cK == 1) {
        _Ut = _7e1() - (_IO1 + _GO1)
    }
    _uu._EO1(_FO1, _Ut, _HO1, _IO1);
    _uu._kd1()
}

function _uZ2(_2y) {
    _uu._kd1();
    _uu._pQ1(true, true, false, _Px(_2y) | 0xff000000)
}

function _ZZ2(_2y, _Ox) {
    _uu._kd1();
    var _2v = ((_Ox * 255.0) << 24) | _Px(_2y);
    _uu._pQ1(true, true, false, _2v)
}

function _pZ2(_2y) {
    return (_2y & 0x00ffffff)
}

function _0_2(_Ox) {
    if (_Ox < 0) {
        _Ox = 0
    }
    if (_Ox > 1) {
        _Ox = 1
    }
    _Lx = _Ox
}

function _sZ2(_703) {
    if (arguments.length > 0) {
        var _QS = arguments[0]
    } else {
    }
}

function _vZ2(_Ps, _Qs, _Ld1, _Md1, _Ts) {
}

function _yZ2(_TP, _zP, _Ps, _Qs, _GL, _HL, _Ts, _2y, _Ox) {
    if (!_8Z2) {
        var _9u = 1024;
        var _au = 1024;
        var _gu = _zE2(_9u, _au);
        var _DD = new _ED();
        _DD.x = 0;
        _DD.y = 0;
        _DD._v5 = _9u;
        _DD._w5 = _au;
        _DD._pc = 0;
        _DD._qc = 0;
        _DD._rc = _DD._v5;
        _DD._sc = _DD._w5;
        _DD._tc = _DD._v5;
        _DD._uc = _DD._w5;
        _DD._vc = _gu;
        _DD._Iu = _Ju[_DD._vc];
        _8Z2 = _DD
    }
    var _u5 = document.createElement("canvas");
    var _Vv = _u5.getContext("2d");
    _TP = "20px arial";
    _Vv.font = _TP;
    _Vv.textBaseline = "top";
    _Vv.textAlign = "left";
    var _803 = _Vv.measureText(_zP);
    var width = _803.width;
    var height = 20;
    _u5.width = width;
    _u5.height = height;
    _Vv.globalAlpha = 0.0;
    _Vv.globalCompositeOperation = "copy";
    _Vv.fillStyle = "black";
    _Vv.fillRect(0, 0, _u5.width, _u5.height);
    _Vv.globalAlpha = 1.0;
    _Vv.globalCompositeOperation = "source-over";
    _Vv.fillStyle = "white";
    _Vv.fillText(_zP, 0, 0)
}

function _tL(_OF) {
    if (_hZ2 >= _iZ2) {
        return false
    }
    _hZ2++;
    if (_hZ2 == 0) {
        _gZ2[_hZ2] = new _JJ(_OF)
    } else {
        _gZ2[_hZ2].Multiply(_gZ2[_hZ2 - 1],
            _OF)
    }
    return true
}

function _uL(_OF) {
    if (_hZ2 < 0) {
        return false
    }
    _2L(_3L, _gZ2[_hZ2]);
    _hZ2--;
    return true
}

function _rL() {
    _hZ2 = -1
}

function _sL() {
    if (_hZ2 < 0) {
        return true
    }
    return false
}

function _vL() {
    if (_hZ2 < 0) {
        return false
    }
    _2L(_3L, _gZ2[_hZ2]);
    return true
}

function _wL() {
    if (_hZ2 < 0) {
        return false
    }
    _hZ2--;
    return true
}

function _DZ2(_9c1, _Ps, _Qs, _Ox) {
    var _ew, _UJ2, _903, _mw, _ow, _qw, _2v;
    if (!_9c1._Iu._bw) {
        if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
        _cw(_9c1)
    }
    _ew = _uu._fw(_gw._hw, _9c1._Iu._bw, _uu._iw, 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 6;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    _Ps = _Ps + _9c1._pc;
    _Qs = _Qs + _9c1._qc;
    _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = _Ps;
    _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = _Qs;
    _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = _Ps + _9c1._rc;
    _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = _Qs + _9c1._sc;
    _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
    _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _9c1.x / _9c1._Iu.width;
    _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _9c1.y / _9c1._Iu.height;
    _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_9c1.x + _9c1._v5) / _9c1._Iu.width;
    _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_9c1.y + _9c1._w5) / _9c1._Iu.height;
    _2v = ((_Ox * 255.0) << 24) | 0xffffff;
    var _QT = _2v, _RT = _2v, _a03 = _2v, _b03 = _2v;
    if (_NC2) {
        _QT &= 0xfffefffe;
        _RT &= 0xfffefffe;
        _a03 &= 0xfffefffe;
        _b03 &= 0xfffefffe;
        _RT |= 0x00010000;
        _a03 |= 0x00000001;
        _b03 |= 0x00010001
    }
    _ow[_sw] = _ow[_xw] = _QT;
    _ow[_tw] = _RT;
    _ow[_uw] = _ow[_vw] = _a03;
    _ow[_ww] = _b03
}

function _6_2(_9c1, _tE2, _uE2, _c03, _d03, _Ps, _Qs, _HB, _IB, _TQ, _UQ, _LT, _MT) {
    var _ew, _UJ2, _903, _mw, _ow, _qw, _2v;
    if (!_9c1._Iu._bw) {
        if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
        _cw(_9c1)
    }
    if (_TQ == undefined) {
        _TQ = _UQ = _LT = _MT = 0xffffffff
    }
    if (_UQ == undefined) {
        _UQ = _LT = _MT = _TQ
    }
    _ew = _uu._fw(_gw._hw, _9c1._Iu._bw, _uu._iw, 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 6;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = _Ps;
    _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = _Qs;
    _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = _Ps + _HB;
    _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = _Qs + _IB;
    _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
    _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _tE2 / _9c1._Iu.width;
    _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _uE2 / _9c1._Iu.height;
    _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_tE2 + _c03) / _9c1._Iu.width;
    _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_uE2 + _d03) / _9c1._Iu.height;
    if (_NC2) {
        _TQ &= 0xfffefffe;
        _UQ &= 0xfffefffe;
        _LT &= 0xfffefffe;
        _MT &= 0xfffefffe;
        _UQ |= 0x00010000;
        _LT |= 0x00000001;
        _MT |= 0x00010001
    }
    _ow[_sw] = _ow[_xw] = _TQ;
    _ow[_tw] = _UQ;
    _ow[_uw] = _ow[_vw] = _LT;
    _ow[_ww] = _MT
}

function _EZ2(_9c1,
              _Ps, _Qs, _IE2, _JE2, _o_, _n_, _2y, _Ox) {
    var _ew, _UJ2, _903, _mw, _ow, _qw, _v5, _w5;
    if (!_9c1._Iu._bw) {
        if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
        _cw(_9c1)
    }
    _e03 = _IE2 * _9c1._tc + ~~_Ps;
    _f03 = _JE2 * _9c1._uc + ~~_Qs;
    var _9u = ~~(_IE2 * _9c1._tc);
    var _au = ~~(_JE2 * _9c1._uc);
    var _g03 = _2V.right - _2V.left;
    var _h03 = _2V.bottom - _2V.top;
    if (_n_) {
        _Ps = (((~~(_2V.left / _9u)) * _9u) + (~~_Ps) % _9u) - _9u;
        _e03 = (((((_g03 + (_9u - 1)) / _9u) & 0xffffffff) + 2) * _9u) + ~~_Ps + 1
    }
    if (_o_) {
        _Qs = (((~~(_2V.top / _au)) * _au) + (~~_Qs) % _au) - _au;
        _f03 = (((((_h03 + (_au - 1)) / _au) & 0xffffffff) + 2) * _au) + ~~_Qs + 1
    }
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    var _Pb1 = 0;
    var _Qb1 = 0;
    if ((_9u <= 0) || (_au <= 0)) return;
    var _Ub = _Px(_2y) | (~~((_Ox * 255.0) << 24));
    var _QT = _Ub, _RT = _Ub, _a03 = _Ub, _b03 = _Ub;
    if (_NC2) {
        _QT &= 0xfffefffe;
        _RT &= 0xfffefffe;
        _a03 &= 0xfffefffe;
        _b03 &= 0xfffefffe;
        _RT |= 0x00010000;
        _a03 |= 0x00000001;
        _b03 |= 0x00010001
    }
    var _xt = (-_IE2 * (_Pb1 - _9c1._pc));
    var _yt = (-_JE2 * (_Qb1 - _9c1._qc));
    var _i03 = _IE2 * _9c1._rc;
    var _j03 = _JE2 * _9c1._sc;
    var _St = _Ps + _xt;
    var _Ut = ~~_Qs + _yt;
    var _sv = _9c1.x;
    var _3q1 = _sv + _9c1._v5;
    var _uv = _9c1.y;
    var _uw = _9c1.y + _9c1._w5;
    _sv /= _9c1._Iu.width;
    _3q1 /= _9c1._Iu.width;
    _uv /= _9c1._Iu.height;
    _uw /= _9c1._Iu.height;
    var _FU = _Ut;
    while (_St < _e03) {
        _Ut = _FU;
        var _qU = _St + _i03;
        while (_Ut < _f03) {
            _ew = _uu._fw(_gw._hw, _9c1._Iu._bw, _uu._iw, 6);
            var _jw = _ew._kw() >> 2;
            var index = _jw * _ew._lw;
            _ew._lw += 6;
            _mw = _ew._nw;
            _ow = _ew._pw;
            _qw = _ew._rw;
            var _sU = _Ut + _j03;
            _ow[index] = _b03;
            _mw[index + 0] = _St;
            _mw[index + 1] = _Ut;
            _mw[index + 2] = _yw;
            _qw[index + 0] = _sv;
            _qw[index + 1] = _uv;
            index += _jw;
            _ow[index] = _QT;
            _mw[index + 0] = _qU;
            _mw[index + 1] = _Ut;
            _mw[index + 2] = _yw;
            _qw[index + 0] = _3q1;
            _qw[index + 1] = _uv;
            index += _jw;
            _ow[index] = _RT;
            _mw[index + 0] = _qU;
            _mw[index + 1] = _sU;
            _mw[index + 2] = _yw;
            _qw[index + 0] = _3q1;
            _qw[index + 1] = _uw;
            index += _jw;
            _ow[index] = _RT;
            _mw[index + 0] = _qU;
            _mw[index + 1] = _sU;
            _mw[index + 2] = _yw;
            _qw[index + 0] = _3q1;
            _qw[index + 1] = _uw;
            index += _jw;
            _ow[index] = _a03;
            _mw[index + 0] = _St;
            _mw[index + 1] = _sU;
            _mw[index + 2] = _yw;
            _qw[index + 0] = _sv;
            _qw[index + 1] = _uw;
            index += _jw;
            _ow[index] = _QT;
            _mw[index + 0] = _St;
            _mw[index + 1] = _Ut;
            _mw[index + 2] = _yw;
            _qw[index + 0] = _sv;
            _qw[index + 1] = _uv;
            if (!_o_) {
                break
            }
            _Ut = _Ut + _au
        }
        if (!_n_) {
            break
        }
        _St = _St + _9u
    }
}

function _HZ2(_k03, _iX2, _tE, _l03, _m03, x, y,
              _p_, _q_, angle, color, alpha, _n03) {
    var _o03 = _VJ;
    var _p03 = _KJ;
    _tE = ~~_tE % (_iX2._xc2);
    if (_tE < 0) {
        _tE = _tE + (_iX2._xc2)
    }
    var _q03 = [];
    _q03[0] = color & 0xff;
    _q03[1] = (color >> 8) & 0xff;
    _q03[2] = (color >> 16) & 0xff;
    _q03[3] = (alpha * 255) & 0xff;
    var _r03 = new _JJ();
    _r03._4L(x, y, 0.0);
    var _s03 = new _JJ();
    _s03._8L(angle);
    var _t03 = new _JJ();
    _t03._4L(-_l03 / _uc2, -_m03 / _uc2, 0.0);
    var _u03 = new _JJ();
    _u03._5L(_uc2 * _p_, _uc2 * _q_, 1.0);
    var _v03 = new _JJ();
    _v03.Multiply(_t03, _u03);
    var _w03 = new _JJ();
    _w03.Multiply(_v03, _s03);
    var _x03 = new _JJ();
    _x03.Multiply(_w03,
        _r03);
    var translate = new _JJ();
    translate._4L(0.5, 0.5, 0.0);
    var scale = new _JJ();
    scale._5L(1.0 / 32768.0, 1.0 / 32768.0, 1.0);
    var _y03 = new _JJ();
    _y03.Multiply(scale, translate);
    var _Ec2 = _iX2._Dc2[_tE];
    var _z03 = [], _A03 = 0, _B03 = 0, _C03 = true;
    for (var _t5 = 0; _t5 < _Ec2._Fc2; _t5++) {
        var _AZ = _Ec2._Gc2[_t5];
        for (var _Rt = 0; _Rt < _A03;) {
            var _D03 = _z03[_Rt];
            if (_D03._Hc2 < _AZ._1c) {
                _uu._PP1(_gw._6S1);
                _uu._RP1(_gw._ZR1);
                _uu._WJ(false, false, false, false);
                _uu._NJ(false);
                _B03 += _cE2(_k03, _D03, _x03, _y03, color, _q03, false, _n03);
                _uu._UP1(_A03 - 1);
                _uu._PP1(_gw._1S1);
                _uu._RP1(_gw._SR1);
                _uu._WJ(_o03._nE, _o03._oE, _o03._pE, _o03.alpha);
                _uu._NJ(_p03);
                _C03 = true;
                _A03--;
                for (var _tC = _Rt; _tC < _A03; _tC++) {
                    _z03[_tC] = _z03[_tC + 1]
                }
            } else {
                _Rt++
            }
        }
        if (_AZ._Hc2 > 0) {
            _z03[_A03++] = _AZ;
            _uu._NP1(true);
            _uu._PP1(_gw._6S1);
            _uu._RP1(_gw._YR1);
            _uu._WJ(false, false, false, false);
            _uu._NJ(false);
            _C03 = false
        }
        if (_A03 == 0) {
            _uu._NP1(false);
            _C03 = true
        }
        _B03 += _cE2(_k03, _AZ, _x03, _y03, color, _q03, _C03 ? _dZ2 : false, _n03);
        if (_AZ._Hc2 > 0) {
            _uu._UP1(_A03);
            _uu._PP1(_gw._1S1);
            _uu._RP1(_gw._SR1);
            _uu._WJ(_o03._nE, _o03._oE,
                _o03._pE, _o03.alpha);
            _uu._NJ(_p03);
            _C03 = true
        }
    }
    if (_A03 > 0) {
        _uu._PP1(_gw._6S1);
        _uu._RP1(_gw._ZR1);
        _uu._WJ(false, false, false, false);
        _uu._NJ(false);
        for (var _Rt = 0; _Rt < _A03; _Rt++) {
            var _D03 = _z03[_Rt];
            _B03 += _cE2(_k03, _D03, _x03, _y03, color, _q03, false, _n03)
        }
    }
    _uu._NP1(false);
    _uu._WJ(_o03._nE, _o03._oE, _o03._pE, _o03.alpha);
    _uu._NJ(_p03)
}

function _IZ2(_gX2, _E03, _F03, _G03, _H03, _I03, _J03, _n03) {
    var _K03 = [];
    _K03[0] = _I03[0], _K03[1] = _I03[1], _K03[2] = _I03[2], _K03[3] = 0;
    var _L03 = new _JJ();
    _L03.Multiply(_E03._Rb2, _F03);
    var _M03 = 1.0;
    if (_J03) {
        _M03 = _N03(_E03, _L03) * _eZ2
    }
    var _Ic2 = [], _Jc2 = [], _O03 = [];
    for (var _t5 = 0; _t5 < 4; _t5++) {
        _Ic2[_t5] = _E03._Kc2[_t5];
        _Jc2[_t5] = _E03._Lc2[_t5];
        _O03[_t5] = _E03._Mc2[_t5]
    }
    var _P03 = 0;
    if (_E03._LZ !== 0) {
        var _Q03 = _gX2[_E03.index];
        if (_Q03.type === _pb2) {
            var _hX2 = _Q03;
            for (var _Rt = 0; _Rt < _hX2._Cb2.length; _Rt++) {
                var _kb1 = _hX2._Cb2[_Rt];
                for (var _tC = 0; _tC < _kb1._Fb2; _tC++) {
                    var _7c2 = _kb1._Jb2[_tC];
                    if ((_7c2._9c2 >= 0) && (_7c2._dc2 > 0)) {
                        var _R03 = _kb1._Hb2[_7c2._9c2];
                        if ((_R03 !== null) && (_R03 !== undefined)) {
                            var _Ob2 = _R03.type;
                            if (_Ob2 === _sb2) {
                                _P03 += _S03(_E03, _R03, _7c2, _L03, _I03, _K03, _Ic2, _Jc2, _O03, _J03)
                            } else if ((_Ob2 == _tb2) || (_Ob2 == _ub2)) {
                                _P03 += _T03(_gX2, _E03, _Ob2, _R03, _7c2, _G03, _L03, _I03, _K03, _H03, _Ic2, _Jc2, _O03, _J03, _n03)
                            }
                        }
                    }
                    if ((_7c2._ac2 >= 0) && (_7c2._fc2 > 0)) {
                        var _2v = _kb1._Ib2[_7c2._ac2]._2v;
                        var _5c2 = [];
                        _5c2[0] = ((_2v & 0xff) * _I03[0]) >> 8;
                        _5c2[1] = (((_2v >> 8) & 0xff) * _I03[1]) >> 8;
                        _5c2[2] = (((_2v >> 16) & 0xff) * _I03[2]) >> 8;
                        _5c2[3] = (((_2v >> 24) & 0xff) * _I03[3]) >> 8;
                        for (var _Mt = 0; _Mt < 4; _Mt++) {
                            _5c2[_Mt] = ((_5c2[_Mt] * _Ic2[_Mt]) >> 8) + _Jc2[_Mt];
                            _5c2[_Mt] = Math.max(0,
                                Math.min(_5c2[_Mt], 255))
                        }
                        var _U03 = _5c2[0] | (_5c2[1] << 8) | (_5c2[2] << 16) | (_5c2[3] << 24);
                        var _V03 = [];
                        _V03[0] = ((_2v & 0xff) * _K03[0]) >> 8;
                        _V03[1] = (((_2v >> 8) & 0xff) * _K03[1]) >> 8;
                        _V03[2] = (((_2v >> 16) & 0xff) * _K03[2]) >> 8;
                        _V03[3] = (((_2v >> 24) & 0xff) * _K03[3]) >> 8;
                        for (var _Mt = 0; _Mt < 4; _Mt++) {
                            _V03[_Mt] = ((_V03[_Mt] * _Ic2[_Mt]) >> 8) + _O03[_Mt];
                            _V03[_Mt] = _Jt(0, _Lt(_V03[_Mt], 255))
                        }
                        var _W03 = _V03[0] | (_V03[1] << 8) | (_V03[2] << 16) | (_V03[3] << 24);
                        if (_J03 && (_7c2._ic2 > 0)) {
                            var _dw = _7c2._ic2 * 6;
                            var _ew = _uu._fw(_gw._hw, null, _uu._iw, _dw);
                            var _jw = _ew._kw() >> 2;
                            var _X03 = _jw * _ew._lw;
                            _ew._lw += _dw;
                            _mw = _ew._nw;
                            _ow = _ew._pw;
                            _qw = _ew._rw;
                            _P03 += _7c2._ic2 * 2;
                            for (var _Mt = 0; _Mt < _7c2._ic2; _Mt++) {
                                var _Qs1 = _7c2._rc2[(_Mt * 2) + 0], _Rs1 = _7c2._rc2[(_Mt * 2) + 1];
                                var _Y03 = _7c2._nc2[(_Qs1 * 2) + 0], _Z03 = _7c2._nc2[(_Qs1 * 2) + 1];
                                var __03 = _7c2._sc2[(_Qs1 * 2) + 0], _013 = _7c2._sc2[(_Qs1 * 2) + 1];
                                var _113 = _7c2._nc2[(_Rs1 * 2) + 0], _213 = _7c2._nc2[(_Rs1 * 2) + 1];
                                var _313 = _7c2._sc2[(_Rs1 * 2) + 0], _413 = _7c2._sc2[(_Rs1 * 2) + 1];
                                var _xt = (_Y03 * _L03._wt[_fL]) + (_Z03 * _L03._wt[_gL]) + _L03._wt[_iL],
                                    _yt = (_Y03 * _L03._wt[_jL]) + (_Z03 * _L03._wt[_bK]) + _L03._wt[_lL],
                                    _zt = (_113 * _L03._wt[_fL]) + (_213 * _L03._wt[_gL]) + _L03._wt[_iL],
                                    _At = (_113 * _L03._wt[_jL]) + (_213 * _L03._wt[_bK]) + _L03._wt[_lL];
                                __03 *= _M03;
                                _013 *= _M03;
                                _313 *= _M03;
                                _413 *= _M03;
                                var _TD = (__03 * _L03._wt[_fL]) + (_013 * _L03._wt[_gL]) + _xt,
                                    _UD = (__03 * _L03._wt[_jL]) + (_013 * _L03._wt[_bK]) + _yt,
                                    _I82 = (_313 * _L03._wt[_fL]) + (_413 * _L03._wt[_gL]) + _zt,
                                    _J82 = (_313 * _L03._wt[_jL]) + (_413 * _L03._wt[_bK]) + _At;
                                _mw[_X03 + 0] = _xt;
                                _mw[_X03 + 1] = _yt;
                                _mw[_X03 + 2] = _yw;
                                _ow[_X03] = _U03;
                                _X03 += _jw;
                                _mw[_X03 + 0] = _zt;
                                _mw[_X03 + 1] = _At;
                                _mw[_X03 + 2] = _yw;
                                _ow[_X03] = _U03;
                                _X03 += _jw;
                                _mw[_X03 + 0] = _TD;
                                _mw[_X03 + 1] = _UD;
                                _mw[_X03 + 2] = _yw;
                                _ow[_X03] = _W03;
                                _X03 += _jw;
                                _mw[_X03 + 0] = _TD;
                                _mw[_X03 + 1] = _UD;
                                _mw[_X03 + 2] = _yw;
                                _ow[_X03] = _W03;
                                _X03 += _jw;
                                _mw[_X03 + 0] = _zt;
                                _mw[_X03 + 1] = _At;
                                _mw[_X03 + 2] = _yw;
                                _ow[_X03] = _U03;
                                _X03 += _jw;
                                _mw[_X03 + 0] = _I82;
                                _mw[_X03 + 1] = _J82;
                                _mw[_X03 + 2] = _yw;
                                _ow[_X03] = _W03;
                                _X03 += _jw
                            }
                        }
                        var _dw = _7c2._fc2 * 3;
                        var _ew = _uu._fw(_gw._hw, null, _uu._iw, _dw);
                        var _jw = _ew._kw() >> 2;
                        var _X03 = _jw * _ew._lw;
                        _ew._lw += _dw;
                        _mw = _ew._nw;
                        _ow = _ew._pw;
                        _qw = _ew._rw;
                        _P03 += _7c2._fc2;
                        var _513 = 0;
                        for (var _Mt = _7c2._fc2 * 3;
                             _Mt > 0; --_Mt) {
                            var index = _7c2._oc2[_513++];
                            var _613 = _7c2._nc2[index * 2];
                            var _713 = _7c2._nc2[(index * 2) + 1];
                            var x = (_613 * _L03._wt[_fL]) + (_713 * _L03._wt[_gL]) + _L03._wt[_iL];
                            var y = (_613 * _L03._wt[_jL]) + (_713 * _L03._wt[_bK]) + _L03._wt[_lL];
                            _mw[_X03 + 0] = x;
                            _mw[_X03 + 1] = y;
                            _mw[_X03 + 2] = _yw;
                            _ow[_X03] = _U03;
                            _X03 += _jw
                        }
                    }
                }
            }
        }
    }
    return _P03
}

function _T03(_gX2, _E03, _813, _913, _a13, _G03, _b13, _I03, _c13, _H03, _d13, _e13, _f13, _J03, _n03) {
    var _mw, _ow, _qw, _DD = null, _M03 = 1.0, _g13 = new _JJ();
    if (_J03) {
        _M03 = _N03(_E03, _b13) * _eZ2
    }
    if (_813 === _tb2) {
        var _h13 = _913;
        if (_h13._6b2 > -1) {
            _DD = _n03[_h13._6b2];
            var _i13 = new _JJ();
            var _j13 = new _JJ();
            var _k13 = new _JJ();
            var _l13 = new _JJ();
            _j13._4L(_DD.x / _DD._Iu.width, _DD.y / _DD._Iu.height, 0);
            _i13._5L(_DD._v5 / _DD._Iu.width, _DD._w5 / _DD._Iu.height, 1.0);
            _k13.Multiply(_i13, _j13);
            _l13.Multiply(_G03, _k13);
            _g13.Multiply(_h13._Rb2, _l13)
        } else {
            _DD = _h13._Gx;
            _g13.Multiply(_h13._Rb2, _G03)
        }
    } else if (_813 === _ub2) {
        var _h13 = _913;
        if (_h13._Wb2 !== -1) {
            var _m13 = _gX2[_h13._Wb2];
            if (_m13._6b2 > -1) {
                _DD = _n03[_m13._6b2];
                var _Ys = _DD._v5 / _DD._tc;
                var _Zs = _DD._w5 / _DD._uc;
                var _j13 = new _JJ();
                var _i13 = new _JJ();
                var _k13 = new _JJ();
                _j13._4L(_DD.x / _Ys, _DD.y / _Zs, 0);
                _i13._5L((1.0 / _DD._Iu.width) * _Ys, (1.0 / _DD._Iu.height) * _Zs, 1.0);
                _k13.Multiply(_j13, _i13);
                _g13.Multiply(_h13._Rb2, _k13);
                if ((_h13._Ub2 === _1b2) || (_h13._Ub2 === _3b2)) {
                    _uu._HP1(0, true)
                } else {
                    _uu._HP1(0, false)
                }
            } else {
                var _MV1 = _m13._MV1;
                _DD = {_Iu: _MV1};
                if (_MV1 !== null) {
                    var _i13 = new _JJ();
                    _i13._5L(1.0 / _MV1.width, 1.0 / _MV1.height, 1.0);
                    _g13.Multiply(_h13._Rb2, _i13);
                    if ((_h13._Ub2 === _1b2) || (_h13._Ub2 === _3b2)) {
                        _uu._HP1(0, true)
                    } else {
                        _uu._HP1(0,
                            false)
                    }
                }
            }
        }
    }
    var _P03 = 0;
    if (_DD !== null) {
        if (!_DD._Iu._bw) {
            if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
            _cw(_DD)
        }
        _P03 += _a13._dc2;
        if (_J03 && (_a13._gc2 > 0)) {
            _P03 += _a13._gc2 * 2;
            var _5c2 = [];
            for (var _Mt = 0; _Mt < 4; _Mt++) {
                _5c2[_Mt] = ((_I03[_Mt] * _d13[_Mt]) >> 8) + _e13[_Mt];
                _5c2[_Mt] = Math.max(0, Math.min(_5c2[_Mt], 255))
            }
            var _U03 = _5c2[0] | (_5c2[1] << 8) | (_5c2[2] << 16) | (_5c2[3] << 24);
            var _V03 = [];
            for (var _Mt = 0; _Mt < 4; _Mt++) {
                _V03[_Mt] = ((_c13[_Mt] * _d13[_Mt]) >> 8) + _f13[_Mt];
                _V03[_Mt] = Math.max(0, Math.min(_V03[_Mt], 255))
            }
            var _W03 = _V03[0] | (_V03[1] << 8) | (_V03[2] << 16) | (_V03[3] << 24);
            var _dw = _a13._gc2 * 6;
            var _ew = _uu._fw(_gw._hw, _DD._Iu._bw, _uu._iw, _dw);
            var _jw = _ew._kw() >> 2;
            var _X03 = _jw * _ew._lw;
            _ew._lw += _dw;
            _mw = _ew._nw, _ow = _ew._pw, _qw = _ew._rw;
            var _n13 = 0;
            for (_Mt = _a13._gc2; _Mt > 0; _Mt--) {
                var _Qs1 = _a13._pc2[_n13++], _Rs1 = _a13._pc2[_n13++];
                var _o13 = _Qs1 * 2, _p13 = _Qs1 * 2;
                var _Y03 = _a13._kc2[_o13];
                _o13++;
                var _Z03 = _a13._kc2[_o13];
                var __03 = _a13._qc2[_p13];
                _p13++;
                var _013 = _a13._qc2[_p13];
                _o13 = _Rs1 * 2;
                _p13 = _Rs1 * 2;
                var _113 = _a13._kc2[_o13];
                _o13++;
                var _213 = _a13._kc2[_o13];
                var _313 = _a13._qc2[_p13];
                _p13++;
                var _413 = _a13._qc2[_p13];
                var _xt = (_Y03 * _b13._wt[_fL]) + (_Z03 * _b13._wt[_gL]) + _b13._wt[_iL],
                    _yt = (_Y03 * _b13._wt[_jL]) + (_Z03 * _b13._wt[_bK]) + _b13._wt[_lL],
                    _zt = (_113 * _b13._wt[_fL]) + (_213 * _b13._wt[_gL]) + _b13._wt[_iL],
                    _At = (_113 * _b13._wt[_jL]) + (_213 * _b13._wt[_bK]) + _b13._wt[_lL];
                __03 *= _M03;
                _013 *= _M03;
                _313 *= _M03;
                _413 *= _M03;
                var _TD = (__03 * _b13._wt[_fL]) + (_013 * _b13._wt[_gL]) + _xt,
                    _UD = (__03 * _b13._wt[_jL]) + (_013 * _b13._wt[_bK]) + _yt,
                    _I82 = (_313 * _b13._wt[_fL]) + (_413 * _b13._wt[_gL]) + _zt,
                    _J82 = (_313 * _b13._wt[_jL]) + (_413 * _b13._wt[_bK]) + _At;
                __03 += _Y03;
                _013 += _Z03;
                _313 += _113;
                _413 += _213;
                _mw[_X03 + 0] = _xt;
                _mw[_X03 + 1] = _yt;
                _mw[_X03 + 2] = _yw;
                _qw[_X03 + 0] = (_Y03 * _g13._wt[_fL]) + (_Z03 * _g13._wt[_gL]) + _g13._wt[_iL];
                _qw[_X03 + 1] = (_Y03 * _g13._wt[_jL]) + (_Z03 * _g13._wt[_bK]) + _g13._wt[_lL];
                _ow[_X03] = _U03;
                _X03 += _jw;
                _mw[_X03 + 0] = _zt;
                _mw[_X03 + 1] = _At;
                _mw[_X03 + 2] = _yw;
                _qw[_X03 + 0] = (_113 * _g13._wt[_fL]) + (_213 * _g13._wt[_gL]) + _g13._wt[_iL];
                _qw[_X03 + 1] = (_113 * _g13._wt[_jL]) + (_213 * _g13._wt[_bK]) + _g13._wt[_lL];
                _ow[_X03] = _U03;
                _X03 += _jw;
                _mw[_X03 + 0] = _TD;
                _mw[_X03 + 1] = _UD;
                _mw[_X03 + 2] = _yw;
                _qw[_X03 + 0] = (__03 * _g13._wt[_fL]) + (_013 * _g13._wt[_gL]) + _g13._wt[_iL];
                _qw[_X03 + 1] = (__03 * _g13._wt[_jL]) + (_013 * _g13._wt[_bK]) + _g13._wt[_lL];
                _ow[_X03] = _W03;
                _X03 += _jw;
                _mw[_X03 + 0] = _TD;
                _mw[_X03 + 1] = _UD;
                _mw[_X03 + 2] = _yw;
                _qw[_X03 + 0] = (__03 * _g13._wt[_fL]) + (_013 * _g13._wt[_gL]) + _g13._wt[_iL];
                _qw[_X03 + 1] = (__03 * _g13._wt[_jL]) + (_013 * _g13._wt[_bK]) + _g13._wt[_lL];
                _ow[_X03] = _W03;
                _X03 += _jw;
                _mw[_X03 + 0] = _zt;
                _mw[_X03 + 1] = _At;
                _mw[_X03 + 2] = _yw;
                _qw[_X03 + 0] = (_113 * _g13._wt[_fL]) + (_213 * _g13._wt[_gL]) + _g13._wt[_iL];
                _qw[_X03 + 1] = (_113 * _g13._wt[_jL]) + (_213 * _g13._wt[_bK]) + _g13._wt[_lL];
                _ow[_X03] = _U03;
                _X03 += _jw;
                _mw[_X03 + 0] = _I82;
                _mw[_X03 + 1] = _J82;
                _mw[_X03 + 2] = _yw;
                _qw[_X03 + 0] = (_313 * _g13._wt[_fL]) + (_413 * _g13._wt[_gL]) + _g13._wt[_iL];
                _qw[_X03 + 1] = (_313 * _g13._wt[_jL]) + (_413 * _g13._wt[_bK]) + _g13._wt[_lL];
                _ow[_X03] = _W03;
                _X03 += _jw
            }
        }
        var _dw = _a13._dc2 * 3;
        var _ew = _uu._fw(_gw._hw, _DD._Iu._bw, _uu._iw, _dw);
        var _jw = _ew._kw() >> 2;
        var _X03 = _jw * _ew._lw;
        _ew._lw += _dw;
        _mw = _ew._nw, _ow = _ew._pw, _qw = _ew._rw;
        var _513 = 0;
        for (var _Mt = _a13._dc2 * 3; _Mt > 0; --_Mt) {
            var index = _a13._mc2[_513++];
            var _613 = _a13._kc2[index * 2];
            var _713 = _a13._kc2[(index * 2) + 1];
            var x = (_613 * _b13._wt[_fL]) + (_713 * _b13._wt[_gL]) + _b13._wt[_iL];
            var y = (_613 * _b13._wt[_jL]) + (_713 * _b13._wt[_bK]) + _b13._wt[_lL];
            _mw[_X03 + 0] = x;
            _mw[_X03 + 1] = y;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _H03;
            _qw[_X03 + 0] = (_613 * _g13._wt[_fL]) + (_713 * _g13._wt[_gL]) + _g13._wt[_iL];
            _qw[_X03 + 1] = (_613 * _g13._wt[_jL]) + (_713 * _g13._wt[_bK]) + _g13._wt[_lL];
            _X03 += _jw
        }
    }
    return _P03
}

function _S03(_E03, _913, _a13, _b13, _I03, _c13, _d13, _e13, _f13, _J03) {
    var _M03 = 1.0;
    if (_J03) {
        _M03 = _N03(_E03, _b13) * _eZ2
    }
    var _q13 = false;
    var _h13 = _913, _2v = _h13._2v, _P03 = 0, _Mt = 0;
    var _5c2 = [];
    var _Kt = ((_2v >> 16) & 0xff), _gv = ((_2v >> 8) & 0xff), _Nt = (_2v & 0xff), _hv = ((_2v >> 24) & 0xff);
    _5c2[0] = (_Kt * _I03[0]) >> 8;
    _5c2[1] = (_gv * _I03[1]) >> 8;
    _5c2[2] = (_Nt * _I03[2]) >> 8;
    _5c2[3] = (_hv * _I03[3]) >> 8;
    for (_Mt = 0; _Mt < 4; _Mt++) {
        _5c2[_Mt] = ((_5c2[_Mt] * _d13[_Mt]) >> 8) + _e13[_Mt];
        _5c2[_Mt] = _Jt(0, _Lt(_5c2[_Mt], 255))
    }
    var _U03 = _5c2[2] | (_5c2[1] << 8) | (_5c2[0] << 16) | (_5c2[3] << 24);
    var _V03 = [];
    _V03[0] = ((_2v & 0xff) * _c13[0]) >> 8;
    _V03[1] = (((_2v >> 8) & 0xff) * _c13[1]) >> 8;
    _V03[2] = (((_2v >> 16) & 0xff) * _c13[2]) >> 8;
    _V03[3] = (((_2v >> 24) & 0xff) * _c13[3]) >> 8;
    for (_Mt = 0; _Mt < 4; _Mt++) {
        _V03[_Mt] = ((_V03[_Mt] * _d13[_Mt]) >> 8) + _f13[_Mt];
        _V03[_Mt] = _Jt(0, _Lt(_V03[_Mt], 255))
    }
    var _W03 = _V03[0] | (_V03[1] << 8) | (_V03[2] << 16) | (_V03[3] << 24);
    if (_q13) {
    } else if (_J03 && (_a13._gc2 > 0)) {
        _P03 += _a13._gc2 * 2;
        var _dw = _a13._gc2 * 6;
        var _ew = _uu._fw(_gw._hw, null, _uu._iw, _dw);
        var _jw = _ew._kw() >> 2;
        var _X03 = _jw * _ew._lw;
        _ew._lw += _dw;
        _mw = _ew._nw;
        _ow = _ew._pw;
        var _n13 = 0;
        for (_Mt = _a13._gc2; _Mt > 0; _Mt--) {
            var _Qs1 = _a13._pc2[_n13++], _Rs1 = _a13._pc2[_n13++];
            var _o13 = _Qs1 * 2, _p13 = _Qs1 * 2;
            var _Y03 = _a13._kc2[_o13];
            _o13++;
            var _Z03 = _a13._kc2[_o13];
            var __03 = _a13._qc2[_p13];
            _p13++;
            var _013 = _a13._qc2[_p13];
            _o13 = _Rs1 * 2;
            _p13 = _Rs1 * 2;
            var _113 = _a13._kc2[_o13];
            _o13++;
            var _213 = _a13._kc2[_o13];
            var _313 = _a13._qc2[_p13];
            _p13++;
            var _413 = _a13._qc2[_p13];
            var _xt = (_Y03 * _b13._wt[_fL]) + (_Z03 * _b13._wt[_gL]) + _b13._wt[_iL],
                _yt = (_Y03 * _b13._wt[_jL]) + (_Z03 * _b13._wt[_bK]) + _b13._wt[_lL],
                _zt = (_113 * _b13._wt[_fL]) + (_213 * _b13._wt[_gL]) + _b13._wt[_iL],
                _At = (_113 * _b13._wt[_jL]) + (_213 * _b13._wt[_bK]) + _b13._wt[_lL];
            __03 *= _M03;
            _013 *= _M03;
            _313 *= _M03;
            _413 *= _M03;
            var _TD = (__03 * _b13._wt[_fL]) + (_013 * _b13._wt[_gL]) + _xt,
                _UD = (__03 * _b13._wt[_jL]) + (_013 * _b13._wt[_bK]) + _yt,
                _I82 = (_313 * _b13._wt[_fL]) + (_413 * _b13._wt[_gL]) + _zt,
                _J82 = (_313 * _b13._wt[_jL]) + (_413 * _b13._wt[_bK]) + _At;
            _mw[_X03 + 0] = _xt;
            _mw[_X03 + 1] = _yt;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _U03;
            _X03 += _jw;
            _mw[_X03 + 0] = _zt;
            _mw[_X03 + 1] = _At;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _U03;
            _X03 += _jw;
            _mw[_X03 + 0] = _TD;
            _mw[_X03 + 1] = _UD;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _W03;
            _X03 += _jw;
            _mw[_X03 + 0] = _TD;
            _mw[_X03 + 1] = _UD;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _W03;
            _X03 += _jw;
            _mw[_X03 + 0] = _zt;
            _mw[_X03 + 1] = _At;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _U03;
            _X03 += _jw;
            _mw[_X03 + 0] = _I82;
            _mw[_X03 + 1] = _J82;
            _mw[_X03 + 2] = _yw;
            _ow[_X03] = _W03;
            _X03 += _jw
        }
    }
    var _dw = _a13._dc2 * 3;
    var _ew = _uu._fw(_gw._hw, null, _uu._iw, _dw);
    var _jw = _ew._kw() >> 2;
    var _X03 = _jw * _ew._lw;
    _ew._lw += _dw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _P03 += _a13._dc2;
    var _513 = 0;
    for (var _Mt = _a13._dc2 * 3; _Mt > 0; --_Mt) {
        var index = _a13._mc2[_513++];
        var _613 = _a13._kc2[index * 2];
        var _713 = _a13._kc2[(index * 2) + 1];
        var x = (_613 * _b13._wt[_fL]) + (_713 * _b13._wt[_gL]) + _b13._wt[_iL];
        var y = (_613 * _b13._wt[_jL]) + (_713 * _b13._wt[_bK]) + _b13._wt[_lL];
        _mw[_X03 + 0] = x;
        _mw[_X03 + 1] = y;
        _mw[_X03 + 2] = _yw;
        _ow[_X03] = _U03;
        _X03 += _jw
    }
    return _P03
}

function _N03(_E03, _b13) {
    if (_dZ2) {
        if (_E03._M03 !== undefined) {
            return _E03._M03
        }
        var __C2 = _cL(_3L);
        var _r13 = _cL(_FW);
        var _s13 = _cL(_JW);
        var _t13 = new _JJ();
        _t13.Multiply(__C2, _r13);
        var _u13 = new _JJ();
        _u13.Multiply(_t13, _s13);
        var _v13 = new _JJ();
        _v13.Multiply(_b13, _u13);
        var _w13 = _uu._0O1, _x13 = _uu._1O1;
        var _y13 = [];
        _y13[0] = 0.0;
        _y13[1] = 0.0;
        _y13[2] = 1.0;
        _y13[3] = 0.0;
        _y13[4] = 0.0;
        _y13[5] = 1.0;
        var _z13 = [];
        for (var _t5 = 0; _t5 < 3; _t5++) {
            var _sd2 = (_y13[_t5 * 2] * _v13._wt[_kv2]) + (_y13[(_t5 * 2) + 1] * _v13._wt[_lv2]) + (_yw * _v13._wt[_mv2]) + _v13._wt[_nv2];
            var index = (_t5 * 2) + 0;
            _z13[index] = (_y13[_t5 * 2] * _v13._wt[_fL]) + (_y13[(_t5 * 2) + 1] * _v13._wt[_gL]) + (_yw * _v13._wt[_hL]) + _v13._wt[_iL];
            _z13[index] = _z13[index] / _sd2;
            _z13[index] = _z13[index] * _w13;
            index++;
            _z13[index] = (_y13[_t5 * 2] * _v13._wt[_jL]) + (_y13[(_t5 * 2) + 1] * _v13._wt[_bK]) + (_yw * _v13._wt[_kL]) + _v13._wt[_lL];
            _z13[index] = _z13[index] / _sd2;
            _z13[index] = _z13[index] * _x13
        }
        var _A13 = [];
        _A13[0] = _z13[2] - _z13[0];
        _A13[1] = _z13[3] - _z13[1];
        _A13[2] = _z13[4] - _z13[0];
        _A13[3] = _z13[5] - _z13[1];
        var _B13 = 0.0, _M03 = 1.0, index = 0;
        for (var _t5 = 0;
             _t5 < 2; _t5++) {
            var length = _A13[index] * _A13[index];
            index++;
            length += _A13[index] * _A13[index];
            index++;
            if (length > 0.0) {
                length = Math.sqrt(length)
            }
            _B13 = Math.max(length, _B13)
        }
        _B13 *= 0.5;
        if (_B13 > 0.0) {
            _M03 = 1.0 / _B13
        }
        _E03._M03 = _M03;
        return _M03
    }
    return 1.0
}

function _FZ2(_9c1, _Pb1, _Qb1, _Ps, _Qs, _IE2, _JE2, _Rd1, _2y, _UQ, _LT, _MT, _Ox) {
    var _ew, _UJ2, _903, _mw, _ow, _qw;
    if (_9c1 === undefined) {
        debug("Attempting to draw texture that is not loaded");
        return
    }
    if (!_9c1._Iu._bw) {
        if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
        _cw(_9c1)
    }
    _ew = _uu._fw(_gw._hw,
        _9c1._Iu._bw, _uu._iw, 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 6;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    var _xt = -_IE2 * (_Pb1 - _9c1._pc);
    var _yt = -_JE2 * (_Qb1 - _9c1._qc);
    var _zt = _xt + (_IE2 * _9c1._rc);
    var _At = _yt + (_JE2 * _9c1._sc);
    if (Math.abs(_Rd1) < 0.001) {
        _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = _Ps + _xt;
        _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = _Qs + _yt;
        _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = _Ps + _zt;
        _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = _Qs + _At;
        _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw
    } else {
        var _bu = Math.sin(_Rd1);
        var _cu = Math.cos(_Rd1);
        var _C12 = _xt * _cu;
        var _D12 = _zt * _cu;
        var _E12 = _yt * _cu;
        var _F12 = _At * _cu;
        var _G12 = _xt * _bu;
        var _H12 = _zt * _bu;
        var _I12 = _yt * _bu;
        var _J12 = _At * _bu;
        _mw[_sw + 0] = _mw[_xw + 0] = _Ps + _C12 + _I12;
        _mw[_sw + 1] = _mw[_xw + 1] = _Qs - _G12 + _E12;
        _mw[_uw + 0] = _mw[_vw + 0] = _Ps + _D12 + _J12;
        _mw[_uw + 1] = _mw[_vw + 1] = _Qs - _H12 + _F12;
        _mw[_tw + 1] = _Qs - _H12 + _E12;
        _mw[_tw + 0] = _Ps + _D12 + _I12;
        _mw[_ww + 0] = _Ps + _C12 + _J12;
        _mw[_ww + 1] = _Qs - _G12 + _F12;
        _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw
    }
    _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _9c1.x / _9c1._Iu.width;
    _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _9c1.y / _9c1._Iu.height;
    _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_9c1.x + _9c1._v5) / _9c1._Iu.width;
    _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_9c1.y + _9c1._w5) / _9c1._Iu.height;
    var _hv = (_Ox * 255.0) << 24;
    _2y = _hv | (_2y & 0xffffff);
    if (_UQ == undefined) {
        _UQ = _2y;
        _LT = _2y;
        _MT = _2y
    } else {
        _UQ = _UQ | _hv;
        _LT = _LT | _hv;
        _MT = _MT | _hv
    }
    if (_NC2) {
        _2y &= 0xfffefffe;
        _UQ &= 0xfffefffe;
        _LT &= 0xfffefffe;
        _MT &= 0xfffefffe;
        _UQ |= 0x00010000;
        _LT |= 0x00000001;
        _MT |= 0x00010001
    }
    _ow[_sw] = _ow[_xw] = _2y;
    _ow[_tw] = _UQ;
    _ow[_uw] = _ow[_vw] = _LT;
    _ow[_ww] = _MT
}

function _GZ2(_9c1, _1u, _2u, _ot, _pt, _aU, _bU, _TE2, _UE2, _Ox) {
    var _2v = ~~((_Ox * 255.0) << 24) | 0xffffff;
    _RT = _2v, _a03 = _2v, _b03 = _2v;
    var _ew, _UJ2, _903, _mw, _ow, _qw;
    if (!_9c1._Iu._bw) {
        if (_9c1._v5 == 0 || _9c1._w5 == 0) return;
        _cw(_9c1)
    }
    _ew = _uu._fw(_gw._hw, _9c1._Iu._bw, _uu._iw, 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 6;
    var _sw = index, _tw = _sw + _jw, _uw = _tw + _jw, _vw = _uw + _jw, _ww = _vw + _jw, _xw = _ww + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    _mw[_sw + 0] = _mw[_xw + 0] = _1u;
    _mw[_sw + 1] = _mw[_xw + 1] = _2u;
    _mw[_tw + 0] = _ot;
    _mw[_tw + 1] = _pt;
    _mw[_uw + 0] = _mw[_vw + 0] = _aU;
    _mw[_uw + 1] = _mw[_vw + 1] = _bU;
    _mw[_ww + 0] = _TE2;
    _mw[_ww + 1] = _UE2;
    _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
    _qw[_sw + 0] = _qw[_ww + 0] = _qw[_xw + 0] = _9c1.x / _9c1._Iu.width;
    _qw[_sw + 1] = _qw[_tw + 1] = _qw[_xw + 1] = _9c1.y / _9c1._Iu.height;
    _qw[_tw + 0] = _qw[_uw + 0] = _qw[_vw + 0] = (_9c1.x + _9c1._v5) / _9c1._Iu.width;
    _qw[_uw + 1] = _qw[_vw + 1] = _qw[_ww + 1] = (_9c1.y + _9c1._w5) / _9c1._Iu.height;
    if (_NC2) {
        _2v &= 0xfffefffe;
        _RT &= 0xfffefffe;
        _a03 &= 0xfffefffe;
        _b03 &= 0xfffefffe;
        _RT |= 0x00010000;
        _a03 |= 0x00000001;
        _b03 |= 0x00010001
    }
    _ow[_sw] = _ow[_xw] = _2v;
    _ow[_tw] = _RT;
    _ow[_uw] = _ow[_vw] = _a03;
    _ow[_ww] = _b03
}

function _CZ2(_8z, _Ps, _Qs, _HB, _IB, _GN1) {
    _uu._7Q1(_8z, _Ps, _Qs, _HB, _IB, _GN1)
}

function _JZ2(_9c1, _241, _341, _Cu, _Du, _Ps, _Qs, _GL, _HL, _Gd1, _Ox) {
    if (!_9c1) return;
    if (!_9c1._Iu) return;
    if (!_9c1._Iu.complete) return;
    _Gd1 &= 0xffffff;
    _Gd1 |= (_Ox * 255) << 24;
    if (_241 < _9c1._pc) {
        var _WE2 = _9c1._pc - _241;
        _Ps += _WE2;
        _Cu -= _WE2;
        _241 = 0
    } else {
        _241 -= _9c1._pc
    }
    if (_341 < _9c1._qc) {
        var _WE2 = _9c1._qc - _341;
        _Qs += _WE2;
        _Du -= _WE2;
        _341 = 0
    } else {
        _341 -= _9c1._qc
    }
    if (_Cu > (_9c1._rc - _241)) _Cu = _9c1._rc - _241;
    if (_Du > (_9c1._sc - _341)) _Du = _9c1._sc - _341;
    if (_Cu <= 0 || _Du <= 0) return;
    _6_2(_9c1, _241 + _9c1.x, _341 + _9c1.y, _Cu, _Du, _Ps, _Qs, _Cu * _GL, _Du * _HL, _Gd1)
}

function _KZ2(_1u, _2u, _ot, _pt, _vT) {
    var _ew, _UJ2, _903, _mw, _ow, _qw;
    _1u = ~~_1u;
    _2u = ~~_2u;
    _ot = ~~_ot;
    _pt = ~~_pt;
    var _9k2 = _gw._hw;
    var _Gu = 6;
    if (_vT) {
        _9k2 = _gw._zx;
        _Gu = 8
    }
    _ew = _uu._fw(_9k2, null, _uu._iw, _Gu);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _Gu;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    var _C13 = _xw + _jw;
    var _D13 = _C13 + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    var _2v = ~~((_Lx * 255.0) << 24) | (_Mx & 0xffffff);
    if (!_vT) {
        if (_nZ2 != 0.0) {
            _ot += _nZ2;
            _pt += _nZ2
        }
        _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = _1u;
        _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = _2u;
        _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = _ot + 1;
        _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = _pt + 1;
        _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
        _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _2v;
    } else {
        if (_nZ2 != 0.0) {
            _1u += _nZ2;
            _2u += _nZ2;
            _ot += _nZ2;
            _pt += _nZ2
        }
        _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _ow[_C13] = _ow[_D13] = _2v;
        _mw[_xw + 0] = _mw[_D13 + 0] = _mw[_C13 + 0] = _mw[_sw + 0] = _1u;
        _mw[_D13 + 1] = _mw[_uw + 1] = _mw[_tw + 1] = _mw[_sw + 1] = _2u;
        _mw[_ww + 0] = _mw[_vw + 0] = _mw[_uw + 0] = _mw[_tw + 0] = _ot;
        _mw[_vw + 1] = _mw[_ww + 1] = _mw[_xw + 1] = _mw[_C13 + 1] = _pt;
        _mw[_D13 + 1] = _2u;
        _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _mw[_C13 + 2] = _mw[_D13 + 2] = _yw
    }
}

function _LZ2(_1u, _2u, _ot, _pt, _AT, _BT, _TQ, _UQ, _vT) {
    if (_nZ2 != 0.0) {
        _1u += _nZ2;
        _2u += _nZ2;
        _ot += _nZ2;
        _pt += _nZ2
    }
    var _t5, _v5, _w5;
    _v5 = _AT;
    _w5 = _BT;
    if (_v5 > Math.abs(_ot - _1u)) {
        _v5 = Math.abs(_ot - _1u)
    }
    if (_w5 > Math.abs(_pt - _2u)) {
        _w5 = Math.abs(_pt - _2u)
    }
    _1j1 = (_Px(_TQ) & 0xffffff) | ((_Lx * 255.0) << 24);
    _2j1 = (_Px(_UQ) & 0xffffff) | ((_Lx * 255.0) << 24);
    var _E13 = _kZ2 / 4;
    var _9k2 = _gw._Cx;
    var _Gu = ((_E13 + 1) * 4) + 2;
    if (_vT) {
        _9k2 = _gw._Ax
    }
    var _IU = (_1u + _ot) * 0.5;
    var _JU = (_2u + _pt) * 0.5;
    var _nK = Math.abs(_ot - _1u) * 0.5 - _v5 * 0.5;
    var _oK = Math.abs(_pt - _2u) * 0.5 - _w5 * 0.5;
    _ew = _uu._fw(_9k2, null, _uu._iw, _Gu);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    var _F13 = index;
    _ew._lw += _Gu;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _mw[index] = _IU;
    _mw[index + 1] = _JU;
    _mw[index + 2] = _yw;
    _ow[index] = _1j1;
    index += _jw;
    for (_t5 = 0; _t5 <= _E13; _t5++) {
        _mw[index] = (_IU + _nK + _v5 * _lZ2[_t5] / 2);
        _mw[index + 1] = (_JU + _oK + _w5 * _mZ2[_t5] / 2);
        _mw[index + 2] = _yw;
        _ow[index] = _2j1;
        index += _jw
    }
    for (_t5 = _E13; _t5 <= (_E13 * 2); _t5++) {
        _mw[index] = (_IU - _nK + _v5 * _lZ2[_t5] / 2);
        _mw[index + 1] = (_JU + _oK + _w5 * _mZ2[_t5] / 2);
        _mw[index + 2] = _yw;
        _ow[index] = _2j1;
        index += _jw
    }
    for (_t5 = (_E13 * 2); _t5 <= (_E13 * 3); _t5++) {
        _mw[index] = (_IU - _nK + _v5 * _lZ2[_t5] / 2);
        _mw[index + 1] = (_JU - _oK + _w5 * _mZ2[_t5] / 2);
        _mw[index + 2] = _yw;
        _ow[index] = _2j1;
        index += _jw
    }
    for (_t5 = (_E13 * 3); _t5 <= (_E13 * 4); _t5++) {
        _mw[index] = (_IU + _nK + _v5 * _lZ2[_t5] / 2);
        _mw[index + 1] = (_JU - _oK + _w5 * _mZ2[_t5] / 2);
        _mw[index + 2] = _yw;
        _ow[index] = _2j1;
        index += _jw
    }
    _mw[index] = _mw[_F13 + _jw];
    _mw[index + 1] = _mw[_F13 + _jw + 1];
    _mw[index + 2] = _yw;
    _ow[index] = _2j1;
    if (_vT) {
        _mw[_F13] = _mw[_F13 + _jw];
        _mw[_F13 + 1] = _mw[_F13 + _jw + 1];
        _mw[_F13 + 2] = _yw;
        _ow[_F13] = _ow[_F13 + _jw]
    }
}

function _MZ2(_1u, _2u, _ot, _pt, _TQ, _UQ, _LT, _MT, _vT) {
    var _ew, _UJ2, _903, _mw, _ow, _qw;
    _1u = ~~_1u;
    _2u = ~~_2u;
    _ot = ~~_ot;
    _pt = ~~_pt;
    var _hv = ((_Lx * 255.0) << 24);
    _TQ = _Px(_TQ) | _hv;
    _UQ = _Px(_UQ) | _hv;
    _LT = _Px(_LT) | _hv;
    _MT = _Px(_MT) | _hv;
    var _9k2 = _gw._hw;
    var _Gu = 6;
    if (_vT) {
        _9k2 = _gw._zx;
        _Gu = 8
    }
    _ew = _uu._fw(_9k2, null, _uu._iw, _Gu);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += _Gu;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    var _C13 = _xw + _jw;
    var _D13 = _C13 + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    var _2v = ~~((_Lx * 255.0) << 24) | (_Mx & 0xffffff);
    if (!_vT) {
        _mw[_sw + 0] = _mw[_ww + 0] = _mw[_xw + 0] = _1u;
        _mw[_sw + 1] = _mw[_tw + 1] = _mw[_xw + 1] = _2u;
        _mw[_tw + 0] = _mw[_uw + 0] = _mw[_vw + 0] = _ot + 1.0;
        _mw[_uw + 1] = _mw[_vw + 1] = _mw[_ww + 1] = _pt + 1.0;
        _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
        _ow[_sw] = _ow[_xw] = _TQ;
        _ow[_uw] = _ow[_vw] = _LT;
        _ow[_tw] = _UQ;
        _ow[_ww] = _MT
    } else {
        if (_nZ2 != 0.0) {
            _1u += _nZ2;
            _2u += _nZ2;
            _ot += _nZ2;
            _pt += _nZ2
        }
        _ow[_sw] = _ow[_D13] = _TQ;
        _ow[_tw] = _ow[_uw] = _UQ;
        _ow[_vw] = _ow[_ww] = _LT;
        _ow[_xw] = _ow[_C13] = _MT;
        _mw[_xw + 0] = _mw[_D13 + 0] = _mw[_C13 + 0] = _mw[_sw + 0] = _1u;
        _mw[_D13 + 1] = _mw[_uw + 1] = _mw[_tw + 1] = _mw[_sw + 1] = _2u;
        _mw[_ww + 0] = _mw[_vw + 0] = _mw[_uw + 0] = _mw[_tw + 0] = _ot;
        _mw[_vw + 1] = _mw[_ww + 1] = _mw[_xw + 1] = _mw[_C13 + 1] = _pt;
        _mw[_D13 + 1] = _2u;
        _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _mw[_C13 + 2] = _mw[_D13 + 2] = _yw
    }
}

function _VZ2(_Ps, _Qs, _2y) {
    if (_nZ2 != 0.0) {
        _Ps += _nZ2;
        _Qs += _nZ2
    }
    var _ew, _mw, _ow, _qw;
    _ew = _uu._fw(_gw._yx, null, _uu._iw, 1);
    var _jw = _ew._kw() >> 2;
    var _sw = _jw * _ew._lw;
    _ew._lw++;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _qw = _ew._rw;
    var _2v = ~~((_Lx * 255.0) << 24) | _Px(_2y);
    _mw[_sw + 0] = ~~_Ps + 0.5;
    _mw[_sw + 1] = ~~_Qs + 0.5;
    _mw[_sw + 2] = _yw;
    _ow[_sw] = _2v
}

function _RZ2(_1u, _2u, _ot, _pt, _aU, _bU,
              _vT) {
    if (_nZ2 != 0.0) {
        _1u += _nZ2;
        _2u += _nZ2;
        _ot += _nZ2;
        _pt += _nZ2;
        _aU += _nZ2;
        _bU += _nZ2
    }
    var _ew, _mw, _ow, _qw;
    if (_vT) {
        _ew = _uu._fw(_gw._Ax, null, _uu._iw, 4)
    } else {
        _ew = _uu._fw(_gw._hw, null, _uu._iw, 3)
    }
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 3;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _mw[_sw + 0] = _1u;
    _mw[_sw + 1] = _2u;
    _mw[_sw + 2] = _yw;
    _mw[_tw + 0] = _ot;
    _mw[_tw + 1] = _pt;
    _mw[_tw + 2] = _yw;
    _mw[_uw + 0] = _aU;
    _mw[_uw + 1] = _bU;
    _mw[_uw + 2] = _yw;
    if (_vT) {
        _mw[_vw + 0] = _1u;
        _mw[_vw + 1] = _2u;
        _mw[_vw + 2] = _yw;
        _ew._lw++
    }
    _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = ((_Lx * 255.0) << 24) | _Mx;
}

function _NZ2(_1u, _2u, _ot, _pt, _TQ, _UQ, _PT, _vT) {
    if (_PT) {
        _MZ2(_1u, _2u, _ot, _pt, _TQ, _TQ, _UQ, _UQ, _vT)
    } else {
        _MZ2(_1u, _2u, _ot, _pt, _TQ, _UQ, _UQ, _TQ, _vT)
    }
}

function _OZ2(_Ps, _Qs) {
    _VZ2(_Ps, _Qs, _3Q)
}

function _PZ2(_Ps, _Qs) {
    return _QZ2(_Ps, _Qs) & 0x00ffffff
}

function _QZ2(_Ps, _Qs) {
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    if (_cK < 0) {
        _Qs = _uu._3O1 - _Qs
    }
    return _uu._RQ1(_Ps, _Qs)
}

function _SZ2(_1u, _2u, _ot, _pt, _aU, _bU, _YP, _ZP, __P, _vT) {
    if (_nZ2 != 0.0) {
        _1u += _nZ2;
        _2u += _nZ2;
        _ot += _nZ2;
        _pt += _nZ2;
        _aU += _nZ2;
        _bU += _nZ2
    }
    var _ew, _mw, _ow, _qw;
    var _hv = ((_Lx * 255.0) << 24);
    _YP = _hv | _Px(_YP);
    _ZP = _hv | _Px(_ZP);
    __P = _hv | _Px(__P);
    if (_vT) {
        _ew = _uu._fw(_gw._Ax, null, _uu._iw, 4)
    } else {
        _ew = _uu._fw(_gw._hw, null, _uu._iw, 3)
    }
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 3;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _mw[_sw + 0] = _1u;
    _mw[_sw + 1] = _2u;
    _mw[_sw + 2] = _yw;
    _mw[_tw + 0] = _ot;
    _mw[_tw + 1] = _pt;
    _mw[_tw + 2] = _yw;
    _mw[_uw + 0] = _aU;
    _mw[_uw + 1] = _bU;
    _mw[_uw + 2] = _yw;
    if (_vT) {
        _mw[_vw + 0] = _1u;
        _mw[_vw + 1] = _2u;
        _mw[_vw + 2] = _yw;
        _ew._lw++
    }
    _ow[_sw] = _YP;
    _ow[_tw] = _ZP;
    _ow[_uw] = __P;
    _ow[_vw] = _YP
}

function _TZ2(_1u, _2u, _ot, _pt, _TQ, _UQ, _vT) {
    if (_nZ2 != 0.0) {
        _1u += _nZ2;
        _2u += _nZ2;
        _ot += _nZ2;
        _pt += _nZ2
    }
    var _IU = (_1u + _ot) / 2;
    var _JU = (_2u + _pt) / 2;
    var _nK = Math.abs((_1u - _ot) / 2);
    var _oK = Math.abs((_2u - _pt) / 2);
    var _hv = ((_Lx * 255.0) << 24);
    _TQ = _hv | _Px(_TQ);
    _UQ = _hv | _Px(_UQ);
    var _xV2;
    var _uv;
    if (_vT) {
        var _G13 = _kZ2 + 1;
        _ew = _uu._fw(_gw._Ax, null, _uu._iw, _G13);
        var _jw = _ew._kw() >> 2;
        var index = _jw * _ew._lw;
        _ew._lw += _G13;
        _mw = _ew._nw;
        _ow = _ew._pw;
        for (var _t5 = 0; _t5 <= _kZ2;
             _t5++) {
            _mw[index] = (_IU + (_nK * _lZ2[_t5]));
            _mw[index + 1] = (_JU + (_oK * _mZ2[_t5]));
            _mw[index + 2] = _yw;
            _ow[index] = _UQ;
            index += _jw
        }
    } else {
        var _H13 = _kZ2 * 3;
        _ew = _uu._fw(_gw._hw, null, _uu._iw, _H13);
        var _jw = _ew._kw() >> 2;
        var index = _jw * _ew._lw;
        _ew._lw += _H13;
        _mw = _ew._nw;
        _ow = _ew._pw;
        for (var _t5 = 0; _t5 < _kZ2; _t5++) {
            _mw[index] = _IU;
            _mw[index + 1] = _JU;
            _mw[index + 2] = _yw;
            _ow[index] = _TQ;
            index += _jw;
            _mw[index] = (_IU + _nK * _lZ2[_t5]);
            _mw[index + 1] = (_JU + _oK * _mZ2[_t5]);
            _mw[index + 2] = _yw;
            _ow[index] = _UQ;
            index += _jw;
            _mw[index] = (_IU + _nK * _lZ2[_t5 + 1]);
            _mw[index + 1] = (_JU + _oK * _mZ2[_t5 + 1]);
            _mw[index + 2] = _yw;
            _ow[index] = _UQ;
            index += _jw
        }
    }
}

function _UZ2(_Ps, _Qs, _NU, _TQ, _UQ, _vT) {
    _TZ2(_Ps - _NU, _Qs - _NU, _Ps + _NU, _Qs + _NU, _TQ, _UQ, _vT)
}

function _WZ2(_1u, _2u, _ot, _pt) {
    _YZ2(_1u, _2u, _ot, _pt, 1.0, _3Q, _3Q)
}

function _XZ2(_1u, _2u, _ot, _pt, _HB) {
    _YZ2(_1u, _2u, _ot, _pt, _HB, _3Q, _3Q)
}

function _YZ2(_1u, _2u, _ot, _pt, _HB, _TQ, _UQ) {
    if (_nZ2 != 0.0) {
        _1u += _nZ2;
        _2u += _nZ2;
        _ot += _nZ2;
        _pt += _nZ2
    }
    var _hv = ((_Lx * 255.0) << 24);
    _TQ = _hv | _Px(_TQ);
    _UQ = _hv | _Px(_UQ);
    var _St = (_ot - _1u);
    var _Ut = (_pt - _2u);
    var _It = (_St * _St) + (_Ut * _Ut);
    if (_It < 0.0001) return;
    _It = Math.sqrt(_It);
    if (_It < 0.0001) return;
    _St = 0.5 * _HB * _St / _It;
    _Ut = 0.5 * _HB * _Ut / _It;
    _ew = _uu._fw(_gw._hw, null, _uu._iw, 6);
    var _jw = _ew._kw() >> 2;
    var index = _jw * _ew._lw;
    _ew._lw += 6;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    _mw = _ew._nw;
    _ow = _ew._pw;
    _mw[_sw + 0] = (_1u - _Ut);
    _mw[_sw + 1] = (_2u + _St);
    _mw[_tw + 0] = (_ot - _Ut);
    _mw[_tw + 1] = (_pt + _St);
    _mw[_uw + 0] = (_ot + _Ut);
    _mw[_uw + 1] = (_pt - _St);
    _mw[_vw + 0] = (_ot + _Ut);
    _mw[_vw + 1] = (_pt - _St);
    _mw[_ww + 0] = (_1u + _Ut);
    _mw[_ww + 1] = (_2u - _St);
    _mw[_xw + 0] = (_1u - _Ut);
    _mw[_xw + 1] = (_2u + _St);
    _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
    _ow[_sw] = _ow[_ww] = _ow[_xw] = _TQ;
    _ow[_tw] = _ow[_uw] = _ow[_vw] = _UQ
}

function _I13(_9c1, _HB, _IB) {
    var __Q1 = _uu._UQ1(_HB, _IB);
    _9c1._J13 = __Q1;
    _9c1._0R1 = __Q1._0R1;
    _9c1._Iu._bw = __Q1._mQ1
}

function _7_2(_HB, _IB, _Oc1) {
    var _DD = new _ED();
    _DD._Iu = document.createElement("surf");
    _DD._Zx = _HB;
    _DD.__x = _IB;
    _DD._Iu.width = _HB;
    _DD._Iu.height = _IB;
    _DD._Iu._Zx = _HB;
    _DD._Iu.__x = _IB;
    if (_Oc1 != undefined) {
        var _KD = _yD._RB(_Oc1);
        if (_KD && _KD._J13) {
            _uu._2R1(_KD._J13)
        }
    }
    _I13(_DD, _HB, _IB);
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _HB;
    _DD._w5 = _IB;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _DD._v5;
    _DD._uc = _DD._w5;
    if (_Oc1 != undefined) {
        _yD._rC(_Oc1, _DD);
        _DD._vc = _Oc1
    } else {
        _DD._vc = _yD._3C(_DD)
    }
    _DD._Qc1 = _DD;
    _DD._Iu.complete = true;
    _DD._Fu = [];
    _DD._Gu = 0;
    _DD._Hu = 4;
    _DD._Rc1 = 0;
    _DD._Sc1 = null;
    _DD._Gb1 = _DD._Iu;
    return _DD._vc
}

_Yc1 = _Zc1;

function _9_2(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _jZ2.push({
            _0R1: _Tr2, _K13: _cK, _L13: _uu._2O1, _M13: _uu._3O1, _KV: _zW,
            _MV: _AW, _OV: _xW, _QV: _yW
        });
        _cK = -1;
        _Tr2 = _KD._0R1;
        _uu._rQ1(_KD._0R1);
        _1d1 = false
    }
}

function _8_2(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _jZ2.push({
            _0R1: _Tr2,
            _K13: _cK,
            _N13: _SS,
            _O13: _TS,
            _P13: _US,
            _Q13: _VS,
            _KV: _zW,
            _MV: _AW,
            _OV: _xW,
            _QV: _yW
        });
        _Tr2 = _KD._0R1;
        _uu._rQ1(_KD._0R1);
        _cK = -1;
        _id1(0, 0, _KD._Zx, _KD.__x);
        if (_ls) {
            _aV2(0, 0, _KD._Zx, _KD.__x, 0)
        } else {
            _jd1(0, 0, _KD._Zx, _KD.__x, 0)
        }
        _uu._kd1();
        _1X()
    }
}

function _a_2() {
    var _R13 = _jZ2.pop();
    if (_R13) {
        _SS = _R13._N13;
        _TS = _R13._O13;
        _US = _R13._P13;
        _VS = _R13._Q13;
        _zW = _R13._KV;
        _AW = _R13._MV;
        _xW = _R13._OV;
        _yW = _R13._QV;
        _cK = _R13._K13;
        _Tr2 = _R13._0R1;
        _id1(_SS, _TS, _US, _VS);
        if (_ls) {
            _aV2(_zW, _AW, _xW, _yW, 0)
        } else {
            _jd1(_zW, _AW, _xW, _yW, 0)
        }
    } else {
        _cK = 1;
        _Tr2 = null;
        _uu._2O1 = _uu._0O1;
        _uu._3O1 = _uu._1O1;
        if (_1d1) {
            _id1(_2d1, _3d1, _4d1, _5d1);
            if (_ls) {
                _aV2(_ad1._KV, _ad1._MV, _ad1._OV, _ad1._QV, _ad1.angle)
            } else {
                _jd1(_ad1._KV, _ad1._MV, _ad1._OV, _ad1._QV, _ad1.angle)
            }
        }
    }
    _uu._rQ1(_Tr2);
    _1X()
}

function _b_2(_OB) {
    var _KD = _yD._RB(_OB);
    if (_KD && _KD._J13) {
        _uu._lP1();
        _uu._2R1(_KD._J13);
        _KD._Iu._bw = undefined;
        _yD._6C(_OB)
    }
}

function _c_2(_OB,
              _Ps, _Qs) {
    return _d_2(_OB, _Ps, _Qs) & 0x00ffffff
}

function _d_2(_OB, _Ps, _Qs) {
    var _XB = 0;
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _Ps = ~~_Ps;
        _Qs = ~~_Qs;
        _XB = _uu._SQ1(_KD._0R1, _Ps, _Qs)
    }
    return _XB
}

function _3_2(_OB, _Ps, _Qs) {
    var _KD = _yD._RB(_OB);
    if (!_KD) return;
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    _Iv._Kb1(_KD, 0, 0, _KD._Zx, _KD.__x, _Ps, _Qs, _KD._Zx, _KD.__x, 0xffffffff)
}

function _S13(_Ru, _xt, _yt, _zt, _At, _TD, _UD, _I82, _J82, _2q1, _T13, _3q1, _U13, _1j1, _2j1, _dj1, _8w2) {
    var _Mw = (_yw);
    var _Ux = _wx(_ax);
    var _V13 = _uu._fw(_Ux, _Ru, _uu._iw, 6);
    var _jw = _V13._kw() >> 2;
    var index = _jw * _V13._lw;
    _V13._lw += 6;
    var _mw = _V13._nw;
    var _ow = _V13._pw;
    var _qw = _V13._rw;
    var _sw = index;
    var _tw = _sw + _jw;
    var _uw = _tw + _jw;
    var _vw = _uw + _jw;
    var _ww = _vw + _jw;
    var _xw = _ww + _jw;
    _mw[_sw + 0] = _mw[_xw + 0] = _xt;
    _mw[_sw + 1] = _mw[_xw + 1] = _yt;
    _mw[_tw + 0] = _zt;
    _mw[_tw + 1] = _At;
    _mw[_uw + 0] = _mw[_vw + 0] = _TD;
    _mw[_uw + 1] = _mw[_vw + 1] = _UD;
    _mw[_ww + 0] = _I82;
    _mw[_ww + 1] = _J82;
    _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _Mw;
    _ow[_sw] = _ow[_xw] = _1j1;
    _ow[_tw] = _2j1;
    _ow[_uw] = _ow[_vw] = _dj1;
    _ow[_ww] = _8w2;
    _qw[_sw + 0] = _qw[_xw + 0] = _2q1;
    _qw[_sw + 1] = _qw[_xw + 1] = _T13;
    _qw[_tw + 0] = _3q1;
    _qw[_tw + 1] = _T13;
    _qw[_uw + 0] = _qw[_vw + 0] = _3q1;
    _qw[_uw + 1] = _qw[_vw + 1] = _U13;
    _qw[_ww + 0] = _2q1;
    _qw[_ww + 1] = _U13;
    return true
}

function _e_2(_Id1, _W13, _X13, _Jd1) {
    _uu._kd1();
    _uu._TL._YM();
    _8_2(_Id1);
    _1I(0, 0, _Vc1(_Id1), _Wc1(_Id1), 0);
    var _IB = _Wc1(_Jd1);
    var _HB = _Vc1(_Jd1);
    var _Ps = 0;
    var _Qs = 0;
    var _Y13 = _X13;
    var _Z13 = (_X13 + _IB);
    var _yt = _Qs;
    var _At = (_Qs + _IB);
    var _sv = (1 / _HB);
    var _uv = (1 / _IB);
    _S13(_Xc1(_Jd1)._Fx._bw, _W13, _Y13, _W13 + _HB, _Y13, _W13 + _HB, _Z13, _W13, _Z13, _sv * _Ps, _uv * _yt, _sv * (_Ps + _HB),
        _uv * _At, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff);
    _uu._kd1();
    _a_2();
    _uu._TL._ZM()
}

function _f_2(_Id1, _W13, _X13, _Jd1, _Ld1, _Md1, _Nd1, _Od1) {
    _uu._lP1();
    _uu._TL._YM();
    _8_2(_Id1);
    _1I(0, 0, _Vc1(_Id1), _Wc1(_Id1), 0);
    var _IB = _Od1;
    var _HB = _Nd1;
    var _Ps = _Ld1;
    var _Qs = _Md1;
    var _Y13 = _X13;
    var _Z13 = (_X13 + _IB);
    var _yt = _Qs;
    var _At = (_Qs + _IB);
    var _sv = (1 / _Vc1(_Jd1));
    var _uv = (1 / _Wc1(_Jd1));
    _S13(_Xc1(_Jd1)._Fx._bw, _W13, _Y13, _W13 + _HB, _Y13, _W13 + _HB, _Z13, _W13, _Z13, _sv * _Ps, _uv * _yt, _sv * (_Ps + _HB), _uv * _At, 0xffffffff, 0xffffffff, 0xffffffff,
        0xffffffff);
    _uu._lP1();
    _a_2();
    _uu._TL._ZM();
    _uu._lP1()
}

function _i_2(_Os, _Ps, _Qs, _HB, _IB, _tD, _uD) {
    _SN("sprite_add_from_screen() (WebGL)");
    return -1
}

function _h_2(_OB, _Ps, _Qs, _HB, _IB, _tD, _uD) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _Ps = ~~_Ps;
        _Qs = ~~_Qs;
        _HB = ~~_HB;
        _IB = ~~_IB;
        var _Gb1 = document.createElement(_1O);
        var _Hb1 = _Gb1.getContext('2d');
        _Ib1(_Hb1);
        var _Xx = _uu._DQ1(_Gb1, _KD._0R1, _Ps, _Qs, _HB, _IB, _tD, _uD);
        var _DD = new _ED();
        _DD.x = 0;
        _DD.y = 0;
        _DD._v5 = _Xx._kQ1;
        _DD._w5 = _Xx._lQ1;
        _DD._pc = 0;
        _DD._qc = 0;
        _DD._rc = _DD._v5;
        _DD._sc = _DD._w5;
        _DD._tc = _HB;
        _DD._uc = _IB;
        _DD._vc = _Mb1(_Gb1);
        _DD._Iu = _Ju[_DD._vc];
        _DD._Iu._bw = _Xx;
        _DD._Iu._Zx = _Gb1.width;
        _DD._Iu.__x = _Gb1.height;
        var _BD = new _CD();
        _BD._qD = _DD;
        return _mD._FD(_BD)
    }
    debug("Surface " + _OB + " does not exist");
    return -1
}

function _g_2(_Ps, _Qs, _HB, _IB, _tD, _uD) {
    _Ps = ~~_Ps;
    _Qs = ~~_Qs;
    var _Gb1 = document.createElement(_1O);
    var _Hb1 = _Gb1.getContext('2d');
    _Ib1(_Hb1);
    var _Xx = _uu._wQ1(_Gb1, _Ps, _Qs, _HB, _IB, _tD, _uD, (_cK > 0));
    var _DD = new _ED();
    _DD.x = 0;
    _DD.y = 0;
    _DD._v5 = _Xx._kQ1;
    _DD._w5 = _Xx._lQ1;
    _DD._pc = 0;
    _DD._qc = 0;
    _DD._rc = _DD._v5;
    _DD._sc = _DD._w5;
    _DD._tc = _HB;
    _DD._uc = _IB;
    _DD._vc = _Mb1(_Gb1);
    _DD._Iu = _Ju[_DD._vc];
    _DD._Iu._bw = _Xx;
    _DD._Iu.width = _v5;
    _DD._Iu.height = _w5;
    _DD._Iu._Zx = _v5;
    _DD._Iu.__x = _w5;
    var _BD = new _CD();
    _BD._qD = _DD;
    return _mD._FD(_BD)
}

function _j_2(_OB, _Ps, _Qs, _HB, _IB, _tD, _uD, _Pb1, _Qb1) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _Ps = ~~_Ps;
        _Qs = ~~_Qs;
        _HB = ~~_HB;
        _IB = ~~_IB;
        var _Gb1 = document.createElement(_1O);
        var _Hb1 = _Gb1.getContext('2d');
        _Ib1(_Hb1);
        var _Xx = _uu._DQ1(_Gb1, _KD._0R1, _Ps, _Qs, _HB, _IB, _tD, _uD);
        var _DD = new _ED();
        _DD.x = 0;
        _DD.y = 0;
        _DD._v5 = _Xx._kQ1;
        _DD._w5 = _Xx._lQ1;
        _DD._pc = 0;
        _DD._qc = 0;
        _DD._rc = _DD._v5;
        _DD._sc = _DD._w5;
        _DD._tc = _HB;
        _DD._uc = _IB;
        _DD._vc = _Mb1(_Gb1);
        _DD._Iu = _Ju[_DD._vc];
        _DD._Iu._bw = _Xx;
        _DD._Iu._Zx = _Gb1.width;
        _DD._Iu.__x = _Gb1.height;
        var _Jb1 = new _Rb1();
        _Jb1._F3 = "surface.copy";
        _Jb1.width = _HB;
        _Jb1.height = _IB;
        _Jb1._G41 = new _yO();
        _Jb1._G41.right = _Jb1.width;
        _Jb1._G41.bottom = _Jb1.height;
        _Jb1._O3 = true;
        _Jb1._P3 = true;
        _Jb1.preload = true;
        _Jb1._Ub1 = 0;
        _Jb1._Vb1 = false;
        _Jb1._R3 = _Pb1;
        _Jb1._S3 = _Qb1;
        _Jb1._Wb1 = true;
        _Jb1._Gt = 1;
        _Jb1._4c1 = 0;
        _Jb1._Xb1 = false;
        _Jb1._Yb1 = false;
        _Jb1._Ht = [];
        _Jb1._Lb1 = [];
        _Jb1._Y3 = [];
        _Jb1._Zb1();
        _Jb1._Lb1[0] = _DD;
        var _Sb1 = _Cb1._Tb1(_Jb1);
        return _Sb1
    }
    debug("Surface " + _OB + " does not exist");
    return -1
}

function _k_2(_Os, _OB, _Ps, _Qs, _HB, _IB, _tD, _uD) {
    var _KD = _yD._RB(_OB);
    if (_KD != null) {
        _Ps = ~~_Ps;
        _Qs = ~~_Qs;
        _HB = ~~_HB;
        _IB = ~~_IB;
        var _Gb1 = document.createElement(_1O);
        var _Hb1 = _Gb1.getContext('2d');
        _Ib1(_Hb1);
        var _Xx = _uu._DQ1(_Gb1, _KD._0R1, _Ps, _Qs, _HB, _IB, _tD, _uD);
        var _DD = new _ED();
        _DD.x = 0;
        _DD.y = 0;
        _DD._v5 = _HB;
        _DD._w5 = _IB;
        _DD._pc = 0;
        _DD._qc = 0;
        _DD._rc = _DD._v5;
        _DD._sc = _DD._w5;
        _DD._tc = _DD._v5;
        _DD._uc = _DD._w5;
        _DD._vc = _Mb1(_Gb1);
        _DD._Iu = _Ju[_DD._vc];
        _DD._Iu._bw = _Xx;
        _DD._Iu._Zx = _Gb1.width;
        _DD._Iu.__x = _Gb1.height;
        _Db1 = _Cb1._RB(_Os);
        _Db1._Lb1[_Db1._Lb1.length] = _DD;
        _Db1._Gt++;
        return _Os
    }
    debug("Surface " + _OB + " does not exist");
    return -1
}

function _5_2(_OB) {
    var _i41 = _j41._RB(_OB);
    if (_i41) {
        var _ew, _jw, index, _UJ2, _903, _mw, _ow, _qw, _1u, _2u, _ot, _pt;
        var _nE = ~~((_Lx * 255.0) << 24) | 0x0000ff;
        var _oE = ~~((_Lx * 255.0) << 24) | 0x00ff00;
        var _Gu = 6 * (_i41._b41 * _i41._a41);
        _ew = _uu._fw(_gw._hw, null, _uu._iw, _Gu);
        _jw = _ew._kw() >> 2;
        index = _jw * _ew._lw;
        _903 = _ew._lw;
        _ew._lw += _Gu;
        _mw = _ew._nw;
        _ow = _ew._pw;
        for (var y = 0; y < _i41._b41; y++) {
            for (var x = 0; x < _i41._a41; x++, index += _jw * 6) {
                var _2v = _oE;
                var _sw = index, _tw = _sw + _jw, _uw = _tw + _jw, _vw = _uw + _jw, _ww = _vw + _jw, _xw = _ww + _jw;
                if (_i41._e41[(_i41._b41 * x) + y] < 0) _2v = _nE;
                _1u = ~~(_i41._841 + x * _i41._c41);
                _2u = ~~(_i41._941 + y * _i41._d41);
                _ot = _1u + _i41._c41;
                _pt = _2u + _i41._d41;
                _mw[_xw + 0] = _mw[_ww + 0] = _mw[_sw + 0] = _1u;
                _mw[_xw + 1] = _mw[_tw + 1] = _mw[_sw + 1] = _2u;
                _mw[_vw + 0] = _mw[_uw + 0] = _mw[_tw + 0] = _ot;
                _mw[_ww + 1] = _mw[_vw + 1] = _mw[_uw + 1] = _pt;
                _mw[_sw + 2] = _mw[_tw + 2] = _mw[_uw + 2] = _mw[_vw + 2] = _mw[_ww + 2] = _mw[_xw + 2] = _yw;
                _ow[_sw] = _ow[_tw] = _ow[_uw] = _ow[_vw] = _ow[_ww] = _ow[_xw] = _2v
            }
        }
        return
    }
    _SB("Error: invalid mp_grid ID (mp_grid_draw)")
}

function _4_2(_OB, _W61, _X61, _Y61) {
    var _Z61 = __61._14[_OB];
    if (!_Z61) return;
    var _ew, _X03, _mw, _ow, _qw, _jw;
    var _2v = ~~((_Lx * 255.0) << 24) | (_Mx & 0xffffff);
    var _St, _Ut, _071;
    var _171 = 0;
    var _271 = _Z61._371(0);
    if (!_Y61) {
        _W61 = _W61 - _271.x;
        _X61 = _X61 - _271.y
    } else {
        _W61 = 0;
        _X61 = 0
    }
    _171 = _fC(_Z61.length / 4.0);
    if (_171 == 0) return;
    var _Gu = _171 * 2;
    _ew = _uu._fw(_gw._zx, null, _uu._iw, _Gu);
    _jw = _ew._kw() >> 2;
    _X03 = _jw * _ew._lw;
    _ew._lw += _Gu;
    _mw = _ew._nw;
    _ow = _ew._pw;
    for (var _t5 = 0; _t5 < _171; _t5++) {
        _271 = _Z61._371(_t5 / _171);
        _1u = ~~(_W61 + _271.x);
        _2u = ~~(_X61 + _271.y);
        _ow[_X03 + 0] = _2v;
        _mw[_X03 + 0] = _1u;
        _mw[_X03 + 1] = _2u;
        _mw[_X03 + 2] = _yw;
        _X03 += _jw;
        _271 = _Z61._371((_t5 + 1) / _171);
        _ot = ~~(_W61 + _271.x);
        _pt = ~~(_X61 + _271.y);
        _ow[_X03 + 0] = _2v;
        _mw[_X03 + 0] = _ot;
        _mw[_X03 + 1] = _pt;
        _mw[_X03 + 2] = _yw;
        _X03 += _jw
    }
}

function _BZ2(_PN) {
    _uu._6Q1(_PN)
}

function _1_2(_LB, _jM) {
    _4T2 = _LB;
    _5T2 = _jM;
    _uu._mP1(_4T2, _5T2);
}

function _2_2(__13) {
    if (__13) {
        _YU(0)
    } else {
        __U(_UM, _WM)
    }
}

function _l_2(_Eu) {
    if (_Eu) {
        return 1.0 / _Eu._Fx._Zx
    }
    return 1.0
}

function _m_2(_Eu) {
    if (_Eu) {
        return 1.0 / _Eu._Fx.__x
    }
    return 1
}

function _n_2(_IP1, _8z) {
    _uu._8Q1(_IP1, _8z._Fx._bw)
}

function _o_2(_q81) {
    if (_fZ2[_q81] && _fZ2[_q81]._5P1) {
        return 1
    }
    return 0
}

function _p_2(_q81) {
    var _LO1 = (_q81 == -1) ? _0K() : _fZ2[_q81]._5P1;
    if (_LO1) {
        _uu.__J(_LO1)
    }
}

function _q_2(_q81, _023) {
    var _LO1 = (_q81 == -1) ? _0K() : _fZ2[_q81]._5P1;
    if (_LO1) {
        return _uu._YP1(_fZ2[_q81]._5P1, _023)
    }
    return undefined
}

function _r_2(_C91, _1Q1) {
    if (_C91) {
        _uu._0Q1(_C91, _1Q1)
    }
}

function _s_2(_C91, _1Q1) {
    if (_C91) {
        _uu._2Q1(_C91, _1Q1)
    }
}

function _t_2(_C91, _1Q1) {
    if (_C91) {
        var _bL = _cL(_3L);
        _uu._3Q1(_C91, new Float32Array(_bL._wt))
    }
}

function _u_2(_q81, _8z) {
    if (_fZ2[_q81]) {
        var _LO1 = _fZ2[_q81];
        if (_LO1) {
            for (var _t5 = 0; _t5 < _LO1._6P1.length; _t5++) {
                if (_LO1._6P1[_t5] == _8z) {
                    return Number(_t5)
                }
            }
        }
    }
    return 0
}

function _v_2(_Vd1) {
    _NC2 = _Vd1
}

function _w_2(_C91, _kS) {
    if (_kS instanceof Array) {
        var _aP1;
        var _It = _kS.length;
        var _H62 = (_It + 3) & ~3;
        if (_It == _H62) {
            _aP1 = new Int32Array(_kS)
        } else {
            _aP1 = new Int32Array(_H62);
            for (var _t5 = 0; _t5 < _It; _t5++) {
                _aP1[_t5] = _kS[_t5]
            }
        }
        _uu._4Q1(_C91, _aP1)
    } else {
        alert('ERROR: shader_set_uniform_i_array() Data is not an array')
    }
}

function _x_2(_C91, _kS) {
    if (_kS instanceof Array) {
        var _aP1;
        var _It = _kS.length;
        var _H62 = (_It + 3) & ~3;
        if (_It == _H62) {
            _aP1 = new Float32Array(_kS)
        } else {
            _aP1 = new Float32Array(_H62);
            for (var _t5 = 0; _t5 < _It; _t5++) {
                _aP1[_t5] = _kS[_t5]
            }
        }
        _uu._5Q1(_C91, _aP1)
    } else {
        alert('ERROR: shader_set_uniform_f_array() Data is not an array')
    }
}

function _y_2(_C91,
              _kS) {
    if (_kS instanceof Array) {
        var _aP1 = new Float32Array(_kS);
        _uu._3Q1(_C91, _aP1)
    } else {
        alert('ERROR: shader_set_uniform_matrix_array() Data is not an array')
    }
}

function _A_2(_ZU) {
}

function _B_2(_123) {
    var _EM = _uu._MP1();
    for (var _9P1 = 0; _9P1 < _EM; _9P1++) {
        _iw2(_9P1, _123)
    }
}

function _C_2(_IP1, _123) {
    _bZ2[_IP1] = _123 ? true : false;
    _uu._HP1(_IP1, _bZ2[_IP1])
}

function _D_2(_DM) {
    var _EM = _uu._MP1();
    for (var _9P1 = 0; _9P1 < _EM; _9P1++) {
        _kw2(_9P1, _DM)
    }
}

function _E_2(_IP1, _DM) {
    _uu._KP1(_IP1, _DM ? _gw._IM : _gw._KM)
}

function _F_2() {
    return _bZ2[0]
}
;

function _G_2(_Eu) {
    if (typeof(_Eu) == "object") {
        return 1.0
    } else if ((_Eu != -1) && _Ju[_Eu]) {
        return 1.0
    }
    return 0
}

function _H_2(_Eu) {
    if (typeof(_Eu) == "object") {
        return 1.0
    } else if ((_Eu != -1) && _Ju[_Eu]) {
        return 1.0
    }
    return 0
}

function _I_2(_Eu) {
    if ((_Eu != -1) && _Ju[_Eu]) {
        var _Ru = _Ju[_Eu]
    }
    return []
}

function _z_2() {
    return 1
}

function _J_2(_XJ) {
    _9Z2 = (_XJ > 0.5) ? true : false;
    _uu._FP1(_9Z2, _aZ2)
}

function _K_2(_AM) {
    _aZ2 = _AM / 255.0;
    _uu._FP1(_9Z2, _aZ2)
}

function _L_2() {
    return (_9Z2 ? 1.0 : 0.0)
}

function _M_2() {
    return _aZ2
}

function _2L(_ny, _OF) {
    _yL[_ny] = new _JJ(_OF);
    if (_uu == null) return;
    switch (_ny) {
        case _JW:
            _uu._dK(_yL[_ny]);
            break;
        case _FW:
            _uu._6K(_yL[_ny]);
            break;
        case _3L:
            _uu._dQ1(_yL[_ny]);
            break
    }
    _uu._kd1()
}

function _cL(_ny) {
    switch (_ny) {
        case _JW:
        case _FW:
        case _3L:
            return _yL[_ny];
            break
    }
}

function _X_2() {
    if (_NN._j5) {
        for (var _t5 = 0; _t5 < _NN._j5.length; _t5++) {
            var _4P1 = _NN._j5[_t5];
            _fZ2[_t5] = _uu._0P1(_4P1._PK, _4P1._223, _4P1._323)
        }
    }
    return true
}

function __Z2(_Nx) {
    _3Q = _Nx;
    _Mx = _Px(_Nx)
}

function _cw(_9c1) {
    if (!_9c1._bw) {
        var _Xx = _uu._fQ1(_9c1._Iu);
        _9c1._Iu._bw = _Xx;
        _9c1._Iu._Zx = _9c1._Iu.width;
        _9c1._Iu.__x = _9c1._Iu.height
    }
}

function _PQ1(_Eu) {
    if (_Eu._mQ1) return;
    _uu._hQ1(_Eu)
}

function _OQ1(_Eu) {
    if (_Eu._mQ1 != undefined) {
        return true
    } else {
        return false
    }
}

function _N_2(_pd1, _kA2, _8M, _0A2, _lA2) {
    var _ew = _f51._RB(_pd1);
    var _KD = _yD._RB(_kA2);
    if (!_ew || !_KD) return false;
    var _423 = _uu._TQ1(_KD._0R1, 0, 0, _KD._Zx, _KD.__x);
    for (var _t5 = 0; _t5 < _423.length; _t5++) {
        _ew._fA2(_zy2, _t5, _423[_t5])
    }
    _423 = null
}

function _O_2(_pd1, _kA2, _8M, _0A2, _lA2) {
    var _ew = _f51._RB(_pd1);
    var _KD = _yD._RB(_kA2);
    if (!_ew || !_KD) return false;
    var data = new Uint8Array(_ew._g51);
    _CZ2(_KD._Iu._bw, 0, 0, _KD._Zx, _KD.__x, data);
    data = null
}

var _523 = 0;
var _623 = 100;
var canvas = null;
var _723, _823, _923, _a23, _b23, _c23, _d23, _e23;
var _xF2 = !1;
var _Iv = null;
var g_CurrentGraphics;
var _f23 = null;
var _od1 = null;
var _g23 = 0;
var _h23 = !1;
var _i23 = 0;
var _j23 = 0;
var _k23 = 0;
var _l23 = 0;
var _LN = 0;
var _m23 = 0;
var _Ie2 = 60;
var _n23;
var _o23 = new Date().getTime();
var _p23;
var _Ic1 = -1;
var _jh1 = -1;
var _kh1 = -1;
var _gW2 = !0;
var _q23 = !0;
var _ih1 = !0;
var _r23 = -1;
var _s23 = -1;
var _Kc1 = -1;
var _Lc1 = -1;
var _Jc1 = !1;
var _hh1 = !0;
var _lh1 = {x: 0, y: 0, _v5: 0, _w5: 0};
var _rW2 = !1;
var _t23 = !1;
var _u23 = 0;
var _v23 = 0;
var _w23 = 0;
if (window.chrome && window.chrome.app) {
    _xF2 = !0;
    try {
        if (window && window['localStorage']) {
            _xF2 = !1
        }
    } catch (e) {
    }
}
window.requestAnimFrame = (function () {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (_5n1, _ry) {
        _n23 = window.setTimeout(_5n1, 1000 / 60)
    }
})();
var _JN = null;

function _x23() {
    var _u5 = document.getElementById(_1O);
    var _aP = _u5.parentNode;
    var load = document.createElement('canvas');
    load.style.position = "absolute";
    load.style.left = "0px";
    load.style.top = "0px";
    load.width = _u5.width;
    load.height = _u5.height;
    load.setAttribute("id", "loading_screen");
    _aP.insertBefore(load, _u5.nextSibling);
    _f23 = load.getContext('2d');
    _Ib1(_f23)
}

function _y23() {
    var _u5 = document.getElementById(_1O);
    var _It = document.getElementById("loading_screen");
    var _aP = _u5.parentNode;
    if (_It != null) {
        _aP.removeChild(_It)
    }
    _f23 = null;
    _h23 = false
}

function _1B(_GN1, _MD2) {
    _MD2.left = 0;
    _MD2.top = 0;
    var _oH2 = _GN1;
    while (_oH2 != null) {
        _MD2.left += _oH2.offsetLeft;
        _MD2.top += _oH2.offsetTop;
        _oH2 = _oH2.offsetParent;
    }
    _MD2.right = _MD2.left + _eh1;
    _MD2.bottom = _MD2.top + _gh1;
    _MD2.scaleX = (_GN1.clientWidth / _GN1.width) || 1;
    _MD2.scaleY = (_GN1.clientHeight / _GN1.height) || 1
}

function _z23(_EX) {
    _Nr2 = [];
    _Or2 = [];
    _Pr2 = [];
    _qs2 = 0;
    var _1M = _EX.search;
    var _F91 = _EX.protocol + "//" + _EX.host + _EX.pathname;
    _Or2[0] = _F91;
    _Pr2[0] = null;
    if (_1M[0] == "?") _1M = _1M.substring(1, _1M.length);
    var index = start = 0;
    var _A23 = "";
    var _rz = null;
    while (index < _1M.length) {
        var _u5 = _1M[index];
        if (_u5 == "&") {
            if (_A23 != "") {
                if (start != index) _rz = _1M.substring(start, index);
                _Or2[_Or2.length] = _A23;
                _Pr2[_Pr2.length] = _rz;
                _Nr2[_A23] = _rz;
                _qs2++;
                _A23 = "";
                _rz = null
            }
            start = index + 1
        } else if (_u5 == "=") {
            _A23 = _1M.substring(start, index);
            _rz = null;
            start = index + 1
        }
        index++
    }
    if (_A23 != "") {
        if (start != index) _rz = _1M.substring(start, index);
        _Or2[_Or2.length] = _A23;
        _Pr2[_Pr2.length] = _rz;
        _Nr2[_A23] = _rz;
        _qs2++;
        _A23 = _rz = ""
    }
}

function _TI2() {
    _723 = canvas.style.position;
    _823 = canvas.style.left;
    _923 = canvas.style.top;
    _a23 = canvas.style;
    _b23 = canvas.parentNode;
    _c23 = canvas.nextSibling;
    _d23 = false;
    _e23 = canvas.margin;
    if ((_b23 == document.body) || (canvas.mozRequestFullScreen) || (canvas.webkitRequestFullScreen)) {
        _d23 = true
    }
}

function GameMaker_Init() {
    debug('------- GameMaker_Init -------------');
    if (!document.getElementById || !document.createElement) return;
    canvas = document.getElementById(_1O);
    _Iv = null;
    if (!canvas) return;
    _z23(window.location);
    _NN = _C3;
    _jt2();
    if ((_NN._xc != undefined) && (_NN._xc._zc != undefined) && (_NN._xc._zc > 1)) {
        _ls = true;
        if (_NN._xc._Cc != undefined) {
            _ms._vS(_NN._xc._Cc)
        }
    }
    _df2();
    _0s2 = false;
    _yL = [];
    _yL[_JW] = new _JJ();
    _yL[_FW] = new _JJ();
    _yL[_3L] = new _JJ();
    if ((_NN._xc._Rc) && (_NN._xc._Rc != 0)) {
        _3s2 = _NN._xc._Hc;
        var _B23 = undefined;
        if (_UX != _Hl2) {
            _B23 = _Q_2(canvas)
        }
        if (_B23) {
            _Iv = _uu
        } else {
            if (_NN._xc._Rc == 1) {
                _0s2 = true
            }
            _Iv = canvas.getContext('2d')
        }
    } else {
        _Iv = canvas.getContext('2d')
    }
    g_CurrentGraphics = _Iv;
    _gs2 = canvas.width;
    _hs2 = canvas.height;
    if ((_NN._xc._Tc == true) || _ls) {
        _kB = _lB
    }
    if (_kB == _lB) {
        try {
            g_WebAudioContext = new AudioContext()
        } catch (e) {
            try {
                g_WebAudioContext = new webkitAudioContext()
            }
            catch (e) {
                debug('Web Audio API not supported in this browser');
                _kB = __91
            }
        }
        _491()
    }
    document.body.style._C23 = "hidden";
    _od1 = _Iv;
    _5U = canvas.width;
    _7U = canvas.height;
    _eh1 = _5U;
    _gh1 = _7U;
    _jh1 = _eh1;
    _kh1 = _gh1;
    _hh1 = (_NN._xc.scale != 0);
    _2B = new _yO();
    _1B(canvas, _2B);
    _9e1 = _2B.top;
    _6e1 = _2B.left;
    _5e1 = _2B.right;
    _8e1 = _2B.bottom;
    if (_NN._xc._D23) {
        __O(_NN._xc._D23)
    } else if (_NN._xc && _NN._xc._yc && _NN._xc._VO) {
        _NN._xc._VO()
    }
    _TI2();
    _Ib1(_Iv);
    document.body.oncontextmenu = function () {
        return false
    };
    _yB();
    _Mt2 = document.getElementById('GM4HTML5_loadingscreen');
    if ((_NN._xc && _NN._xc._yc) || (_NN._xc && _NN._xc._yc == undefined)) {
        _IN = true
    }
    if (_uu && _IN) {
        debug("WebGL Enabled!");
        debug("Max Texture Size=" + _uu._DO1())
    }
    _St2();
    _rg1();
    if (_0s2) {
        _g23 = -2
    } else {
        if (_IN) _Eh._pC2 = _NN._xc._yc;
        _Bu2 = "";
        _E23 = "";
        _F23 = function () {
        };
        {
            _zu2(_NN);
            _g23 = 0
        }
    }
    requestAnimFrame(_G23)
}

function _G23() {
    requestAnimFrame(_G23);
    switch (_g23) {
        case -2: {
            if (_h23) _y23();
            _H23(_Iv, _eh1, _gh1);
            break
        }
        case -1:
            if (_Kt2 == _Lt2) {
                _zu2(_NN);
                _g23 = 0;
                if (!_h23) {
                    _x23();
                    _h23 = true
                }
                _Gu2();
                _Bu2(_f23, _eh1, _gh1, _Jt2, _Pa1, _Mt2)
            }
            break;
        case 0:
            if (!_h23) {
                _x23();
                _h23 = true
            }
            if (_Pa1 >= _Jt2) {
                _Pa1 = _Jt2;
                _g23 = 1
            }
            _Gu2();
            if (_NN._xc._8d) {
                if (_Kt2 == _Lt2) {
                    _E23 = eval(_NN._xc._8d);
                    _E23(_f23, _eh1, _gh1, _Jt2, _Pa1, _Mt2)
                }
            } else _Bu2(_f23, _eh1, _gh1, _Jt2, _Pa1, _Mt2);
            break;
        case 1:
            _y23();
            _Ru2(_NN);
            _g23 = 2;
            break;
        case 2:
            _F23();
            _I23();
            _g23 = 3;
            _Eh._tB2 = new Date().getTime();
            break;
        case 3:
            _J23();
            break
    }
}

function _K23(_ID2, x, y, _Ub, text) {
    _ID2.fillStyle = _Ub;
    _ID2.lineStyle = _Ub;
    _ID2.font = "14px Verdana";
    ;_ID2.textAlign = "center";
    _ID2.fillText(text, x, y);
    _ID2.textAlign = "left"
}

function _H23(_ID2,
              _Cu, _Du) {
    _ID2.fillStyle = _LD(0x151515, 1.0);
    _ID2.fillRect(0, 0, _Cu, _Du);
    _K23(_ID2, _Cu / 2, (_Du / 2), _LD(0x8d8f90, 1.0), "WebGL is required to run this application.")
}

function _Cu2(_Iv, _Cu, _Du, _L23, _M23, _N23) {
    _Iv.globalAlpha = 1;
    if (_N23) {
    } else {
        var _O23 = (_Cu / 100) * 50;
        var _P23 = 2;
        var x = (_Cu - _O23) / 2;
        var y = 10 + (_Du - _P23) / 2;
        _Iv.fillStyle = _LD(0x151515, 1.0);
        _Iv.fillRect(0, 0, _Cu, _Du);
        if (_M23 != 0) {
            var _v5 = (_O23 / _L23) * _M23;
            _Iv.fillStyle = _LD(0x404040, 1.0);
            _Iv.fillRect(x, y, _O23, _P23);
            _Iv.fillStyle = _LD(0x8d8f90, 1.0);
            _Iv.fillRect(x,
                y, _v5, _P23)
        }
        _K23(_Iv, _Cu / 2, (_Du / 2), _LD(0x8d8f90, 1.0), "Loading")
    }
}

function _Q23(_DW2) {
    _mD._NA();
    var _R23 = _DW2._181._Xb;
    for (var _t5 = 0; _t5 < _R23.length; _t5++) {
        _mD._3C(_R23[_t5]);
        var _pD = _mD._RB(_t5);
        var _S23 = _mD._nD(_t5);
        _Eh._AB2[_t5] = _pD._B5;
        _Eh._BB2[_t5] = _pD._m_;
        _Eh._CB2[_t5] = _pD.index;
        _Eh._DB2[_t5] = _pD.x;
        _Eh._EB2[_t5] = _pD.y;
        if ((_S23 !== null) && (_S23 !== undefined) && (_S23._qD !== null) && (_S23._qD !== undefined)) {
            _Eh._FB2[_t5] = _S23._qD._v5;
            _Eh._GB2[_t5] = _S23._qD._w5
        } else {
            _Eh._FB2[_t5] = 0;
            _Eh._GB2[_t5] = 0
        }
        _Eh._HB2[_t5] = _pD._iy2;
        _Eh._IB2[_t5] = _pD._jy2;
        _Eh._JB2[_t5] = _pD._p_;
        _Eh._KB2[_t5] = _pD._q_;
        _Eh._MB2[_t5] = _pD._ly2;
        _Eh._LB2[_t5] = _pD._ky2;
        _Eh._NB2[_t5] = _pD._s_;
        _Eh._OB2[_t5] = _pD.alpha
    }
    _Eh._yB2 = _DW2._WT2;
}

function _4W(_HS2, _T23) {
    if (_js) {
        _js._uW2();
        if (_ls) {
            if (_ZW != null) {
                _ZW._5W()
            }
        }
    }
    var _U23 = _js;
    _581 = -1;
    _OW._8t(_Nh2, 0);
    _9T2();
    _8K2();
    var _JF2 = [];
    if (_U23 != null) {
        for (var _t5 = _U23._tZ.length - 1; _t5 >= 0; _t5--) {
            var _NW = _U23._tZ._RB(_t5);
            if (_NW._JF2) {
                _JF2[_JF2.length] = _NW;
                _NW._V23 = true
            }
        }
        for (var _t5 = _JF2.length - 1; _t5 >= 0; _t5--) {
            _U23._tZ._L11(_JF2[_t5])
        }
        if (_U23._UT2 === false) {
            _U23._yU2(true)
        } else {
            for (var _t5 = _U23._tZ.length - 1; _t5 >= 0; _t5--) {
                var _NW = _U23._tZ._RB(_t5);
                _NW._AZ._7G2(_NW)
            }
        }
    }
    _pB._NA();
    _fz._NA();
    _js = __01._RB(_HS2);
    var _W23 = _js._UT2;
    if (_W23 === true && _js._VT2 === false) {
        _W23 = false
    }
    if (_W23 === false) {
        _js._9v2(_js._181);
        _js._MU2()
    } else {
        _js._7U2(_js._e21);
        _js._8U2(_js._g21);
        _js._9U2(_js._TT2);
        _js._bU2(_js._ST2);
        _js._dU2(_js._UT2);
        _js._MU2();
        for (_t5 = _js._tZ.length - 1; _t5 >= 0; _t5--) {
            var _NW = _js._tZ._RB(_t5);
            _NW._AZ._B11(_NW)
        }
    }
    _Eh._Z01 = _js.id;
    _js._DU2();
    _7W2();
    _Q23(_js);
    if (_W23 === false) {
        _js._tU2();
        _js._yU2(false);
        _tZ = new _eQ2();
        var _X23 = _js._181._Zb;
        for (var _It = 0; _It < _js._181._Zb.length; _It++) {
            var _8N = false;
            var _Y23 = _js._181._Zb[_It];
            if (_Y23.index >= 0) {
                for (var _sv = _JF2.length - 1; _sv >= 0; _sv--) {
                    if (_Y23.id == _JF2[_sv].id) {
                        _8N = true;
                        break
                    }
                }
                if (!_8N) {
                    var _k41 = _js._GU2(_Y23.x, _Y23.y, _Y23.id, _Y23.index, _Y23.scaleX, _Y23.scaleY, _Y23.rotation, _Y23._Ub);
                    _k41._V23 = false
                }
            }
        }
        var _X23 = _js._181._Zb;
        for (var _It = 0; _It < _js._181._Zb.length; _It++) {
            var _Y23 = _js._181._Zb[_It];
            var _k41 = _OW._RB(_Y23.id);
            if (_k41 && (_k41._V23 == false)) {
                _k41._V23 = true;
                if (!_1s2 && !_ls) {
                    if (_Y23._kU2) _Y23._kU2(_k41);
                    _k41._8t(_131, 0, _k41, _k41);
                    if (_Y23._Z23) _Y23._Z23(_k41);
                    _k41._8t(_DZ, 0, _k41, _k41)
                } else {
                    _k41._8t(_131, 0, _k41, _k41);
                    if (_Y23._Z23) _Y23._Z23(_k41);
                    _k41._8t(_DZ, 0, _k41, _k41);
                    if (_Y23._kU2) _Y23._kU2(_k41)
                }
            }
        }
    }
    for (var _sv = 0; _sv < _JF2.length; _sv++) {
        _js._tZ._3C(_JF2[_sv]);
        _JF2[_sv]._CZ();
        if (_ls) {
            _JF2[_sv]._H11(-1);
            _JF2[_sv]._H01(false);
            _z11._B11(_js, _JF2[_sv])
        }
    }
    if (_ls) {
        if (_ZW != null) {
            _ZW._4W()
        }
    }
    if (_z11 != null) _z11._a11(_js);
    _8T2();
    if (_T23) {
        _OW._8t(_Hh2, 0)
    }
    if ((_W23 == false) && (_js._0U2 != null)) {
        __23 = new _nt2();
        _js._0U2(__23);
        __23 = null;
    }
    _OW._8t(_Lh2, 0);
    _js._VT2 = true
}

function _033(_133) {
    _4W(_133, false)
}

function _I23() {
    _Eh._nB2 = 0;
    _Eh._oB2 = -1;
    _7s2 = 0;
    _8s2 = -1;
    _9s2 = 0;
    _as2 = 0;
    _4W(__01._681(0).id, true);
    _i23 = _j23 = _zS();
    _l23 = ~~(_i23 / 1000000) + 4;
    _Eh._821 = _Ie2;
    _Eh._aC2 = _Ie2
}

function _233() {
    _Dr2 = [];
    _Er2 = [];
    _ie2 = -1;
    _he2 = -1;
    _ge2 = 0;
    _js._tZ._NA();
    _js._1U2._NA();
    var _gC = _4s._S02;
    for (var _t5 = 0; _t5 < _gC.length; _t5++) {
        var _LP = _gC[_t5];
        _LP._3g2._NA();
        _LP.__H2._NA()
    }
    _OW._NA()
}

function _333() {
    _pB._9K2()
}

function _433() {
    if (_js._3G2.length > 0) _js._zW2();
    if (_js._tZ._fQ2 >= 0) _js._tZ._cK2()
}

function _533() {
    if (_js._F71) {
        if (_ls) {
            _js._F71._OA(_ms._ns())
        } else _js._F71._OA(_js._TT2)
    } else {
        _OW._2I2()
    }
}

function _633() {
    if ((_js._F71 == null) || (_js._F71 == undefined)) {
        _Af2()
    }
}

function _733() {
    _Eh._sB2 = (_p23 - _Eh._tB2) * 1000;
    _Eh._tB2 = _p23;
    _pB._hJ2();
    _ef2();
    _fz._OA();
    _OW._1I2();
    _OW._3I2();
    _433();
    if (_581 != -1) return;
    _z11._521();
    _OW._8t(_Hg2, 0);
    _433();
    if (_581 != -1) return;
    if (_4s2) {
        _4s2 = false;
        _OW._8t(_cm2, 0)
    }
    _nO._5y2();
    _433();
    if (_581 != -1) return;
    _cg2();
    _433();
    if (_581 != -1) return;
    _lg2();
    _433();
    if (_581 != -1) return;
    _5K2();
    _433();
    if (_581 != -1) return;
    _Lf2();
    _433();
    if (_581 != -1) return;
    _OW._8t(_Jg2, 0);
    _433();
    if (_581 != -1) return;
    _533();
    _ff2();
    _433();
    if (_581 != -1) return;
    _5Z();
    _ze1();
    _433();
    if (_581 != -1) return;
    _633();
    _433();
    if (_581 != -1) return;
    _OW._8t(_Lg2, 0);
    _433();
    if (_581 != -1) return;
    __S2();
    if (_js != null) {
        _js._uW2();
        if (_Yr2) {
            _js._7v();
            _433()
        }
    }
    if (!_t23) {
        _833();
        _t23 = true
    }
    _js._OU2();
    _333();
    _Z81()
}

function _7W2() {
    var left, right, top, bottom;
    left = 0;
    right = -999999;
    top = 0;
    bottom = -999999;
    if (_js._YA) {
        for (var _t5 = 0; _t5 < _js.__A.length; _t5++) {
            _0B = _js.__A[_t5];
            if (_0B._B5) {
                if (right < _0B._cd1 + _0B._ed1) right = _0B._cd1 + _0B._ed1;
                if (bottom < _0B._dd1 + _0B._fd1) bottom = _0B._dd1 + _0B._fd1
            }
        }
    } else {
        left = 0;
        right = _js._e21;
        top = 0;
        bottom = _js._g21;
        _Ar2._ed1 = _Ar2._OV = right;
        _Ar2._fd1 = _Ar2._QV = bottom
    }
    if (_q23) {
        if (!_ih1) {
            _jh1 = _r23;
            _kh1 = _s23
        }
    } else {
        _jh1 = _eh1;
        _kh1 = _gh1;
        if (_Mc1(_Ic1)) {
            _Tc1(_Ic1);
            _Ic1 = -1
        }
    }
    _ih1 = _q23;
    _wD2 = _eh1;
    _xD2 = _gh1;
    _yD2 = _jh1 / (right - left);
    _zD2 = _kh1 / (bottom - top);
    var _Kt = new _yO();
    _Kt.left = left;
    _Kt.top = top;
    _Kt.right = right;
    _Kt.bottom = bottom;
    _2V = _Kt;
    _ah1()
}

function _933() {
    var _v5 = 640;
    if (typeof(window.innerWidth) == 'number') {
        _v5 = window.innerWidth
    } else if (document.documentElement && document.documentElement.clientWidth) {
        _v5 = document.documentElement.clientWidth
    } else if (document.body && document.body.clientWidth) {
        _v5 = document.body.clientWidth
    }
    return _v5
}

function _a33() {
    var _w5 = 480;
    if (typeof(window.innerHeight) == 'number') {
        _w5 = window.innerHeight;
    } else if (document.documentElement && document.documentElement.clientHeight) {
        _w5 = document.documentElement.clientHeight
    } else if (document.body && document.body.clientHeight) {
        _w5 = document.body.clientHeight
    }
    return _w5
}

function _b33() {
    var _c33 = new _xd2().get();
    return _c33
};

function _d33(_oz2) {
    return String.fromCharCode.apply(null, new Uint8Array(_oz2))
};
;

function _e33(_LC) {
    var _oz2 = new ArrayBuffer(_LC.length * 2);
    var _f33 = new Uint16Array(_oz2);
    for (var _t5 = 0, _g33 = _LC.length; _t5 < _g33; _t5++) {
        _f33[_t5] = _LC.charCodeAt(_t5)
    }
    return _oz2
};

function _833() {
    var _vs2 = _NN._xc._6d;
    var _Wa1 = (_p23 / 1000) - _NN._xc._6d;
    if ((_C3._xc._h33 != undefined) && (_C3._xc._h33)) try {
        var _i33 = "{";
        var _j33 = _JR(_b33());
        _i33 += "\"mID\" : \"";
        _i33 += _j33;
        _i33 += "\", ";
        if (_C3._xc._0d != undefined) {
            var _k33 = "";
            for (var _t5 = 0; _t5 < 16; _t5++) _k33 += _C3._xc._0d[_t5].toString(16);
            _i33 += "\"mUS\" : \"";
            _i33 += _k33;
            _i33 += "\", "
        }
        if (_C3._xc._Fc != undefined) {
            _i33 += "\"mGM\" : \"";
            _i33 += _C3._xc._Fc;
            _i33 += "\", "
        }
        if (_C3._xc._1d != undefined) {
            _i33 += "\"gN\" : \"";
            _i33 += _C3._xc._1d;
            _i33 += "\", "
        }
        if ((_C3._xc._l33 != undefined) && (_C3._xc._m33 != undefined) && (_C3._xc._n33 != undefined)) {
            _i33 += "\"gV\" : \"";
            _i33 += _C3._xc._l33 + "." + _C3._xc._m33 + "." + _C3._xc._n33 + ".0";
            _i33 += "\", ";
        }
        _i33 += "\"osT\" : \"";
        _i33 += "19";
        _i33 += "\", ";
        _i33 += "\"osV\" : \"";
        _i33 += _WX.browser;
        _i33 += "\", ";
        var _o33 = navigator._Id2;
        var _Zt = _o33.split("-");
        _i33 += "\"osL\" : \"";
        _i33 += _Zt[0];
        _i33 += "\", ";
        _i33 += "\"osR\" : \"";
        _i33 += _Zt[1];
        _i33 += "\", ";
        if (navigator.userAgent) {
            _i33 += "\"navUsrA\" : \"";
            _i33 += navigator.userAgent;
            _i33 += "\", "
        }
        if (navigator.vendor) {
            _i33 += "\"navVend\" : \"";
            _i33 += navigator.vendor;
            _i33 += "\", "
        }
        if (navigator.platform) {
            _i33 += "\"navPlat\" : \"";
            _i33 += navigator.vendor;
            _i33 += "\", "
        }
        if (navigator._Sd2) {
            _i33 += "\"navCpuC\" : \"";
            _i33 += navigator._Sd2;
            _i33 += "\", "
        }
        if (window._p33) {
            _i33 += "\"winPixR\" : \"";
            _i33 += window._p33;
            _i33 += "\", "
        }
        _i33 += "\"win\" : \"";
        _i33 += _933() + "," + _a33();
        _i33 += "\", ";
        var _uT1 = 0;
        var _q33 = _AS();
        for (var _t5 = 0; _t5 < _q33; _t5++, _uT1 <<= 1) {
            if (_BS(_t5)) _uT1 |= 1
        }
        _i33 += "\"gpad\" : \"";
        _i33 += _q33 + "," + _uT1 + ",";
        for (var _t5 = 0; _t5 < _q33; _t5++) {
            if (_BS(_t5)) _i33 += "(" + _CS(_t5) + "," + _DS(_t5) + "),"
        }
        _i33 += "\" ";
        _i33 += "}";
        var _r33 = undefined;
        try {
            _r33 = new _s33("utf-8")
        } catch (e) {
        }
        ;var _NV1;
        if (_r33 != undefined) {
            _NV1 = _r33._t33(_i33)
        } else _NV1 = _e33(_i33);
        var _u33 = new Zlib.Deflate(_NV1);
        var _v33 = _u33.compress();
        var _w33 = _d33(_v33);
        var buffer = _rR(_w33);
        var _x33 = _JR("MILES" + buffer + "JAMIE");
        var _F91 = "https://ping.yoyogames.com/pingback?data=";
        var _y33 = encodeURIComponent(buffer);
        _F91 += _y33;
        _F91 += "&validate=";
        var _bS = 0;
        for (var _t5 = _Ve2(12); _bS < 2 && _t5 < 16; ++_t5, ++_bS) {
            _F91 += _x33.charAt(_t5 * 2) + _x33.charAt(_t5 * 2 + 1)
        }
        _Fm(_F91)
    } catch (e) {
        debug("Failed to submit stats: " + e);
    }
}

function _z33() {
    _1B(canvas, _2B);
    _9e1 = _2B.top;
    _6e1 = _2B.left;
    _5e1 = _2B.right;
    _8e1 = _2B.bottom;
    _0d1(_Iv);
    if ((_gs2 != canvas.width) || (_hs2 != canvas.height)) {
        _4s2 = true
    }
    _gs2 = canvas.width;
    _hs2 = canvas.height;
    var _v5 = _933();
    var _w5 = _a33();
    if ((_Zr2) && (!_5s2)) {
        if ((_es2 != _v5) || (_fs2 != _w5)) {
            _5s2 = true;
            _Zr2 = false
        }
        if (canvas.mozRequestFullScreen) {
            if (!document.mozFullScreen) {
                _5s2 = true;
                _Zr2 = true
            }
        }
    }
    if (_5s2) {
        _5s2 = false;
        if (_Zr2) {
            _v5 = _5U;
            _w5 = _7U;
            _Zr2 = false;
            canvas.style.position = _723;
            canvas.style.left = _823;
            canvas.style.top = _923;
            canvas.style.margin = _e23;
            canvas.style = _a23;
            if (!_d23) {
                if (canvas.parentNode != _b23) {
                    _b23.insertBefore(canvas, _c23)
                }
            }
        } else {
            _Zr2 = true;
            _1e1(0, 0);
            if (!_d23) {
                if (canvas.parentNode == _b23) {
                    _b23.removeChild(canvas);
                    document.body.insertBefore(canvas, null)
                }
            }
        }
        canvas.width = _v5;
        canvas.height = _w5;
        _eh1 = canvas.width;
        _gh1 = canvas.height;
        _6e1 = canvas.offsetLeft;
        _5e1 = _6e1 + _eh1;
        _9e1 = canvas.offsetTop;
        _8e1 = _6e1 + _gh1;
        _es2 = _eh1;
        _fs2 = _gh1;
        _wD2 = _v5;
        _xD2 = _A33 = 1;
        _zD2 = 1;
        _7W2()
    }
}

var _B33 = 0;
var _C33 = 0.0;

function _J23() {
    _j23 = _zS();
    if (_j23 < _i23 || ((_j23 - _i23) > 2000000)) {
        _i23 = _j23;
        _l23 = _i23
    }
    if (_js._ks() <= 0) {
        _js._9U2(1)
    }
    if (_uu) {
        _uu._kd1()
    }
    var _AH2;
    if (_ls) {
        _ms._OA();
        _AH2 = _ms._ns()
    } else if (!_ls) {
        _AH2 = _js._ks()
    }
    var _x32 = 60 / _AH2;
    if (~~_x32 == _x32) {
        _w23 = _x32;
        if (_u23 == 0) _v23 = 1;
        _u23 = 1
    } else {
        _u23 = 2
    }
    _p23 = new Date().getTime();
    _LN = ~~(_j23 - _i23);
    _C33 = ~~(1000000.0 / _AH2) - _LN;
    _k23 = max(0, _C33);
    _k23 = min(_k23, 1000000.0);
    if (_ls) {
        if (_ms._yS() == false) {
            _k23 = 0
        }
    }
    var _D33 = 1000000.0 / _AH2;
    if (_u23 == 1) {
        _v23--;
        if (_v23 != 0) return;
        _v23 = _w23
    } else {
        if (_k23 > 14000) return
    }
    _i23 = _j23 + _k23;
    if (_i23 < _l23) {
        _l23 = _i23
    }
    if (~~_i23 > (_l23 + 1000000)) {
        _Ie2 = _m23;
        _m23 = 0;
        _l23 = ~~_i23;
        _i23 = 0
    }
    _m23++;
    _Eh._821 = _Ie2;
    if (!_cf2) {
        _LX2 = 0;
        _z33();
        if (_js === null) {
            _Ar2._4B = _Ar2._gd1 = _Ar2._ed1 = _Ar2._OV = _eh1;
            _Ar2._6B = _Ar2._hd1 = _Ar2._fd1 = _Ar2._QV = _gh1
        } else {
            _7W2()
        }
        if (_581 < 0) _5E2();
        {
            _733()
        }
        if (_B33 < _LX2) _B33 = _LX2;
        if (_581 < 0) _7E2();
        switch (_581) {
            case -1:
                break;
                ;
            case _881:
            case _0m2:
                _E33 = false;
                return;
            case _Zl2:
                _233();
                __01._FW2();
                _I23();
                break;
            case __l2:
                _Ru2();
                break;
            default :
                _033(_581)
        }
    }
    if (_NN._xc && _NN._xc._yc && _NN._xc._F33) {
        _NN._xc._F33()
    }
}
